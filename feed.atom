<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2021-06-22T00:49:21.004Z</id>
    <title>osmos::feed</title>
    <updated>2021-06-22T00:49:21.004Z</updated>
    <generator>osmosfeed 1.10.2</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[Refactoring Global Variables Out of Functions]]></title>
        <id>https://dev.to/rthefounding/refactoring-global-variables-out-of-functions-5069</id>
        <link href="https://dev.to/rthefounding/refactoring-global-variables-out-of-functions-5069"/>
        <updated>2021-06-21T23:30:48.000Z</updated>
        <summary type="html"><![CDATA[So far, we have seen two distinct principles for functional programming:
Don't alter a variable or object - create new variables and objects and return them if need be from a function.


Declare function parameters - any computation inside a function depends only on the arguments passed to the function, and not on any global object or variable.





Let's rewrite the code so the global array bookList is not changed inside either function. The add function should add the given bookName to the end of the array passed to it and return a new array (list). The remove function should remove the given bookName from the array passed to it.


Note: Both functions should return an array, and any new parameters should be added before the bookName parameter.




var bookList = ["The Hound of the Baske‚Ä¶]]></summary>
        <author>
            <name>Randy Rivera</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Full GitHub Actions Course [FREE] üí•üìΩÔ∏èüöÄ]]></title>
        <id>https://dev.to/n3wt0n/full-github-actions-course-free-p5g</id>
        <link href="https://dev.to/n3wt0n/full-github-actions-course-free-p5g"/>
        <updated>2021-06-21T23:24:30.000Z</updated>
        <summary type="html"><![CDATA[In this GitHub Actions Tutorial you will be able to go from zero to hero in 90 minutes. By the end of this course, you will have a deep understanding of the concepts and a great overall big picture of how GitHub Actions works and is used in the whole software development process.
And the best part? It is completely free, and takes only 90 minutes!
The course is a mix of theoretic explanations and hands-on demos to follow along, so you get your first hands-on experience with Actions and feel more confident using it in your projects.
The course is available here: ü§ì




Link to the video: https://youtu.be/TLB5MY9BBa4
This is what this course is all about:
What is GitHub Actions
Advantages of GitHub Actions over other CI platforms
Key functionalities of GitHub Actions
Actions components: Even‚Ä¶]]></summary>
        <author>
            <name>Davide 'CoderDave' Benvegn√π</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Passing Arguments to Avoid External Dependence in a Function]]></title>
        <id>https://dev.to/rthefounding/passing-arguments-to-avoid-external-dependence-in-a-function-7o8</id>
        <link href="https://dev.to/rthefounding/passing-arguments-to-avoid-external-dependence-in-a-function-7o8"/>
        <updated>2021-06-21T23:00:38.000Z</updated>
        <summary type="html"><![CDATA[Continuing from the last post. We didn't alter the global variable value, but the function incrementer would not work without the global variable fixedValue being there.


Another principle of functional programming is to always declare your dependencies explicitly. This means if a function depends on a variable or object being present, then pass that variable or object directly into the function as an argument.


There are several good consequences from this principle. The function is easier to test, you know exactly what input it takes, and it won't depend on anything else in your program. This can give you more confidence when you alter, remove, or add new code. You would know what you can or cannot change and you can see where the potential traps are.


Finally, the function would always produce the same output for the same set of inputs, no matter what part of the code executes it.


Let's update the incrementer function to clearly declare its dependencies. Let's write the incrementer function so it takes an argument, and then returns a result after increasing the value by one.




var fixedValue = 4;

function incrementer () {

};

Answer:




var fixedValue = 4;

function incrementer (num) {
return num + 1;

};

console.log(incrementer(5));

The function incrementer did not change the value of fixedValue and the function also took an argment num.]]></summary>
        <author>
            <name>Randy Rivera</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Avoiding Mutations and Side Effects Using Functional Programming]]></title>
        <id>https://dev.to/rthefounding/avoiding-mutations-and-side-effects-using-functional-programming-3o4g</id>
        <link href="https://dev.to/rthefounding/avoiding-mutations-and-side-effects-using-functional-programming-3o4g"/>
        <updated>2021-06-21T22:53:39.000Z</updated>
        <summary type="html"><![CDATA[The issue in the previous posts was with the splice call in the tabClose() function. Unfortunately, splice changes the original array it is called on, so the second call to it used a modified array, and gave unexpected results.


One of the core principles of functional programming is to not change things. Changes lead to bugs. It's easier to prevent bugs knowing that your functions don't change anything, including the function arguments or any global variable.


Let's try to master this discipline and not alter any variable or object in our code.


Let's fill in the code for the function incrementer so it returns the value of the global variable fixedValue increased by one.




var fixedValue = 4;

function incrementer () {

}

Answer:




var fixedValue = 4;

function incrementer () {
  return fixedValue + 1;
}

console.log(fixedValue); will display 4
console.log(incrementer()); will display 5;

The function incrementer did not change the value of fixedValue(which is 4). and incrementer function should returned a value that is one larger than the fixedValue value.]]></summary>
        <author>
            <name>Randy Rivera</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Understand the Hazards of Using Imperative Code Notes]]></title>
        <id>https://dev.to/rthefounding/understand-the-hazards-of-using-imperative-code-notes-1o6l</id>
        <link href="https://dev.to/rthefounding/understand-the-hazards-of-using-imperative-code-notes-1o6l"/>
        <updated>2021-06-21T22:46:09.000Z</updated>
        <summary type="html"><![CDATA[Functional programming is a good habit. It keeps your code easy to manage, and saves you from sneaky bugs. But before we get there, let's look at an imperative approach to programming to highlight where you may have issues.
An imperative style in programming is one that gives the computer a set of statements to perform a task. Often the statements change the state of the program, like updating global variables. A classic example is writing a for loop that gives exact directions to iterate over the indices of an array.
In contrast, functional programming is a form of declarative programming. You tell the computer what you want done by calling a method or function.
JavaScript offers many predefined methods that handle common tasks so you don't need to write out how the computer should perfor‚Ä¶]]></summary>
        <author>
            <name>Randy Rivera</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dica r√°pida: Criando commits vazios no Git]]></title>
        <id>https://dev.to/stefanomartins/dica-rapida-criando-commits-vazios-no-git-26fi</id>
        <link href="https://dev.to/stefanomartins/dica-rapida-criando-commits-vazios-no-git-26fi"/>
        <updated>2021-06-21T22:34:53.000Z</updated>
        <summary type="html"><![CDATA[Esta √© uma dica √≥tima para todo mundo que vive criando arquivos com "este √© um teste", "este √© outro teste", "mais um teste", "teste n√∫mero X" em seu reposit√≥rio com o intuito de disparar triggers e webhooks dos servidores para seus jobs e pipelines.
Ao inv√©s de fazer isso, apenas digite utilize a op√ß√£o --allow-empty ao seu commit. Assim:
$ git commit --allow-empty -m "Disparando trigger"

Ap√≥s isso, realize o seu push normalmente para o origin e pronto.]]></summary>
        <author>
            <name>Stefano Martins</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Javascript Operators with AutoHotKey]]></title>
        <id>https://dev.to/equiman/javascript-operators-with-autohotkey-37kn</id>
        <link href="https://dev.to/equiman/javascript-operators-with-autohotkey-37kn"/>
        <updated>2021-06-21T22:00:40.000Z</updated>
        <summary type="html"><![CDATA[If you are a software developer and the major time write code in JavaScript (or TypeScript) this AutoHotKey can be useful.
with AutoHotKey you can remap some key behavior to write quick and easy all those operators used day to day.
You need to have installed AutoHotKey and create a file called js-remapkeys.ahk with this script.
#NoEnv ; Recommended for performance and compatibility with future AutoHotkey releases.
; #Warn  ; Enable warnings to assist with detecting common errors.
SendMode Input ; Recommended for new scripts due to its superior speed and reliability.
SetWorkingDir %A_ScriptDir% ; Ensures a consistent starting directory.

!7::Send {&}{&} ; Alt+7 -> &&
!9::Send {(}{)}{ }{=}{>} ; Alt+9 -> () =>
!+9:: Send {=}{>} ; Shift+Alt+9 -> =>
!\::Send {|}{|} ; Alt+\ -> ||
!=:: Send {=}{=}{=} ; Alt+= -> ===
!+=:: Send {!}{=}{=} ; Shift+Alt -> !==
!+,:: Send {<}{=} ; Shift+Alt+, -> <=
!+.:: Send {>}{=} ; Shift+Alt+. -> >=
!.:: Send {?}{.} ; Alt+. -> ?.
!+/:: Send {?}{?} ; Shift+Alt+/ -> ??

Save the file and open it with AutoHotkey.
Finally, we will have a powered keyboard for JS/TS development.

That‚Äôs All Folks!
Happy Coding üññ]]></summary>
        <author>
            <name>Camilo Martinez</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Exit Vim ‚Äì Vim Save and Quit Command Tutorial]]></title>
        <id>60c81f774dc1a607ed7b2f66</id>
        <link href="https://www.freecodecamp.org/news/how-to-exit-vim/"/>
        <updated>2021-06-21T21:52:43.000Z</updated>
        <summary type="html"><![CDATA[I've been using Vim since the first year I started coding. For all the IDEs/editors that I have used, the Vim plugin is always the very first plugin that I install. I know that Vim can be challenging to work in for people who are not familiar with it.]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python List Methods ‚Äì append( ) vs extend( ) in Python Explained with Code Examples]]></title>
        <id>60bce157acb62507dd1d9f11</id>
        <link href="https://www.freecodecamp.org/news/python-list-methods-append-vs-extend/"/>
        <updated>2021-06-21T21:25:11.000Z</updated>
        <summary type="html"><![CDATA[When you're working with Python lists, you often need to combine data from multiple lists. So how do you do that? In this tutorial, we'll see the different ways you can combine data from multiple lists. We'll also learn how the list methods append() and extend() work through simple examples.]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Are we in a new era of web design? What do we call it?]]></title>
        <id>https://css-tricks.com/?p=342887</id>
        <link href="https://web.dev/new-responsive/"/>
        <updated>2021-06-21T21:22:33.000Z</updated>
        <summary type="html"><![CDATA[Una is calling it the new responsive. A nod to the era we were most certainly in, the era of responsive design. Where responsive design was fluid grids, flexible media, and media queries, the new responsive is those things ‚Ä¶
The post Are we in a new era of web design? What do we call it? appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learn Redux by Making a Counter Application]]></title>
        <id>60cccd6e4dc1a607ed7b4f81</id>
        <link href="https://www.freecodecamp.org/news/learn-redux-by-making-a-counter-application/"/>
        <updated>2021-06-21T21:01:42.000Z</updated>
        <summary type="html"><![CDATA[Redux is a state management library for front end applications. Developers commonly use it with React through the react-redux package, but it can also stand alone ‚Äì so you can use it in any front end framework or library, including Vanilla JavaScript.  Redux can really be intimidating at first. It might]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Devtron, Heroku for Kubernetes, Open-source Delivery Workflow]]></title>
        <id>https://dev.to/iasluhar/devtron-heroku-for-kubernetes-open-source-delivery-workflow-gab</id>
        <link href="https://dev.to/iasluhar/devtron-heroku-for-kubernetes-open-source-delivery-workflow-gab"/>
        <updated>2021-06-21T20:32:57.000Z</updated>
        <summary type="html"><![CDATA[A completely Opensource software delivery workflow for Kubernetes. Mainly written in Go. 
 / 
        devtron
      
    

Devtron is an open source software delivery workflow for kubernetes written in go

Explore documentation ¬ª


Website
¬∑
Blog
¬∑
Join Discord
¬∑
Twitter












üìñ Menu
Why Devtron
Features
Getting Started
Documentation
Compatibility Notes
Community
Contribute
Vulnerability Reporting
License
It is designed as a self-serve platform for operationalizing and maintaining applications (AppOps) on kubernetes in a developer friendly way





 Zero code software delivery workflow 
  


Workflow which understands the domain of kubernetes, testing, CD, SecOps so that you dont have to write scripts
Reusable and composable components so that workflows are easy to contruct and reason through
 Multi cloud deployment 
 
 

Deploy to multiple kubernetes cluster
 Easy dev-sec-ops integration  


Multi level security policy at global, cluster, environment and application for efficient hierarchical policy management
Behavior driven security policy
Define policies and exception for kubernetes resources
Define policies for events for faster resolution

   Application debugging dashboard  


One place‚Ä¶



  
View on GitHub
It is an End-to-End Opensource project that we started building almost 3 years ago. It enables excellent cooperation between devs and ops teams. I really think it will be a useful tool for people who need to manage and work on Kubernetes. 
I'll be happy if you can check the project out, use it, and give some valuable feedback. Maybe you can do one better and contribute, that will be the best thing ever. Would love to hear from you people, cheers.]]></summary>
        <author>
            <name>assassin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hiring Ruby on Rails Developer for your project? Must ask these FAQs then!]]></title>
        <id>https://dev.to/alexisdevs/hiring-ruby-on-rails-developer-for-your-project-must-ask-these-faqs-then-5hc4</id>
        <link href="https://dev.to/alexisdevs/hiring-ruby-on-rails-developer-for-your-project-must-ask-these-faqs-then-5hc4"/>
        <updated>2021-06-21T18:53:21.000Z</updated>
        <summary type="html"><![CDATA[In 2020 the pandemic shifted many working patterns in the corporate world. More and more companies are preferring having a remote working team, especially the Developer team.
Ruby on Rails Development community is widely spread around the globe. The biggest advantage of the formation of the RoR Developer community is you can access the Ruby on Rails Development services from any top-notch RoR Development Company or any Expert located in any corner of the world!
If we look at the current trends, the leading corporate companies prefer hiring a Ruby on Rails Developer offshore team for their projects. This way, they can access the global talent pool as well as can focus on their prominent goals of the business.
Now before diving into this trend, it is obvious one can get a little dubious rega‚Ä¶]]></summary>
        <author>
            <name>Alexis Gilbert</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Build a Portfolio Website with React]]></title>
        <id>60d0d0ff6e1a1407b6b0a506</id>
        <link href="https://www.freecodecamp.org/news/build-portfolio-website-react/"/>
        <updated>2021-06-21T18:15:53.000Z</updated>
        <summary type="html"><![CDATA[Today you're going to create one of the most important apps you can build for yourself: your developer portfolio. Every React developer or web developer in general needs to be able to show off what they can do to any potential client or employer. That's exactly what we're going to]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Tutorial: To-Do List Generator V2: Identity and Permissions]]></title>
        <id>https://dev.to/fluree/tutorial-to-do-list-generator-v2-identity-and-permissions-n3k</id>
        <link href="https://dev.to/fluree/tutorial-to-do-list-generator-v2-identity-and-permissions-n3k"/>
        <updated>2021-06-21T18:06:30.000Z</updated>
        <summary type="html"><![CDATA[Issuing Identity and Permissions at the Data layer with Fluree DB



  
  
  Recap


This tutorial is a follow up to the first tutorial found here on dev.to or on github on the to-do-list branch, where we built a to-do list generator using React and Fluree. If you are not familiar with Fluree, please refer to the first part of this tutorial series to learn the basics.
To get started git clone the repo via git clone https://github.com/fluree/version-2-lists-generator.git, or any other preferred method.


cd into the repo and run npm install


then run npm start to locally serve the app in your browser at http://localhost:3000




  
  
  Fluree


As previously mentioned Fluree is a Web3-capable graph database platform powered by an immutable ledger. The architecture of Fluree gives develope‚Ä¶]]></summary>
        <author>
            <name>Flor Marshall</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is Figma? A Design Crash Course [2021 Tutorial]]]></title>
        <id>60cda7104dc1a607ed7b5588</id>
        <link href="https://www.freecodecamp.org/news/figma-crash-course/"/>
        <updated>2021-06-21T17:52:21.000Z</updated>
        <summary type="html"><![CDATA[Figma is a powerful design tool that helps you to create anything: websites, applications, logos, and much more. By learning to use Figma, you'll take your first steps into User Interface Design and and User Experience Design. These skills are essential for building a great portfolio for yourself and potentially]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Block resources with Playwright]]></title>
        <id>https://dev.to/kami4ka/block-resources-with-playwright-24ne</id>
        <link href="https://dev.to/kami4ka/block-resources-with-playwright-24ne"/>
        <updated>2021-06-21T16:55:20.000Z</updated>
        <summary type="html"><![CDATA[This article will expose how to block specific resources (HTTP requests, CSS, video, images) from loading in Playwright. Playwright is Puppeteer's successor with the ability to control Chromium, Firefox, and Webkit. So I'd call it the second one of the most widely used web scraping and automation tools with headless browser support.
Block resources from loading while web scraping is a widespread technique that allows you to save time and costs.
For example, when you crawl a resource for product information (scrape price, product name, image URL, etc.), you don't need to load external fonts, CSS, videos, and images themselves. However, you'll need to extract text information and direct URLs for media content for most cases.
Also, such improvements will:
speed up your web scraper
increase nu‚Ä¶]]></summary>
        <author>
            <name>Oleg Kulyk</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Udacity | SUSE: Containers Orchestration - Docker Labs]]></title>
        <id>https://dev.to/jeden/udacity-suse-containers-orchestration-docker-labs-52he</id>
        <link href="https://dev.to/jeden/udacity-suse-containers-orchestration-docker-labs-52he"/>
        <updated>2021-06-21T16:47:22.000Z</updated>
        <summary type="html"><![CDATA[This is the sixth article in the series, Udacity: SUSE Cloud Native Foundations. This article will contain the exercises and labs from he previous section about Docker.
This section will contain two labs:
Lab 1 - Your first containerized Python application
Lab 2 - Packaging a Go application
In this exercise, we'll use the same app.py that we extended and played around in the section Architecture Considerations - Lab.
If you skipped that section, no worries! You can simply clone the repository:
$ git clone https://github.com/udacity/nd064_course_1.git

Go to exercises/python-helloworld folder. Here you should see the app.py
$ cd nd064_course_1/

$ ls -l
total 25
drwxr-xr-x 1 Eden Jose 197610  0 Jun 18 19:41 exercises/
drwxr-xr-x 1 Eden Jose 197610  0 Jun 18 19:41 project/
-rw-r--r-- 1 Eden ‚Ä¶]]></summary>
        <author>
            <name>Eden</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Technical Guide to IPFS ‚Äì the Decentralized Storage of Web3]]></title>
        <id>60a55b37906c5207e3a7ea78</id>
        <link href="https://www.freecodecamp.org/news/technical-guide-to-ipfs-decentralized-storage-of-web3/"/>
        <updated>2021-06-21T16:38:36.000Z</updated>
        <summary type="html"><![CDATA[But where do you store your application's content? Storing the content on the blockchain would be expensive and inefficient. Your blockchain application needs decentralized storage!]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How the CSS Position Property Works ‚Äì Explained with Code Examples]]></title>
        <id>6063b9e19618b008528a9d9a</id>
        <link href="https://www.freecodecamp.org/news/css-position-property-explained/"/>
        <updated>2021-06-21T16:36:14.000Z</updated>
        <summary type="html"><![CDATA[Today we're gonna learn everything you need to know about the CSS position property along with examples. Let's get started üéñÔ∏è Table of contents What is CSS Position Property?What is the Static Position in CSS?What are the Relative and Absolute Positions in CSS?What is the Fixed Position in]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The making of a modern javascript library]]></title>
        <id>https://dev.to/llldar/the-making-of-a-modern-javascript-library-1fkp</id>
        <link href="https://dev.to/llldar/the-making-of-a-modern-javascript-library-1fkp"/>
        <updated>2021-06-21T16:34:13.000Z</updated>
        <summary type="html"><![CDATA[Every 60 seconds passed in Africa, a new javascript library is created. There are a plethora of js libraries out there, and today I made another one.
Recently, I need to build some function revolving around syncing contacts and calendar events. They were mostly based on an old protocol named WEBDAV. It's so old that it uses convoluted xml structure to represent data. It would be hard for me to handle data since JSON is the first class citizen in javascript while xml is not. 
I took a look at all the existing solutions. They either are no longer maintained or lack core functions. Therefore, I've decided create a brand new library in order to fulfil these goals:
Allow using json data. In order to handle data with ease.
Support a wide range of protocols. Not just one of the three DAV families‚Ä¶]]></summary>
        <author>
            <name>Nathaniel</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[10 npm Commands that every developer must know]]></title>
        <id>https://dev.to/gurshehzadsingh/10-npm-commands-that-every-developer-must-know-4gmn</id>
        <link href="https://dev.to/gurshehzadsingh/10-npm-commands-that-every-developer-must-know-4gmn"/>
        <updated>2021-06-21T16:22:00.000Z</updated>
        <summary type="html"><![CDATA[NPM stands for Node Package Manager and it is the package manager for the Node JavaScript platform. It put modules in place so that node can find them, and manages dependency conflicts intelligently. Most commonly, it is used to publish, discover, install, and develop node programs.
Some Important npm commands every developer should know are:
1) npm i
install. It installs all the packages 
2) npm install -production
3) npm i lodash
"lodash", you can use your 
4) npm install --save-dev lodash
"lodash".
5) npm list
6) npm update
7) npm install -g nodemon
8) npm remove lodash
9) npm -v
10) npm doctor
Thanks for reading!]]></summary>
        <author>
            <name>Gurshehzad Singh</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building a Reading List web app with Node, Preact, and Tailwind CSS - Part 1: Full-Stack Setup]]></title>
        <id>https://dev.to/ingosteinke/building-a-reading-list-web-app-with-node-preact-and-tailwind-css-44pa</id>
        <link href="https://dev.to/ingosteinke/building-a-reading-list-web-app-with-node-preact-and-tailwind-css-44pa"/>
        <updated>2021-06-21T16:18:33.000Z</updated>
        <summary type="html"><![CDATA[This is a work in progress, last updated on 21 June 2021. I will only highlight a few code examples and helpful links in this article. You can see the full code and commit messages on GitHub. I will add a link to a live demo once (if ever) I have published a working draft.
I finally wanted to take some time for proper research (and some lazy trial and error based on tutorials and example code) to set up a proper full-stack application.
Beginning with a general example / starter setup useful for several projects, forking the actual side project (bookstack-reading-list-app) once things get more specific.
In the past, I had worked with legacy code or did not take the time for proper research, which even made me suspect I did not like React or even JavaScript single page applications at all. B‚Ä¶]]></summary>
        <author>
            <name>Ingo Steinke</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Reactive Sanitization with Javascript]]></title>
        <id>https://dev.to/yugely/reactive-sanitization-with-javascript-2jk1</id>
        <link href="https://dev.to/yugely/reactive-sanitization-with-javascript-2jk1"/>
        <updated>2021-06-21T15:45:16.000Z</updated>
        <summary type="html"><![CDATA[This is a short post going over how reactive design can help you manage data sanitization issues using just javascript. There are no plugins for this, its plain ol' js. The observable class is custom. I've been building out my Send Newdz Client for my project (https://github.com/yugely/SendNewdz).
I wanted to take some time from doing that to just give a quick tutorial on doing some reactive programming with js, as it is a bit of a different concept than other languages and observables. I'm not using rxjs as I'm not dealing with module import problems. So I have to build it on my own. Luckily it's easy.
Code:
class Observable { //custom
    constructor(functionObserved) {
      this._functionObserved = functionObserved
    }
    subscribe(observer) {
      return this._functionObserved(observer)
    }
}
let
 myObservable = new Observable((observer) => {//create observable
    setTimeout(() => {//timeout function
      observer.next(demoArray)//data being passed in, next is custom type
      observer.complete() //complete is custom type
    }, 100)
 })

//make array
var demoArray = [1,2,3,4,5,6,7,8,9,10]

//create sanitize function 
let sanitize = {
    next(demoArray) {//sanitize
        if (demoArray.length < 10) {
            //throw new Error("The array is less than 10")
           throw new Error("The array is less than 10")
        }
    },
  complete: () => {
      //complete if sanitized
        console.log("sanitized")
    }
  }
  myObservable.subscribe(sanitize)//startprocess

It's commented out to explain it. Basically instead of observing a variable change, you observer functions to change data.]]></summary>
        <author>
            <name>yugely</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Deploy Strapi on AWS with Microtica in 10 minutes]]></title>
        <id>https://dev.to/microtica/deploy-strapi-on-aws-with-microtica-in-10-minutes-5e7f</id>
        <link href="https://dev.to/microtica/deploy-strapi-on-aws-with-microtica-in-10-minutes-5e7f"/>
        <updated>2021-06-21T15:23:55.000Z</updated>
        <summary type="html"><![CDATA[This article is a step-by-step guide on how to deploy Strapi on your AWS account using Microtica.
Strapi is an open-source headless CMS built with NodeJS. Using Strapi you can easily design and publish your content consumed by your apps via API. Strapi provides a great admin UI portal where you can design your data models, create and manage content.
The benefits of using Microtica for your Strapi projects is the simplicity of setup and low maintenance, while having the infrastructure on your own AWS account. We are following the GitOps and declarative infrastructure approach for stable, more reliable and predictable deployments.
With our approach, Strapi can coexist with your existing AWS infrastructure and you always have the flexibility to extend this setup with additional cloud resource‚Ä¶]]></summary>
        <author>
            <name>Marija N.</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dockerfile: Best practices for building an image]]></title>
        <id>https://dev.to/ankit01oss/dockerfile-best-practices-for-building-an-image-4lc6</id>
        <link href="https://dev.to/ankit01oss/dockerfile-best-practices-for-building-an-image-4lc6"/>
        <updated>2021-06-21T15:01:04.000Z</updated>
        <summary type="html"><![CDATA[Hi there,
This is Ankit, your friendly DevOps content curator. I read a lot of articles about DevOps, distributed systems, performance monitoring, etc., and then share key takeaways from those articles so that you can stay updated and learn a few things quickly.üôÇ
I read this article on best practices for building a docker image. A Docker image serves as a template to build Docker containers. It also acts as a starting point when using Docker.
Link to the full articleüëá
Dockerfile: Best practices for building an image
Below is the list of best practices to follow while building Docker images:
OS base image size can have a lot of impact on image sizes and security vulnerabilities. You should choose minimal Docker images like Alpine(~5 MB) compared to the most downloaded base image like ubun‚Ä¶]]></summary>
        <author>
            <name>Ankit Anand ‚ú®</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[üí∞ The Future of Crypto]]></title>
        <id>https://dev.to/robertinoc_dev/the-future-of-crypto-5jo</id>
        <link href="https://dev.to/robertinoc_dev/the-future-of-crypto-5jo"/>
        <updated>2021-06-21T14:37:04.000Z</updated>
        <summary type="html"><![CDATA[‚òëÔ∏è Permission.io‚Äôs CTO Hunter Jensen on crypto regulation, advice for the crypto-curious, and blockchain.



  
  
  
EDITOR‚ÄôS NOTE: Crypto (digital currency) is becoming more mainstream with crypto exchange Coinbase‚Äôs IPO splash and the creation of the cyber yuan. Permission.io‚Äôs business model uses Auth0 to protect its platform while delivering digital currency in exchange for permission-based advertising. We invited their CTO, Hunter Jensen, to pen a post to share his thoughts on crypto‚Äôs future.
Today crypto is highly volatile ‚Äî investing can be a real roller coaster. But that‚Äôs changing. We just saw the first public valuation of a cryptocurrency company, with Coinbase coming in at $86 billion. Governments are creating digital currency or at least talking about it. Here‚Äôs why I think e‚Ä¶]]></summary>
        <author>
            <name>Robertino</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Create CSS Charts With Interesting Shapes, Glyphs and Emoji]]></title>
        <id>https://css-tricks.com/?p=342448</id>
        <link href="https://css-tricks.com/how-to-create-css-charts-with-interesting-shapes-glyphs-and-emoji/"/>
        <updated>2021-06-21T14:32:45.000Z</updated>
        <summary type="html"><![CDATA[Let‚Äôs forego the usual circles and bars we typically see used in charts for more eccentric shapes. With online presentations more and more common today, a quick way to spruce up your web slides and make them stand out is ‚Ä¶
The post How to Create CSS Charts With Interesting Shapes, Glyphs and Emoji appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Preethi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Image To Text Conversion With React And Tesseract.js (OCR)]]></title>
        <id>https://smashingmagazine.com/2021/06/image-text-conversion-react-tesseract-js-ocr/</id>
        <link href="https://smashingmagazine.com/2021/06/image-text-conversion-react-tesseract-js-ocr/"/>
        <updated>2021-06-21T14:30:00.000Z</updated>
        <summary type="html"><![CDATA[Do you have to process data manually because it is served through images or scanned documents? An image-to-text conversion makes it possible to extract text from images to automate the processing of texts on images, videos, and scanned documents. In this article, we look at how to convert an image to text with React and Tesseract.js(OCR), preprocess images, and deal with the limitations of Tesseract (OCR).]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Ayobami Ogundiran)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Codecov supply chain attack - Step by step breakdown]]></title>
        <id>https://dev.to/mackenziejj/codecov-supply-chain-attack-step-by-step-breakdown-4a2e</id>
        <link href="https://dev.to/mackenziejj/codecov-supply-chain-attack-step-by-step-breakdown-4a2e"/>
        <updated>2021-06-21T14:06:23.000Z</updated>
        <summary type="html"><![CDATA[Codecov recently had a significant breach as attackers were able to put a backdoor into Codecov to get access to customers' sensitive data. This article reviews exactly what happened, how attackers gained access, how they used sensitive information and of course, what to do if you were affected. 
This breach was done by very sophisticated attackers who exploited a mistake in how Codecov built docker images. They used this to modify a script which allowed them to send the environment variables from the CI of Codecov customers to a remote server. While the attackers could have conducted multiple attacks from there, we can see based on other disclosures that one path they did take was accessing private git repositories from the git credentials in the CI environment, then exploiting secrets an‚Ä¶]]></summary>
        <author>
            <name>mackenziejj</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Introduction to TypeScript]]></title>
        <id>https://dev.to/ponikar/introduction-to-typescript-1acj</id>
        <link href="https://dev.to/ponikar/introduction-to-typescript-1acj"/>
        <updated>2021-06-21T14:04:00.000Z</updated>
        <summary type="html"><![CDATA[Introduction


Hello there, This is Darshan Ponikar and today we are going to talk about switching from JavaScript to TypeScript! 
So get ready to resolve all your doubts you are having with TypeScript!

I am assuming that you are totally unaware of TypeScript. TypeScript, As name suggest it is a Type checking language!
TypeScript is not a brand new language! TypeScript is a super-set of JavaScript, which means you can still use the same syntax you have used in JavaScript! 
Before I tell you directly how does things work in TypeScript Let's talk about our favourite language JavaScript.
JavaScript is a Runtime Language! That's means everything happens at runtime. We cannot compile JavaScript like Java, C++, C.
//app.js

let num = 3 
console.log(typeof num) // this will print number
num = "I‚Ä¶]]></summary>
        <author>
            <name>Ponikar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to NOT secure web payment systems]]></title>
        <id>https://dev.to/omerxx/how-to-not-secure-web-payment-systems-3888</id>
        <link href="https://dev.to/omerxx/how-to-not-secure-web-payment-systems-3888"/>
        <updated>2021-06-21T13:42:17.000Z</updated>
        <summary type="html"><![CDATA[Since the tale laid here is real, I'll refrain from using specific names or locations. It might put me in some awkward situations. If you've been through something similar, it may sound familiar.
Disclaimer:
I did not actually use what I got, and reported the bug
I do not suggest people try to score free services through exploitations of lousy systems. This is meant to help secure those that are exposed
My hope is that developers become more vigilant with systems, especially ones that involve personal and medical information of literally everyone that crosses their country's border
I do think however, that testing, at home for these kinds of bugs are contributing to the greater good of the internet.





  
  
  Once upon a time


I've been traveling a lot. More so during covid than "norma‚Ä¶]]></summary>
        <author>
            <name>Omer Hamerman</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PhoneInfoga ‚Äì Advanced Information Gathering & OSINT Framework for Phone Numbers]]></title>
        <id>https://dev.to/kalilinux/phoneinfoga-advanced-information-gathering-osint-framework-for-phone-numbers-pn0</id>
        <link href="https://dev.to/kalilinux/phoneinfoga-advanced-information-gathering-osint-framework-for-phone-numbers-pn0"/>
        <updated>2021-06-21T12:32:05.000Z</updated>
        <summary type="html"><![CDATA[PhoneInfoga is one of the most advanced tools to scan international phone numbers using only free resources. It allows you to first gather standard information such as country, area, carrier and line type on any international phone number. Then search for footprints on search engines to try to find the VoIP provider or identify the owner.
Osint Phone Numbers - Phoneinfoga]]></summary>
        <author>
            <name>kalilinux</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Rustcat ‚Äì Alternative Netcat]]></title>
        <id>https://dev.to/kalilinux/rustcat-alternative-netcat-eh8</id>
        <link href="https://dev.to/kalilinux/rustcat-alternative-netcat-eh8"/>
        <updated>2021-06-21T11:14:23.000Z</updated>
        <summary type="html"><![CDATA[Rustcat is a port listener that can be used for different purposes. It is basically like netcat but with fewer options
Rustcat]]></summary>
        <author>
            <name>kalilinux</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to extend an Ant Design component]]></title>
        <id>https://dev.to/bornfightcompany/how-to-extend-an-ant-design-component-1mgb</id>
        <link href="https://dev.to/bornfightcompany/how-to-extend-an-ant-design-component-1mgb"/>
        <updated>2021-06-21T11:00:33.000Z</updated>
        <summary type="html"><![CDATA[Introduction


Developers using Javascript frameworks/libraries such as React, Vue or Angular often use a component library. Those provide completed components tied with plenty of functionalities and customisable design.
In this post we will learn about such a library and how to provide even more desired behaviours, functionalities and options to its components. 
Note: This post will be based on React, Typescript and AntDesign.
Ant Design (AntD for short) is the protagonist in this story. It is an extensive component library primarily made for React. It has versions for Vue and Angular too! 
AntD offers plenty of components such as forms, inputs, menus, modals, loaders, notifications and much much more. We have been working with AntD for a while now and we have been greatly thankful for it‚Ä¶]]></summary>
        <author>
            <name>Juraj Pavloviƒá</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Five (5) Important Key Tips to Improve Your Data Security]]></title>
        <id>https://dev.to/intrigueit/five-5-important-key-tips-to-improve-your-data-security-3hbd</id>
        <link href="https://dev.to/intrigueit/five-5-important-key-tips-to-improve-your-data-security-3hbd"/>
        <updated>2021-06-21T10:35:45.000Z</updated>
        <summary type="html"><![CDATA[Digitization has revolutionized the way we work. Critical business applications and data are just a keystroke away, no matter where the employee is or what time. Perhaps it is this familiarity with data that makes employees feel so connected to it when they change jobs. Even they often take some of it with them. Perhaps that is why most of them do not consider this a criminal act.
Whatever the reasons for this deliberate filtering of data; lack of security can affect the growth of an organization and its ability to maintain a competitive advantage. But with greater visibility into internal threats, organizations can expel bad players and improve overall security.
Below are 5 (five) major events that organizations are monitoring cloud applications and how their attention can help ensure good environment in the company.]]></summary>
        <author>
            <name>Khan Nazibullah</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Five (5) Important Key Tips to Improve Your Data Security]]></title>
        <id>https://dev.to/intrigueit/five-5-important-key-tips-to-improve-your-data-security-3hbd</id>
        <link href="https://dev.to/intrigueit/five-5-important-key-tips-to-improve-your-data-security-3hbd"/>
        <updated>2021-06-21T10:35:45.000Z</updated>
        <summary type="html"><![CDATA[Digitization has revolutionized the way we work. Critical business applications and data are just a keystroke away, no matter where the employee is or what time. Perhaps it is this familiarity with data that makes employees feel so connected to it when they change jobs. Even they often take some of it with them. Perhaps that is why most of them do not consider this a criminal act.
Whatever the reasons for this deliberate filtering of data; lack of security can affect the growth of an organization and its ability to maintain a competitive advantage. But with greater visibility into internal threats, organizations can expel bad players and improve overall security.
Below are 5 (five) major events that organizations are monitoring cloud applications and how their attention can help ensure good environment in the company.]]></summary>
        <author>
            <name>Khan Nazibullah</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Everything you want to know about Verified Mark Certificates and BIMI Standards]]></title>
        <id>https://dev.to/https_india/everything-you-want-to-know-about-verified-mark-certificates-and-bimi-standards-2olh</id>
        <link href="https://dev.to/https_india/everything-you-want-to-know-about-verified-mark-certificates-and-bimi-standards-2olh"/>
        <updated>2021-06-21T10:31:18.000Z</updated>
        <summary type="html"><![CDATA[When it comes to information genuineness we tend to trust only renown sources. You know which sources to trust when you are reading information on social media, yes, we are talking about verified accounts on social media. In-order to minimize the continuously exploding phishing frauds in the inbox, Certifying Authorities have taken an initiative to issue verified mark certificates for brands to show their brand logo in the email inbox.
To make this challenging task a reality Google announced full support for the movement. This functionality will use BIMI standards (Brand Indicators for Message Identification) to show the verification mark within email clients.
BIMI provides a secure, global framework enabling email inboxes to display sender-designated logos for authenticated messages. It also includes protections to prevent senders from spoofing logos owned by other organizations


What are the benefits of BIMI? 
BIMI offers several important benefits to end users as well as to marketers across the globe.
BIMI can reduce the amount of phishing activities.
It offers improved email security by using existing email authentication technologies like SPF, DKIM, and DMARC.
Provides a great opportunity for every marketers email to get read first because of logo recall.
BIMI increases the confidence in the mind of a recipient as they see a verified logo against the sender name.
What are Verified Mark Certificates ?
Verified Mark Certificate in Action

How to get Verified Mark Certificates?
As of now Google & the BIMI group has not rolled out any specific date of its implementation. As per Google the pilot testing has started and will be made live for all by the end of 2020. An organization would require getting VMCs to show BIMI standard logos.
In case you would like to register for BIMI and want numerous VMC then contact us.  We will get back to you with all the relevant details at the earliest.]]></summary>
        <author>
            <name>Https</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Getting started with automated data downloads]]></title>
        <id>https://dev.to/charleyglynn/getting-started-with-automated-data-downloads-4i1</id>
        <link href="https://dev.to/charleyglynn/getting-started-with-automated-data-downloads-4i1"/>
        <updated>2021-06-21T09:10:33.000Z</updated>
        <summary type="html"><![CDATA[Data can be incredibly useful. By analysing or interpreting the information contained in data, better decisions can be made.


Ordnance Survey is one of the world‚Äôs oldest data organisations. We have gathered information about Great Britain since 1791, organising, analysing and disseminating maps and other information. As information technologies have evolved from tables and charts and pen-and-paper calculations to databases, vector graphics and sophisticated machine learning algorithms, OS has been a leader in adopting and innovating new ways to capture, store, process and share valuable location information.
As the scale of data grows, so does its potential usefulness ‚Äî and the complexity of managing it. Understanding a small table of numbers is easy, less so for a complex database with ‚Ä¶]]></summary>
        <author>
            <name>Charley Glynn</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[npm: Making sense of versions]]></title>
        <id>https://dev.to/raviojha/npm-making-sense-of-versions-3p55</id>
        <link href="https://dev.to/raviojha/npm-making-sense-of-versions-3p55"/>
        <updated>2021-06-21T08:11:30.000Z</updated>
        <summary type="html"><![CDATA[While giving a code walkthrough, some one recently asked "How do we keep our dependencies updated?" and "what is the meaning of caret ^ in package.json?". This seems like a very easy question, but sometimes it confuses people and i feel it's good to know these little things.

tilde (~) in package.json, it means when someone gets your repo or package and try to install the library, it is going to install latest patch version.
So if package.json looks like this:
...
"dependencies": {
  "some_dependencies": "^4.17.1",
},
...

So if the latest version is 4.17.11 then 4.17.11 version is going to be installed.
caret (^) in package.json, it means when someone gets your repo or package and try to install the library, it is going to install latest minor version.
so if package.json looks like this:
...
"dependencies": {
  "some_dependencies": "^4.17.8",
},
...

And latest version is 4.18.9, then if we do npm i it is going to pick up 4.18.9 version.
When it is written as ("lodash": "*") it basically says to go ahead and install its absolute new version. This is not always a good idea, it might break your system, so we need to plan these kind of changes.
About Semantic Versioning
NPM Semver Calculator
-- Thanks, Ravi]]></summary>
        <author>
            <name>Ravi Ojha</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Node.js Files app]]></title>
        <id>https://dev.to/petersirka/node-js-files-app-353c</id>
        <link href="https://dev.to/petersirka/node-js-files-app-353c"/>
        <updated>2021-06-21T07:42:00.000Z</updated>
        <summary type="html"><![CDATA[We are happy to announce a new Node.js app called Files. The Files app is a simple Node.js web application for storing and managing files on the server. The app is fully open-source, and you can modify it according to your needs.
Join Total.js Telegram
Run Files app
Open-source (MIT license)

without dependencies
without database
uncomplicated usage
supports drag & drop uploading files
supports search
supports Total.js Message Service (TMS)
beautiful user interface
nice features
fully extensible
Requirements:
Node.js +v12
Total.js 4 - $ npm install total4

Download and run
Links:
Files website
Download source-code
Join our community
You can try Total.js Files in Total.js Cloud or download the repository, and follow install instructions.]]></summary>
        <author>
            <name>Peter ≈†irka</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to leverage OAuth-Based Authorization Service Architecture for Secure Services in IoT?]]></title>
        <id>https://dev.to/bari_parth/how-to-leverage-oauth-based-authorization-service-architecture-for-secure-services-in-iot-2426</id>
        <link href="https://dev.to/bari_parth/how-to-leverage-oauth-based-authorization-service-architecture-for-secure-services-in-iot-2426"/>
        <updated>2021-06-21T06:07:20.000Z</updated>
        <summary type="html"><![CDATA[Internet of Things or IoT is the new age revolution in every business vertical these days. Especially during the pandemic, there has been a constant need for tracking symptoms related to COVID. Now that many countries have vaccinated a significant portion of their population, authorities are also looking to track people not vaccinated.¬†
While it may seem to be a great idea to use IoT-based solutions for tracking and tracing COVID-related data, security can be a concern here. According to a research paper prepared based on a security survey of more than 40 android apps used for contact tracing of COVID patients, tracking symptoms shows that about 55% of them store sensitive data in cleartext. At the same time, 55% of these applications also have been producing insecure random values.¬†
There‚Ä¶]]></summary>
        <author>
            <name>Parth Bari</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to support Apple iCloud Passkeys with WebAuthn on iOS 15 and macOS Monterey]]></title>
        <id>https://dev.to/hanko/how-to-support-apple-icloud-passkeys-with-webauthn-on-ios-15-and-macos-monterey-37h3</id>
        <link href="https://dev.to/hanko/how-to-support-apple-icloud-passkeys-with-webauthn-on-ios-15-and-macos-monterey-37h3"/>
        <updated>2021-06-21T05:44:59.000Z</updated>
        <summary type="html"><![CDATA[This is the first part of a two-part series on Apple Passkeys. In this article, we will walk you through the creation of a simple web app for registration and authentication using Passkeys on Apple devices. In part 2 of this guide, we will cover adding Apple‚Äôs Shiny iOS app to your setup from the guide, demonstrating a seamless user experience across web and mobile.
Target Audience: Developers who want to try out Apple ‚ÄòPasskeys‚Äô with their website and / or app and, for that, need to ‚Äòadopt WebAuthn on their server‚Äô.
Apple announced at WWDC21 that WebAuthn credentials will be available as ‚ÄúPasskeys‚Äù in the iCloud Keychain, as well as the availability of system-wide WebAuthn APIs on iOS, iPadOS, and macOS.
While the WebAuthn API has been available on all major platforms ‚Äì including iOS and ‚Ä¶]]></summary>
        <author>
            <name>Jan Gerle</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[change directory command]]></title>
        <id>https://dev.to/ashutoshpatole/change-directory-command-47ld</id>
        <link href="https://dev.to/ashutoshpatole/change-directory-command-47ld"/>
        <updated>2021-06-21T04:41:49.000Z</updated>
        <summary type="html"><![CDATA[This is my first blog on this platform. üòÅ
We might face the situation where we have to navigate the file system through a terminal or cmd because of lack of GUI  feature in the system like Servers. So it is must to know the basics of cd command.
cd command means Change Directory which is kind of self explanatory term. Now before jumping into the examples there is something we should know i.e, Paths in file system.
There are two types of paths in any operating system. 
Absolute Path
Relative Path
Absolute path is nothing but a path given from the root of the file system.
/home/user/Desktop/someDirectory

This is an example of absolute path because we have to provide the path from the bottom most part of the file system heirarchy.
In Relative path we don't have to give whole location of the‚Ä¶]]></summary>
        <author>
            <name>Ashutosh Patole</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[3 Ways to Store and Read Credentials Locally in Python]]></title>
        <id>https://dev.to/rahulbanerjee99/3-ways-to-store-and-read-credentials-locally-in-python-373d</id>
        <link href="https://dev.to/rahulbanerjee99/3-ways-to-store-and-read-credentials-locally-in-python-373d"/>
        <updated>2021-06-21T04:40:32.000Z</updated>
        <summary type="html"><![CDATA[Originally posted on realpythonproject.com
Connect with me on LinkedIn, Twitter
We will be discussing 3 different ways to store credentials and read them using Python. 
Storing them as system variables
Storing them as variables in your virtual environment 
Storing them in a .env file 
The Most Convenient Way
If the credentials are stored as Global Environment Variables, they can be accessed by any script running in any environment on your PC.
To Create a Global Environment Variable, run this in your terminal
export varName=varValue

Ensure there are no spaces between the '='. If you get an error "zsh: Bad Assignment", it is probably caused because of space between the '='. 
Let's create a couple of global environment variables
export globalSecretUser=global_rahul1999
export globalSecretKey‚Ä¶]]></summary>
        <author>
            <name>Rahul Banerjee</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Things you might not know about Typescript]]></title>
        <id>https://dev.to/asimdahall/things-you-might-not-know-about-typescript-6cn</id>
        <link href="https://dev.to/asimdahall/things-you-might-not-know-about-typescript-6cn"/>
        <updated>2021-06-21T04:00:49.000Z</updated>
        <summary type="html"><![CDATA[Things you might not know about Typescript


Typescript is an awesome language. I have been using it for a year now and my love towards the language is infinity.  It's commonly known as the superset of Javascript, but it's much more than that. Typescript helps a lot during the day to day development work, also it helps a lot to avoid the unnecessary painful bugs.
Here, in this articles I am going to present some features ina Typescript that you might not know and that may come handy in your day to day life. Are you excited to go through the features?
Let's assume a case where the ts compiling is yelling at you that you are doing something wrong,
const multiply = (a:number,b:number) => a+b;
multiply('12',13);

Here, TS compiler yells at you with the message 
Argument of type 'string' is not‚Ä¶]]></summary>
        <author>
            <name>Asim Dahal</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Develop & test React components in isolation]]></title>
        <id>https://dev.to/dhaiwat10/develop-test-react-components-in-isolation-3714</id>
        <link href="https://dev.to/dhaiwat10/develop-test-react-components-in-isolation-3714"/>
        <updated>2021-06-21T03:28:57.000Z</updated>
        <summary type="html"><![CDATA[Writing front-end code is easy. But writing reliable front-end code? That's tough.
Modern UIs are more complicated than ever. It is critical that you have confidence in your code. Developing and testing your UI components in isolation allows you to accomplish that. 
In this article, we will go through the process of crafting an isolated, independent & reliable Image component for React. We will be leveraging tools like Storybook, Testing Library and Jest. ‚ú®
To follow along, use this repo as boilerplate.
After installing the dependenices, run yarn storybook to start the Storybook and run yarn test --watch to start the test-runner.
Let's start with tests. 
Writing tests before you start developing your component is important. We want our component to fulfill our test cases. Not the other way‚Ä¶]]></summary>
        <author>
            <name>Dhaiwat Pandya</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Create a TypeScript Project with ExpressJS the Simplest Way!!]]></title>
        <id>https://dev.to/silvenleaf/how-to-create-a-typescript-project-with-expressjs-the-simplest-way-578a</id>
        <link href="https://dev.to/silvenleaf/how-to-create-a-typescript-project-with-expressjs-the-simplest-way-578a"/>
        <updated>2021-06-21T02:47:34.000Z</updated>
        <summary type="html"><![CDATA[If you are wondering how to create a TypeScript BackEND project, fear not my brave knight. It's way easier than you can ever imagine!! Let go!
First init our project by running npm init -y on our terminal, it'll create a package.json file. Then let's install these packages by running the following command on our terminal
npm i typescript ts-node express @types/node @types/express

typescript is the core package for typescript, ts-node is the node version for runnig .ts files just as we do with node app.js, in this case we do, ts-node app.ts. @types/node and @types/express has all the types for node and express respectively. You say why? Well typescript is all about type na :)
Now let's install some helping dev stuff
npm i --D nodemon ts-node-dev

ts-node-dev package binds nodemon with typescript. The typescript version for nodemon app.js is ts-node-dev app.ts
Now let's update our package.json file
  ....keep others unchanged
  "main": "app.ts",
  "scripts": {
    "start": "ts-node app.ts",
    "dev": "ts-node-dev app.ts"
  },
  ...keep others unchanged

Run the following command, it'll will create a tsconfig.json file.
tsc --init

Let's create an express App
import express, { Request, Response } from 'express';
import path from 'path';




// -------------------firing express app
const app = express();
app.use(express.json());
app.use(express.urlencoded({extended:false}));
app.use(express.static(path.join(__dirname, 'client/build')));




// -------------------routes
app.get('/home', (request: Request, response: Response)=>{
  console.log(request.url)
  response.json({ message: `Welcome to the home page!` })
});



// --------------------Listen
const PORT = process.env.PORT || 5000;
app.listen(5000, ()=>{
  console.log(`Server running on PORT ${ PORT }`);
})

Yippie, our very first typescript express app is ready. Let's run and test it
Type either npm start or npm run dev and then go to the localhost:5000 and test it out yourself. Enjoy!]]></summary>
        <author>
            <name>SilvenLEAF</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Create a TypeScript Project with ExpressJS the Simplest Way!!]]></title>
        <id>https://dev.to/silvenleaf/how-to-create-a-typescript-project-with-expressjs-the-simplest-way-578a</id>
        <link href="https://dev.to/silvenleaf/how-to-create-a-typescript-project-with-expressjs-the-simplest-way-578a"/>
        <updated>2021-06-21T02:47:34.000Z</updated>
        <summary type="html"><![CDATA[If you are wondering how to create a TypeScript BackEND project, fear not my brave knight. It's way easier than you can ever imagine!! Let go!
First init our project by running npm init -y on our terminal, it'll create a package.json file. Then let's install these packages by running the following command on our terminal
npm i typescript ts-node express @types/node @types/express

typescript is the core package for typescript, ts-node is the node version for runnig .ts files just as we do with node app.js, in this case we do, ts-node app.ts. @types/node and @types/express has all the types for node and express respectively. You say why? Well typescript is all about type na :)
Now let's install some helping dev stuff
npm i --D nodemon ts-node-dev

ts-node-dev package binds nodemon with typescript. The typescript version for nodemon app.js is ts-node-dev app.ts
Now let's update our package.json file
  ....keep others unchanged
  "main": "app.ts",
  "scripts": {
    "start": "ts-node app.ts",
    "dev": "ts-node-dev app.ts"
  },
  ...keep others unchanged

Run the following command, it'll will create a tsconfig.json file.
tsc --init

Let's create an express App
import express, { Request, Response } from 'express';
import path from 'path';




// -------------------firing express app
const app = express();
app.use(express.json());
app.use(express.urlencoded({extended:false}));
app.use(express.static(path.join(__dirname, 'client/build')));




// -------------------routes
app.get('/home', (request: Request, response: Response)=>{
  console.log(request.url)
  response.json({ message: `Welcome to the home page!` })
});



// --------------------Listen
const PORT = process.env.PORT || 5000;
app.listen(5000, ()=>{
  console.log(`Server running on PORT ${ PORT }`);
})

Yippie, our very first typescript express app is ready. Let's run and test it
Type either npm start or npm run dev and then go to the localhost:5000 and test it out yourself. Enjoy!]]></summary>
        <author>
            <name>SilvenLEAF</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Generate dts type definition for i18next json configuration file]]></title>
        <id>https://dev.to/rxliuli/i-created-a-type-definition-generator-for-i18next-3dj4</id>
        <link href="https://dev.to/rxliuli/i-created-a-type-definition-generator-for-i18next-3dj4"/>
        <updated>2021-06-21T00:01:38.000Z</updated>
        <summary type="html"><![CDATA[Scenes


I have some projects that need to use i18next to handle internationalization, but use typescript to have type definitions, so I used to maintain and use it in the project joplin-utils Yesterday I did a lot of refactoring, and now it has been pulled out and released as a public npm package. If anyone is interested, you can try it.
English, ÁÆÄ‰Ωì‰∏≠Êñá
i18next's typescript type definition generator can generate type definitions from multiple language translation json files, supporting nested objects and parameters.
The type definition generation of the international configuration of cli itself is also done by cli (bootstrapping)
yarn add -D @liuli-util/i18next-dts-gen
i18next-dts-gen gen --input src/i18n # Scan this directory for json files and generate index.d.ts type definitions

Detail
‚Ä¶]]></summary>
        <author>
            <name>rxliuli</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[NodeJS e Express]]></title>
        <id>https://dev.to/guilhermegarcia86/nodejs-e-express-oam</id>
        <link href="https://dev.to/guilhermegarcia86/nodejs-e-express-oam"/>
        <updated>2021-06-21T00:00:01.000Z</updated>
        <summary type="html"><![CDATA[Introdu√ß√£o


Neste artigo ser√° mostrado como criar um projeto com NodeJS e Express e vamos expor uma API para podermos realizar as quatro opera√ß√µes b√°sicas de um CRUD (criar, ler, atualizar e deletar dados). Tamb√©m ser√° mostrado como podemos construir um projeto de forma simples, descomplicada, com baixa acoplamento e alta coes√£o entre seus componentes por meio de inje√ß√£o de depend√™ncias e invers√£o de controle.
Fazendo uma breve introdu√ß√£o sobre as tecnologias que ser√£o apresentadas nesse artigo, primeiramente temos o NodeJS que √© um projeto open-source criado para ser um ambiente de desenvolvimento backend escrito em JavaScript, ele explora os benef√≠cios que o JavaScript possui, como orienta√ß√£o a eventos e ass√≠ncronicidade.
Juntamente com o NodeJS usaremos nesse projeto o Express que √© um‚Ä¶]]></summary>
        <author>
            <name>guilhermegarcia86</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using Kyverno To Enforce EKS Best Practices]]></title>
        <id>https://dev.to/rinkiyakedad/using-kyverno-to-enforce-eks-best-practices-cad</id>
        <link href="https://dev.to/rinkiyakedad/using-kyverno-to-enforce-eks-best-practices-cad"/>
        <updated>2021-06-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Hey folks, in this post we‚Äôll see how you can use Kyverno to enforce some best practices for your EKS cluster. For those not familiar, Kyverno is a Kubernetes native policy engine that aims to make your life easy when managing clusters. To know more you can read my previous post on Kyverno where we discuss the project and its internals in detail. With that out of the way, let‚Äôs get started!
EKS best practices recommend the use of separate IAM roles for different use cases. For example, for dev and prod environments you should prefer to have separate IAM roles which can configure objects in those environments. Now the problem that arises with this is how do you make sure that the IAM role which has permission for the dev environment doesn‚Äôt accidentally create objects in the production envi‚Ä¶]]></summary>
        <author>
            <name>Arsh Sharma</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Express + NextJS - sample/tutorial integration]]></title>
        <id>https://dev.to/alexeydc/express-nextjs-sample-tutorial-integration-485f</id>
        <link href="https://dev.to/alexeydc/express-nextjs-sample-tutorial-integration-485f"/>
        <updated>2021-06-20T21:41:54.000Z</updated>
        <summary type="html"><![CDATA[Context


While NextJS is a wonderful tool in its own right, augmenting it with Express makes for a really powerful combo.
You may want to add a custom API to your application without spinning up a separate API service, or you may want to take control of routing, or run some middleware and fetch standard data for your pages before they are served. Perhaps you have an existing API server and you wish to enable it to serve some front end. Another good use case is setting up WebSockets - e.g. for a chat application.
This type of set up is documented in NextJS itself: https://nextjs.org/docs/advanced-features/custom-server
In the standard example, they use Node's http package; we'll use Express to take advantage of its middleware and routing capabilities.
I've provided an example barebones int‚Ä¶]]></summary>
        <author>
            <name>Alexey</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why and How I migrated my ThinkPad from Arch to Debian]]></title>
        <id>https://dev.to/myterminal/why-and-how-i-migrated-my-thinkpad-from-arch-to-debian-27cm</id>
        <link href="https://dev.to/myterminal/why-and-how-i-migrated-my-thinkpad-from-arch-to-debian-27cm"/>
        <updated>2021-06-20T20:59:09.000Z</updated>
        <summary type="html"><![CDATA[This article outlines my migration from Arch Linux to Debian. The details about the migration are spanned across a few videos, but below is a reasonably short summary.
I moved back from macOS to Linux and I'm loving it!
Mohammed Ismail Ansari „Éª Mar 18 „Éª 2 min read
#linux
        #macos
        #setup
      
Arch gave me a fresh new direction to explore and experience Linux the way I never did before. I created a couple of reusable artifacts and it in a way became a base for my second YouTube channel.
Things kept breaking, and I found myself spending more time on fixing things than I expected, even with my prior experience with Linux before I spent four years on macOS.




So I started looking out for alternatives and found the exact thing I was looking for.
I couldn't lose the control I had over my Linux setup back with Arch by delegating it to a graphical installer. So I installed Debian in the way we usually do install Arch.




All this learning had to be documented somewhere so I created another video talking about the process in a little bit of detail.
Moving to Debian meant re-setting up the entire machine, even deeper than what I had to do back when I moved the factory-installed Windows to a smaller partition to make space for my primary Linux partition.




The new setup took away a few issues I never got fixed, and in exchange, brought with it a few other ones. I talked about the similarities, differences, negatives, and most importantly, the positives of the migration in a separate video, adding another episode to my series Back to Linux.
As I did last time, I'll keep my eyes open for ways to improve my setup and workflow, and will keep documenting my learning to be able to share them with the rest of the community.
Needless to say, I'm loving the alternate universe with Debian. Do throw in your ideas and thoughts in the comments and hopefully, we can learn something from each other.]]></summary>
        <author>
            <name>Mohammed Ismail Ansari</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Get Started with Google Cloud Functions]]></title>
        <id>https://dev.to/noahfschr/get-started-with-google-cloud-functions-44ak</id>
        <link href="https://dev.to/noahfschr/get-started-with-google-cloud-functions-44ak"/>
        <updated>2021-06-20T19:14:23.000Z</updated>
        <summary type="html"><![CDATA[Google Cloud Functions is the second most popular serverless execution platform. Similar to AWS Lambda it is stateless, namely you need to access external resources to read or write your applications state. In this post, we will introduce Redis as a database for your Google Cloud functions.                  
This tutorial shows how to build a serverless API with Redis on Google Cloud Functions. The API will simply count the page views and show it in JSON format.
See the demo: https://us-central1-functions-317005.cloudfunctions.net/helloGET
See the code: https://github.com/upstash/examples/tree/master/using-google-cloud-functions  
Serverless compute: Google Cloud Functions (Node.js)
Serverless data store: Redis via Upstash
Deployment tool: gcloud
A GCP account for Google Cloud functions.
I‚Ä¶]]></summary>
        <author>
            <name>Noah</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Successful IOC Pattern with Functions in TypeScript]]></title>
        <id>https://dev.to/mindplay/a-successful-ioc-pattern-with-functions-in-typescript-2nac</id>
        <link href="https://dev.to/mindplay/a-successful-ioc-pattern-with-functions-in-typescript-2nac"/>
        <updated>2021-06-20T19:12:41.000Z</updated>
        <summary type="html"><![CDATA[Over the past few months, I've been working on a TypeScript project, where I decided to challenge myself to use Functions only. This week, I refactored the codebase to use IOC everywhere, and it feels like I leveled up. üòÑ
There's been a lot of articles these past couple of years about "functional programming" in JavaScript, and for some reason these are mostly concerned with immutability, sets, map/reduce, and so on. I come from a background of mostly OOP, where the answer to IOC is largely just "use constructors and interfaces", so this hasn't been really helpful.
What was missing for me, was a functional perspective on IOC and dependency injection.
In this article, I will try to illustrate the problems and solutions with a silly example for illustration purposes: for some reason, your b‚Ä¶]]></summary>
        <author>
            <name>Rasmus Schultz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Introduction to Node.js]]></title>
        <id>https://dev.to/kasuncodes/introduction-to-node-js-2d5a</id>
        <link href="https://dev.to/kasuncodes/introduction-to-node-js-2d5a"/>
        <updated>2021-06-20T17:17:54.000Z</updated>
        <summary type="html"><![CDATA[Node.js is a runtime environment for executing JavaScript code outside of a browser. 
Before Node.js, JavaScript has long been used in web pages and run only by browsers. But now we can execute JavaScript code without a browser with the help of Node.js which is built on Chrome‚Äôs V8 JavaScript engine.
Here‚Äôs a formal definition as given on the nodejs.org
Node.js¬Æ is a JavaScript runtime built on Chrome's V8 JavaScript engine.

Node is ideal for building highly scalable, data-intensive, and real-time back-end services.
Node.js is easy to get started and can be used for prototyping and agile development.


JavaScript everywhere. If you're a front-end developer who knows JavaScript, you can easily get started Node.js without learning a new programming language.


It also can be used for buildi‚Ä¶]]></summary>
        <author>
            <name>Kasun Perera</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How We Test Angular2+]]></title>
        <id>https://dev.to/nha/how-we-test-angular2-19al</id>
        <link href="https://dev.to/nha/how-we-test-angular2-19al"/>
        <updated>2021-06-20T16:10:02.000Z</updated>
        <summary type="html"><![CDATA[Hi, I'm Chuck. This will be my first attempt at trying to contribute back to the community in some way and I'm going to try and do it in the realm of testing. So bear with me üôÇ.  I appreciate all feedback and constructive feedback is the most helpful.
Throughout my career as a developer I have heard a lot of people agree that testing our code is something that we should all be doing. Conversely, I have not worked at many places that actually do it. Additionally, and surprisingly to me, rarely if ever do you see a tutorial show any kind of testing when they're trying to teach something unless they're specifically teaching testing.
While I understand that the focus of the lesson may not be testing, I think that if we really want to see testing adopted more widely across our industry then we‚Ä¶]]></summary>
        <author>
            <name>Chuck Blaine</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Stop choosing DX over UX. Or maybe not?]]></title>
        <id>https://dev.to/stereobooster/stop-choosing-dx-over-ux-or-maybe-not-36ph</id>
        <link href="https://dev.to/stereobooster/stop-choosing-dx-over-ux-or-maybe-not-36ph"/>
        <updated>2021-06-20T15:57:27.000Z</updated>
        <summary type="html"><![CDATA[Stop choosing DX over UX.
‚Äì Devon Govett (@devongovett)
By no means I want to dunk on Devon. This is just an example of sentiment flowing around the internet. So you, reader, would understand where I coming from.
DX - developer experience. UX - user experience, usability.
Using <button> instead of <div> for a clickable elements is a good for UX (and accessibility). Yet a lot of front-end developers keep using divs or spans or something else. Why is that?
My guess is that because it is much easier to work with div then button, because div doesn‚Äôt have built in styles. Developers taking short cut here, and probably unconsciously, selecting better DX.
If using button would be as easy as using div, I guess a lot of people would use it. Maybe if we would thought about DX in the first place, UX ‚Ä¶]]></summary>
        <author>
            <name>stereobooster</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Build NGINX from Source Code on Ubuntu 20.04]]></title>
        <id>https://dev.to/armanism24/how-to-build-nginx-from-source-code-on-ubuntu-20-04-31e5</id>
        <link href="https://dev.to/armanism24/how-to-build-nginx-from-source-code-on-ubuntu-20-04-31e5"/>
        <updated>2021-06-20T15:12:11.000Z</updated>
        <summary type="html"><![CDATA[By Arman Ali
Today NGINX servers the majority of the world's top 1000 websites and while this growth is largely due to, it's also because NGINX is relatively easy to get started with.
There are two methods of installing NGINX on Ubuntu 20.04.
Via the operating system's build-in packages manager.
Via building NGINX from the source.
In this guide, we‚Äôll build NGINX from the source on Ubuntu 20.04.
To complete this tutorial, you will need to have an Ubuntu 20.04 server. for the sake of simplicity, we'll be working as root during this guide.
In order to build NGINX from the source first, we need to install a couple of dependencies for NGINX.
Login to your server via SSH terminal.
ssh username@you-IP-address

Update the Ubuntu‚Äôs package manager
sudo apt-get update 

Now, install development lib‚Ä¶]]></summary>
        <author>
            <name>Arman ali</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Top Javascript Frameworks 2021]]></title>
        <id>https://dev.to/stacksjar/top-javascript-frameworks-2021-43e3</id>
        <link href="https://dev.to/stacksjar/top-javascript-frameworks-2021-43e3"/>
        <updated>2021-06-20T14:08:40.000Z</updated>
        <summary type="html"><![CDATA[In this post we are going to check top javascript frameworks 2021 that we should get our Hands on. Below is the list of top javascript frameworks to learn in 2021 and check its pros and cons.
Read Complete Article here:- https://stacksjar.com/post/top-javascript-frameworks-to-learn-in-2021]]></summary>
        <author>
            <name>Stacksjar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ng-magical directives series (ng-container)]]></title>
        <id>https://dev.to/valoni01/ng-magical-directives-series-ng-container-2979</id>
        <link href="https://dev.to/valoni01/ng-magical-directives-series-ng-container-2979"/>
        <updated>2021-06-20T11:56:07.000Z</updated>
        <summary type="html"><![CDATA["Magic is just science that we do not understand yet" 
This article is part of what I call the magical directives series. In this series, we will unravel the mystery behind some interesting Angular directives. Afterwards, we can add this little magic to our tool box. I call them magical directives because they play a very important role in building reusable components across our Angular applications.
Below are the directives that we will be looking at in this series.
ng-template
ng-container
ng-content
*ngTemplateOutlet
links to other articles in this series are below


  
  
  The ng-container


The ng-container is a grouping element that does not introduce a new element in the DOM when used in our template. This means that it does not interfere with the layout and style of your applicati‚Ä¶]]></summary>
        <author>
            <name>Valentine Awe</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ng-magical directives series (ng-container)]]></title>
        <id>https://dev.to/valoni01/ng-magical-directives-series-ng-container-2979</id>
        <link href="https://dev.to/valoni01/ng-magical-directives-series-ng-container-2979"/>
        <updated>2021-06-20T11:56:07.000Z</updated>
        <summary type="html"><![CDATA["Magic is just science that we do not understand yet" 
This article is part of what I call the magical directives series. In this series, we will unravel the mystery behind some interesting Angular directives. Afterwards, we can add this little magic to our tool box. I call them magical directives because they play a very important role in building reusable components across our Angular applications.
Below are the directives that we will be looking at in this series.
ng-template
ng-container
ng-content
*ngTemplateOutlet
links to other articles in this series are below


  
  
  The ng-container


The ng-container is a grouping element that does not introduce a new element in the DOM when used in our template. This means that it does not interfere with the layout and style of your applicati‚Ä¶]]></summary>
        <author>
            <name>Valentine Awe</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[React hook to persist state of a dialog in URL]]></title>
        <id>https://dev.to/stereobooster/react-hook-to-persist-state-of-a-dialog-in-url-1773</id>
        <link href="https://dev.to/stereobooster/react-hook-to-persist-state-of-a-dialog-in-url-1773"/>
        <updated>2021-06-20T11:28:57.000Z</updated>
        <summary type="html"><![CDATA[Inspired by Braid Dialog:
It‚Äôs recommended that you connect the Dialog‚Äôs open state to your router so that it can be closed via the browser‚Äôs back button.
When I saw this sentence - I thought what a cool idea. It was tricky to implement hook to capture all edge cases.
Basic example:
const [showModal, setShowModal] = useState(false)

<Button onClick={() => setShowModal(true)}>Open dialog</Button>

<Dialog
  title="Dialog Title"
  description={<Text tone="secondary">Optional description</Text>}
  open={showModal}
  onClose={() => setShowModal(false)}
>
  <Placeholder height={100} width="100%" />
</Dialog>

When dialog is opened we need to push to history new item, let‚Äôs say ?dialog=true. Using query param instead of path is easy, because we don‚Äôt need to configure router for it, but we also ‚Ä¶]]></summary>
        <author>
            <name>stereobooster</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is Bash?]]></title>
        <id>https://dev.to/mrdestructive/what-is-bash-4mco</id>
        <link href="https://dev.to/mrdestructive/what-is-bash-4mco"/>
        <updated>2021-06-20T03:43:46.000Z</updated>
        <summary type="html"><![CDATA[Introduction


BASH or Bourne Again Shell is an interface(program) between the user and the Operating System. BASH is just an application just like others, but not an ordinary one. It is quite powerful when used to its potential. It is used in various aspects of computing. No, it's not only for server admins, but it specializes in that field though. We'll see how we can use Bash to perform several tasks quite powerfully. Not just automation, you'll be surprised what Bash is capable of.
BASH is just like any other shell such as z-shell, c-shell, Korn shell, and Bourne shell. BASH is a variant or update version of the BOURNE shell. Technically it has quite advanced features than the Bourne shell, such as arithmetic operators, signal handling, command-line completion, and tons of quality of l‚Ä¶]]></summary>
        <author>
            <name>Meet Gor</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Introduction to threading and multiprocessing: Concurrency & Parallelism in Python]]></title>
        <id>https://dev.to/adarshpunj/introduction-to-threading-and-multiprocessing-concurrency-parallelism-in-python-48o</id>
        <link href="https://dev.to/adarshpunj/introduction-to-threading-and-multiprocessing-concurrency-parallelism-in-python-48o"/>
        <updated>2021-06-19T20:24:31.000Z</updated>
        <summary type="html"><![CDATA[Introduction


Most of us have come across terms like multithreading, parallel processing, multiprocessing, concurrency, etc., though each of these terms has its own meaning. In a broader sense, we need these because we want to avoid some kind of latency (or have an illusion of doing so) in the execution of regular programs.
To do this, we try to write code that doesn‚Äôt necessarily runs in order (non-sequential) and all this boils down to two different concepts ‚Äî concurrency and parallelism.
I came across concurrency when I was trying to download ~5000 images from the web. I had collected image URLs from Flickr, and these images had to be passed on to a team doing annotation (labelling).
This is how a sequential program to download images would look like:
import requests

def download_imag‚Ä¶]]></summary>
        <author>
            <name>Adarsh Punj</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Need ideas about some SW/application for writing]]></title>
        <id>https://dev.to/maixuanhan/need-ideas-about-some-sw-application-for-writing-11ee</id>
        <link href="https://dev.to/maixuanhan/need-ideas-about-some-sw-application-for-writing-11ee"/>
        <updated>2021-06-19T16:49:57.000Z</updated>
        <summary type="html"><![CDATA[Hi, I want to write about some technical discussion about system designs, architecture designs, programming techniques and how to deal with troubles in real-world but I've found that it is very difficult to just explain topics via multiple arbitrary and unconnected examples. I've got some topics in my mind but I cannot convey them into words. My writing is not good enough. So I'm thinking of implementing some real product while writing about it at a same time. I can post all the design considerations here and will receive feedbacks which will help me (and maybe other people) a lot.
The problem is that I cannot think of any ideas about software/applications that are not only practical but also useful for real-life use cases. Simple case studies are good but I'm afraid of that the readers will lose the interest. So any suggestion would be welcome and appreciate.
Thank you very much.]]></summary>
        <author>
            <name>Han Mai</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to stop Angular ng serve on Mac/Linux]]></title>
        <id>https://dev.to/tanatip/how-to-stop-angular-ng-serve-on-mac-linux-347b</id>
        <link href="https://dev.to/tanatip/how-to-stop-angular-ng-serve-on-mac-linux-347b"/>
        <updated>2021-06-19T10:18:32.000Z</updated>
        <summary type="html"><![CDATA[There're two ways to do this: 
First
ctrl + c
Second
ps command to find the process ID then use the PID to kill the process.
ps -ef | grep "ng serve"

The output will look like this:
 501 25782 23667   0  5:04PM ttys000    0:22.54 ng serve  
 501 25790 23408   0  5:05PM ttys001    0:00.01 grep ng serve

Then use this command to stop ng serve.
kill 25782]]></summary>
        <author>
            <name>Tanatip Siriprathum</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular Dependency Injection(Custom Provider)]]></title>
        <id>https://dev.to/abilashs003/angular-dependecy-injection-custom-provider-1l3n</id>
        <link href="https://dev.to/abilashs003/angular-dependecy-injection-custom-provider-1l3n"/>
        <updated>2021-06-19T08:19:36.000Z</updated>
        <summary type="html"><![CDATA[Angular Dependency Injection


Before discussing dependency injection lets understand what are dependencies first
Dependencies are services or objects that the class needs to perform its function
Dependency Injection is a design pattern in which a class/ component request dependencies from external sources rather than creating them.
In Angular, Component or services are injected with dependencies via the constructor arguments.  Angular DI's framework will provide dependencies calling the factory function to instantiate the dependencies. 
How Services are exposed to Inject?
Its using @Injectable decorator and dependency injection provider which is declared in service.

In the above service named AngProvidedDepService the if provided In is removed then you will get following error

No provid‚Ä¶]]></summary>
        <author>
            <name>abi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How Have Fedora of Mine Been]]></title>
        <id>https://dev.to/naruaika/how-have-fedora-of-mine-been-439j</id>
        <link href="https://dev.to/naruaika/how-have-fedora-of-mine-been-439j"/>
        <updated>2021-06-19T02:30:54.000Z</updated>
        <summary type="html"><![CDATA[I, sometimes, love being as a researcher. In just a minute or two, my machine, oftentimes, ended up be a mess. Hearing of Fedora thirty-four which has just officially launched, doing a fresh install of the operating system (OS) had been emerging in my mind, all the time. But how could clean installation clean up the mess? Nay, that is not possible! Once I got my hands dirty, everything will not be alright. Consequently, I have thoughts of keeping myself away from messing around for this time.
As many of people in many different communities have mentioned what is new in the thirty-four edition, followed by how-tos when installing Fedora for the first time, or even again, I have nothing more to share. Still and all, it is rather not a bad idea to capture and talk about decisions I have made.‚Ä¶]]></summary>
        <author>
            <name>Naufan Rusyda Faikar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using the `outline` Property as a Collapsable Border]]></title>
        <id>https://css-tricks.com/?p=341511</id>
        <link href="https://css-tricks.com/using-the-outline-property-as-a-collapsable-border/"/>
        <updated>2021-06-18T20:38:59.000Z</updated>
        <summary type="html"><![CDATA[The outline property in CSS draws a line around the outside of an element. This is quite similar to the border property, the main exception being that outline isn‚Äôt a part of the box model. It is often used for ‚Ä¶
The post Using the `outline` Property as a Collapsable Border appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Carter Li</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[TCP vs UDP ‚Äì Which Protocol is Faster?]]></title>
        <id>60b46dbd11ffb70827ef9dea</id>
        <link href="https://www.freecodecamp.org/news/tcp-vs-udp-which-is-faster/"/>
        <updated>2021-06-18T15:45:00.000Z</updated>
        <summary type="html"><![CDATA[What is TCP?TCP is an acronym for Transmission Control Protocol. It is a transport layer protocol that allows packets to be sent from one location to another.  TCP is a connection-oriented protocol, which means it establishes the connection before any communication between the network‚Äôs computer units. Because we]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Machine Learning Specialisation Courses for Advanced ML Practitioners]]></title>
        <id>60cc5a904dc1a607ed7b4c54</id>
        <link href="https://www.freecodecamp.org/news/machine-learning-specialisation-courses-for-advanced-ml-practitioners/"/>
        <updated>2021-06-18T15:43:56.000Z</updated>
        <summary type="html"><![CDATA[Today, you don‚Äôt need to go to a university or a college to pursue a career in machine learning or any data-driven domain. But you do need a plan and a roadmap to guide your studies. Once you have charted your own learning roadmap with a goal in mind,]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Super Responsive UI with Web Workers | Live code | Angular Web Worker Tutorial]]></title>
        <id>https://dev.to/gourav_gunjan/super-responsive-ui-with-web-workers-live-code-angular-web-worker-tutorial-117g</id>
        <link href="https://dev.to/gourav_gunjan/super-responsive-ui-with-web-workers-live-code-angular-web-worker-tutorial-117g"/>
        <updated>2021-06-18T15:20:15.000Z</updated>
        <summary type="html"><![CDATA[Hi All


Hi Guys, I have created the another post in the series where I talk about boosting performance in Angular. I would really appreciate if your one like or comment can help me reach those who require to know about these topics. Happy Coding!]]></summary>
        <author>
            <name>Gourav Gunjan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[An Alternative Voice UI To Voice Assistants]]></title>
        <id>https://smashingmagazine.com/2021/06/alternative-voice-ui-voice-assistants/</id>
        <link href="https://smashingmagazine.com/2021/06/alternative-voice-ui-voice-assistants/"/>
        <updated>2021-06-18T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[Voice assistants are currently the most popular use case for voice user interfaces. However, due to the bad feedback loop resulting from voice assistants can only solve simple user tasks such as setting an alarm or playing music. In order for voice user interfaces to really break through, feedback to the user must be visual, not auditive.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Ottomatias Peura)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Creating Production-Ready Containers -  Advanced Techniques]]></title>
        <id>https://dev.to/wimpress/creating-production-ready-containers-advanced-techniques-4jm3</id>
        <link href="https://dev.to/wimpress/creating-production-ready-containers-advanced-techniques-4jm3"/>
        <updated>2021-06-18T14:00:05.000Z</updated>
        <summary type="html"><![CDATA[Creating production-ready containers for use in commercial-grade apps can be a far cry from the "get started with Node.js and Docker"-type of tutorials that are common around the Internet. Those guides are great for introducing all the advantages of Docker containers in modern cloud-native development, but creating a container that passes muster in a large-scale application in production is a different story. 
For production-ready containers, there are three key things you want to optimise for when creating a container:
Image Size üì¶
Build Speed üê¢
Security üîê
Image size and build speed ensure that your containers can move through CI/CD and test pipelines easily and efficiently. Security is obviously critical in today's software supply chain, and containers have their own set of security i‚Ä¶]]></summary>
        <author>
            <name>Martin Wimpress</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Understanding Sorting Algorithms]]></title>
        <id>60cca3294dc1a607ed7b4c76</id>
        <link href="https://www.freecodecamp.org/news/understanding-sorting-algorithms/"/>
        <updated>2021-06-18T13:56:04.000Z</updated>
        <summary type="html"><![CDATA[Every programming language uses sorting algorithms. While programming languages have easy-to-use sorting methods, it can be helpful to understand how they work. We just released a course on the freeCodeCamp.org YouTube channel that will teach you some of the most popular sorting algorithms! Haris Iftikhar developed this course. Haris]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Links on Typography]]></title>
        <id>https://css-tricks.com/?p=342326</id>
        <link href="https://css-tricks.com/links-on-typography-2/"/>
        <updated>2021-06-18T13:44:17.000Z</updated>
        <summary type="html"><![CDATA[I studied the fonts of the top 1000 websites. Here‚Äôs what I learned. ‚Äî Michael Li brings the data. San-serif has total dominance. ‚Äú[‚Ä¶] it is rare to go below 10px or above 24px.‚Äù And poor <h5> always being the 
‚Ä¶
The post Links on Typography appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Client-Side Routing In Next.js]]></title>
        <id>https://smashingmagazine.com/2021/06/client-side-routing-next-js/</id>
        <link href="https://smashingmagazine.com/2021/06/client-side-routing-next-js/"/>
        <updated>2021-06-18T13:00:00.000Z</updated>
        <summary type="html"><![CDATA[Next.js has a file-based routing system in which each page automatically becomes a route based on its file name. This article will guide you through almost everything you need to know about Routing in Next.js and point you in the direction of related topics and concepts.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Adebiyi Adedotun)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Simple Steps to Convert an ASP.NET Core with Angular App to a Desktop App]]></title>
        <id>https://dev.to/syncfusion/simple-steps-to-convert-an-asp-net-core-with-angular-app-to-a-desktop-app-3029</id>
        <link href="https://dev.to/syncfusion/simple-steps-to-convert-an-asp-net-core-with-angular-app-to-a-desktop-app-3029"/>
        <updated>2021-06-18T11:58:15.000Z</updated>
        <summary type="html"><![CDATA[In this blog, we are going to walk through how to convert an ASP.NET Core with Angular (2 to 9+) web application to a desktop app. We are going to achieve this using Electron.NET  dll build file.
Electron supports building cross-platform desktop applications with web technologies. It utilizes Node.js and the Chromium rendering engine to run a web application on a desktop shell.
Visual Studio
Angular (2 to 9 versions)
Electron Net NuGet package
Please follow these steps to run an Angular application within the ASP.NET Core environment:
Step 1: First, create a new project by choosing the ASP.NET Core Web Application option. Then, click Next.

Step 2: Now, select the Angular template for ASP.NET Core. Then, click Next.
Step 3: Then, provide a name to your project and click Next.
Step 4: Final‚Ä¶]]></summary>
        <author>
            <name>Suresh Mohan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[20 Key Reasons Use MEAN Stack Development for Next Project]]></title>
        <id>https://dev.to/techticsolutioninc/20-key-reasons-use-mean-stack-development-for-next-project-3n6f</id>
        <link href="https://dev.to/techticsolutioninc/20-key-reasons-use-mean-stack-development-for-next-project-3n6f"/>
        <updated>2021-06-18T11:21:37.000Z</updated>
        <summary type="html"><![CDATA[Today in this digital era developing a web application requires a reliable and dependable software stack. Modern-day developers are utilizing a blend of advanced technologies to get swifter and enhanced outcomes through their projects.
Increasing the use of MEAN Stack is one of the primary examples of this scenario. MEAN JS is utilized to craft robust and scalable web applications. Let‚Äôs explore what exactly is Mean Stack and how it can assist your business.
What is the MEAN stack?
Mean stack is the compilation and synergy of technologies applied to build web applications. MEAN is used by several Web App Development Companies, and it precisely stands for ‚ÄúMongoDB Express.js AngularJS Node.js.‚Äù
How does Mean stack architecture work?

The Mean Stack Architecture works in five stages.
Stage 1: Angular as a client-side language is the foremost one to work on the client request.
Stage 2: The client request then goes into NodeJS being the JavaScript server-side language.
Stage 3: ExpressJS is then into the process and makes a database request.
Stage 4: Then MongoDB retrieves the data and sends the response to ExpressJS.
Stage 5: NodeJS returns the data to the AngularJS to showcase the outcomes, and in return, the data is taken back from the ExpressJS.
20 reasons to use MEAN stack for web & mobile app development project
1) Free & open-source stack
If you want to read more about all reasons then visit Why Use MEAN Stack for Web & Mobile App Development Project?]]></summary>
        <author>
            <name>Techtic Solutions, Inc.</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Install Multiple Versions of PHP on Ubuntu?]]></title>
        <id>https://dev.to/magepsycho/how-to-install-multiple-versions-of-php-on-ubuntu-309m</id>
        <link href="https://dev.to/magepsycho/how-to-install-multiple-versions-of-php-on-ubuntu-309m"/>
        <updated>2021-06-18T08:00:55.000Z</updated>
        <summary type="html"><![CDATA[There are many tools like Docker, Vagrant, VirtualBox, etc. that gives you the power to achieve the multiple versions of PHP in your system. But I want to stay away as much as possible from third-party tools and try to leverage the native as much as I can.
So want to learn how to install multiple versions of PHP on the Ubuntu system? Okay, that‚Äôs great.
Let‚Äôs assume, you have
OS: Ubuntu 16.04
PHP: 7.1 (PHP-FPM)
Nginx: 1.10
And want to install PHP 7.2.
Run the following commands to update the PHP repository & the Ubuntu system
sudo apt install software-properties-common
sudo add-apt-repository ppa:ondrej/php
sudo apt update

Now you are able to install the new version of PHP
sudo apt install -y php7.2-fpm
sudo apt install -y php7.2-dev
php -v

If php -v still pointing to the old PHP version‚Ä¶]]></summary>
        <author>
            <name>Raj KB</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular : Add cookie consent in your angular project just in 5 minutes]]></title>
        <id>https://dev.to/rajeshkumaryadavdotcom/angular-add-cookie-consent-in-your-angular-project-just-in-5-minutes-5a3b</id>
        <link href="https://dev.to/rajeshkumaryadavdotcom/angular-add-cookie-consent-in-your-angular-project-just-in-5-minutes-5a3b"/>
        <updated>2021-06-18T05:26:53.000Z</updated>
        <summary type="html"><![CDATA[Open your terminal and run below command -
npm install --save cookieconsent

Now install ngx-cookieconsent via:
npm install --save ngx-cookieconsent

Once installed you need to import the main module app.module.ts:
import {NgcCookieConsentModule} from 'ngx-cookieconsent';

Add this import to imports of @NgModule on the same file app.module.ts
imports: [NgcCookieConsentModule.forRoot(cookieConfig), ...], 

After adding above import in @NgModule your code will look like this-
@NgModule({
  declarations: [AppComponent, ...],
  imports: [NgcCookieConsentModule.forRoot(cookieConfig), ...],  
  bootstrap: [AppComponent]
})

Now add below code in the same file app.module.ts -
CODE:
const cookieConfig:NgcCookieConsentConfig = {
  cookie: {
    domain: 'localhost' // or 'your.domain.com' 
  },
  pa‚Ä¶]]></summary>
        <author>
            <name>RajeshKumarYadav.com</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Routing with Angular 11 Router: Full-Tutorial]]></title>
        <id>https://dev.to/jumamiller/routing-with-angular-11-router-full-tutorial-3j5</id>
        <link href="https://dev.to/jumamiller/routing-with-angular-11-router-full-tutorial-3j5"/>
        <updated>2021-06-18T05:20:08.000Z</updated>
        <summary type="html"><![CDATA[Introduction


This tutorial will walk you through the process of creating your Angular application using Routers. We'll learn the basics of Router outlets, navigations, routes, and paths to generate a complete Angular Single Page Application (SPA).  
For you to be able to follow this tutorial along, it'll be a necessity to have basic knowledge of Angular.
Angular Router is a core part of Angular that aids in building a single-page application. It's located in the @angular/router package.  
It has a complete routing library for constructing multiple route outlets. It also supports several features such as lazy loading and routing guards for access control et cetera.
Routes are objects. At the lowest level, they comprise Angular components and paths, and sometimes redirectTo. This provides ‚Ä¶]]></summary>
        <author>
            <name>Miller Juma</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Making Mock Data for an Angular list view component]]></title>
        <id>https://dev.to/michaelahoffman/making-mock-data-for-an-angular-list-view-component-41op</id>
        <link href="https://dev.to/michaelahoffman/making-mock-data-for-an-angular-list-view-component-41op"/>
        <updated>2021-06-17T23:02:59.000Z</updated>
        <summary type="html"><![CDATA[In this tutorial, I‚Äôm going to start the process of making a prototype using mock data. My goal at the end of the series is to have quickly mocked data for a prototype while binding it to the UI. As a result, the data can be used across the app and there is only one point of maintenance. 
When I‚Äôm done with the series, I will have one data set that I can use to create demo components of my application.
If you are a front-end developer or designer who codes and working without the back-end API for a proof of concept or prototype in the browser, this is for you. In order to complete this tutorial, you‚Äôll need to have a good understanding of HTML. And how to start an Angular application.
The skills in this series allow you to create demo content in your prototype. This is really useful for ot‚Ä¶]]></summary>
        <author>
            <name>Michaela Hoffman</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular on Azure ‚Äî Part I]]></title>
        <id>https://dev.to/ngconf/angular-on-azure-part-i-gng</id>
        <link href="https://dev.to/ngconf/angular-on-azure-part-i-gng"/>
        <updated>2021-06-17T17:23:50.000Z</updated>
        <summary type="html"><![CDATA[Pankaj Parker | ng-conf | May 2019
Using Azure Pipeline
Developers test software in a local environment using servers such as LAMP, WAMP, node, IIS, and Apache. Local deployment is good in terms of fast development and debugging, but we can‚Äôt ship our physical machines to the client in order to access to the application üòÇ. We have to deploy an application to a web server/cloud in order to make it accessible to the end user on their preferred platform (mobile, desktop, etc).
A variety of cloud providers exist in the current market, the most popular being Microsoft Azure, Google Cloud Platform, AWS. These providers offer an unbeatable combination of ease, speed, and automation, so if you have not deployed using such a platform, then this is the article for you! This article focuses on deplo‚Ä¶]]></summary>
        <author>
            <name>ng-conf</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[LightDM Web Greeter updated!]]></title>
        <id>https://dev.to/jezerm/lightdm-web-greeter-updated-50lj</id>
        <link href="https://dev.to/jezerm/lightdm-web-greeter-updated-50lj"/>
        <updated>2021-06-17T17:14:50.000Z</updated>
        <summary type="html"><![CDATA[LightDM is a light display manager for Linux, which have lots of different greeters/themes to choose. One of these greeters is the previously known as lightdm webkit2 greeter, then named lightdm web greeter, a greeter that allows theming with web technologies like HTML and JavaScript.
Sadly, this greeter was abandoned as Antergos team didn‚Äôt have time to develop their distro. The latest version, 2.2.5 uses an outdated WebKit engine, which could cause some new web technologies to not work in the greeter. Also, the Debian package is not working, a shame.
Luckily, Antergos team were developing a 3.0.0 version, getting rid of WebKit and using the QtWebEngine, based on Chromium, with Python. So, I decided to update some things about this greeter based on this pre-release.
Whither is the ‚Äúnew‚Äù tool that 3.0.0 would be using, developed by Antergos, allows to create web applications in a similar way to Electron.js, but in Python.
So, I‚Äôm here to introduce a new pre-release. You can install it from the GitHub Repository. Though, you need to install the whither sdk to run it.
Command line arguments support, such as ‚Äî-help, ‚Äî-theme, ‚Äî-debug and others
Some fixes with the LightDM API, as power functions didn‚Äôt work
Man pages updated
Every local request is made through web-greeter:/ url scheme
WebKit no longer here. Replaced with Chromium
Some API changes. 2.2.5 deprecated functions and globals were removed
If you are using LightDM, I recommend you to use this greeter, try some themes and create your own!
Use the Glorious theme by Manilarome~ It‚Äôs glorious.]]></summary>
        <author>
            <name>Jezer Mej√≠a</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Perfect Tooltips With CSS Clipping and Masking]]></title>
        <id>https://css-tricks.com/?p=341948</id>
        <link href="https://css-tricks.com/perfect-tooltips-with-css-clipping-and-masking/"/>
        <updated>2021-06-17T14:45:57.000Z</updated>
        <summary type="html"><![CDATA[Clipping and masking have been around for a while now in CSS and even have pretty decent browser support. I recently worked on a project that needed to use a clipping technique for tooltips showing above links in text.
Those ‚Ä¶
The post Perfect Tooltips With CSS Clipping and Masking appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Louis Hoebregts</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Start Serving Optimized Images in Vue]]></title>
        <id>https://css-tricks.com/?p=342257</id>
        <link href="https://css-tricks.com/start-serving-optimized-images-in-vue/"/>
        <updated>2021-06-17T14:38:42.000Z</updated>
        <summary type="html"><![CDATA[Images have become extremely important to the effectiveness of websites. They speak a 1000 words, attract attention, and stimulate emotions.
However, web performance is also a growing problem for most websites. And images are at the heart of many web ‚Ä¶
The post Start Serving Optimized Images in Vue appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>ImageEngine</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to make Vim your text editor and customizable IDE]]></title>
        <id>https://dev.to/mrdestructive/how-to-make-vim-your-text-editor-and-customizable-ide-42p4</id>
        <link href="https://dev.to/mrdestructive/how-to-make-vim-your-text-editor-and-customizable-ide-42p4"/>
        <updated>2021-06-17T13:56:41.000Z</updated>
        <summary type="html"><![CDATA[We all are asked to use visual studio code and other rich looking editors as a beginners text editor or an IDE but that makes a habit of a rich and pleasing interface of running and debugging programs, and that is the reason we don't feel good to use command line or the terminal. Terminal or Command line are quite important to learn and are powerful as well.  
Vim is a text editor, not any text editor but a special and one of the fastest out there, if you use it wisely. Vim can be used in the terminal which means it can run terminal commands inside the editor interface. That makes it quite a great option to improve your terminal command skills and also for enhancing your Linux knowledge. You can run program files from vim itself just by a few keystrokes. This text editor is preinstalled in‚Ä¶]]></summary>
        <author>
            <name>Meet Gor</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Your Image Is Probably Not Decorative]]></title>
        <id>https://smashingmagazine.com/2021/06/img-alt-attribute-alternate-description-decorative/</id>
        <link href="https://smashingmagazine.com/2021/06/img-alt-attribute-alternate-description-decorative/"/>
        <updated>2021-06-17T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[Image placement on the modern web is highly intentional, helping to communicate the overall purpose of a page or view. This means that nearly every image you declare needs to have an alternate description.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Eric Bailey)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Is there any way I can change a file header in Linux like how I'd change a file extension in Windows (10).]]></title>
        <id>https://dev.to/baenencalin/is-there-any-way-i-can-change-a-file-header-in-linux-like-how-i-d-change-a-file-extension-in-windows-10-5257</id>
        <link href="https://dev.to/baenencalin/is-there-any-way-i-can-change-a-file-header-in-linux-like-how-i-d-change-a-file-extension-in-windows-10-5257"/>
        <updated>2021-06-17T06:02:03.000Z</updated>
        <summary type="html"><![CDATA[I know in Windows, "file extensions", the part of a file name after the final period in the file name, are more than just part of the file name, they also act as metadata to tell Windows what kind of file the document should be treated as, and what apps to open them in (i.e. what apps are associated with those file types).
However, I want to start moving to Linux (Ubuntu) which I installed on my PC a while back, so, I recently tried making a new file ("extensionless"), and I wanted to make it a different type, so I tested to see if that would work by testing by renaming it .go, so I could try to open it in VSCode like I normally would on WIndows.
I look up multiple searches, involving how to change the file extension (only getting results using command line), and eventually coming over to a horrifying S.O. answer that horrified me, it gave me the info that "extensions" (file types) are determined by header.
There doesn't seem to be any way in the "Files" file manager for Ubuntu to change the header type.

What I want is a program that can give me a simple GUI to edit the file type of a file so I can easily go between one or the other as needed/wanted.
Info:
OS: Ubuntu 20.04.2 LTS
WindowingSystem: X11
GNOME: 3.36.8]]></summary>
        <author>
            <name>Calin Baenen</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Inline Styles as Classes (lol)]]></title>
        <id>https://css-tricks.com/?p=342358</id>
        <link href="https://css-tricks.com/inline-styles-as-classes-lol/"/>
        <updated>2021-06-16T21:11:02.000Z</updated>
        <summary type="html"><![CDATA[If you‚Äôre abhorred by using inline styles, just move that style to the class attribute! And then make sure you have CSS in place that, ya know, does what it says on the box. 
I've revolutionized CSS. pic.twitter.com/1AWCldyCwP
‚Äî Sam 

‚Ä¶
The post Inline Styles as Classes (lol) appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Useful and Useless Code Comments]]></title>
        <id>https://css-tricks.com/?p=342630</id>
        <link href="https://blog.jim-nielsen.com/2021/useful-and-usless-code-comments/"/>
        <updated>2021-06-16T19:08:33.000Z</updated>
        <summary type="html"><![CDATA[Jim Nielsen: 
If somebody says a comment isn‚Äôt adding any value, I would ask: to whom?
Personally, I‚Äôve never liked the advice that writing obvious comments is bad practice‚Äîprobably because I write obvious comments all the time.
Jim showed ‚Ä¶
The post Useful and Useless Code Comments appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How I Used the WAAPI to Build an Animation Library]]></title>
        <id>https://css-tricks.com/?p=342353</id>
        <link href="https://css-tricks.com/how-i-used-the-waapi-to-build-an-animation-library/"/>
        <updated>2021-06-16T14:26:58.000Z</updated>
        <summary type="html"><![CDATA[The Web Animations API lets us construct animations and control their playback with JavaScript. The API opens the browser‚Äôs animation engine to developers and was designed to underlie implementations of both CSS animations and transitions, leaving the door open to ‚Ä¶
The post How I Used the WAAPI to Build an Animation Library appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Okiki Ojo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Complete Guide To Accessibility Tooling]]></title>
        <id>https://smashingmagazine.com/2021/06/complete-guide-accessibility-tooling/</id>
        <link href="https://smashingmagazine.com/2021/06/complete-guide-accessibility-tooling/"/>
        <updated>2021-06-16T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[In a new short series of posts, we highlight some of the useful tools and techniques for developers and designers. Recently we‚Äôve covered HTML Emails and SVG Generators. This time we look into different kinds of tools to help you streamline your accessibility testing process. Don‚Äôt miss the next one.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Nic Chan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Detect Unused Classes in‚Ä¶ HTML]]></title>
        <id>https://css-tricks.com/?p=342198</id>
        <link href="https://css-tricks.com/detect-unused-classes-in-html/"/>
        <updated>2021-06-15T23:24:20.000Z</updated>
        <summary type="html"><![CDATA[Usually, when ‚Äúunused‚Äù comes up in conversation regarding CSS, it‚Äôs about removing chunks of CSS that are not used in your site or, at least, the styles not currently in use on a specific page. The minimal amount of CSS ‚Ä¶
The post Detect Unused Classes in‚Ä¶ HTML appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Media Queries in Times of @container]]></title>
        <id>https://css-tricks.com/?p=342519</id>
        <link href="https://mxb.dev/blog/media-queries-in-times-of-container-queries/"/>
        <updated>2021-06-15T19:51:32.000Z</updated>
        <summary type="html"><![CDATA[Max B√∂ck took me up on my challenge to look through a codebase and see how many of the @media queries could ultimately become @container queries.
I took the bait and had a look at some of my projects ‚Äì 
‚Ä¶
The post Media Queries in Times of @container appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Just How Niche is Headless WordPress?]]></title>
        <id>https://css-tricks.com/?p=342248</id>
        <link href="https://css-tricks.com/just-how-niche-is-headless-wordpress/"/>
        <updated>2021-06-15T14:31:34.000Z</updated>
        <summary type="html"><![CDATA[I wonder where headless WordPress will land. And by ‚Äúheadless‚Äù I mean only using the WordPress admin and building out the user-facing site through the WordPress REST API rather than the traditional WordPress theme structure.
Is it‚Ä¶ big? The future ‚Ä¶
The post Just How Niche is Headless WordPress? appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Spinning Up Multiple WordPress Sites Locally With DevKinsta]]></title>
        <id>https://smashingmagazine.com/2021/06/multiple-wordpress-sites-locally-devkinsta/</id>
        <link href="https://smashingmagazine.com/2021/06/multiple-wordpress-sites-locally-devkinsta/"/>
        <updated>2021-06-15T10:15:00.000Z</updated>
        <summary type="html"><![CDATA[When developing themes and plugins for WordPress, we need to test them in different environments. How can we create multiple testing sites on our computer, quickly and easily, without having to become a sysadmin?]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Leonardo Losoviz)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 39 With Addy Osmani: Image Optimization]]></title>
        <id>https://smashingmagazine.com/2021/06/smashing-podcast-episode-39/</id>
        <link href="https://smashingmagazine.com/2021/06/smashing-podcast-episode-39/"/>
        <updated>2021-06-15T07:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode of the Smashing Podcast, we‚Äôre talking about image optimization. What steps should we follow for performant images in 2021? We talk to expert Addy Osmani to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Making Tables With Sticky Header and Footers Got a Bit Easier]]></title>
        <id>https://css-tricks.com/?p=342294</id>
        <link href="https://css-tricks.com/making-tables-with-sticky-header-and-footers-got-a-bit-easier/"/>
        <updated>2021-06-14T22:04:41.000Z</updated>
        <summary type="html"><![CDATA[It wasn‚Äôt long ago when I looked at sticky headers and footers in HTML <table>s in the blog post A table with both a sticky header and a sticky first¬†column. In it, I never used position: sticky on ‚Ä¶
The post Making Tables With Sticky Header and Footers Got a Bit Easier appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS-Tricks Chronicle XXXX]]></title>
        <id>https://css-tricks.com/?p=342229</id>
        <link href="https://css-tricks.com/css-tricks-chronicle-xxxx/"/>
        <updated>2021-06-14T18:20:17.000Z</updated>
        <summary type="html"><![CDATA[Just a little link roundup of some off-site stuff I‚Äôve done recently. As I‚Äôm wont to do from time to time. 
DevJourney Podcast
#151 Chris Coyier from ceramics to CSS-Tricks and CodePen‚Äò
Chris took us from playing on 
‚Ä¶
The post CSS-Tricks Chronicle XXXX appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Securing Your Website With Subresource Integrity]]></title>
        <id>https://css-tricks.com/?p=342070</id>
        <link href="https://css-tricks.com/securing-your-website-with-subresource-integrity/"/>
        <updated>2021-06-14T13:30:27.000Z</updated>
        <summary type="html"><![CDATA[When you load a file from an external server, you‚Äôre trusting that the content you request is what you expect it to be. Since you don‚Äôt manage the server yourself, you‚Äôre relying on the security of yet another third party ‚Ä¶
The post Securing Your Website With Subresource Integrity appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Khari McMillian</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[When CSS Isn‚Äôt Enough: JavaScript Requirements For Accessible Components]]></title>
        <id>https://smashingmagazine.com/2021/06/css-javascript-requirements-accessible-components/</id>
        <link href="https://smashingmagazine.com/2021/06/css-javascript-requirements-accessible-components/"/>
        <updated>2021-06-14T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[Spoiler alert: tooltips, modals, tabs, carousels, and dropdown menus are some of the user interface components that require more than CSS. To ensure accessibility of your interface, JavaScript is a necessary addition to accomplish focus management, respond to keyboard events, and toggle ARIA attributes.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Stephanie Eckles)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Web Design Done Well: Making Use Of Audio]]></title>
        <id>https://smashingmagazine.com/2021/06/web-design-done-well-audio/</id>
        <link href="https://smashingmagazine.com/2021/06/web-design-done-well-audio/"/>
        <updated>2021-06-11T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[Design often revolves around visuals, but the other senses deserve love too. In this article, we tune in to audio features that are making sites sing.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Frederick O‚ÄôBrien)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Useful Front-End Boilerplates And Starter Kits]]></title>
        <id>https://smashingmagazine.com/2021/06/useful-frontend-boilerplates-starter-kits/</id>
        <link href="https://smashingmagazine.com/2021/06/useful-frontend-boilerplates-starter-kits/"/>
        <updated>2021-06-10T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[We don‚Äôt need to write everything from scratch every single time. With boilerplates and starter kits, we can set up our projects faster, and get to work immediately.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cosima Mielke)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Three Front-End Auditing Tools I Discovered Recently]]></title>
        <id>https://smashingmagazine.com/2021/06/three-frontend-auditing-tools/</id>
        <link href="https://smashingmagazine.com/2021/06/three-frontend-auditing-tools/"/>
        <updated>2021-06-10T11:15:00.000Z</updated>
        <summary type="html"><![CDATA[Building a faster website can be a rocket task these days. There are so many things to consider, so it‚Äôs challenging to get everything right. Here are some less-known tools that might help you get there.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Stefan Judis)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Meet <code>:has</code>, A Native CSS Parent Selector (And More)]]></title>
        <id>https://smashingmagazine.com/2021/06/has-native-css-parent-selector/</id>
        <link href="https://smashingmagazine.com/2021/06/has-native-css-parent-selector/"/>
        <updated>2021-06-09T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[What makes relational selector one of the most requested features and how are we, as developers, working around not having it? In this article, we‚Äôre going to check the early spec of the :has selector, and see how it should improve the CSS workflow once it‚Äôs released.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Adrian Bece)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[From AVIF to WebP: A New Smashing Book By Addy Osmani]]></title>
        <id>https://smashingmagazine.com/2021/06/image-optimization-book-release/</id>
        <link href="https://smashingmagazine.com/2021/06/image-optimization-book-release/"/>
        <updated>2021-06-08T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[It‚Äôs here! For the last year, we‚Äôve been working with Addy Osmani on a new Smashing Book all around image optimization. And now it‚Äôs here. Meet ‚ÄúImage Optimization‚Äù, our deep-dive guide to understand how to deliver high-quality images on the web fast.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Vitaly Friedman)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Build A Geocoding App In Vue.js Using Mapbox]]></title>
        <id>https://smashingmagazine.com/2021/06/building-geocoding-app-vue-mapbox/</id>
        <link href="https://smashingmagazine.com/2021/06/building-geocoding-app-vue-mapbox/"/>
        <updated>2021-06-07T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this guide, we‚Äôll be taking a general look at the concepts of forward geocoding and reverse geocoding, and will build a mini-app that applies these concepts to display specific locations, using Mapbox and Vue.js 2.6.11 to achieve this.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Prince Chukwudire)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Getting Started With Webpack]]></title>
        <id>https://smashingmagazine.com/2021/06/getting-started-webpack/</id>
        <link href="https://smashingmagazine.com/2021/06/getting-started-webpack/"/>
        <updated>2021-06-04T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[Modern browsers provide good support for JavaScript modules, but module bundlers such as webpack stay a critical part of the JavaScript toolchain. Let‚Äôs take a deep dive into what webpack is and how to use it in your development workflow.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Nwani Victory)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Managing Shared State In Vue 3]]></title>
        <id>https://smashingmagazine.com/2021/06/managing-shared-state-vue3/</id>
        <link href="https://smashingmagazine.com/2021/06/managing-shared-state-vue3/"/>
        <updated>2021-06-03T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[Writing large-scale Vue applications can be a challenge. In this article, Shawn Wildermuth dives into the pros and cons of approaches like factories, shared objects, and using Vuex. He also explains what is coming in Vuex 5.0 that might change how we all use shared state in Vue 3.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Shawn Wildermuth)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Fix Cumulative Layout Shift (CLS) Issues]]></title>
        <id>https://smashingmagazine.com/2021/06/how-to-fix-cumulative-layout-shift-issues/</id>
        <link href="https://smashingmagazine.com/2021/06/how-to-fix-cumulative-layout-shift-issues/"/>
        <updated>2021-06-02T12:30:00.000Z</updated>
        <summary type="html"><![CDATA[Google‚Äôs Core Web Vitals initiative has taken the SEO and Web Performance worlds by storm and many sites are busy optimizing their Page Experience to maximize the ranking factor. The Cumulative Layout Shift metric is causing trouble to a lot of sites, so let‚Äôs have a look at ways of addressing any issues for that metric.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Barry Pollard)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Improving The Performance Of An Online Store (Case Study)]]></title>
        <id>https://smashingmagazine.com/2021/06/front-end-performance-online-store-jewellerybox/</id>
        <link href="https://smashingmagazine.com/2021/06/front-end-performance-online-store-jewellerybox/"/>
        <updated>2021-06-02T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[Getting a good performance score from Google is hard for any website ‚Äî but doing so for an online store is even harder. We achieved green scores ‚Äî even several for mobile. Here is how we did it.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Jennifer Brehm)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 38 With Ivan Akulov: Why Is My React App Slow?]]></title>
        <id>https://smashingmagazine.com/2021/06/smashing-podcast-episode-38/</id>
        <link href="https://smashingmagazine.com/2021/06/smashing-podcast-episode-38/"/>
        <updated>2021-06-01T14:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode, we‚Äôre talking about React performance. What factors slow our React apps down, and how can we fix it? Drew McLellan talks to expert Ivan Akulov to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Setting Up A Currency Convertor With ExchangeRatesApi.io]]></title>
        <id>https://smashingmagazine.com/2021/06/currency-convertor-exchangeratesapi/</id>
        <link href="https://smashingmagazine.com/2021/06/currency-convertor-exchangeratesapi/"/>
        <updated>2021-06-01T09:00:00.000Z</updated>
        <summary type="html"><![CDATA[Amazon allows visitors to display prices in their own currency. Thanks to *ExchangeRatesApi.io*, we can do the same for our online shops, providing a better experience to our customers. Let‚Äôs find out how.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Leonardo Losoviz)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.10.2]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.10.2</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.10.2"/>
        <updated>2021-06-01T04:39:30.000Z</updated>
        <summary type="html"><![CDATA[Added: testing and CI/CD workflows]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Happy June Vibes For Your Screen (2021 Desktop Wallpapers Edition)]]></title>
        <id>https://smashingmagazine.com/2021/05/desktop-wallpaper-calendars-june-2021/</id>
        <link href="https://smashingmagazine.com/2021/05/desktop-wallpaper-calendars-june-2021/"/>
        <updated>2021-05-31T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[What could be a better way to welcome June than with some colorful inspiration? Well, we might have something for you: wallpapers created with love by artists and designers from across the globe.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cosima Mielke)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Adding A Commenting System To A WYSIWYG Editor]]></title>
        <id>https://smashingmagazine.com/2021/05/commenting-system-wysiwyg-editor/</id>
        <link href="https://smashingmagazine.com/2021/05/commenting-system-wysiwyg-editor/"/>
        <updated>2021-05-28T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this article, we‚Äôll be re-using the foundational WYSIWYG Editor built in the first article to build a commenting system for a WYSIWYG Editor that enables users to select text inside a document and share their comments on it. Let‚Äôs dig in!]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Shalabh Vyas)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Useful VS Code Extensions For Front-End Developers]]></title>
        <id>https://smashingmagazine.com/2021/05/useful-vs-code-extensions-web-developers/</id>
        <link href="https://smashingmagazine.com/2021/05/useful-vs-code-extensions-web-developers/"/>
        <updated>2021-05-27T13:30:00.000Z</updated>
        <summary type="html"><![CDATA[Meet useful Visual Studio Code extensions for web developers: little helpers to minimize slow-downs and frustrations, and boost developer‚Äôs workflow along the way. With auto log messages, auto code formatting, file utils, file labels, code snippets, highlight brackets, tags, indents and workspaces, onboarding and remote SSH.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cosima Mielke)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Build And Launch Powerful Responsive Websites With Editor X]]></title>
        <id>https://smashingmagazine.com/2021/05/build-launch-responsive-websites-editorx/</id>
        <link href="https://smashingmagazine.com/2021/05/build-launch-responsive-websites-editorx/"/>
        <updated>2021-05-27T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[While web builders have been around for a long time, it wasn‚Äôt until recently that they became practical for professional use. Closing the gap between design and code has become the north star for many companies and we are seeing a wave of tools that deliver on this promise.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Miroslav Bekyarov)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Accessible SVGs: Perfect Patterns For Screen Reader Users]]></title>
        <id>https://smashingmagazine.com/2021/05/accessible-svg-patterns-comparison/</id>
        <link href="https://smashingmagazine.com/2021/05/accessible-svg-patterns-comparison/"/>
        <updated>2021-05-26T13:20:00.000Z</updated>
        <summary type="html"><![CDATA[Discover which SVG patterns we should avoid and which patterns are the most inclusive when comparing different combinations of OSs, browsers, and screen readers.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Carie Fisher)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.9.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.9.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.9.0"/>
        <updated>2021-05-26T06:02:55.000Z</updated>
        <summary type="html"><![CDATA[Added: experimental support for iTunes podcast feed: Demo | Source. With this new release, you can render an audio control to play the mp3 file and display iTunes episode duration. It is "experimental" due to these caveats:

This feature is currently only available through custom template.
iTunes has no strict format requirement for duration. The unit is most likely seconds but can be "hh:mm:ss" or "mm:ss" for some sources. A future version may expose a human readable string to the template.
No image support yet. Some shows might have disabled CORS or use a relative URL for image, which forces osmosfeed to download the image during build. A future version may support it.
You can't republish the podcast in the feed output. Supporting this goes beyond the scope of the project at the moment.
Fixed: the articles in template data were not sorted.
Thank you @Zenigata]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Guide To Undoing Mistakes With Git (Part 2)]]></title>
        <id>https://smashingmagazine.com/2021/05/undoing-mistakes-git-part2/</id>
        <link href="https://smashingmagazine.com/2021/05/undoing-mistakes-git-part2/"/>
        <updated>2021-05-25T14:00:00.000Z</updated>
        <summary type="html"><![CDATA[Mistakes. These cruel villains do not even stop at the beautiful world of software development. But although we cannot avoid making mistakes, we can learn to undo them! This post will show the right tools for your daily work with Git.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Tobias G√ºnther)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A New Way To Reduce Font Loading Impact: CSS Font Descriptors]]></title>
        <id>https://smashingmagazine.com/2021/05/reduce-font-loading-impact-css-descriptors/</id>
        <link href="https://smashingmagazine.com/2021/05/reduce-font-loading-impact-css-descriptors/"/>
        <updated>2021-05-25T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[Web fonts are often terrible for web performance and none of the font loading strategies are particularly effective to address that. Upcoming font options may finally deliver on the promise of making it easier to align fallback fonts to the final fonts.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Barry Pollard)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS Container Queries: Use-Cases And Migration Strategies]]></title>
        <id>https://smashingmagazine.com/2021/05/css-container-queries-use-cases-migration-strategies/</id>
        <link href="https://smashingmagazine.com/2021/05/css-container-queries-use-cases-migration-strategies/"/>
        <updated>2021-05-24T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[CSS Container queries bring media queries closer to the target elements themselves and enables them to adapt to virtually any given container or layout. In this article, we‚Äôre going to cover CSS container query basics and how to use them today with progressive enhancement or polyfills.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Adrian Bece)</name>
        </author>
    </entry>
</feed>
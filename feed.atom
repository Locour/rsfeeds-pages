<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2021-06-05T01:26:26.353Z</id>
    <title>osmos::feed</title>
    <updated>2021-06-05T01:26:26.353Z</updated>
    <generator>osmosfeed 1.10.2</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[Subir Proyecto de Angular a IIS]]></title>
        <id>https://dev.to/dannymeza24/subir-proyecto-de-angular-a-iis-3p4p</id>
        <link href="https://dev.to/dannymeza24/subir-proyecto-de-angular-a-iis-3p4p"/>
        <updated>2021-06-05T00:17:37.000Z</updated>
        <summary type="html"><![CDATA[Preparar entorno para el deploy






  
  
  Instalar URL Rewrite:


URL Rewrite

Aparecerá la siguiente pantalla:

Coloca el nombre del sitio
La ruta donde se almacenarán los archivos de la publicación del proyecto
Y por último, el puerto. Y "Aceptar"

Saldrá la siguiente pantalla

Colocas el Alias
La ruta de acceso al directorio donde irán los archivos de la publicación del proyecto.
Por último, "Aceptar"
Deberás ver tu sitio y tu aplicación:

Si ya se realizó la instalación del URL Rewrite. Deberá verse la opción dentro del Administrador IIS:

Ahora el entorno está listo.
Dentro del directorio src debe crear un archivo web.config Que resolverá las rutas de la APP. 
web.config
<configuration>
  <system.webServer>
    <rewrite>
      <rules>
      <clear /> <!-- Imperative Step, otherwis…]]></summary>
        <author>
            <name>Daniel Mezagini</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Node.js: using non-local dependencies inside native ES modules]]></title>
        <id>https://dev.to/vonheikemen/node-js-using-non-local-dependencies-inside-native-es-modules-2hdh</id>
        <link href="https://dev.to/vonheikemen/node-js-using-non-local-dependencies-inside-native-es-modules-2hdh"/>
        <updated>2021-06-04T22:54:06.000Z</updated>
        <summary type="html"><![CDATA[If you were using only CommonJS syntax you would "solve" this by using the NODE_PATH environment variable, but that won't work with native ES modules. The good news is that we can still achieve our goal. The somewhat bad news is that you won't be using the beloved import keyword. What I will show you now is how you can make your own require function that works with native ES modules.
Before I begin let me just say I do not encourage using non-local dependencies in "production apps", or libraries or really anything that is meant to be deployed on a remote server. The use case I have for this is focused more on creating scripts for personal use.
With that out the way, lets go back to what's important.
Did you know there is a module called module? Yeah, and it has everything we need. 
Node ha…]]></summary>
        <author>
            <name>Heiker</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Search and Filter Components in React]]></title>
        <id>60b3480c11ffb70827ef9a88</id>
        <link href="https://www.freecodecamp.org/news/search-and-filter-component-in-reactjs/"/>
        <updated>2021-06-04T21:34:33.000Z</updated>
        <summary type="html"><![CDATA[If you're building a React app, you want your users to be able to search and get exact results. And if you are getting tons of items from an API, then you need to create a way for users to be able to find various items easily.]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Machine Learning in Python – The Top New Scikit-Learn 0.24 Features You Should Know]]></title>
        <id>60ba33d7acb62507dd1d9050</id>
        <link href="https://www.freecodecamp.org/news/machine-learning-python-new-scikit-learn-features-you-should-know/"/>
        <updated>2021-06-04T20:58:07.000Z</updated>
        <summary type="html"><![CDATA[Scikit-learn is one of the most popular open-source and free machine learning libraries for Python.  The scikit-learn library contains a lot of efficient tools for machine learning and statistical modeling including classification, regression, clustering, and dimensionality reduction. Many data scientists, machine learning engineers, and researchers rely on this library for]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Recover from Deployment Hell – What I Learned After My Discord Bot Crashed on a 1000+ User Server]]></title>
        <id>60b8f5c7acb62507dd1d8500</id>
        <link href="https://www.freecodecamp.org/news/recovering-from-deployment-hell-what-i-learned-from-deploying-my-discord-bot-to-a-1000-user-server/"/>
        <updated>2021-06-04T20:41:29.000Z</updated>
        <summary type="html"><![CDATA[I deployed a Discord bot to a 1000+ user server. In the first hour, Deployment Hell struck and my bot crashed. In the next hour, I brought it back, surviving and even thriving in Deployment Hell. In this post, I'll show you how.]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Principles for user-centered front-end development]]></title>
        <id>https://css-tricks.com/?p=341793</id>
        <link href="https://colinoakley.medium.com/the-web-we-choose-to-build-e921510e3f1b"/>
        <updated>2021-06-04T20:36:46.000Z</updated>
        <summary type="html"><![CDATA[Colin Oakley:
• Accessible — Use semantic HTML, and make sure we meet the WCAG 2.1 AA standard as a minimum and it works with assisted technologies (this sits alongside the DWP Accessibility Manual)
• Agnostic — Build 
…
The post Principles for user-centered front-end development appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Generate PDF of HTML Element in Browser]]></title>
        <id>https://dev.to/bibekkakati/generate-pdf-of-html-element-in-browser-lg9</id>
        <link href="https://dev.to/bibekkakati/generate-pdf-of-html-element-in-browser-lg9"/>
        <updated>2021-06-04T20:20:32.000Z</updated>
        <summary type="html"><![CDATA[Hello everyone👋
In this article, we are going to see how we can generate a PDF of any HTML element in the browser i.e, entirely client-side.
We will use the package html2pdf to generate the PDF.
html2pdf is using html2canvas to convert the HTML element to canvas and then into an image. Then it generates the PDF of the image with the help of jsPDF.
If you want to know more about html2canvas, check out this article.
Let us see a small implementation of the package html2pdf.
A basic HTML page, where the package's bundle link is included.
Created a div block of simple content and a export PDF button. We will be generating a PDF of the div whose id is view on clicking the export PDF button.
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatibl…]]></summary>
        <author>
            <name>Bibek</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How do you create (and remember) master passwords?]]></title>
        <id>https://dev.to/patarapolw/how-do-you-create-and-remember-master-passwords-1em0</id>
        <link href="https://dev.to/patarapolw/how-do-you-create-and-remember-master-passwords-1em0"/>
        <updated>2021-06-04T20:14:18.000Z</updated>
        <summary type="html"><![CDATA[I fear to even think of creating a new master password / PIN (without relying on variation play).
I mean, practically.
Passphrase?
How many words?
I don't speak English, so which language? Non-ASCII scripts? Keyboard-layout-based? (Typing non-ASCII on QWERTY)
Does it need punctuations? How do you add them? How many?
Non-passphrase?
Next is, how long would it take to memorize it without tools / helpers? What helpers did you use?
Lastly, how many masters do you have? How closely they are related?
Related, also. How about numerical PINs?]]></summary>
        <author>
            <name>Pacharapol Withayasakpunt</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Faking UX Race Conditions using a simple Interceptor in Angular or NestJs]]></title>
        <id>https://dev.to/elandyg/faking-ux-race-conditions-using-a-simple-interceptor-in-angular-or-nestjs-51m3</id>
        <link href="https://dev.to/elandyg/faking-ux-race-conditions-using-a-simple-interceptor-in-angular-or-nestjs-51m3"/>
        <updated>2021-06-04T20:05:15.000Z</updated>
        <summary type="html"><![CDATA[see it in action - StackBlitz
Race conditions are easy to understand: your expected result depends on multiple events happening at the same time, just like a high-five depends on 2 people slapping hands at the same exact time and place. If one person is out of sync, the other may get a high-five to the face 🤦‍♂️. Boom! Race conditions explained!

In this article, we are going to talk about UX Race Conditions and using a simple interceptor to exaggerate delays from the API that you can see if you are giving your users the best experience possible.
In the classic sense, race conditions can cause bugs and unintended manipulation of your data. @vsavkin
 shows us an example of how a user can trigger a new request before the last request had finished, causing unintended data to be used.
But let…]]></summary>
        <author>
            <name>ElAndyG</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Bundling and Distributing Next.js Sites via NPM]]></title>
        <id>https://dev.to/grouparoo/bundling-and-distributing-next-js-sites-via-npm-b6m</id>
        <link href="https://dev.to/grouparoo/bundling-and-distributing-next-js-sites-via-npm-b6m"/>
        <updated>2021-06-04T19:54:16.000Z</updated>
        <summary type="html"><![CDATA[Grouparoo uses Next.js to build our web frontend(s), and we distribute these frontend User Interfaces (UIs) via NPM as packages, e.g. @grouparoo/ui-community. This allows Grouparoo users to choose which UI they want to use (or none) by changing their package.json:
Example package.json for a Grouparoo project:
{
  "author": "Your Name <email@example.com>",
  "name": "grouparoo-application",
  "description": "A Grouparoo Deployment",
  "version": "0.0.1",
  "dependencies": {
    "@grouparoo/core": "0.3.3",
    "@grouparoo/postgres": "0.3.3",
    "@grouparoo/mailchimp": "0.3.3",
    "@grouparoo/ui-community": "0.3.3" // <-- Choose UI Package to install
  },
  "scripts": {
    "start": "cd node_modules/@grouparoo/core && ./bin/start"
  },
  "grouparoo": {
    "plugins": [
      "@grouparoo/pos…]]></summary>
        <author>
            <name>Evan Tahler</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Bundling and Distributing Next.js Sites via NPM]]></title>
        <id>https://dev.to/grouparoo/bundling-and-distributing-next-js-sites-via-npm-b6m</id>
        <link href="https://dev.to/grouparoo/bundling-and-distributing-next-js-sites-via-npm-b6m"/>
        <updated>2021-06-04T19:54:16.000Z</updated>
        <summary type="html"><![CDATA[Grouparoo uses Next.js to build our web frontend(s), and we distribute these frontend User Interfaces (UIs) via NPM as packages, e.g. @grouparoo/ui-community. This allows Grouparoo users to choose which UI they want to use (or none) by changing their package.json:
Example package.json for a Grouparoo project:
{
  "author": "Your Name <email@example.com>",
  "name": "grouparoo-application",
  "description": "A Grouparoo Deployment",
  "version": "0.0.1",
  "dependencies": {
    "@grouparoo/core": "0.3.3",
    "@grouparoo/postgres": "0.3.3",
    "@grouparoo/mailchimp": "0.3.3",
    "@grouparoo/ui-community": "0.3.3" // <-- Choose UI Package to install
  },
  "scripts": {
    "start": "cd node_modules/@grouparoo/core && ./bin/start"
  },
  "grouparoo": {
    "plugins": [
      "@grouparoo/pos…]]></summary>
        <author>
            <name>Evan Tahler</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Your nested Angular form may be better off with implementing ControlValueAccessor]]></title>
        <id>https://dev.to/ozanogreden/your-nested-angular-form-may-be-better-off-with-implementing-controlvalueaccessor-1kh9</id>
        <link href="https://dev.to/ozanogreden/your-nested-angular-form-may-be-better-off-with-implementing-controlvalueaccessor-1kh9"/>
        <updated>2021-06-04T19:46:22.000Z</updated>
        <summary type="html"><![CDATA[This post has but one message for Angular users: Your nested form implementation may be better off with a ControlValueAccessor.
I am not the first one to do this. Also see this post by @julianobrasil
. Nevertheless a disclaimer and a request: I've had about four weeks of professional Angular development experience, apply healthy skepticism with abundance. I'm writing to clarify my understanding, and give something to the community. If you think the claim is preposterous, reach out!
Now, let's get you convinced by building up a minimally realistic example.
Suppose we have a form that used to input how many customers we can accept in a given day. Initially, the form is very simple. There is one integer input field per day. The only validation requirement is that the capacity can't be smaller…]]></summary>
        <author>
            <name>Ozan Öğreden</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[An interactive combined Highcharts on Angular]]></title>
        <id>https://dev.to/priyasipxy/an-interactive-combined-highcharts-on-angular-2j80</id>
        <link href="https://dev.to/priyasipxy/an-interactive-combined-highcharts-on-angular-2j80"/>
        <updated>2021-06-04T19:18:17.000Z</updated>
        <summary type="html"><![CDATA[Hope this article will help you ... please add your claps. https://priyashisingh1.medium.com/an-interactive-combined-highcharts-on-angular-6e1e0ba99062]]></summary>
        <author>
            <name>priyashi pixy</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[An interactive combined Highcharts on Angular]]></title>
        <id>https://dev.to/priyasipxy/an-interactive-combined-highcharts-on-angular-2j80</id>
        <link href="https://dev.to/priyasipxy/an-interactive-combined-highcharts-on-angular-2j80"/>
        <updated>2021-06-04T19:18:17.000Z</updated>
        <summary type="html"><![CDATA[Hope this article will help you ... please add your claps. https://priyashisingh1.medium.com/an-interactive-combined-highcharts-on-angular-6e1e0ba99062]]></summary>
        <author>
            <name>priyashi pixy</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Try NodeJS Server On Your Android Phone or Android Tablet.]]></title>
        <id>https://dev.to/kevinmmansour/setting-up-a-nodejs-web-server-on-your-android-phone-or-android-tablet-1jpo</id>
        <link href="https://dev.to/kevinmmansour/setting-up-a-nodejs-web-server-on-your-android-phone-or-android-tablet-1jpo"/>
        <updated>2021-06-04T19:14:27.000Z</updated>
        <summary type="html"><![CDATA[In this article, I will detail how to setup your first NodeJS web server setup on your device and connect to a web page locally. It won't take longer than 10 minutes.
Step 1:
Go to the Google Play Store then install Dory (Dory is NodeJS Web Server)

Hit the install button and await the app to finish downloading and installing.
Step 2:
Locate the app on your device and launch it.
As the app launches you will see a notification at the bottom, informing you of both Node and NPM installing.
After this, another notification will inform you that they have been installed Server successfully.
Next, the NodeJS server will boot automatically, you can see this in the notification center.
Step 3:
Time to write some code and serve our first page!
Find the + icon at the bottom right of the app and tap it.
Then, tap the ‘Eval Script’ button.
Delete out the console.log('hello world'); code.
Add the following code block to the file as example:




const http = require('http');

let app = http.createServer((req, res) => {  
    // Set a response type of plain text for the response
    res.writeHead(200, {'Content-Type': 'text/plain'});

    // Send back a response and end the connection
    res.end('NodeJS Server Online!');
});

// Start the server on port 3000
app.listen(3000, 'localhost');

Step 4:
Go to the top right settings menu and use the "save as" feature, save it as server.js es example in your documents folder.
Navigate back to the home panel and make sure that the widget for the file is present and secondly make sure the ‘Start’ button is greyed out, meaning its active.
If not, you can hit the + button, add file, and open the file from your documents folder.
Now you can open up your favorite browser, and navigate to http://localhost:3000. Then, Congratulations you have installed &  launched Node JS Web Server in your Android Phone or on your Android Tablet.
Hope you learned something new.]]></summary>
        <author>
            <name>Kevin M. Mansour</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[NodeSecure - The future]]></title>
        <id>https://dev.to/fraxken/nodesecure-the-future-1f9c</id>
        <link href="https://dev.to/fraxken/nodesecure-the-future-1f9c"/>
        <updated>2021-06-04T19:10:44.000Z</updated>
        <summary type="html"><![CDATA[Hello 👋
Today I'm writing to tell you about the future of NodeSecure 👀.
I have not been very active in the last few months because of my job which has taken up a lot of my time. But I'm back 😊.
Moving forward and updating the project has become much more complicated 😵. So it was time to announce and make major changes.
NodeSecure is not only one tool anymore. The project is now a set of tools and packages that need to be maintained and extended. The project has also gained contributors on its way and many developers pushed me to go even further 🚀.
That's why I decided to gather these different projects in the same github organization (and same for npm with @nodesecure). It will also be easier to integrate new collaborators into the project.
The URL to our new home: https://github.com/…]]></summary>
        <author>
            <name>Gentilhomme</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[NodeSecure - The future]]></title>
        <id>https://dev.to/fraxken/nodesecure-the-future-1f9c</id>
        <link href="https://dev.to/fraxken/nodesecure-the-future-1f9c"/>
        <updated>2021-06-04T19:10:44.000Z</updated>
        <summary type="html"><![CDATA[Hello 👋
Today I'm writing to tell you about the future of NodeSecure 👀.
I have not been very active in the last few months because of my job which has taken up a lot of my time. But I'm back 😊.
Moving forward and updating the project has become much more complicated 😵. So it was time to announce and make major changes.
NodeSecure is not only one tool anymore. The project is now a set of tools and packages that need to be maintained and extended. The project has also gained contributors on its way and many developers pushed me to go even further 🚀.
That's why I decided to gather these different projects in the same github organization (and same for npm with @nodesecure). It will also be easier to integrate new collaborators into the project.
The URL to our new home: https://github.com/…]]></summary>
        <author>
            <name>Gentilhomme</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Security news weekly round-up - 4th June 2021]]></title>
        <id>https://dev.to/ziizium/security-news-weekly-round-up-4th-june-2021-1inm</id>
        <link href="https://dev.to/ziizium/security-news-weekly-round-up-4th-june-2021-1inm"/>
        <updated>2021-06-04T18:43:31.000Z</updated>
        <summary type="html"><![CDATA[Oh! Yeah, I made it this week!
This week security review is mostly about research in computer security.
It was fun reading and curating these links, and I know you'll have fun reading them.
Researchers Warn of Facefish Backdoor Spreading Linux Rootkits


Who does not use Linux? No one. You might be thinking: I use a Mac or I use a PC, well, I'll take it you go online every day (like right now) and do you know the operating system running the server software of your favorite website? There is 90% chance that it is Linux.
This is a solid reason for you to read this article. But to aid you, here is an excerpt from the article with the key take-away in bold:
Facefish goes through a multi-stage infection process, which commences with a command injection against CWP to retrieve a dropper ("sshin…]]></summary>
        <author>
            <name>Habdul Hazeez</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Exhaustive pattern matching in TypeScript]]></title>
        <id>https://dev.to/hansjhoffman/exhaustive-pattern-matching-in-typescript-36oa</id>
        <link href="https://dev.to/hansjhoffman/exhaustive-pattern-matching-in-typescript-36oa"/>
        <updated>2021-06-04T18:32:48.000Z</updated>
        <summary type="html"><![CDATA[The switch statements does not enforce exhaustive pattern matching (objective), the syntax is incredibly ugly (subjective) and is a poorly designed language feature (arguably objective). Thankfully, we can eliminate the shortcomings of the switch statement and improve the quality of our code using pattern matching instead.
There is a TC39 Stage 1 pattern matching proposal for the curious types here.
Say you have a string literal union type:
type Icon = "chart" | "file-check" | "paper-plane" | "users";

and you want to conditionally render the appropriate icon so your first approach is the old trusted switch statement:
const renderIcon = (icon: Icon): JSX.Element => {
  switch (icon) {
    case "chart":
      return <ChartIcon />;
    case "file-check":
      return <FileCheckIcon />;
    c…]]></summary>
        <author>
            <name>Hans Hoffman</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Magento Security: 5 Tips To Enhance Your Online Store Security]]></title>
        <id>https://dev.to/imvtank/magento-security-5-tips-to-enhance-your-online-store-security-22p0</id>
        <link href="https://dev.to/imvtank/magento-security-5-tips-to-enhance-your-online-store-security-22p0"/>
        <updated>2021-06-04T18:07:02.000Z</updated>
        <summary type="html"><![CDATA[The Covid-19 pandemic has caused a drastic change in the lifestyle and habits of consumers. Spending more time indoors whether due to necessity or not has driven more consumers towards online shopping. E-commerce is taking over the market at a shocking rate. The e-commerce market penetration rate more than doubled during the first quarter of 2020, a feat that could have taken 10 years[1] if not for the Covid-19 outbreak. Out of those hundreds of thousands of e-commerce websites, Magento is the chosen CMS platform for almost 10%. Big brands like Nike, Coca Cola or Ford are good ambassadors for this content management system.
In comparison to other popular eCommerce platforms like WooCommerce or Shopify, Magento offers a strong advantage with its built-in security features. 
Magento 2 offers…]]></summary>
        <author>
            <name>Vivek Tank</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Magento Security: 5 Tips To Enhance Your Online Store Security]]></title>
        <id>https://dev.to/imvtank/magento-security-5-tips-to-enhance-your-online-store-security-22p0</id>
        <link href="https://dev.to/imvtank/magento-security-5-tips-to-enhance-your-online-store-security-22p0"/>
        <updated>2021-06-04T18:07:02.000Z</updated>
        <summary type="html"><![CDATA[The Covid-19 pandemic has caused a drastic change in the lifestyle and habits of consumers. Spending more time indoors whether due to necessity or not has driven more consumers towards online shopping. E-commerce is taking over the market at a shocking rate. The e-commerce market penetration rate more than doubled during the first quarter of 2020, a feat that could have taken 10 years[1] if not for the Covid-19 outbreak. Out of those hundreds of thousands of e-commerce websites, Magento is the chosen CMS platform for almost 10%. Big brands like Nike, Coca Cola or Ford are good ambassadors for this content management system.
In comparison to other popular eCommerce platforms like WooCommerce or Shopify, Magento offers a strong advantage with its built-in security features. 
Magento 2 offers…]]></summary>
        <author>
            <name>Vivek Tank</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learn TypeScript Basics in this Beginner&#x27;s Guide]]></title>
        <id>60b2a4c611ffb70827ef9842</id>
        <link href="https://www.freecodecamp.org/news/learn-typescript-basics/"/>
        <updated>2021-06-04T18:01:00.000Z</updated>
        <summary type="html"><![CDATA[TypeScript has taken the development world by storm. No wonder it has over 15 million weekly downloads on npm. But what is TypeScript, and what do you need to know about it?  In this article, I am going answer those questions. By the end you'll have a grasp of the]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Node.js API Authentication with JWT (Json Web Token) - Auth Middleware]]></title>
        <id>https://dev.to/jahangeer/node-js-api-authentication-with-jwt-json-web-token-auth-middleware-ggm</id>
        <link href="https://dev.to/jahangeer/node-js-api-authentication-with-jwt-json-web-token-auth-middleware-ggm"/>
        <updated>2021-06-04T17:59:20.000Z</updated>
        <summary type="html"><![CDATA[Hi, Today we are going to implement API authentication with JWT in node.js application. Authentication is most important feature in every application. Even if you are beginner feel free to try this tutorial, we gonna start from scratch. We also gonna write Auth middleware, which allow only authenticated people to access the route.
For better understanding watch Demo Video
Source Code
Let's Start Coding...
App Overview :
Project Structure




Methods
Urls
Actions




POST
/api/users
Create user


POST
/api/auth
Authenticate user


GET
/api/users/me
Get authenticated user details



Create Node.js App and Install dependencies
$    mkdir node-auth-jwt
$    cd node-auth-jwt
$    npm init --yes
$    npm install express mongoose jsonwebtoken bcrypt joi dotenv

express : Express is minimal and fl…]]></summary>
        <author>
            <name>Jahangeer</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Influences and Nature of the Language]]></title>
        <id>https://dev.to/soyluiscorona_/influences-and-nature-of-the-language-4hjd</id>
        <link href="https://dev.to/soyluiscorona_/influences-and-nature-of-the-language-4hjd"/>
        <updated>2021-06-04T17:52:19.000Z</updated>
        <summary type="html"><![CDATA[JavaScript’s creator, Brendan Eich, had no choice but to create the language very quickly (or other, worse technologies would have been adopted by Netscape). He borrowed from several programming languages: Java (syntax, primitive values versus objects),
JavaScript did not have exception handling until ECMAScript 3, which explains why the language so often automatically converts values and so often fails silently: it initially couldn’t throw exceptions.
On one hand, JavaScript has quirks and is missing quite a bit of functionality (blockscoped variables, modules, support for subclassing, etc.). On the other hand, it has several powerful features that allow you to work around these problems. In other languages, you learn language features. In JavaScript, you often learn patterns instead. Given its influences, it is no surprise that JavaScript enables a programming style that is a mixture of functional programming (higher-order functions; built-in map, reduce, etc.) and object-oriented programming (objects, inheritance).]]></summary>
        <author>
            <name>ImPisces 𠮷 🕉️</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Run Multi-container apps with Docker  Compose]]></title>
        <id>https://dev.to/chauntelkellar/run-multi-container-apps-with-docker-compose-2mbd</id>
        <link href="https://dev.to/chauntelkellar/run-multi-container-apps-with-docker-compose-2mbd"/>
        <updated>2021-06-04T17:52:16.000Z</updated>
        <summary type="html"><![CDATA[Containerization of apps is a fast-growing practice as many companies are embracing the cloud and DevOps concepts. Docker packages an application, libraries, and its dependencies in a virtual container that can run on any server. Being that most applications do not run on one single component (even dinosaur apps 🦖 have frontend and backend components), we need a way to define and manage multi-container apps.
In this tutorial I will utilize Docker compose to get a blog up and running that consists of a Ghost Blog service and a MYSQL service; both services will use volumes for persistent storage. This tutorial assumes you have working knowledge of Docker and a server with Docker and Docker compose installed.

Compose is a file format for describing distributed Docker apps, and it’s a tool for managing them.
Ghost is a free and open source blogging platform written in Javascript.
1. SSH into the server and become root
ssh <username>@PUBLIC_IP_ADDRESS
sudo su -
Step 2 — Create a Ghost Blog and MySQL service
2. Create a docker-compose.yml file in the root directory
vi docker-compose.yml
Add the following contents
version: '3'
services:
  ghost:
    image: ghost:1-alpine
    container_name: ghost-blog
    restart: always
    ports:
      - 80:2368
    environment:
      database__client: mysql
      database__connection__host: mysql
      database__connection__user: root
      database__connection__password: P4sSw0rd0!
      database__connection__database: ghost
    volumes:
      - ghost-volume:/var/lib/ghost
    depends_on:
      - mysql

  mysql:
    image: mysql:5.7
    container_name: ghost-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: P4sSw0rd0!
    volumes:
      - mysql-volume:/var/lib/mysql

volumes:
  ghost-volume:
  mysql-volume:

3. docker-compose up -d
Congrats your blog is up and running! Validate via the public IP address of your Docker server.

Connect with me on Twitter @toutfinesse]]></summary>
        <author>
            <name>Chauntel Kellar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Run Multi-container apps with Docker  Compose]]></title>
        <id>https://dev.to/chauntelkellar/run-multi-container-apps-with-docker-compose-2mbd</id>
        <link href="https://dev.to/chauntelkellar/run-multi-container-apps-with-docker-compose-2mbd"/>
        <updated>2021-06-04T17:52:16.000Z</updated>
        <summary type="html"><![CDATA[Containerization of apps is a fast-growing practice as many companies are embracing the cloud and DevOps concepts. Docker packages an application, libraries, and its dependencies in a virtual container that can run on any server. Being that most applications do not run on one single component (even dinosaur apps 🦖 have frontend and backend components), we need a way to define and manage multi-container apps.
In this tutorial I will utilize Docker compose to get a blog up and running that consists of a Ghost Blog service and a MYSQL service; both services will use volumes for persistent storage. This tutorial assumes you have working knowledge of Docker and a server with Docker and Docker compose installed.

Compose is a file format for describing distributed Docker apps, and it’s a tool for managing them.
Ghost is a free and open source blogging platform written in Javascript.
1. SSH into the server and become root
ssh <username>@PUBLIC_IP_ADDRESS
sudo su -
Step 2 — Create a Ghost Blog and MySQL service
2. Create a docker-compose.yml file in the root directory
vi docker-compose.yml
Add the following contents
version: '3'
services:
  ghost:
    image: ghost:1-alpine
    container_name: ghost-blog
    restart: always
    ports:
      - 80:2368
    environment:
      database__client: mysql
      database__connection__host: mysql
      database__connection__user: root
      database__connection__password: P4sSw0rd0!
      database__connection__database: ghost
    volumes:
      - ghost-volume:/var/lib/ghost
    depends_on:
      - mysql

  mysql:
    image: mysql:5.7
    container_name: ghost-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: P4sSw0rd0!
    volumes:
      - mysql-volume:/var/lib/mysql

volumes:
  ghost-volume:
  mysql-volume:

3. docker-compose up -d
Congrats your blog is up and running! Validate via the public IP address of your Docker server.

Connect with me on Twitter @toutfinesse]]></summary>
        <author>
            <name>Chauntel Kellar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Deploying Scalable Java Microservices to Enterprise Kubernetes using Red Hat OpenShift]]></title>
        <id>https://dev.to/drnugent/deploying-scalable-java-microservices-to-enterprise-kubernetes-using-red-hat-openshift-546b</id>
        <link href="https://dev.to/drnugent/deploying-scalable-java-microservices-to-enterprise-kubernetes-using-red-hat-openshift-546b"/>
        <updated>2021-06-04T16:47:38.000Z</updated>
        <summary type="html"><![CDATA[Three of the fastest-growing architectural and deployment models in software today are microservices, Kubernetes and hybrid cloud. In this lab, we'll walk through building a hybrid cloud microservice application using Java and Open Liberty, deploying that application to a Kubernetes cluster running Red Hat OpenShift. We'll do this using free (!) and trial resources on IBM Cloud.
ℹ️ This lab uses parts of the Open Liberty OpenShift Operators Lab, but consolidated and updated with the latest syntax and lab versions.
In order to get your free cluster assigned, you'll need to 
Sign Up for IBM Cloud
ℹ️ Issues activating your account? Make sure to check your spam folder for the activation email, and if your free email account doesn't work, try another email address, e.g. your work email. For som…]]></summary>
        <author>
            <name>Dave Nugent 🌉</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[X.509 Certificate Creation Made Easy with CertsGenerator (Open Source)]]></title>
        <id>https://dev.to/t1m0t/x-509-certificate-creation-made-easy-with-certsgenerator-open-source-34ki</id>
        <link href="https://dev.to/t1m0t/x-509-certificate-creation-made-easy-with-certsgenerator-open-source-34ki"/>
        <updated>2021-06-04T16:40:49.000Z</updated>
        <summary type="html"><![CDATA[Generating certificates for your company or for development purpose can be challenging and a lot of solutions exist to provide easy setup and management of your certificates.
Eventually you also have CertsGenerator which does it in a very simple but nevertheless efficient manner: just create a json file with the appropriate configuration and let the application generate the certificates for you!
This application uses pyca under the hood , which is one of the main library for the Python language that manages x.509 certificates along with the cryptographic materials. As you may know, x.509 uses these materials to work with certificates and pyca handles under the hood all you need to safely do the job.
CertsGenerator acts as an interface between pyca, and the JSON configuration file in order to generate x.509 certificates:

this. Other examples are in these testing configuration files but you can adapt it depending on your needs.
Thank you for reading this article and feel free to contribute to this project.
Cheers]]></summary>
        <author>
            <name>Timothée</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Union Type Merging in Typescript]]></title>
        <id>https://dev.to/lucianbc/union-type-merging-in-typescript-9al</id>
        <link href="https://dev.to/lucianbc/union-type-merging-in-typescript-9al"/>
        <updated>2021-06-04T16:15:15.000Z</updated>
        <summary type="html"><![CDATA[Typescript unions can be very useful in a lot of cases. They can be used to implement algebraic data types when having a discriminator key. Without such a discriminator, they can be quite limiting. This guide describes merging an object union - another pattern that can be used to enhance type union usability.
TL;DR; This article shows you how to merge a type union (of objects) into a single object type. Find all the steps in the typescript playground here.
Suppose we have the following types:
type t1 = {
  a: string;
  b: number;
  e?: string;
};

type t2 = {
  a: string;
  c: number;
  e?: string;
};

type t3 = {
  a: number;
  d: string;
  b: string;
  e: string;
};

type ts = t1 | t2 | t3;

We want to process these types and end up with something like this:
type t = {
  a: string | numb…]]></summary>
        <author>
            <name>Lucian Boaca</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Implementing social sharing in a Create React App (a hack 🤓)]]></title>
        <id>https://dev.to/cezar/implementing-social-sharing-in-a-create-react-app-a-hack-10og</id>
        <link href="https://dev.to/cezar/implementing-social-sharing-in-a-create-react-app-a-hack-10og"/>
        <updated>2021-06-04T16:03:20.000Z</updated>
        <summary type="html"><![CDATA[I recently started to learn React and decided to go practical by building a site called Make.rs - a place where makers show what they are working on - and which, in essence, is a Create React App powered by an API developed in NodeJS. I soon realized that social sharing is something almost impossible to do due to technical limitations: CRA executes the Javascript on the client side hence the social crawlers cannot read the updated meta tags.  Even if Helmet works well for SEO purposes, as search engine crawlers are able to execute Javascript, this is not the case for social crawlers (Twitter, Facebook, LinkedIn..) yet.
I came up with a solution that works wonders and wanted to share with you, in case you face the same problem.  I see it more as a hack, due to the way it is implemented, non…]]></summary>
        <author>
            <name>Cezar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[TCP/IP (Transmission Control Protocol/Internet Protocol)]]></title>
        <id>https://dev.to/mahmoudessa/tcp-ip-transmission-control-protocol-internet-protocol-4hik</id>
        <link href="https://dev.to/mahmoudessa/tcp-ip-transmission-control-protocol-internet-protocol-4hik"/>
        <updated>2021-06-04T15:55:00.000Z</updated>
        <summary type="html"><![CDATA[What is TCP/IP? 
TCP/IP is a suite of communication protocols that are used to connect devices and transfer data over the Internet.
TCP/IP can also be used as a communications protocol in a private computer network (an intranet or extra net).
TCP/IP uses:
TCP:
Defines how applications create communication channels.
Manages when a message is broken down to be transmitted.
IP addresses: 
An IP address identifies the location of a computer on a network.
Defines how to address and route packets for delivery.
Ports: 
A port is a location on the recipient computer, where data is received.
While an IP address tells you where to find a particular computer, 
It doesn't tell you specifically where on that computer a particular connection should be made—that's what port numbers are for.
Some port num…]]></summary>
        <author>
            <name>Mahmoud EL-karuony</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Can I :has()]]></title>
        <id>https://css-tricks.com/?p=341968</id>
        <link href="https://bkardell.com/blog/canihas.html"/>
        <updated>2021-06-04T14:37:59.000Z</updated>
        <summary type="html"><![CDATA[I just joked that we’re basically getting everything we want in CSS super fast (mostly referring to container queries, my gosh, can you imagine they are actually coming?). Now we might actually get parent selectors?! As in .parent:has(.child) { …
The post Can I :has() appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript Quick Tip: The Nullish Coalescing Operator]]></title>
        <id>https://dev.to/oliverjumpertz/javascript-quick-tip-the-nullish-coalescing-operator-1b8e</id>
        <link href="https://dev.to/oliverjumpertz/javascript-quick-tip-the-nullish-coalescing-operator-1b8e"/>
        <updated>2021-06-04T13:53:31.000Z</updated>
        <summary type="html"><![CDATA[Have you ever written code like this?
const result = a || b;

It works pretty well until it doesn't.
Using the logical OR to get a value or a fallback works 90% of the time you use it. But the other 10% are actually when you hit falsy values, which might otherwise be perfectly valid.
One point you can usually see such code at is the beginning of functions that don't use default parameters, like seen here:
const myFunction = (parameter) => {
  const cleanedParameter = parameter || 'a default value';
// ... more code ...
}

If you call it like this:
myFunction();

or like this:
myFunction(null);

it works perfectly fine.
But what if the following call was actually a valid one?
myFunction('');

Well, the empty string is a falsy value and will thus be replaced with the default value. And this is where you hit the 10% where the logical OR doesn't help you anymore.
The nullish coalescing operator works nearly identical to the logical OR, but it only reacts to null and undefined. Instead of two pipes, you place two question marks, and it looks like below:
const result = a ?? b;

If you now replace the logical OR in your function with the nullish coalescing operator like this:
const myFunction = (parameter) => {
  const cleanedParameter = parameter ?? 'a default value';
// ... more code ...
}

making the same call with the empty string as before:
myFunction('');

will lead to the empty string being treated as a valid value again.
No matter what falsy value you pass from now on, be it the empty string, the number 0, or else, only null and undefined will be treated.
If you like visual content more, or if you want to store it for later, I put all this into one single image for you. I hope you like it!

If you would love to read even more content like this, feel free to visit me on Twitter or LinkedIn.
I'd love to count you as my ever-growing group of awesome friends!]]></summary>
        <author>
            <name>Oliver Jumpertz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[if... then... elif.. else - Adventures in WSL2 Scripting #1]]></title>
        <id>https://dev.to/iainrough/if-then-elif-else-adventures-in-wsl2-scripting-1-3do1</id>
        <link href="https://dev.to/iainrough/if-then-elif-else-adventures-in-wsl2-scripting-1-3do1"/>
        <updated>2021-06-04T13:22:48.000Z</updated>
        <summary type="html"><![CDATA[First up some basics
WSL2 with ubuntu 20.04
A lot of the logic in the scripts I write rely on bash's if.. then.. else. The basic syntax of the statement is as follows:
 
    if [ {statement} {operator} {value} ]
[...] tells bash to evaluate the command and return 0 or 1 for the conditional expression inside the square brackets.
tldr; ensure things evaluate correctly.
> is used to redirect the output of a command somewhere.
   dev@Dark-Matter:~$ cp file1 file2
   cp: cannot stat 'file1': No such file or directory
   dev@Dark-Matter:~$ cp file1 file2 >&- 2>&-
   dev@Dark-Matter:~$

$? returns the success of the previous command, 0 for success and >= 1 for failure. Lets look at the previous example and see what the output is.
   dev@Dark-Matter:~$ cp file1 file2 >&- 2>&-
   dev@Dark-Matter:~$ echo $?
   1

   #!/bin/bash
   cp file1 file2 >&- 2>&-
   if ["$?" = "1" ]
   then
      touch file1
      cp file1 file2
   else
     echo "File copied to file 2" 
   fi


#!/bin/bash
# Check we have a parameter

if [ "$1" = "" ]
then
   echo "syntax: old {filename}"
fi

# Copy the file as .old
newFileName="$1.old"
echo $newFileName
cp $1 $newFileName >&- 2>&-

if [ "$?" = "0" ]
then
      echo "File has aged and has had '.old' appended to it"
      exit 0
else
     echo "File has not been born yet or you do not have parental rights to the file."
     exit 1
fi




Simple example.]]></summary>
        <author>
            <name>iainrough</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Top 11 AngularJS Tools You Need To Know In 2021]]></title>
        <id>https://dev.to/ltdsolace/top-11-angularjs-tools-you-need-to-know-in-2021-3409</id>
        <link href="https://dev.to/ltdsolace/top-11-angularjs-tools-you-need-to-know-in-2021-3409"/>
        <updated>2021-06-04T13:20:44.000Z</updated>
        <summary type="html"><![CDATA[AngularJS is the most preferred framework for web developers to design a web app dynamically. It allows you to use HTML as a template language and spread HTML’s syntax to clearly show app components. Developers always search for the best ways to work fast and deliver the project within estimated time. Here comes the AngularJS tools in focus to increase your speed and also improve quality code. Hence we came with the best tools for app developers. Whether you are an angular developer or thinking of using Angular for your next project, knowing these Angularjs tools will help you to develop and deliver the best angular app. Let us see which are those tools.
Also know the amazing new features of Angular 12 at- What’s New In Angular 12?
1. Webstorm-
Features-
Great customization features to match your coding style.
Intelligent ide
Git support
Coding assistance for various Java Script languages, CSS, HTML, and Node.Js
Highly efficient debugging, testing, tracing, and profiling features
Can run ESLint, JSCS, TSLint, Stylelint, JSHint or JSLint also
Pros-
In-built spell checker to avoid silly mistakes
Facilitates cohesive work without need for scrolling
Intelligent code completion support with both word expansion and structural completion
This is one of the best testing frameworks for AngularJS development that provides a perfect testing environment allowing you to test the app on real browsers and real devices like tablets and phones. Karma is used for various testing like unit testing, E2E testing and midway testing. Gitlab, Typeform, Appian are some of the organizations that are using Karma tool
Features-
Offers test coding in various real browsers
Very easy to integrate with Travis, Jenkins and Semaphore
Open-source community at GitHub
Remote Control
Testing Framework Agnostic
Open Source
Easy Debugging
Continuous Integration
Pros-
Know more at- [https://solaceinfotech.com/blog/top-11-angularjs-tools-you-need-to-know/]]]></summary>
        <author>
            <name>Solace Infotech Pvt. Ltd.</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Scaling Keycloak on Distroless into Kubernetes]]></title>
        <id>https://dev.to/stack-labs/scaling-keycloak-on-distroless-into-kubernetes-fj3</id>
        <link href="https://dev.to/stack-labs/scaling-keycloak-on-distroless-into-kubernetes-fj3"/>
        <updated>2021-06-04T11:40:28.000Z</updated>
        <summary type="html"><![CDATA[In the two previous articles, we discovered how to build and run Keycloak with a Distroless base image in a Kubernetes cluster. The previously seen configuration was Ok for one instance, but the clustering capabilities of Keycloak was not used, which can cause some problems. 

Keycloak has a built-in clustering mode, based on Wildfly & Infinispan. To activate it, some start-up scripts are using environment values to set up everything for you… and of course, those scripts are bash based, not compatible with our version of Keycloak. Here, we will see how to configure this and deploy it to Kubernetes
standalone-ha.xml extraction


We will use the same strategy seen before to generate the standalone-ha.xml, by running the official image with parameters we want to use and extract the file with …]]></summary>
        <author>
            <name>Λ\: Davin Kevin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[About MTLS]]></title>
        <id>https://dev.to/arturbarreto/about-mtls-58c6</id>
        <link href="https://dev.to/arturbarreto/about-mtls-58c6"/>
        <updated>2021-06-04T11:30:59.000Z</updated>
        <summary type="html"><![CDATA[Em Tradução direta é só uma autenticação mútua, logo as duas partes se autenticam. Mas antes de entender o Mtls, você tem que entender o TLS, ele é a "segurança da camada de transporte", após isso fica mais fácil de entender o que é o MTLS.

O TLS é um padrão que segue o RFC 2246, na verdade com a mudança das versões ele mudou de RFC, mas a RFC 8446 é a mais recente. 
Uma observação, quem publica todos os RFCs, seja do jwt, jwe, TLS, e afins, é a IETF | Internet Engineering Task Force (https://www.ietf.org/). Mas voltando... 
O TLS, ele usa criptográfia simétrica, em palavras simplórias, a criptográfia simétrica, são ambos os lados compartilhando o mesmo segredo, e iso torna ela menos segura, se for compara a criptografia chave pública/privada. Porém, você ganha mais velocidade ao usar o modo simétrico, sabemos que existe esse grande impace VELOCIDADE x SEGURANÇA.
 Por que não se utiliza chave assimétrica durante toda a comunicação?
Este tipo de criptografia é muito custoso em termos computacionais, devido à quantidade de operações que são realizadas.
Algoritmos mais famosos usados no TLS

Benchmarks dos Algoritmos:

E o intuito do TLS, é substituir o SSL, já que  ele se tornou mais eficaz no quesito proteção de acesso a sites.
Benchmarks com o TLS ativado e TLS desativado 

O TLS possui três subprotocolos que permitem às partes chegarem a um acordo sobre os parâmetros de segurança que serão utilizados na camada de registro para autenticação, comunicação e para reportar condições de erro entre as partes.
O sistema é tão forte quanto mais forte for o mais fraco algoritmo de troca de chaves e autenticação suportado pelo TLS, e somente algoritmos de criptografia dignos de confiança dever ser usados. Chaves curtas só devem ser usadas se o valor do dado vale menos que o esforço necessário para decriptá-lo.]]></summary>
        <author>
            <name>Artur Barreto</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Develop Reliable Ecwid API Integration]]></title>
        <id>https://dev.to/natalia27070051/how-to-develop-reliable-ecwid-api-integration-154b</id>
        <link href="https://dev.to/natalia27070051/how-to-develop-reliable-ecwid-api-integration-154b"/>
        <updated>2021-06-04T11:07:45.000Z</updated>
        <summary type="html"><![CDATA[In 2021, eCommerce software providers offering solutions such as warehouse, shipping, order and inventory management, price optimization, or marketing automation need to stay ahead of the competition more than ever. The easiest way to do this is to connect to the Ecwid API.
If you are such a company, an Ecwid API allows you to connect your platform to hundreds of thousands of e-stores using Ecwid and get access to all the valuable data available on this platform related to orders, customers, shipments, prices, taxes, etc. To retrieve this data, you need to perform a smooth integration with this shopping cart solution.
In this post, we will dive deeper into the details of the integration process with Ecwid and show you how to make the most of an Ecwid integration and how to properly work wi…]]></summary>
        <author>
            <name>Natalia API2Cart</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Microservices Service Catalogue? (or why I built the Slate)]]></title>
        <id>https://dev.to/mcvicar/a-microservices-service-catalogue-or-why-i-built-the-slate-56bm</id>
        <link href="https://dev.to/mcvicar/a-microservices-service-catalogue-or-why-i-built-the-slate-56bm"/>
        <updated>2021-06-04T10:48:45.000Z</updated>
        <summary type="html"><![CDATA[About six months ago, I saw a great talk by Nora Jones’ called “Rethinking chaos engineering” — I was inspired, not so much by the chaos engineering, but by something else.
You see, I’d seen these pattern in a bunch of different organisations;
Pattern 1:
Pattern 2:
So I spent a few nights pulling together a Proof-of-Concept called Spectacle.
My solution was to create a dashboard that would capture, displaying and communicate service’s SLIs, SLOs, SLAs, their dependancies and align the service closer to business priorities.
I saw the purpose of the concept as a way of facilitating a conversation between teams about the importance of a service within a microservice estate.
I got some lovely feedback from a few folks, made a few tweaks and moved on.
I had started playing around my next PoC — …]]></summary>
        <author>
            <name>Pete</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[I Created Responsive Blog Website Using React, NodeJS, and MongoDB]]></title>
        <id>https://dev.to/mjmaurya/i-created-responsive-blog-website-using-react-nodejs-and-mongodb-5bh0</id>
        <link href="https://dev.to/mjmaurya/i-created-responsive-blog-website-using-react-nodejs-and-mongodb-5bh0"/>
        <updated>2021-06-04T10:05:16.000Z</updated>
        <summary type="html"><![CDATA[I written many blog on different Website. But now I created a Blog Website using React, NodeJS, and MongoDB.
I created Frontend of Website using React, Created API using NodeJS, and used MongoDB Atlas for storing blog data and Articles.
In this website the is functionality to filter articles using tag name. 

Live Demo
I Deployed it on Heroku.
How is the Website?
And
Please Let me Know if any change I need to do.]]></summary>
        <author>
            <name>Manoj Kumar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why Every Rental Business Needs A Scheduling API]]></title>
        <id>https://dev.to/spurwing/why-every-rental-business-needs-a-scheduling-api-4da3</id>
        <link href="https://dev.to/spurwing/why-every-rental-business-needs-a-scheduling-api-4da3"/>
        <updated>2021-06-04T10:03:04.000Z</updated>
        <summary type="html"><![CDATA[If you own a rental business and want to reduce the time spent making appointments and trying to avoid scheduling conflicts, you need to look into getting a scheduling API. It not only makes life easier, but it also can save you unnecessary costs and resources you really can’t afford to lose.  
Scheduling APIs for rental companies are the perfect solution for any size project or business. It works behind the scenes to make sure that your calendar is operating at maximum efficiency and prevents you from booking reservations over top of an existing order. 
In fact, this type of API is so efficient even a brand new employee could handle making your appointments without making mistakes. It’s really that simple to use! 

There are plenty of benefits when it comes to using a scheduling API. For …]]></summary>
        <author>
            <name>Spurwing</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Getting Started With Webpack]]></title>
        <id>https://smashingmagazine.com/2021/06/getting-started-webpack/</id>
        <link href="https://smashingmagazine.com/2021/06/getting-started-webpack/"/>
        <updated>2021-06-04T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[Modern browsers provide good support for JavaScript modules, but module bundlers such as webpack stay a critical part of the JavaScript toolchain. Let’s take a deep dive into what webpack is and how to use it in your development workflow.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Nwani Victory)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux Backdoors and Where to Find Them]]></title>
        <id>https://dev.to/fahmifj/linux-backdoors-and-where-to-find-them-32jn</id>
        <link href="https://dev.to/fahmifj/linux-backdoors-and-where-to-find-them-32jn"/>
        <updated>2021-06-04T09:58:05.000Z</updated>
        <summary type="html"><![CDATA[Backdoors, what is it?


But wait, what exactly is a backdoor?
Well, I'm not going to go into as much detail as Wikipedia, but here's:
A backdoor is a hidden piece of code, script, or a program that is placed on a system for persistence purposes, with that you don’t have to exploit the same system twice. It simply gives you quicker and instant access to the system.
Now that we know what a backdoor is, it’s time to find out where attackers typically hide them in a Linux system. I’ll be using the Pinky’s Palace machine from VulnHub and let’s pretend it has been compromised by attackers.
When the attackers insert their public keys into one of the user's or root's authorized_keys file, it can be considered as a backdoor.
For example, below is the exploitation steps to gain root access on the t…]]></summary>
        <author>
            <name>mikun</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux Backdoors and Where to Find Them]]></title>
        <id>https://dev.to/fahmifj/linux-backdoors-and-where-to-find-them-32jn</id>
        <link href="https://dev.to/fahmifj/linux-backdoors-and-where-to-find-them-32jn"/>
        <updated>2021-06-04T09:58:05.000Z</updated>
        <summary type="html"><![CDATA[Backdoors, what is it?


But wait, what exactly is a backdoor?
Well, I'm not going to go into as much detail as Wikipedia, but here's:
A backdoor is a hidden piece of code, script, or a program that is placed on a system for persistence purposes, with that you don’t have to exploit the same system twice. It simply gives you quicker and instant access to the system.
Now that we know what a backdoor is, it’s time to find out where attackers typically hide them in a Linux system. I’ll be using the Pinky’s Palace machine from VulnHub and let’s pretend it has been compromised by attackers.
When the attackers insert their public keys into one of the user's or root's authorized_keys file, it can be considered as a backdoor.
For example, below is the exploitation steps to gain root access on the t…]]></summary>
        <author>
            <name>mikun</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Strongly Typed Google Analytics V4 with Nextjs]]></title>
        <id>https://dev.to/asross311/strongly-typed-google-analytics-v4-with-nextjs-4g13</id>
        <link href="https://dev.to/asross311/strongly-typed-google-analytics-v4-with-nextjs-4g13"/>
        <updated>2021-06-04T09:21:15.000Z</updated>
        <summary type="html"><![CDATA[There are a number of articles out there describing various methods of configuring google analytics with next.js -- all written with untyped JavaScript. This article aims to remedy the absence of a strongly typed reference. The official next.js example serves as a good reference, yet, it too lacks strong types as it is written with JavaScript.
@types/gtag.js as a dev dependency


Open your terminal and run
yarn add -D @types/gtag.js

We will not be needing the vanilla (non-typed) gtag.js package, the react-ga package, or any other package for that matter. This is where declaration (**/*.d.ts) files really shine! Before getting started, navigate to your tsconfig.json file and ensure that the include flag specifies the **/*.d.ts glob pattern
"include": ["**/*.d.ts", "**/*.ts", "**/*.tsx", "*…]]></summary>
        <author>
            <name>Andrew Ross</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Configuring S3 bucket with lambda function, lambda function with SQS]]></title>
        <id>https://dev.to/nisargsatani/configuring-s3-bucket-with-lambda-function-lambda-function-with-sqs-1m86</id>
        <link href="https://dev.to/nisargsatani/configuring-s3-bucket-with-lambda-function-lambda-function-with-sqs-1m86"/>
        <updated>2021-06-04T09:13:01.000Z</updated>
        <summary type="html"><![CDATA[Hola Developers, Cloud Enthusiasts!!
The most important reason to write this is to help others, because this is not available anywhere if you find it.
In my first summer internship we are working on a Document management system designed using serverless architecture. In this project I was assigned this task of sending notifications of S3 bucket to SQS using a lambda function.
So let's get started.
Step1: First make a bucket no need to do anything else in that just simply make a bucket with standard storage.
Step2: Now go to Lambda function in services, and click on create a function. Following picture will make you understand.

Step 3: Create a lambda function by clicking on Create a function button.
Step 4: It will show you the following page

In this select Author from scratch than move …]]></summary>
        <author>
            <name>Nisarg-Satani</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Install Dotnet Core on Ubuntu]]></title>
        <id>https://dev.to/hostnextra/how-to-install-dotnet-core-on-ubuntu-3icf</id>
        <link href="https://dev.to/hostnextra/how-to-install-dotnet-core-on-ubuntu-3icf"/>
        <updated>2021-06-04T09:02:40.000Z</updated>
        <summary type="html"><![CDATA[In this article, we'll explain how to install Dotnet Core on Ubuntu.
.NET Core is a free, cross-platform, open-source developer platform for building many different types of applications. Software developers often need to use the Dotnet core framework on the Linux system to test, run, and build the packages.
The notion of using Dotnet on Linux comes true through the new Dotnet core, which is an API based modular system of Microsoft’s Dotnet framework. But the Dotnet core doesn’t act as a single API; it functions as a shared or public library of API and codes.
Prerequisites
An Ubuntu installed system.
A root user access of normal user with administrative privileges.
Install Dotnet Core on Ubuntu
Step 1: Download and Install MS Prob on Ubuntu
Now, we will download and install the Microsoft p…]]></summary>
        <author>
            <name>HostnExtra Technologies</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Get Network Security Strategies ($27.99 Value) for free]]></title>
        <id>https://dev.to/kd/get-network-security-strategies-27-99-value-for-free-95f</id>
        <link href="https://dev.to/kd/get-network-security-strategies-27-99-value-for-free-95f"/>
        <updated>2021-06-04T08:05:06.000Z</updated>
        <summary type="html"><![CDATA[With advanced cyber attacks severely impacting industry giants and the constantly evolving threat landscape, organizations are adopting complex systems to maintain robust and secure environments.
You’ll understand how to identify security vulnerabilities across the network and how to effectively use a variety of network security techniques and platforms. Next, the book will show you how to design a robust network that provides top-notch Read more.
https://go.kd.ms/r2GPRd]]></summary>
        <author>
            <name>Karthik D</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Creating a web-app without a database]]></title>
        <id>https://dev.to/bacloud14/creating-a-web-app-without-a-database-2nk6</id>
        <link href="https://dev.to/bacloud14/creating-a-web-app-without-a-database-2nk6"/>
        <updated>2021-06-04T08:00:56.000Z</updated>
        <summary type="html"><![CDATA[Hello everybody!
Before diving in, I would like to point I am not a web developer and far from being keen on any modern rapid development framework. So, no React, Vue, Bootstrap, GraphQL in my CV!!
Still I am just a developer learning and always choosing the easiest path and the most efficient (in general less libraries means more performant, in general).
Enough mumbling! 
Listings is like the listing paper in a newspaper, It is 100% people's voice, like announces, readers articles, donations, etc.
Operations are not yet asynchronous, I would like to re-implement all of them as a next step.
First, the last consistent flat file (DB) is loaded into memory in a single global array, and all user operations (API) call the back-end API which are function either 
Doing very simple logic (filter t…]]></summary>
        <author>
            <name>bacloud14</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Automate Prettier in a pre-commit hook]]></title>
        <id>https://dev.to/le_humch/automate-prettier-in-a-pre-commit-hook-3b1f</id>
        <link href="https://dev.to/le_humch/automate-prettier-in-a-pre-commit-hook-3b1f"/>
        <updated>2021-06-04T06:53:57.000Z</updated>
        <summary type="html"><![CDATA[Prettier is a wonderful tool. It  works in many editors and supports many languages.
But opinionated code formatter is his best feature and the first reason to use it.
When you begin with a new team, the first pain is define the style guide for the project. More the language is permissive, harder is the debate.
With Prettier, debate is closed, because most of the decisions are taken. He has few options, so it's easy to configure. All you need is a json file named .prettierrc.json.
That's mine, for example :
{
  "useTabs": false,
  "printWidth": 90,
  "tabWidth": 2,
  "singleQuote": true,
  "jsxBracketSameLine": false
}

If you use Visual Studio Code, add the Prettier extension and enable format on save feature. Each time you save a file, Prettier will run and autoformat. It's convenient.
If you don't know what is a pre-commit or a post-commit, they're scripts which execute during the workflow of a commit with git.
All you need is define a precommit file like this one.
#!/bin/sh
FILES=$(git diff --cached --name-only --diff-filter=ACMR "*.js" "*.ts" "*.tsx" "*.scss" | sed 's| |\\ |g')
[ -z "$FILES" ] && exit 0

# Prettify all selected files
echo "$FILES" | xargs ./node_modules/.bin/prettier --write

# Add back the modified/prettified files to staging
echo "$FILES" | xargs git add

exit 0

This file is for a TypeScript project with SCSS, so you can update file extensions to fit yours.
It's run Prettier and add updated files to staging.
And a post commit to update index.
#!/bin/sh

git update-index -g

Create a .githooks folder at the root of your project and put a pre-commit and  post-commit files inside with the content above.
The last commands to type is to tell git the folder of hooks and make them executable. Execute them in your terminal.
git config core.hooksPath .githooks
chmod +x .githooks/*

This post is short but it's everything you need to work with Prettier.
Another tools exists to create hooks, like Husky.
Follow me on Twitter]]></summary>
        <author>
            <name>Fabien Schlegel</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Infrastructure as Code with Terraform, Azure DevOps, Azure, Github, Docker and .Net 5]]></title>
        <id>https://dev.to/moe23/infrastructure-as-code-with-terraform-azure-devops-azure-github-docker-and-net-5-3304</id>
        <link href="https://dev.to/moe23/infrastructure-as-code-with-terraform-azure-devops-azure-github-docker-and-net-5-3304"/>
        <updated>2021-06-04T06:28:33.000Z</updated>
        <summary type="html"><![CDATA[In this article we will be going through IaC with terraform and Azure DevOps. 
So what we will cover today:  
A brief history tour
Divide and Conquer Concepts
What is IaC
Benefits
The Process
Ingredients
Code and Implementations
You can watch the full video on Youtube
In todays development environment we hear a lot the words provisioning, configurations, deployments, pipelines, orchestration, automation...
But what are they? how do they work? how do they complete each other?
Let us see how deployment used and still being sometimes done.
In the past before automation when we built our applications, the deployment process was as follow:
find the right server
setting up the server and configure them
configure the network
install all of the dependencies
configure the dependencies
configure fir…]]></summary>
        <author>
            <name>Mohamad Lawand</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Eval is evil - Why we should not use eval in JavaScript]]></title>
        <id>https://dev.to/amitkhonde/eval-is-evil-why-we-should-not-use-eval-in-javascript-1lbh</id>
        <link href="https://dev.to/amitkhonde/eval-is-evil-why-we-should-not-use-eval-in-javascript-1lbh"/>
        <updated>2021-06-04T05:14:08.000Z</updated>
        <summary type="html"><![CDATA[Eval is evil. - Some frustrated JavaScript engineer
I recently read this quote on the internet and although it is funny, it got me thinking why would someone say this? Thus this post. In this post, we will see why we should not use eval in JavaScript.
To understand why to avoid eval, we first need to understand what eval is. We are not going deep into what eval is and why it exists. We will see its definition and a simple example. If you want to learn more about eval, here is a great post on MDN.
The eval() function evaluates JavaScript code represented as a string.
Eval is a function in JavaScript that expects a string as a parameter and executes that string as code. If you pass an expression to it, it will execute that expression. If you pass multiple JavaScript statements to it, it will…]]></summary>
        <author>
            <name>Amit Khonde</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Eval is evil - Why we should not use eval in JavaScript]]></title>
        <id>https://dev.to/amitkhonde/eval-is-evil-why-we-should-not-use-eval-in-javascript-1lbh</id>
        <link href="https://dev.to/amitkhonde/eval-is-evil-why-we-should-not-use-eval-in-javascript-1lbh"/>
        <updated>2021-06-04T05:14:08.000Z</updated>
        <summary type="html"><![CDATA[Eval is evil. - Some frustrated JavaScript engineer
I recently read this quote on the internet and although it is funny, it got me thinking why would someone say this? Thus this post. In this post, we will see why we should not use eval in JavaScript.
To understand why to avoid eval, we first need to understand what eval is. We are not going deep into what eval is and why it exists. We will see its definition and a simple example. If you want to learn more about eval, here is a great post on MDN.
The eval() function evaluates JavaScript code represented as a string.
Eval is a function in JavaScript that expects a string as a parameter and executes that string as code. If you pass an expression to it, it will execute that expression. If you pass multiple JavaScript statements to it, it will…]]></summary>
        <author>
            <name>Amit Khonde</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Git Graft: A NPX Tool & Git Hook in TypeScript & Node]]></title>
        <id>https://dev.to/jacobmgevans/git-graft-a-npx-tool-git-hook-in-typescript-node-14am</id>
        <link href="https://dev.to/jacobmgevans/git-graft-a-npx-tool-git-hook-in-typescript-node-14am"/>
        <updated>2021-06-04T02:38:20.000Z</updated>
        <summary type="html"><![CDATA[Introduction


I decided I was tired of a GitFlow process. Every time I had to write a commit I had to prepend the JIRA ticket to the commit message, "It's in the branch, why can't it just take it from the branch!?" I kept asking myself. Finally, I said, I will just make that happen.
Enter in the concept of Git Hooks, more famously known through tooling like Husky (awesome tool btw), however, there is a Git Hook for just about any part of the process of Git, and they have examples (written in shell, I'll get more into that later) in the .git/hooks directory. Ok so it's right there, I made a hook what is the big deal? I thought to myself "It took me forever to do this because of the overhead what if I removed that for others?" So I did. 

Technologies:
TypeScript 
NPM/NPX 
Oclif 
Enquirer
So it might come as a bit of a surprise but there are only 2 shell files in this whole CLI tool. They really just execute the JavaScript. Even crazier, I made the commit-msg hook entirely JavaScript little trick that I will get into later.
I will go over the CLI & Git Commit Message Hook in the following 2 more blog articles in the series. I want to keep this one short and more of a summary.]]></summary>
        <author>
            <name>Jacob Evans</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python for Bioinformatics: Use Machine Learning and Data Analysis for Drug Discovery]]></title>
        <id>60b98ebfacb62507dd1d8ec4</id>
        <link href="https://www.freecodecamp.org/news/python-for-bioinformatics-use-machine-learning-and-data-analysis-for-drug-discovery/"/>
        <updated>2021-06-04T02:32:22.000Z</updated>
        <summary type="html"><![CDATA[Are you looking for a way to apply Python and machine learning to a real-world application? You should consider Bioinformatics. Bioinformatics is an interdisciplinary field that develops methods and software tools for understanding biological data, in particular when the data sets are large and complex. We just released a course]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using Environment Variables in Python for App Configuration and Secrets]]></title>
        <id>https://dev.to/ryanblunden/using-environment-variables-in-python-for-app-configuration-and-secrets-3708</id>
        <link href="https://dev.to/ryanblunden/using-environment-variables-in-python-for-app-configuration-and-secrets-3708"/>
        <updated>2021-06-04T01:28:09.000Z</updated>
        <summary type="html"><![CDATA[Learn how experienced developers use environment variables in Python, including managing default values and typecasting.





As a developer, you’ve likely used environment variables in the command line or shell scripts, but have you used them as a way of configuring your Python applications?
This guide will show you all the code necessary for getting, setting, and loading environment variables in Python, including how to use them for supplying application config and secrets.
Not familiar with environment variables? Check out our ultimate guide for using environment variables in Linux and Mac.
Before digging into how to use environment variables in Python, it's important to understand why they're arguably the best way to configure applications. The main benefits are:
  Deploy your applicat…]]></summary>
        <author>
            <name>Ryan Blunden</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Goodbye ENV Files]]></title>
        <id>https://dev.to/ryanblunden/goodbye-env-files-4bi7</id>
        <link href="https://dev.to/ryanblunden/goodbye-env-files-4bi7"/>
        <updated>2021-06-04T01:27:54.000Z</updated>
        <summary type="html"><![CDATA[What are ENV files and why as an industry should we move away from them?





Three months ago we stopped using ENV files as the default export option in the Doppler CLI. This change led to a number of benefits including supporting multi-line variables and a deterministic schema. Before going too deep on the technical choices we made, let's first go over what ENV files are and how they're used.
What are ENV files?


ENV files are plain text files that store variables and secrets that you would not want hardcoded in your codebase. These variables could be a port number or a database url, and may change depending on where your code is deployed. For example, when developing locally you may use port 3000, but when deployed to Heroku your application will need to use the port it's dynamically a…]]></summary>
        <author>
            <name>Ryan Blunden</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Goodbye ENV Files]]></title>
        <id>https://dev.to/ryanblunden/goodbye-env-files-4bi7</id>
        <link href="https://dev.to/ryanblunden/goodbye-env-files-4bi7"/>
        <updated>2021-06-04T01:27:54.000Z</updated>
        <summary type="html"><![CDATA[What are ENV files and why as an industry should we move away from them?





Three months ago we stopped using ENV files as the default export option in the Doppler CLI. This change led to a number of benefits including supporting multi-line variables and a deterministic schema. Before going too deep on the technical choices we made, let's first go over what ENV files are and how they're used.
What are ENV files?


ENV files are plain text files that store variables and secrets that you would not want hardcoded in your codebase. These variables could be a port number or a database url, and may change depending on where your code is deployed. For example, when developing locally you may use port 3000, but when deployed to Heroku your application will need to use the port it's dynamically a…]]></summary>
        <author>
            <name>Ryan Blunden</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Export GitHub Issues, Commit History and More | GitHub Artifact Exporter]]></title>
        <id>https://dev.to/n3wt0n/export-github-issues-commit-history-and-more-github-artifact-exporter-2ok6</id>
        <link href="https://dev.to/n3wt0n/export-github-issues-commit-history-and-more-github-artifact-exporter-2ok6"/>
        <updated>2021-06-04T01:18:42.000Z</updated>
        <summary type="html"><![CDATA[Today I'm going to show you how you can easily export Issue, Releases, Milestone, Commit History and more from GitHub, using the GitHub Artifact Exporter.
GitHub Artifact Exporter provides a CLI and a simple GUI for exporting GitHub Issues and related comments based on a date range, and it supports GitHub’s full search syntax, allowing you to filter results based on your search parameters.

The CLI also supports exporting:
Commits
Milestones,
Projects
Pull requests, including comments
Releases

And you can export all of that in different formats: JSON, JSON lines, CSV, and Jira-formatted CSV. And of course if you export in CSV, it means that you can open it in Excel. Cool right?
As usual, if you are a visual learner, or simply prefer to watch and listen instead of reading, here you have th…]]></summary>
        <author>
            <name>Davide Benvegnù</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[เปลี่ยน default font ของ MX Linux]]></title>
        <id>https://dev.to/veer66/default-font-mx-linux-45nf</id>
        <link href="https://dev.to/veer66/default-font-mx-linux-45nf"/>
        <updated>2021-06-04T01:04:16.000Z</updated>
        <summary type="html"><![CDATA[(จาก qua.name 24 มิถุนายน 2563) 
บางทีเปลี่ยน font แล้วลง พวก Noto เรียนร้อยแล้วก็ยังไม่ได้อย่างใจ บางทีเป็นเพราะว่าระบบจะเลือก font ให้เราเอง ซึ่งไปแก้ได้ในไฟล์
ผมชึ้นหัวว่า MX Linux แต่จริง ๆ จะใช้ Void Linux, Ubuntu กระทั่งพวก NetBSD ก็น่าจะเหมือนกันหมด
$HOME/.config/fontconfig/fonts.conf
ซึ่งอันนี้ผมแก้ตาม https://jichu4n.com/posts/how-to-set-default-fonts-and-font-aliases-on-linux/ และ https://wiki.archlinux.org/index.php/Font_configuration/Examples
สมมุติว่าในกรณีที่ลง Noto แต่ไม่มี font ของ TLWG นะครับ ใส่ไปแบบนี้
<?xml version='1.0'?>
<!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>
<fontconfig>
  <match>
    <test compare="contains" name="lang">
      <string>th</string>
    </test>
    <edit mode="prepend" name="family">
      <string>Noto Sans Thai</string>
    </edit>
  </match>
  <alias>
    <family>serif</family>
    <prefer>
      <family>Noto Serif</family>
    </prefer>    
  </alias>
  <alias>
    <family>sans-serif</family>
    <prefer>
      <family>Noto Sans</family>
    </prefer>    
  </alias>
  <alias>
    <family>sans</family>
    <prefer>
      <family>Noto Sans</family>
    </prefer>    
  </alias>
  <alias>
    <family>monospace</family>
    <prefer>
      <family>Noto Mono</family>
    </prefer>    
  </alias>
</fontconfig>


`
แต่ทำไปทำมาก็รู้สึกว่าไม่ค่อยโดยเท่าไหร่ ผมก็ลง Loma แล้วเปลี่ยน Noto Sans Thai เป็น Loma อยู่ดี]]></summary>
        <author>
            <name>Vee Satayamas</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[วิธีปรับแต่ง font ของ MX Linux]]></title>
        <id>https://dev.to/veer66/font-mx-linux-5hip</id>
        <link href="https://dev.to/veer66/font-mx-linux-5hip"/>
        <updated>2021-06-04T01:02:52.000Z</updated>
        <summary type="html"><![CDATA[(จาก qua.name 17 สิงหาคม 2563)
sudo apt-get install fonts-noto fonts-noto-extra fonts-noto-core fonts-noto-mono fonts-noto-ui-core fonts-noto-ui-extra fonts-noto-cjk fonts-noto-unhinted fonts-noto-hinted fonts-noto-cjk-extra fonts-noto-color-emoji
mkdir -p $HOME/.config/fontconfig
cat > $HOME/.config/fontconfig/fonts.conf
แปะอันนี้ใส่ไป
<?xml version='1.0'?>
<!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>
<fontconfig>
  <match>
    <test compare="contains" name="lang">
      <string>th</string>
    </test>
    <edit mode="prepend" name="family">
      <string>Noto Sans Thai</string>
    </edit>
  </match>
  <alias>
    <family>serif</family>
    <prefer>
      <family>Noto Serif</family>
    </prefer>    
  </alias>
  <alias>
    <family>sans-serif</family>
    <prefer>
      <family>Noto Sans</family>
    </prefer>    
  </alias>
  <alias>
    <family>sans</family>
    <prefer>
      <family>Noto Sans</family>
    </prefer>    
  </alias>
  <alias>
    <family>monospace</family>
    <prefer>
      <family>Noto Mono</family>
    </prefer>    
  </alias>
</fontconfig>


`
กด control D 
เสร็จ]]></summary>
        <author>
            <name>Vee Satayamas</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Setup Your Fastify Server With Logging The Right Way - No More Express]]></title>
        <id>https://dev.to/wolfejw86/setup-your-fastify-server-with-logging-the-right-way-no-more-express-4n56</id>
        <link href="https://dev.to/wolfejw86/setup-your-fastify-server-with-logging-the-right-way-no-more-express-4n56"/>
        <updated>2021-06-04T00:50:34.000Z</updated>
        <summary type="html"><![CDATA[Learning a new Node.js framework can be daunting given the speed at which the ecosystem moves these days. Also some of the information on learning new techniques with Node.js is outdated - for example the sheer number of Express tutorials you still find out there! Express is long overdue for a replacement, and Fastify fits right in!  One of the first things to consider when running a Node.js server is how to handle logging the right way. ExpressJS did not offer anything out of the box, forcing another bike shed to paint amongst your team.  Fastify on the other hand recognizes that this is a critical piece of running a server and provides sensible defaults - in the case of logging - the pino logger. Join me in this article where I walk through how to setup a Fastify Node.js logger the right…]]></summary>
        <author>
            <name>Jay Wolfe</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript Tutorial – How to Set Up a Front End Development Project]]></title>
        <id>60b11ff811ffb70827ef8f94</id>
        <link href="https://www.freecodecamp.org/news/how-to-set-up-a-front-end-development-project/"/>
        <updated>2021-06-03T21:44:03.000Z</updated>
        <summary type="html"><![CDATA[Let’s say you plan to build a website. Before you start, you want to set up a few tools to make your life easier. But which tools should you have? The JavaScript ecosystem is changing so fast that it can be overwhelming to pick the best tools to use.]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Integração e Entrega Contínuas (CI/CD) de site estático em servidor Linux usando GitLab]]></title>
        <id>https://dev.to/xjuggl3r/integracao-e-entrega-continuas-ci-cd-de-site-estatico-em-servidor-linux-usando-gitlab-3kbb</id>
        <link href="https://dev.to/xjuggl3r/integracao-e-entrega-continuas-ci-cd-de-site-estatico-em-servidor-linux-usando-gitlab-3kbb"/>
        <updated>2021-06-03T20:13:41.000Z</updated>
        <summary type="html"><![CDATA[Quando estamos trabalhando em alguma empresa ou projeto, é uma prática comum entrarmos rapidamente no espírito de equipe, que normalmente acontece devido à aplicação de metodologias ágeis, ou, em um estágio mais avançado, com uma cultura devops mais encorpada.
Mas, naqueles projetos pessoais, muitas vezes a máxima "em casa de ferreiro, espeto de pau", também é uma realidade. As razões podem ser várias, mas geralmente há aquela noção de que os demais projetos e atividades têm prioridade no uso do tempo.
O resultado, muitas vezes, é desorganização que pode custar perda de tempo, dados e, com isso, dinheiro.
Então, nessa ideia de "arrumar a casa", vou mostrar como implementei o CI/CD de um de meus projetos, o Gunbot Brasil. A pipeline é simples, e o conceito é aplicável para qualquer site est…]]></summary>
        <author>
            <name>xJuggl3r</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular: SSR vs SSG]]></title>
        <id>https://dev.to/pamelakelly0023/angular-ssr-vs-ssg-11lo</id>
        <link href="https://dev.to/pamelakelly0023/angular-ssr-vs-ssg-11lo"/>
        <updated>2021-06-03T19:13:49.000Z</updated>
        <summary type="html"><![CDATA[Server Side Render (SSR)


Nesse modelo a renderização fica a cargo do servidor, o que torna o carregamento da aplicação mais eficiente. Além de possibilitar melhor performance, nesse modelo também podemos lidar com alguns problemas de SEO (como indexação).
Indexação: é possível definir o conteúdo que será carregado a partir do servidor, sendo assim, este conteúdo seria indexado nos motores de busca. 
Aparelho do usuário: como a renderização acontece do lado do servidor, ocorre uma menor exigência do dispositivo do usuário. 
Performance: Na maioria dos casos tem boa performance e bons resultados na experiência por parte do usuário.
Time to first byte maior, já que o servidor irá preparar o conteúdo a ser carregado.
Reload nas mudanças de rota.
Como indicação para desenvolver com SSR no Ang…]]></summary>
        <author>
            <name>pamelakelly0023</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Creating Production-Ready Containers - The Basics]]></title>
        <id>https://dev.to/wimpress/creating-production-ready-containers-the-basics-3k6f</id>
        <link href="https://dev.to/wimpress/creating-production-ready-containers-the-basics-3k6f"/>
        <updated>2021-06-03T18:52:51.000Z</updated>
        <summary type="html"><![CDATA[So you've coded an awesome app and you are ready to deploy it to the cloud. You've heard a lot about Docker and completed a few online tutorials to containerise your app. All set, right? But what do you need to know if you're going to move that app to a production environment on the public Internet? What if you're using it for your job and need to pass security scans and DevOps checks?
In this series, I introduce some basic concepts for making production ready containers. I also introduce the concept of "slimming" a container. Slimming refers to both optimising and minifying your Docker containers, reducing them in size by up to 80-percent while also making them more secure by decreasing the attack surface. Slimming your container is also a great way to implement container best practices w…]]></summary>
        <author>
            <name>Martin Wimpress</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Schofield&#x27;s Laws of Computing – What they Are and Why You Should Know Them]]></title>
        <id>60afd68611ffb70827ef86d8</id>
        <link href="https://www.freecodecamp.org/news/schofields-laws-of-computing/"/>
        <updated>2021-06-03T18:46:12.000Z</updated>
        <summary type="html"><![CDATA[Schofield's Laws of Computing are principles that anyone who works with computers should know. They're focused on data portability, integrity, and security.  Jack Schofield was a prolific journalist who wrote for The Guardian and covered technology for nearly four decades. During that time, he wrote three particular articles called "Schofield's]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Lists in Python – A Comprehensive Guide]]></title>
        <id>60b7c02cacb62507dd1d7b80</id>
        <link href="https://www.freecodecamp.org/news/lists-in-python-comprehensive-guide/"/>
        <updated>2021-06-03T18:42:20.000Z</updated>
        <summary type="html"><![CDATA[Let’s suppose you’re planning to visit your neighborhood store to stock up on essentials. What is the first thing you’d do?  Have the answer already? Yes, you'd probably write down a shopping list! Python also has a built-in data structure called List that’s very similar to]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux Basic Part-00]]></title>
        <id>https://dev.to/shadow_aryan/linux-basic-part-00-476n</id>
        <link href="https://dev.to/shadow_aryan/linux-basic-part-00-476n"/>
        <updated>2021-06-03T18:28:59.000Z</updated>
        <summary type="html"><![CDATA[I am using Kali linux through out the whole Blog Series of Linux Basic Command to demostrate you the linux basic command. 
ls Command


ls means listing.
This command list the files and folders in the current directory.


you can also use (-l) flag in ls to see the list of files and folders with, at what time they are created , permission that given to them, etc.
i.e- ls -l






2.pwd Command
to view the current directory you are working in.




3.clear Command
clear everything on the terminal.




4.exit Command
this command is used to close the terminal.




If you are having any problem in understanding the commands you can watch the video through the link that is given below:-
linux basic part- 00
Hope you like the 00 part of blog series of linux basic command blog.
Part 01 - Link basic part - 01]]></summary>
        <author>
            <name>ShadowAryan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fullstack GraphQL starter kit Mid-2021 update]]></title>
        <id>https://dev.to/karanpratapsingh/fullstack-graphql-starter-kit-mid-2021-update-2ck8</id>
        <link href="https://dev.to/karanpratapsingh/fullstack-graphql-starter-kit-mid-2021-update-2ck8"/>
        <updated>2021-06-03T18:12:05.000Z</updated>
        <summary type="html"><![CDATA[Hi Dev.to community, I am excited to share the Mid-2021 major update which adds tons exciting improvements to the starter kit.
Changelog
Webpack 5 + esbuild for blazing fast backend development 🎉 
Update CRA to v4 ⚡
Prisma to v2.20 🚀 
Switch to craco from react-app-rewired for better CRA v4 support (breaking change!)
update all major deps (ie. react, jest, eslint)
Full changelog/PR is available here
Github: https://github.com/karanpratapsingh/fullstack-starterkit
What do you think? as always feel free to reach out if you face any issues.
Happy coding 🎉]]></summary>
        <author>
            <name>Karan Pratap Singh</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Build a Hackintosh - Install MacOS Big Sur on a PC Using OpenCore]]></title>
        <id>60affbe411ffb70827ef8951</id>
        <link href="https://www.freecodecamp.org/news/build-a-hackintosh/"/>
        <updated>2021-06-03T18:07:17.000Z</updated>
        <summary type="html"><![CDATA[A Hackintosh is a non-Mac computer system, made with PC parts, that runs the macOS operating system. In this tutorial, you will learn how to create a Hackintosh. You will learn how to install macOS Big Sur (or any other version of macOS) using OpenCore. The main benefit of a]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Serverless vs Fully Managed Services: What&#x27;s the Difference?]]></title>
        <id>60aa708711ffb70827ef5f4b</id>
        <link href="https://www.freecodecamp.org/news/serverless-fully-managed-service-difference/"/>
        <updated>2021-06-03T16:51:37.000Z</updated>
        <summary type="html"><![CDATA[If you're new to cloud technologies, you might be confused about the difference between serverless technologies and managed services.  So in this article you'll learn what these terms mean and what the main differences are.    What Are Managed Services? A managed service let the end-user focus on using a service]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Create Your First Angular Application]]></title>
        <id>https://dev.to/paradocx96/create-your-first-angular-application-hp4</id>
        <link href="https://dev.to/paradocx96/create-your-first-angular-application-hp4"/>
        <updated>2021-06-03T16:14:03.000Z</updated>
        <summary type="html"><![CDATA[Hi guys! I am going to explain you to how to setup your local environment and workspace for create your first Angular application locally using Angular CLI tool. Simply following my steps finally, you can create Angular applications and configure application yourself. I am using my Windows pc to show you to understand the commands I used to create Angular application.
Step 01


Before create application there are some prerequisites.
1. You should be familiar with following.
JavaScript
HTML
CSS
TypeScript (Not required)
2. To install Angular on your local system, you must install following.
Node.js (Version: Current, Active LTS or Maintenance LTS) 
You can  download and install Node.js follow this  link. If you already installed Node.js you can run this command on terminal window.
node -v

…]]></summary>
        <author>
            <name>Navinda Lankesh</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Data Structures in Typescript - Array]]></title>
        <id>https://dev.to/ricardo93borges/data-structures-in-typescript-array-23mo</id>
        <link href="https://dev.to/ricardo93borges/data-structures-in-typescript-array-23mo"/>
        <updated>2021-06-03T15:43:00.000Z</updated>
        <summary type="html"><![CDATA[An array is a common data structure that holds items of the same type, in Typescript, unlike other languages, an array doesn't have a fixed length. Also, in Typescript, you don't have to re-organize all elements of an array when makings operations like insert or delete.

Elements are the items stored in an array
Index is the location of an element in an array, it goes from 0 to (array length - 1)




/** An array can be written like this **/

const numbers: number[] = [1, 2, 3, 4]
const names = string[] = ['Snake', 'Ocelot', 'Otacon', 'Naomi']

/** Also can be written using a generic array type, Array<elemType> **/

let list: Array<number> = [1, 2, 3, 4]
let list: Array<string> = ['Snake', 'Ocelot', 'Otacon', 'Naomi']

Traverse - Print all array items one by one
/** 3 ways to iterate an array **/

for(let i=0; i<array.length; i++) {
    console.log(array[i])
}

for(const item of array) {
    console.log(item)
}

array.forEach(item => {
    console.log(item)
})

Insertion - Add an item
/** add to the end **/
array.push(5)

/** add to the beginning **/
array.unshift(0)

/** add in a specific index position **/
array.splice(3, 0, 8) // add 8 in the index 3

Deletion - Remove an item
/** remove from the end **/
array.pop()

/** remove from the beginning **/
array.shift()

/** remove from a specific index position **/
array.splice(2, 1) // remove from index 2

Update - Update an item
/** update element in position 1 **/
array[1] = 7

Search - Search by an item
/** you can traverse an array to find an element by its value, or simply use the .find() function **/

const item = array.find(item => item === 3) // search by an item with value 3

All above operations can be performed on strings to solve problems like count the occurrences of a character in a string:
let str = "aabbccdd"
let occurrences = 0

for(let i=0; i < str.length; i++) {
    if(str[i] === "c") {
        occurrences++
    }
}

console.log(occurrences) // prints 2]]></summary>
        <author>
            <name>Ricardo Borges</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hexagons and Beyond: Flexible, Responsive Grid Patterns, Sans Media Queries]]></title>
        <id>https://css-tricks.com/?p=341584</id>
        <link href="https://css-tricks.com/hexagons-and-beyond-flexible-responsive-grid-patterns-sans-media-queries/"/>
        <updated>2021-06-03T14:25:57.000Z</updated>
        <summary type="html"><![CDATA[A little while back, Chris shared this nice hexagonal grid. And true to its name, it’s using —wait for it — CSS Grid to form that layout. It’s a neat trick! Combining grid columns, grid gaps, and creative clipping …
The post Hexagons and Beyond: Flexible, Responsive Grid Patterns, Sans Media Queries appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Temani Afif</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Monitoring Lighthouse Scores and Core Web Vitals with DebugBear]]></title>
        <id>https://css-tricks.com/?p=341494</id>
        <link href="https://css-tricks.com/monitoring-lighthouse-scores-and-core-web-vitals-with-debugbear/"/>
        <updated>2021-06-03T14:25:19.000Z</updated>
        <summary type="html"><![CDATA[DebugBear takes just a few seconds to start using. You literally point it at a URL you want to watch, and it’ll start watching it. You install nothing.
It’ll start running tests, and you’ve immediately got performance charts you can …
The post Monitoring Lighthouse Scores and Core Web Vitals with DebugBear appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dockerizing an angular app]]></title>
        <id>https://dev.to/ollita7/dockerizing-an-angular-app-3nef</id>
        <link href="https://dev.to/ollita7/dockerizing-an-angular-app-3nef"/>
        <updated>2021-06-03T13:55:38.000Z</updated>
        <summary type="html"><![CDATA[In this article I will show you how to dockerize an angular application using nginx server. If you would like more information about the nginx server  you can find it here: https://www.nginx.com/
To get started we create a dockerfile with two stages:
Stage 1
Copy the angular code from a local machine to a docker machine.
Copy the packages.json to install dependencies.
Install the angular-cli and npm dependencies.
Build an angular application.
For this stage we use a node machine image from the dockerhub https://hub.docker.com/_/node
Stage 2
Copy the angular dist folder from the previous docker machine named build on to the nginx location folder.
Then we use the default cmd that starts the nginx server. 
For this stage we will use a node machine from the dockerhub https://hub.docker.com/_/nginx
FROM node:12.7-alpine AS build
WORKDIR /app
COPY / ./
COPY package*.json ./

RUN npm install -g @angular/cli@10.0.4 && \
    npm install && \
    ng build
COPY . .

FROM nginx:1.17.1-alpine
WORKDIR /app
COPY --from=build /app/dist/ui /usr/share/nginx/html

Once that is done, we will create the Dockerfile, and build the image to run it.
> docker build -t <image_name> -f Dockerfile .

Now we can verify if the image is created by running the following command.
> docker images

Now that we have created the image in order to run it we have two options:. 
docker-compose.yml file like this:
version: '3'
services:
    server:
        image: <image_name>
        ports:
            - "80:80"
        tty: true
        expose:
            - "80" 
        stdin_open: true
        environment:
            - MODE=dev
        command: <command to run>

If we want to run a command when we run the image we can specify on command.
docker run -d -p 80:80 <image_name> command

Hope you liked and also helps you in case you have to dockerize an angular app.]]></summary>
        <author>
            <name>Guillermo Fernandez</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular 12 in Depth]]></title>
        <id>https://dev.to/angular/angular-12-in-depth-1j6m</id>
        <link href="https://dev.to/angular/angular-12-in-depth-1j6m"/>
        <updated>2021-06-03T11:32:35.000Z</updated>
        <summary type="html"><![CDATA[In this article, I’ll go over (almost) everything noteworthy in this brand new release. I’ll also highlight what’s changed around Angular, just like I did with my previous articles about Angular 11 and Angular 10.
If you're just looking for the bird-eye view, then check out the official release announcement. Here, I'll dig much deeper into the release notes.
The Angular team has been working on Ivy (the new compilation & rendering pipeline) since 2018. It was finally released with Angular 8. Since Angular 9, Ivy has been the default for new projects, and the ecosystem is slowly migrating to it. With Angular 12, the old View Engine is now officially deprecated. It will be removed in a future major release. Also, it won't be possible to create new applications using View Engine. Finally, Ivy…]]></summary>
        <author>
            <name>Sébastien D.</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Managing Shared State In Vue 3]]></title>
        <id>https://smashingmagazine.com/2021/06/managing-shared-state-vue3/</id>
        <link href="https://smashingmagazine.com/2021/06/managing-shared-state-vue3/"/>
        <updated>2021-06-03T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[Writing large-scale Vue applications can be a challenge. In this article, Shawn Wildermuth dives into the pros and cons of approaches like factories, shared objects, and using Vuex. He also explains what is coming in Vuex 5.0 that might change how we all use shared state in Vue 3.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Shawn Wildermuth)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to use ControlValueAccessor to enhance date input with automatic conversion and validation]]></title>
        <id>https://dev.to/shhdharmen/how-to-use-controlvalueaccessor-to-enhance-date-input-with-automatic-conversion-and-validation-3lo4</id>
        <link href="https://dev.to/shhdharmen/how-to-use-controlvalueaccessor-to-enhance-date-input-with-automatic-conversion-and-validation-3lo4"/>
        <updated>2021-06-03T09:26:56.000Z</updated>
        <summary type="html"><![CDATA[Overall idea behind this article to explain and demonstrate the usage of ControlValueAccessor and Validator interfaces . The former is used to bind together a FormControl from Forms package and native DOM elements. The latter is used to implement validation logic. They can exist independently of each other, but in this article we’ll implement both using a single directive. Our directive will add the following functionality to the application:
Conversion between input value and control value
Validation for invalid date
If you’re using ControlValueAccessor for the first time, I would recommend going through this article first: Never again be confused when implementing ControlValueAccessor in Angular forms. 
We will first create a directive and handle conversion between UI and control value.
…]]></summary>
        <author>
            <name>Dharmen Shah</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to use ControlValueAccessor to enhance date input with automatic conversion and validation]]></title>
        <id>https://dev.to/shhdharmen/how-to-use-controlvalueaccessor-to-enhance-date-input-with-automatic-conversion-and-validation-3lo4</id>
        <link href="https://dev.to/shhdharmen/how-to-use-controlvalueaccessor-to-enhance-date-input-with-automatic-conversion-and-validation-3lo4"/>
        <updated>2021-06-03T09:26:56.000Z</updated>
        <summary type="html"><![CDATA[Overall idea behind this article to explain and demonstrate the usage of ControlValueAccessor and Validator interfaces . The former is used to bind together a FormControl from Forms package and native DOM elements. The latter is used to implement validation logic. They can exist independently of each other, but in this article we’ll implement both using a single directive. Our directive will add the following functionality to the application:
Conversion between input value and control value
Validation for invalid date
If you’re using ControlValueAccessor for the first time, I would recommend going through this article first: Never again be confused when implementing ControlValueAccessor in Angular forms. 
We will first create a directive and handle conversion between UI and control value.
…]]></summary>
        <author>
            <name>Dharmen Shah</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How I Got Selected into Google Summer of Code]]></title>
        <id>https://dev.to/rohanlekhwani/how-i-got-selected-into-google-summer-of-code-27</id>
        <link href="https://dev.to/rohanlekhwani/how-i-got-selected-into-google-summer-of-code-27"/>
        <updated>2021-06-03T08:55:25.000Z</updated>
        <summary type="html"><![CDATA[More than 50,000 students around the world register for GSoC every year and of those who submit a proposal only 1200 are accepted.
Organizations at GSoC work within Operating Systems to Web to Cloud and even applications within Science and Medicine thereby covering almost the entire spectrum of Computer Science.
I got selected by Rocket.Chat.

Rocket.Chat is the ultimate communication platform for teams — say an open-sourced Slack with a different business model.
It offers web and phone based communication platforms, integrated omnichannel features and even has an App Store of its own where you can publish and monetize apps that run on Rocket.Chat!
Selecting Organizations
Around December, I started going through organizations that got selected into GSoC the past year and shortlisting them …]]></summary>
        <author>
            <name>Rohan Lekhwani</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[देसी  भाषा में एक्सट्रीम बिगिनर्स के लिए डॉकर :) Layman Docker ( translate in ur language too)]]></title>
        <id>https://dev.to/manishfoodtechs/layman-docker-translate-in-ur-language-too-5g1</id>
        <link href="https://dev.to/manishfoodtechs/layman-docker-translate-in-ur-language-too-5g1"/>
        <updated>2021-06-03T08:11:15.000Z</updated>
        <summary type="html"><![CDATA[*** छोटा सा अनुरोध अनुरोध:***



  
  
  मेरी टीम शामिल होने के लिए फॉर्म में शामिल होने के लिए आपका स्वागत है।



  
  
  इसके अलावा ओपन सोर्स इंटेलिजेंट सिस्टम (OSINT) में शामिल होने के लिए आपका स्वागत है यदि आप कोरोना प्रकोप जैसी विभिन्न बीमारियों से मनुष्यों की रक्षा के संबंध में ओपन सोर्स प्रोजेक्ट में मदद कर सकते हैं



  
  
  https://github.com/Manishfoodtechs/OSINTHRH/wiki


मैंने सर्वर, क्लाउड और कंटेनरों पर शुरुआती लोगों के लिए सरल भाषा में विभिन्न लेख लिखे हैं। आप मेरी प्रोफाइल पर जाकर उन्हें ढूंढ सकते हैं। ऐसा ही एक लेख यहां फिर से अलग शीर्षक के साथ है।
स्तर शून्य: डेस्कटॉप और सर्वर के बीच अंतर



  
  
  डेस्कटॉप क्या है? एक डेस्कटॉप में सीपीयू, रैम, हार्ड ड्राइव आदि और ऑपरेटिंग सिस्टम होता है। यह ऑपरेटिंग सिस्टम विंडोज, लिनक्स, मैक आदि हो सकता है। आपके पास डेस्कटॉप में ग्राफ…]]></summary>
        <author>
            <name>manish srivastava</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular : How to add reCAPTCHA feature in your angular app just in 5 minutes?]]></title>
        <id>https://dev.to/rajeshkumaryadavdotcom/angular-how-to-add-recaptcha-feature-in-your-angular-app-just-in-5-minutes-3lh0</id>
        <link href="https://dev.to/rajeshkumaryadavdotcom/angular-how-to-add-recaptcha-feature-in-your-angular-app-just-in-5-minutes-3lh0"/>
        <updated>2021-06-03T06:10:20.000Z</updated>
        <summary type="html"><![CDATA[Step 1 - Install dependency
npm i ng-recaptcha --save

Step -2 Open app.module.ts and add below import-
import { RecaptchaModule } from 'ng-recaptcha';

Also add this to imports -
imports: [RecaptchaModule,],

Step 3 - Open that component where you want to add human verification reCAPTCHA and then add below code -

yourcomponentname.component.html
 <re-captcha (resolved)="resolved($event)" siteKey="6LcOuyYTAAAAAHTjFuqhA52fmfJ_j5iFk5PsfXaU" ></re-captcha>

yourcomponentname.component.ts
public resolved(captchaResponse: string) { 
console.log(`Resolved captcha with response: ${captchaResponse}`); // Write your logic here about once human verified what action you want to perform 
}

Step 5 - This siteKey will work on localhost, you must have to generate your own siteKey, for this please visit google.com/recaptcha and add your domain and generate key, it's very simple and then replace the new key to markup of step3.  
All done.]]></summary>
        <author>
            <name>Rajesh Kumar Yadav</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Debugging iOS Safari]]></title>
        <id>https://css-tricks.com/?p=341724</id>
        <link href="https://css-tricks.com/debugging-ios-safari/"/>
        <updated>2021-06-02T21:15:28.000Z</updated>
        <summary type="html"><![CDATA[How do I debug Safari on iOS?
These are my general steps, starting with not even using iOS Safari.
1. Is this just a small-screen problem?
Lemme just use the device mode in Chrome quick.
Note that this does a …
The post Debugging iOS Safari appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Docker without Docker]]></title>
        <id>https://dev.to/superfly/docker-without-docker-590i</id>
        <link href="https://dev.to/superfly/docker-without-docker-590i"/>
        <updated>2021-06-02T15:42:48.000Z</updated>
        <summary type="html"><![CDATA[We’re Fly.io. We take container images and run them on our hardware around the world.  It’s pretty neat, and you should check it out; with an already-working Docker container, you can be up and running on Fly in well under 10 minutes.
Even though most of our users deliver software to us as Docker containers, we don’t use Docker to run them. Docker is great, but we’re high-density multitenant, and despite strides, Docker’s isolation isn’t strong enough for that. So, instead, we transmogrify container images into Firecracker micro-VMs.
Let's demystify that.
They do their best to make it look a lot more complicated, but OCI images — OCI is the standardized container format used by Docker — are pretty simple.  An OCI image is just a stack of tarballs.
Backing up: most people build images from …]]></summary>
        <author>
            <name>Fly.io</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Crash Course in WordPress Block Filters]]></title>
        <id>https://css-tricks.com/?p=341442</id>
        <link href="https://css-tricks.com/a-crash-course-in-wordpress-block-filters/"/>
        <updated>2021-06-02T13:35:53.000Z</updated>
        <summary type="html"><![CDATA[Blocks in WordPress are great. Drop some into the page, arrange them how you like, and you’ve got a pretty sweet landing page with little effort. But what if the default blocks in WordPress need a little tweaking? Like, what …
The post A Crash Course in WordPress Block Filters appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Dmitry Mayorov</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Are Custom Properties a “Menu of What Will Change”?]]></title>
        <id>https://css-tricks.com/?p=341572</id>
        <link href="https://css-tricks.com/are-custom-properties-a-menu-of-what-will-change/"/>
        <updated>2021-06-02T13:35:40.000Z</updated>
        <summary type="html"><![CDATA[PPK laid out an interesting situation in “Two options for using custom properties” where he and Stefan Judis had two different approaches for doing the same thing with custom properties. In one approach, hover and focus styles for a …
The post Are Custom Properties a “Menu of What Will Change”? appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Fix Cumulative Layout Shift (CLS) Issues]]></title>
        <id>https://smashingmagazine.com/2021/06/how-to-fix-cumulative-layout-shift-issues/</id>
        <link href="https://smashingmagazine.com/2021/06/how-to-fix-cumulative-layout-shift-issues/"/>
        <updated>2021-06-02T12:30:00.000Z</updated>
        <summary type="html"><![CDATA[Google’s Core Web Vitals initiative has taken the SEO and Web Performance worlds by storm and many sites are busy optimizing their Page Experience to maximize the ranking factor. The Cumulative Layout Shift metric is causing trouble to a lot of sites, so let’s have a look at ways of addressing any issues for that metric.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Barry Pollard)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Summer Sale is Now Live At PrimeStore!]]></title>
        <id>https://dev.to/primetek/the-summer-sale-is-now-live-at-primestore-25h7</id>
        <link href="https://dev.to/primetek/the-summer-sale-is-now-live-at-primestore-25h7"/>
        <updated>2021-06-02T11:59:23.000Z</updated>
        <summary type="html"><![CDATA[Summer has arrived at PrimeStore to bring up to 50% discount on all the Premium Templates, Theme Designers, PrimeFaces Elite, PrimeNG LTS Subscriptions and License Upgrades!
Visit PrimeStore now to begin shopping.]]></summary>
        <author>
            <name>PrimeTek</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Improving The Performance Of An Online Store (Case Study)]]></title>
        <id>https://smashingmagazine.com/2021/06/front-end-performance-online-store-jewellerybox/</id>
        <link href="https://smashingmagazine.com/2021/06/front-end-performance-online-store-jewellerybox/"/>
        <updated>2021-06-02T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[Getting a good performance score from Google is hard for any website — but doing so for an online store is even harder. We achieved green scores — even several for mobile. Here is how we did it.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Jennifer Brehm)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[LUXARG another keyboard frirendly editor in PURE PYTHON]]></title>
        <id>https://dev.to/amzy0/luxarg-another-keyboard-frirendly-editor-for-linux-freebsd-538f</id>
        <link href="https://dev.to/amzy0/luxarg-another-keyboard-frirendly-editor-for-linux-freebsd-538f"/>
        <updated>2021-06-02T00:39:38.000Z</updated>
        <summary type="html"><![CDATA[LINK]]></summary>
        <author>
            <name>Amzy 0 |  محمد امین عظیمی</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Code blocks, but better]]></title>
        <id>https://css-tricks.com/?p=341720</id>
        <link href="https://ped.ro/blog/code-blocks-but-better"/>
        <updated>2021-06-01T22:08:48.000Z</updated>
        <summary type="html"><![CDATA[Pedro Duarte made a wishlist for styled code blocks in blog posts and documentation, then hand-rolls a perfect solution for that wishlist. For example, a feature to be able to highlight certain lines or words within the code block. The …
The post Code blocks, but better appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Running GUI Applications inside Docker Container]]></title>
        <id>https://dev.to/msamik/running-gui-applications-inside-docker-container-14ch</id>
        <link href="https://dev.to/msamik/running-gui-applications-inside-docker-container-14ch"/>
        <updated>2021-06-01T16:05:01.000Z</updated>
        <summary type="html"><![CDATA[What is DOCKER?
Docker is a set of platform as a service products that use OS-level virtualization to deliver software in packages called containers. Containers are isolated from one another and bundle their own software, libraries and configuration files; they can communicate with each other through well-defined channels.
What is GUI ?
The graphical user interface is a form of user interface that allows users to interact with electronic devices through graphical icons and audio indicator such as primary notation, instead of text-based user interfaces, typed command labels or text navigation.
Lets Directly Jump to Practicles : 
Docker Engine Must be Installed in the Base OS / Host .
To confirm whether docker is installed or not we can use :
Docker Engine must be in running state .
[root@os]~# systemctl status docker

We must have a docker image to execute our task .
[root@os]~# docker pull centos:latest
We will now create a Dockerfile in which we will specify our Requirements for our own custom Image
[root@os]~# vim Dockerfile 
FROM centos:latest

[root@os]~# docker build -t firefox:v1 .

docker build will help us to make our own customized image with tag firefox:v1

[root@os]~# docker run -it --name task2 -e DISPLAY=$DISPLAY --net=host firefox:v1

$DISPLAY == Enivornment Variable for our Display :0 is the main display.
[root@os]~# firefox

[root@os]~# jupyter notebook

In Addition to firefox i used jupyter notebook as a GUI APP.
Thanks for Visiting my Article]]></summary>
        <author>
            <name>Muhammad Sami Khanday</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Front-End Testing is For Everyone]]></title>
        <id>https://css-tricks.com/?p=341342</id>
        <link href="https://css-tricks.com/front-end-testing-is-for-everyone/"/>
        <updated>2021-06-01T14:17:43.000Z</updated>
        <summary type="html"><![CDATA[Testing is one of those things that you either get super excited about or kinda close your eyes and walk away. Whichever camp you fall into, I’m here to tell you that front-end testing is for everyone. In fact, …
The post Front-End Testing is For Everyone appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Evgeny Klimenchenko</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Jetpack Boost Handles Critical CSS For You]]></title>
        <id>https://css-tricks.com/?p=341296</id>
        <link href="https://css-tricks.com/jetpack-boost-handles-critical-css-for-you/"/>
        <updated>2021-06-01T14:16:55.000Z</updated>
        <summary type="html"><![CDATA[Critical CSS is one of those things I see in my performance reports but always seem to ignore. I know what it means. It means to put only the CSS required to render things immediately visible in a <style>…
The post Jetpack Boost Handles Critical CSS For You appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Geoff Graham</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 38 With Ivan Akulov: Why Is My React App Slow?]]></title>
        <id>https://smashingmagazine.com/2021/06/smashing-podcast-episode-38/</id>
        <link href="https://smashingmagazine.com/2021/06/smashing-podcast-episode-38/"/>
        <updated>2021-06-01T14:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode, we’re talking about React performance. What factors slow our React apps down, and how can we fix it? Drew McLellan talks to expert Ivan Akulov to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Setting Up A Currency Convertor With ExchangeRatesApi.io]]></title>
        <id>https://smashingmagazine.com/2021/06/currency-convertor-exchangeratesapi/</id>
        <link href="https://smashingmagazine.com/2021/06/currency-convertor-exchangeratesapi/"/>
        <updated>2021-06-01T09:00:00.000Z</updated>
        <summary type="html"><![CDATA[Amazon allows visitors to display prices in their own currency. Thanks to *ExchangeRatesApi.io*, we can do the same for our online shops, providing a better experience to our customers. Let’s find out how.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Leonardo Losoviz)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.10.2]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.10.2</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.10.2"/>
        <updated>2021-06-01T04:39:30.000Z</updated>
        <summary type="html"><![CDATA[Added: testing and CI/CD workflows]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Serverless Functions: The Secret to Ultra-Productive Front-End Teams]]></title>
        <id>https://css-tricks.com/?p=340465</id>
        <link href="https://css-tricks.com/serverless-functions-the-secret-to-ultra-productive-front-end-teams/"/>
        <updated>2021-05-31T17:16:22.000Z</updated>
        <summary type="html"><![CDATA[Modern apps place high demands on front-end developers. Web apps require complex functionality, and the lion’s share of that work is falling to front-end devs:
building modern, accessible user interfaces
creating interactive elements and complex animations
managing complex application state
…
The post Serverless Functions: The Secret to Ultra-Productive Front-End Teams appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Jason Lengstorf</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Local: Always Getting Better]]></title>
        <id>https://css-tricks.com/?p=341482</id>
        <link href="https://css-tricks.com/local-always-getting-better/"/>
        <updated>2021-05-31T17:13:02.000Z</updated>
        <summary type="html"><![CDATA[I’ve been using Local for ages. Four years ago, I wrote about how I got all my WordPress sites running locally on it. I just wanted to give it another high five because it’s still here and still great. In …
The post Local: Always Getting Better appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Happy June Vibes For Your Screen (2021 Desktop Wallpapers Edition)]]></title>
        <id>https://smashingmagazine.com/2021/05/desktop-wallpaper-calendars-june-2021/</id>
        <link href="https://smashingmagazine.com/2021/05/desktop-wallpaper-calendars-june-2021/"/>
        <updated>2021-05-31T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[What could be a better way to welcome June than with some colorful inspiration? Well, we might have something for you: wallpapers created with love by artists and designers from across the globe.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cosima Mielke)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dynamic Favicons for WordPress]]></title>
        <id>https://css-tricks.com/?p=341163</id>
        <link href="https://css-tricks.com/dynamic-favicons-for-wordpress/"/>
        <updated>2021-05-28T14:36:47.000Z</updated>
        <summary type="html"><![CDATA[Typically, a single favicon is used across a whole domain. But there are times you wanna step it up with different favicons depending on context. A website might change the favicon to match the content being viewed. Or a site …
The post Dynamic Favicons for WordPress appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Thomas Park</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Adding A Commenting System To A WYSIWYG Editor]]></title>
        <id>https://smashingmagazine.com/2021/05/commenting-system-wysiwyg-editor/</id>
        <link href="https://smashingmagazine.com/2021/05/commenting-system-wysiwyg-editor/"/>
        <updated>2021-05-28T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this article, we’ll be re-using the foundational WYSIWYG Editor built in the first article to build a commenting system for a WYSIWYG Editor that enables users to select text inside a document and share their comments on it. Let’s dig in!]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Shalabh Vyas)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[To $ or Not to $: Displaying Terminal Code Snippets]]></title>
        <id>https://css-tricks.com/?p=341298</id>
        <link href="https://css-tricks.com/to-or-not-to-displaying-terminal-code-snippets/"/>
        <updated>2021-05-27T18:22:11.000Z</updated>
        <summary type="html"><![CDATA[It’s very popular to put a $ on lines that are intended to be a command in code documentation that involves the terminal (i.e. the command line).
Like this:
$ brew install somepackage
The point of that is that it …
The post To $ or Not to $: Displaying Terminal Code Snippets appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Show Images on Click]]></title>
        <id>https://css-tricks.com/?p=341020</id>
        <link href="https://css-tricks.com/how-to-show-images-on-click/"/>
        <updated>2021-05-27T14:25:29.000Z</updated>
        <summary type="html"><![CDATA[Most images on the web are superfluous. If I might be a jerk for a bit, 99% of them aren’t even that helpful at all (although there are rare exceptions). That’s because images don’t often complement the text they’re …
The post How to Show Images on Click appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Robin Rendle</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Useful VS Code Extensions For Front-End Developers]]></title>
        <id>https://smashingmagazine.com/2021/05/useful-vs-code-extensions-web-developers/</id>
        <link href="https://smashingmagazine.com/2021/05/useful-vs-code-extensions-web-developers/"/>
        <updated>2021-05-27T13:30:00.000Z</updated>
        <summary type="html"><![CDATA[Meet useful Visual Studio Code extensions for web developers: little helpers to minimize slow-downs and frustrations, and boost developer’s workflow along the way. With auto log messages, auto code formatting, file utils, file labels, code snippets, highlight brackets, tags, indents and workspaces, onboarding and remote SSH.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cosima Mielke)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Build And Launch Powerful Responsive Websites With Editor X]]></title>
        <id>https://smashingmagazine.com/2021/05/build-launch-responsive-websites-editorx/</id>
        <link href="https://smashingmagazine.com/2021/05/build-launch-responsive-websites-editorx/"/>
        <updated>2021-05-27T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[While web builders have been around for a long time, it wasn’t until recently that they became practical for professional use. Closing the gap between design and code has become the north star for many companies and we are seeing a wave of tools that deliver on this promise.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Miroslav Bekyarov)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Accessible SVGs: Perfect Patterns For Screen Reader Users]]></title>
        <id>https://smashingmagazine.com/2021/05/accessible-svg-patterns-comparison/</id>
        <link href="https://smashingmagazine.com/2021/05/accessible-svg-patterns-comparison/"/>
        <updated>2021-05-26T13:20:00.000Z</updated>
        <summary type="html"><![CDATA[Discover which SVG patterns we should avoid and which patterns are the most inclusive when comparing different combinations of OSs, browsers, and screen readers.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Carie Fisher)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.9.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.9.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.9.0"/>
        <updated>2021-05-26T06:02:55.000Z</updated>
        <summary type="html"><![CDATA[Added: experimental support for iTunes podcast feed: Demo | Source. With this new release, you can render an audio control to play the mp3 file and display iTunes episode duration. It is "experimental" due to these caveats:

This feature is currently only available through custom template.
iTunes has no strict format requirement for duration. The unit is most likely seconds but can be "hh:mm:ss" or "mm:ss" for some sources. A future version may expose a human readable string to the template.
No image support yet. Some shows might have disabled CORS or use a relative URL for image, which forces osmosfeed to download the image during build. A future version may support it.
You can't republish the podcast in the feed output. Supporting this goes beyond the scope of the project at the moment.
Fixed: the articles in template data were not sorted.
Thank you @Zenigata]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Guide To Undoing Mistakes With Git (Part 2)]]></title>
        <id>https://smashingmagazine.com/2021/05/undoing-mistakes-git-part2/</id>
        <link href="https://smashingmagazine.com/2021/05/undoing-mistakes-git-part2/"/>
        <updated>2021-05-25T14:00:00.000Z</updated>
        <summary type="html"><![CDATA[Mistakes. These cruel villains do not even stop at the beautiful world of software development. But although we cannot avoid making mistakes, we can learn to undo them! This post will show the right tools for your daily work with Git.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Tobias Günther)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A New Way To Reduce Font Loading Impact: CSS Font Descriptors]]></title>
        <id>https://smashingmagazine.com/2021/05/reduce-font-loading-impact-css-descriptors/</id>
        <link href="https://smashingmagazine.com/2021/05/reduce-font-loading-impact-css-descriptors/"/>
        <updated>2021-05-25T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[Web fonts are often terrible for web performance and none of the font loading strategies are particularly effective to address that. Upcoming font options may finally deliver on the promise of making it easier to align fallback fonts to the final fonts.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Barry Pollard)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS Container Queries: Use-Cases And Migration Strategies]]></title>
        <id>https://smashingmagazine.com/2021/05/css-container-queries-use-cases-migration-strategies/</id>
        <link href="https://smashingmagazine.com/2021/05/css-container-queries-use-cases-migration-strategies/"/>
        <updated>2021-05-24T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[CSS Container queries bring media queries closer to the target elements themselves and enables them to adapt to virtually any given container or layout. In this article, we’re going to cover CSS container query basics and how to use them today with progressive enhancement or polyfills.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Adrian Bece)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.8.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.1"/>
        <updated>2021-05-23T05:40:12.000Z</updated>
        <summary type="html"><![CDATA[Fixed: UnhandledPromiseRejectionWarning: Error: At least one option must be a string]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.8.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.0"/>
        <updated>2021-05-23T05:12:08.000Z</updated>
        <summary type="html"><![CDATA[Changed: Smart summary truncation. When there is no dedicated summary (only Atom feed has it, and many sites don't use it) from the source, we check if the content/description (Both Atom and RSS) field is long enough to be full text. If so, it will be truncated into a "pseudo" summary. If not, we assume the source used the content field as summary, and it will be displayed in full length.
Thank you: @LooperXX.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building A Rich Text Editor (WYSIWYG)]]></title>
        <id>https://smashingmagazine.com/2021/05/building-wysiwyg-editor-javascript-slatejs/</id>
        <link href="https://smashingmagazine.com/2021/05/building-wysiwyg-editor-javascript-slatejs/"/>
        <updated>2021-05-21T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[Let’s build a rich text, WYSIWYG-editor that supports rich text, images, links and some nuanced features from word processing apps. We will use SlateJS to build the shell of the editor and then add a toolbar and custom configurations.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Shalabh Vyas)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Boost Your Skills Online: Smashing Workshops On Front-End And Design]]></title>
        <id>https://smashingmagazine.com/2021/05/new-online-workshops-front-end-ux/</id>
        <link href="https://smashingmagazine.com/2021/05/new-online-workshops-front-end-ux/"/>
        <updated>2021-05-20T14:20:00.000Z</updated>
        <summary type="html"><![CDATA[Front-end and design are remarkably complex these days. That’s why we invite kind, smart folks from the community to run online workshops for all of us to learn together. And we have new ones coming up, and we’d like to kindly welcome you to join in.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Iris Lješnjanin)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Implement Authentication In Next.js With Auth0]]></title>
        <id>https://smashingmagazine.com/2021/05/implement-authentication-nextjs-auth0/</id>
        <link href="https://smashingmagazine.com/2021/05/implement-authentication-nextjs-auth0/"/>
        <updated>2021-05-20T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[A step-by-step tutorial on adding authentication and authorization to your Next.js apps, with Auth0. We’ll be using a Next.js SDK to connect our application to the Auth0 API and will create the dynamic API route for React.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Facundo Giuliani)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Frustrating Design Patterns: Mega-Dropdown Hover Menus]]></title>
        <id>https://smashingmagazine.com/2021/05/frustrating-design-patterns-mega-dropdown-hover-menus/</id>
        <link href="https://smashingmagazine.com/2021/05/frustrating-design-patterns-mega-dropdown-hover-menus/"/>
        <updated>2021-05-19T11:40:00.000Z</updated>
        <summary type="html"><![CDATA[Everything to keep in mind when designing and building a mega-dropdown, common pitfalls, hover entry/exit delays, trajectory triangle technique and SVG path exit areas.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Vitaly Friedman)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Create, Edit And Animate SVGs All In One Place With SVGator 3.0]]></title>
        <id>https://smashingmagazine.com/2021/05/create-edit-animate-svg-svgator3/</id>
        <link href="https://smashingmagazine.com/2021/05/create-edit-animate-svg-svgator3/"/>
        <updated>2021-05-18T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[Today, we are taking a closer look at [SVGator 3.0](https://www.svgator.com/?utm_source=article&utm_medium=smashingmag&utm_campaign=svgator3_smashing), a new major release of the popular SVG application that lets you create, edit and animate SVG files and make the best out of what SVG has to offer — from start to finish.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Mikołaj Dobrucki)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 37 With Adam Argyle: What Is VisBug?]]></title>
        <id>https://smashingmagazine.com/2021/05/smashing-podcast-episode-37/</id>
        <link href="https://smashingmagazine.com/2021/05/smashing-podcast-episode-37/"/>
        <updated>2021-05-18T05:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode, we’re talking about VisBug. What is it, and how is it different from the array of options already found in Chrome DevTools? Drew McLellan talks to its creator Adam Argyle to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How We Improved Our Core Web Vitals (Case Study)]]></title>
        <id>https://smashingmagazine.com/2021/05/core-web-vitals-case-study/</id>
        <link href="https://smashingmagazine.com/2021/05/core-web-vitals-case-study/"/>
        <updated>2021-05-17T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[Google’s “Page Experience Update” will start rolling out in June. At first, sites that meet Core Web Vitals thresholds will have a minor ranking advantage in mobile search for all browsers. Search is important to any business, and this is the story of how Beau Hartshorne and his team at Instant Domain Search improved their Core Web Vitals scores.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Beau Hartshorne)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.2]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2"/>
        <updated>2021-05-17T05:32:19.000Z</updated>
        <summary type="html"><![CDATA[⚠ Deprecated: To accommodate the monorepo setup, the node version in all templates/demos/examples has changed from 14 to 16. This is not a breaking change as our compile target is still node 14, and node 16 is backward compatible. We still recommend you start using node-version: "16" in your .github/workflows/update-feed.yaml today to get the performance/security improvements from the newer node. See example
Chore: Reorganize to monorepo with npm workspace.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.1"/>
        <updated>2021-05-16T02:33:58.000Z</updated>
        <summary type="html"><![CDATA[Fixed: static files were unnecessarily copied for custom templates.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.0"/>
        <updated>2021-05-16T01:42:24.000Z</updated>
        <summary type="html"><![CDATA[Added: templating system. Demo | Source | Docs
Chore: rendering logic refactoring. Adopting functional paradigm.
Thank you @tianheg, @onnyyonn]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Tree-Shaking: A Reference Guide]]></title>
        <id>https://smashingmagazine.com/2021/05/tree-shaking-reference-guide/</id>
        <link href="https://smashingmagazine.com/2021/05/tree-shaking-reference-guide/"/>
        <updated>2021-05-14T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[“Tree-shaking” is a must-have performance optimization when bundling JavaScript. In this article, we dive deeper on how exactly it works and how specs and practice intertwine to make bundles leaner and more performant. Plus, you’ll get a tree-shaking checklist to use for your projects.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Átila Fassina)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Frustrating Design Patterns That Need Fixing: Birthday Picker]]></title>
        <id>https://smashingmagazine.com/2021/05/frustrating-design-patterns-birthday-picker/</id>
        <link href="https://smashingmagazine.com/2021/05/frustrating-design-patterns-birthday-picker/"/>
        <updated>2021-05-12T12:42:00.000Z</updated>
        <summary type="html"><![CDATA[In this new series of articles on UX, we take a closer look at some frustrating design patterns and explore better alternatives, along with plenty of examples to keep in mind when building or designing one. Let’s start with an infamous birthday picker.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Vitaly Friedman)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Little Smashing Stories]]></title>
        <id>https://smashingmagazine.com/2021/05/little-smashing-stories/</id>
        <link href="https://smashingmagazine.com/2021/05/little-smashing-stories/"/>
        <updated>2021-05-12T08:00:00.000Z</updated>
        <summary type="html"><![CDATA[Today marks the day we sent out our 300th edition of the Smashing Newsletter. This article is a little celebration in which we share little Smashing stories from people working behind the scenes.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Vitaly Friedman)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Primer On CSS Container Queries]]></title>
        <id>https://smashingmagazine.com/2021/05/complete-guide-css-container-queries/</id>
        <link href="https://smashingmagazine.com/2021/05/complete-guide-css-container-queries/"/>
        <updated>2021-05-11T13:30:00.000Z</updated>
        <summary type="html"><![CDATA[A prototype of the long-awaited CSS container queries has landed in Chrome Canary and is available for experimentation. Let’s look at what problem is being solved, learn how container queries work, and see how they compare with and complement existing CSS features for layout.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Stephanie Eckles)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Conference Platform We Use For Our Online Events: Hopin]]></title>
        <id>https://smashingmagazine.com/2021/05/smashingconf-conference-platform-hopin/</id>
        <link href="https://smashingmagazine.com/2021/05/smashingconf-conference-platform-hopin/"/>
        <updated>2021-05-11T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[At the beginning of 2020, the SmashingConf team was ready for a new year. We had so many things that excited us. New speakers, new workshops, new cities, new attendees, new experiences. And as we all know, 2020 had other ideas. With so many people working from home, we thought we would bring our [Smashing workshops](https://smashingconf.com/online-workshops/) from our home offices to yours — but how?]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Amanda Annandale)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Get Started With React By Building A Whac-A-Mole Game]]></title>
        <id>https://smashingmagazine.com/2021/05/get-started-whac-a-mole-react-game/</id>
        <link href="https://smashingmagazine.com/2021/05/get-started-whac-a-mole-react-game/"/>
        <updated>2021-05-10T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[Want to get started with React but struggling to find a good place to start? This article should have you covered. We’ll focus on some of the main concepts of React and then we’ll be building a game from scratch!]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Jhey Tompkins)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.4.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.4.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.4.0"/>
        <updated>2021-05-10T08:55:42.000Z</updated>
        <summary type="html"><![CDATA[Added: Basic theme customization: Demo | Source | Docs.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.6.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.6.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.6.0"/>
        <updated>2021-05-10T08:15:20.000Z</updated>
        <summary type="html"><![CDATA[Added: Link from the title of a subscription to its website.
Added: Store feedUrl and siteUrl for each source in cache.
Added: Semantic element (<time>) for timestamp on the UI.
Added: Semantic API for theming the default template. Demo | Source | Docs
Changed: Moved feed metadata from article level to feed level in cache.
Fixed: Any html-like text was stripped from title. Fixed with encoded text.
Removed: href for each source in cache. The value was never used so it's not a breaking change.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.5.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.5.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.5.0"/>
        <updated>2021-05-08T05:16:47.000Z</updated>
        <summary type="html"><![CDATA[Added: Atom feed generator
Added: Customizable site title
Added: Copy all files from static directory to the root of the site.
Changed: Favicon, css, and js assets now existing at site root level.
Chore: Excluded testing files from repo.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Organize Product-Related Assets And Collaborate Better]]></title>
        <id>https://smashingmagazine.com/2021/05/product-records-organization-collaboration-best-practices/</id>
        <link href="https://smashingmagazine.com/2021/05/product-records-organization-collaboration-best-practices/"/>
        <updated>2021-05-07T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[How do you organize your Google Drive assets? How do you name your Dropbox Paper documents? How do you deal with comments? Let’s get it right.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Valeriia Panina)</name>
        </author>
    </entry>
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2021-11-15T01:03:00.868Z</id>
    <title>osmos::feed</title>
    <updated>2021-11-15T01:03:00.868Z</updated>
    <generator>osmosfeed 1.11.3</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[Open Up The Cloud Newsletter #27 (August and September Recap 2021)]]></title>
        <id>https://dev.to/aws-builders/open-up-the-cloud-newsletter-27-august-and-september-recap-2021-a79</id>
        <link href="https://dev.to/aws-builders/open-up-the-cloud-newsletter-27-august-and-september-recap-2021-a79"/>
        <updated>2021-11-15T00:08:00.000Z</updated>
        <summary type="html"><![CDATA[Reading this somewhere that‚Äôs not your email inbox? sign-up here.
‚Äî

Well hello, there cloud friend!
The keen-eyed among you will realize this is a double-edition newsletter because there was in fact no newsletter in August! Why? Because I took a little time off! üèñ But, we‚Äôre back to it, and for this month only, I‚Äôll summarise two months, as opposed to one.

Let‚Äô get into it‚Ä¶
If you only read one or two things this month, let it be this.
The Cloud Resume Challenge Book ‚Äî It should be pretty well known at this point that I‚Äôm a big fan of the Cloud Resume Challenge (check out the full series on YouTube) set up by Forrest Brazeal. Earlier on this month, Forrest released a companion book to the challenge. The book is totally optional, but full of useful tips about getting into the cloud indus‚Ä¶]]></summary>
        <author>
            <name>Lou (üöÄ Open Up The Cloud ‚òÅÔ∏è)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Gerenciando processos no¬†Linux]]></title>
        <id>https://dev.to/mdcg/gerenciando-processos-no-linux-5m</id>
        <link href="https://dev.to/mdcg/gerenciando-processos-no-linux-5m"/>
        <updated>2021-11-14T22:01:57.000Z</updated>
        <summary type="html"><![CDATA[Introdu√ß√£o


Provavelmente voc√™ j√° deve ter ouvido sobre "processos" enquanto estava mexendo em seu computador. A maioria de n√≥s talvez s√≥ nos damos conta da exist√™ncia deles em "momentos ruins", por exemplo, quando alguma aplica√ß√£o est√° travada e temos que "finalizar o processo dela". Contudo, fora o conhecimento em saber como finalizar o "bendito" para voc√™ continuar exercendo suas atividades, algo important√≠ssimo tamb√©m √© entender qual √© a real import√¢ncia de um processo.
Quando estamos trabalhando em um ambiente multiprogramado/multitarefa, o Sistema Operacional (SO) √© respons√°vel por gerenciar diversos programas executados "concorrentemente", controlando o compartilhamento dos recursos para cada um deles. Para que isso seja poss√≠vel, todo programa executado deve sempre estar associado‚Ä¶]]></summary>
        <author>
            <name>Mauro de Carvalho</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[TypeScript ANY vs UNKNOWN‚ÄîA Deep Dive]]></title>
        <id>https://dev.to/tomdohnal/typescript-any-vs-unknown-a-deep-dive-3iem</id>
        <link href="https://dev.to/tomdohnal/typescript-any-vs-unknown-a-deep-dive-3iem"/>
        <updated>2021-11-14T21:23:30.000Z</updated>
        <summary type="html"><![CDATA[In this blog post, we'll dive deep into what any and unknown types are, what are their similarities and differences, and when (not) to use them.
(You can find a video version of this article on YouTube! üì∫)





  
  
  TLDR;





// ANY
const anyValue: any = 'whatever'

// OK in TypeScript (error in runtime!) üëá
anyValue.do.something.stupid() 


// UNKNOWN
const unknownValue: unknown = 'whatever, too'

// Fails TypeScript check (prevents runtime error) üëá
unknownValue.do.something.stupid() 

Mnemonics to help you remember the difference üëá
any -> first letter is an "A" -> Avoid TypeScript
unknown -> first letter is a "U" -> Use TypeScript
The any Type
The unknown Type
Use Cases

any Type


The any type is something like an escape hatch from TypeScript. 
What does that mean?
If your variab‚Ä¶]]></summary>
        <author>
            <name>Tom Dohnal</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Criando um pendrive boot√°vel live com Kali¬†Linux]]></title>
        <id>https://dev.to/mdcg/criando-um-pendrive-bootavel-live-com-kali-linux-3j5l</id>
        <link href="https://dev.to/mdcg/criando-um-pendrive-bootavel-live-com-kali-linux-3j5l"/>
        <updated>2021-11-14T20:39:03.000Z</updated>
        <summary type="html"><![CDATA[Introdu√ß√£o


Se voc√™ j√° faz parte ou tem interesse de entrar no mundo do hackvismo, provavelmente j√° deve ter ouvido falar do Kali Linux. Nessa postagem, eu pretendo falar um pouco sobre essa distribui√ß√£o, e tamb√©m, ensin√°-lo como voc√™ pode estar criando um pendrive boot√°vel no modo live com o mesmo, utilizando apenas a linha de comando do seu terminal. Sem mais delongas, vamos come√ßar!
PS: Caso voc√™ n√£o saiba o que √© "boot√°vel no modo live", significa que voc√™ poder√° inicializar o sistema operacional direto do seu pendrive, com isso, voc√™ n√£o precisar√° necessariamente fazer a instala√ß√£o do Kali Linux em sua pr√≥pria m√°quina.
O Kali Linux √© uma distribui√ß√£o GNU/Linux baseada no Debian, totalmente open source, que √© mantido e financiado pela Offensive Security. Ele √© usado para pentesting, a‚Ä¶]]></summary>
        <author>
            <name>Mauro de Carvalho</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Criando um pendrive boot√°vel live com Kali¬†Linux]]></title>
        <id>https://dev.to/mdcg/criando-um-pendrive-bootavel-live-com-kali-linux-3j5l</id>
        <link href="https://dev.to/mdcg/criando-um-pendrive-bootavel-live-com-kali-linux-3j5l"/>
        <updated>2021-11-14T20:39:03.000Z</updated>
        <summary type="html"><![CDATA[Introdu√ß√£o


Se voc√™ j√° faz parte ou tem interesse de entrar no mundo do hackvismo, provavelmente j√° deve ter ouvido falar do Kali Linux. Nessa postagem, eu pretendo falar um pouco sobre essa distribui√ß√£o, e tamb√©m, ensin√°-lo como voc√™ pode estar criando um pendrive boot√°vel no modo live com o mesmo, utilizando apenas a linha de comando do seu terminal. Sem mais delongas, vamos come√ßar!
PS: Caso voc√™ n√£o saiba o que √© "boot√°vel no modo live", significa que voc√™ poder√° inicializar o sistema operacional direto do seu pendrive, com isso, voc√™ n√£o precisar√° necessariamente fazer a instala√ß√£o do Kali Linux em sua pr√≥pria m√°quina.
O Kali Linux √© uma distribui√ß√£o GNU/Linux baseada no Debian, totalmente open source, que √© mantido e financiado pela Offensive Security. Ele √© usado para pentesting, a‚Ä¶]]></summary>
        <author>
            <name>Mauro de Carvalho</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Lambda container approach in AWS]]></title>
        <id>https://dev.to/icncsx/lambda-container-approach-in-aws-23p4</id>
        <link href="https://dev.to/icncsx/lambda-container-approach-in-aws-23p4"/>
        <updated>2021-11-14T19:28:24.000Z</updated>
        <summary type="html"><![CDATA[Zip vs Container Approach


There are two ways to use Lambda functions in AWS. One is to provide the deployable artifact in the form of a zip file. You then have a variety of runtimes you can choose from: https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html.
The other approach is the Lambda container approach. IMO, the container approach to Lambda management has two main advantages over the zip approach. 
Runtime selection


With the zip approach, you have to rely on Amazon supporting the desired runtime. For example, if your code depends on Python3.10, you better hope that Amazon supports that. In a container approach however, the runtime is something you have full control over. Just make sure either your base image supports the runtime or you install the runtime as part of one of your RUN statements.
Building dependencies


Non-native packages such as pandas, lxml, etc have to be built in the target environment for the compiled binaries to work. For example, if you build pandas on Mac, then the compiled binaries will work on Mac - not on Amazon Linux 2 which is what Lambda runs on.
With containers, you no longer have to worry about building for a target OS, as you're able to encapsulate OS details in an image. Put simply, the image you build locally will just work in Lambda. How easy is that!]]></summary>
        <author>
            <name>DH Kim</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Run a Scalable Magento Webshop with User Content Moderation on AWS using CDK and Python]]></title>
        <id>https://dev.to/mjraadi/run-a-scalable-magento-webshop-with-user-content-moderation-on-aws-using-cdk-and-python-mdg</id>
        <link href="https://dev.to/mjraadi/run-a-scalable-magento-webshop-with-user-content-moderation-on-aws-using-cdk-and-python-mdg"/>
        <updated>2021-11-14T19:22:16.000Z</updated>
        <summary type="html"><![CDATA[The AWS CDK is a software development framework from AWS with the sole purpose of making it easy to define cloud infrastructure in your favorite programming language and deploy it using AWS CloudFormation. You can easily provision many resource stacks on AWS and destroy them when you're done.
We're going to build an infrastructure and the required resources to run a flexible, scalable and cost-effective Magento webshop on top of AWS.
AWS Account & User - Get help here

AWS CLI Installed & Configured - Get help here

Node.js Installed - Get help here

AWS CDK Installed & Configured - Get help here

Python 3 Installed & Configured - Get help here




  
  
  Project Architecture




A VPC that spans two Availability Zones. Each Availability Zone is configured with a private, isolated, and a ‚Ä¶]]></summary>
        <author>
            <name>Mohammadjavad Raadi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Monster 1.24.0 released]]></title>
        <id>https://dev.to/schukai/monster-1240-released-552n</id>
        <link href="https://dev.to/schukai/monster-1240-released-552n"/>
        <updated>2021-11-14T18:59:38.000Z</updated>
        <summary type="html"><![CDATA[Today we released the latest edition of our Monster project. Monster is a collection of javascript classes that we need for daily work in our web projects.
Besides small helper functions and classes it also provides useful functions to enable reactive programming.
We would like to briefly describe the changes here.
In this version, the Transformer class has been extended with useful commands:
debug, to-base64, from-base64, path-exists, nth-key, nth-last-key, first, last and optimzed default.
The commands allow access to certain properties of objects. 
The nth-key command allows access to the nth key. The object keys are sorted.
import {Transformer} from 'https://cdn.jsdelivr.net/npm/@schukai/monster@1.24.0/dist/modules/data/transformer.js';

const transformer = new Transformer("nth-key:1")‚Ä¶]]></summary>
        <author>
            <name>Volker Schukai</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[installed-check 5.0.0: Robustness galore]]></title>
        <id>https://dev.to/voxpelli/installed-check-500-robustness-galore-2gjc</id>
        <link href="https://dev.to/voxpelli/installed-check-500-robustness-galore-2gjc"/>
        <updated>2021-11-14T18:56:43.000Z</updated>
        <summary type="html"><![CDATA[A few seconds ago I shipped version 5.0.0 of installed-check CLI and its companion installed-check-core module, delivering a more robust, more well tested and all-round better tool.
installed-check do?


It check's that your project's engine.node is equal to, or a subset of, of that of your dependencies.
Replaced old @voxpelli/semver-set, a fork of another project, with a brand new rewritten from scratch 3.x version of it.
The new @voxpelli/semver-set is well tested and hardened ‚Äì all to ensure better intersection calculations of semantic versioning ranges ‚Äì essential for calculating engine.node compatibility. Eg. ^10.17.0 || >=12.0.0 and >=8.0.0 now properly calculates.
The new @voxpelli/semver-set also fixes an issue with the license of the former module. Since its a full rewrite I could pick a license myself, so it's now under MIT.
Other news for the installed-check modules includes a swap from the non-standard VError to my pony-cause pony-fill for the now standardised Error Causes
installed-check in general now also has much more tests and have fixes for issues those tests uncovered, making for a much more robust experience going forward.
Add it to your project:
npm install -d installed-check@latest

Then add it (early) to the tests in your package.json:
"scripts": {
  "test": "installed-check"
}

A more full-featured example can be found in eg. my list-installed project.
Happy compatibility checking! ü•≥]]></summary>
        <author>
            <name>Pelle Wessman</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Binary/Hex Conversion in Linux Shell with xxd [RE#13]]]></title>
        <id>https://dev.to/babakks/binaryhex-conversion-in-linux-shell-with-xxd-re13-2cjd</id>
        <link href="https://dev.to/babakks/binaryhex-conversion-in-linux-shell-with-xxd-re13-2cjd"/>
        <updated>2021-11-14T18:30:00.000Z</updated>
        <summary type="html"><![CDATA[It‚Äôs not that unusual to need to see/check/verify the binary output of a shell command in HEX format. Clearly, I mean without picking up a HEX editor or something like that. Last time, it happened to me a few days ago when I was to inspect the content of a base64-encoded string. The tool to the rescue is (of course not limited to) xxd. üèÖ
Using xxd, to get the HEX representation for some binary content you just need to call it with no argument:
echo -n 'Computer says: "Hello World!"' | xxd

Depending on the case it could be more insightful to also have the ASCII values column. That‚Äôs simply done by calling xxd with -C option:
echo -n 'Computer says: "Hello World!"' | xxd -C

Which results in such a neat output:
00000000: 436f 6d70 7574 6572 2073 6179 733a 2022 Computer says: "
00000010: 4865 6c6c 6f20 576f 726c 6421 22 Hello World!"

Also, xxd can do things the other way. For instance, may you need to turn a HEX string into a binary content, just call xxd with -r option, like this:
echo -n "0x48656c6c6f20576f726c6421" | xxd -r

Which would result in:
Hello World!

There are more xxd options which you can find by checking:
xxd --help

or
man xxd

About Regular Encounters

I‚Äôve decided to record my daily encounters with professional issues on a somewhat regular basis. Not all of them are equally important/unique/intricate, but are indeed practical, real, and of course, textually minimal.]]></summary>
        <author>
            <name>Babak K. Shandiz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[.Net Core vs NodeJS (Resumen)]]></title>
        <id>https://dev.to/arielcalix/net-core-vs-nodejs-resumen-275h</id>
        <link href="https://dev.to/arielcalix/net-core-vs-nodejs-resumen-275h"/>
        <updated>2021-11-14T18:19:01.000Z</updated>
        <summary type="html"><![CDATA[Hola Amigos y bienvenidos a este vs entre dos tecnolog√≠as, en esta ocasion haremos un resumen de los que hemos venido Hablando.
Como lo hemos dicho anteriormente, hablar de cada una y confrontarlas no es que queramos hacerte usar una o la otra, por el contrario, que tengas un panorama m√°s amplio sobre cada una y los proyectos que pueden realizar en cada uno para que as√≠ completes el proyecto sin problemas, cada una tiene sus bondades para un proyecto en espec√≠fico que la otra no posea y viceversa, queda a tu elecci√≥n cual usar. Solamente ten en cuenta que para el lado web, tanto a nivel de cliente como servidor NodeJS es bastante rapido lo que lo hace un gran candidato y ganador es ese ambito, mientras que en proyectos transaccionales .Net Core se lleva el premio.



.Net Core
NodeJS




Es Multiplataforma
Es multiplataforma


Sistema de almacenamiento en cache confiable
Base de C√≥digo √∫nica y potente


Implementacion y mantenimiento flexible y sencillo
Escalabilidad e implementaci√≥n seguras






.Net Core
NodeJS




Soporte relacional de objetos limitado
Bloqueo de E/S


La brecha entre el lanzamiento y la estabilidad
Estandarizaci√≥n de librerias.






.Net Core
NodeJS




Web, mismas que pueden ser desplegadas en Windows, Linux o Mac OS
Aplicaciones de chat en tiempo real


Aplicaciones con Docker, en cualquiera de las nubes ya sea (Azure, AWS o GCP)
Aplicaciones web


Aplicaciones de Escritorio UWP lo que permite que tus apps sean ejecutadas en Windows 10, XBOX y HoloLens
Servicios de API Rest


IoT
IoT


IA
Streaming de datos


Desarrollo de juegos
Aplicaciones complejas de una sola P√°gina



En resumen, cada una de ellas est√° en continuo desarrollo para el soporte de distintos proyectos y arquitecturas, queda de t√≠ implementarlos de la mejor forma.
Me despedido, y espero les agrade este vs, espero sus comentarios.
Imagen por Marius Niveri en Unsplash]]></summary>
        <author>
            <name>Ariel Calix</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[C3.js][TypeScript] Draw line charts 1]]></title>
        <id>https://dev.to/masanori_msl/c3jstypescript-draw-line-charts-1-1g0</id>
        <link href="https://dev.to/masanori_msl/c3jstypescript-draw-line-charts-1-1g0"/>
        <updated>2021-11-14T17:46:03.000Z</updated>
        <summary type="html"><![CDATA[Intro


This time, I will try drawing line charts with specific design.
I have tried drawing line charts with Chart.js.
„ÄêTypeScript„ÄëTry Chart.js
[TypeScript][Chart.js] Play my own voice 3
But because I couldn't find how to draw additional lines with specific format like dashed lines.
C3.js | D3-based reusable chart library
Node.js ver.17.0.1
TypeScript ver.4.4.4
C3 ver.0.7.20
PostCSS ver.8.3.11
Webpack ver.5.61.0
@types/c3 ver.0.7.6
postcss-cli ver.9.0.2
postcss-import ver.14.0.2
ts-loader ver.9.2.6
ts-node ver.10.4.0
webpack-cli ver.4.9.1
First, I will try drawing line charts with sample data.
<!DOCTYPE html>
<html lang="en">
    <head>
        <title>chart sample</title>
        <meta charset="utf-8">
        <link href="css/chart.page.css" rel="stylesheet" />
    </head>
    <body>
    ‚Ä¶]]></summary>
        <author>
            <name>Masui Masanori</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Track App Interactions with TraceContext]]></title>
        <id>https://dev.to/capndave/track-app-interactions-with-tracecontext-5da9</id>
        <link href="https://dev.to/capndave/track-app-interactions-with-tracecontext-5da9"/>
        <updated>2021-11-14T17:16:43.000Z</updated>
        <summary type="html"><![CDATA[This is a placeholder


testing 123]]></summary>
        <author>
            <name>David Thompson</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[I made a neovim plugin]]></title>
        <id>https://dev.to/waylonwalker/i-made-a-neovim-plugin-k2j</id>
        <link href="https://dev.to/waylonwalker/i-made-a-neovim-plugin-k2j"/>
        <updated>2021-11-14T16:07:39.000Z</updated>
        <summary type="html"><![CDATA[I've slowly adding more and more lua functions into my neovim configuration, and recently I noticed a pattern for a class of functions that reach out to run shell commands that can be abstracted away.





  
  
  Telegraph.nvim


Check out the project readme for the most up to date details on the plugin itself.
I want a simple way to make remaps into shell commands that can open new tmux windows, popups, or just run a command with context from the editor.
For example I want to make remaps to do things like open the current file in lookatme.
# vim :terminal
nnoremap <leader>s <cmd>Telegraph pipx run lookatme {filepath} --live-reload --style gruvbox-dark<cmd>

# tmux session
nnoremap <leader><leader>s <cmd>lua require'telegraph'.telegraph({cmd='pipx run lookatme {filepath} --live-reload --s‚Ä¶]]></summary>
        <author>
            <name>Waylon Walker</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Setting up a single-node Hadoop cluster]]></title>
        <id>https://dev.to/donaldsebleung/setting-up-a-single-node-hadoop-cluster-p0a</id>
        <link href="https://dev.to/donaldsebleung/setting-up-a-single-node-hadoop-cluster-p0a"/>
        <updated>2021-11-14T15:04:08.000Z</updated>
        <summary type="html"><![CDATA[In this article, we will see Hadoop in action by configuring a single-node cluster on Ubuntu 20.04.
Before we start, it is assumed that you are:
Familiar with basic Linux commands and operation
Aware of what Hadoop is and how it works




  
  
  Initial setup


Set up a virtual machine (VM) or cloud instance (or physical machine, if you wish) with a fresh installation of Ubuntu 20.04. Ensure that the VM or cloud instance is reachable from the host (with ping or otherwise), and that the appropriate ports are open if a firewall is enabled. For the purposes of this tutorial, you may wish to disable the firewall (the default in Ubuntu 20.04) and / or enable all inbound traffic for the security group (or equivalent) associated with the cloud instance if you are using one, though note that you ‚Ä¶]]></summary>
        <author>
            <name>Donald Sebastian Leung</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[RxJS Marble tests in Angular]]></title>
        <id>https://dev.to/tomwebwalker/rxjs-marble-tests-in-angular-5fjl</id>
        <link href="https://dev.to/tomwebwalker/rxjs-marble-tests-in-angular-5fjl"/>
        <updated>2021-11-14T14:39:28.000Z</updated>
        <summary type="html"><![CDATA[Description


There is an excellent feature called Marble tests from RxJS to test asynchronous code synchronously. We could easily use it in Angular unit tests. I have made a few basic examples about testing code by Marble tests in Angular.
My project is using Angular, so I have created a new project (using Angular CLI) by typing in console:
ng new marble-tests

My demo project is quite simple, so I answered no on
I have made a simple dummy service for getting data. All of its methods return observables using of operator, which returns the stream from given arguments. The complete code is below.
import { Injectable } from '@angular/core';
import { Observable, of } from 'rxjs';

@Injectable({
  providedIn: 'root',
})
export class DataService {
  constructor() {}

  getList$(): Observable<st‚Ä¶]]></summary>
        <author>
            <name>Tomasz Flis</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Authorization And Create Roles For Users]]></title>
        <id>https://dev.to/heshamd/authorization-and-create-roles-for-users-4mka</id>
        <link href="https://dev.to/heshamd/authorization-and-create-roles-for-users-4mka"/>
        <updated>2021-11-14T14:36:52.000Z</updated>
        <summary type="html"><![CDATA[Hello guys, I am creating a website now and i need to make different roles for different users so each user will appear for him/her pages based on his role in the database. anyone has a good tutorial about this]]></summary>
        <author>
            <name>Hesham Eldawy</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Firebase Cloud Functions Jest Setup with TypeScript & Mocking]]></title>
        <id>https://dev.to/carlomigueldy/firebase-cloud-functions-jest-setup-with-typescript-mocking-khn</id>
        <link href="https://dev.to/carlomigueldy/firebase-cloud-functions-jest-setup-with-typescript-mocking-khn"/>
        <updated>2021-11-14T14:22:30.000Z</updated>
        <summary type="html"><![CDATA[Overview


As the backend requirements grows with 0% test coverage, the harder it is to maintain the project or even scale due to bugs coming out from anywhere. Debugging without tests also takes so much time to have to manually open the app, login using the credentials that you remember for a particular user role, and finally following the necessary steps to replicate the bug only to read off the error message or find out if it's working. It's a waste of time writing functionalities without tests, you didn't actually "save" time by not writing tests. 
We're only going to cover how to setup Jest with TypeScript and a basic unit test and fairly simple mocking to a class that we want to mock a response value of a certain method.
Setting up Jest on Cloud Functions is fairly simple and straigh‚Ä¶]]></summary>
        <author>
            <name>Carlo Miguel Dy</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to add toastr module to Angular project]]></title>
        <id>https://dev.to/mightytechno/how-to-add-toastr-module-to-angular-project-34ki</id>
        <link href="https://dev.to/mightytechno/how-to-add-toastr-module-to-angular-project-34ki"/>
        <updated>2021-11-14T13:59:54.000Z</updated>
        <summary type="html"><![CDATA[In any web application showing the alert or message to indicate the different status is required functionality to have which help to understand the users what is happening under the hood.
First, open the terminal and run the following command inside your project to install the ngx-toastr plugin
npm install ngx-toastr --save

Next, you need to install animation package which is required to toastr plugin.
npm install @angular/animations --save

Next open angular.json and add the following style which is required for toastr.
"styles": [
       "src/styles.scss",
       "node_modules/ngx-toastr/toastr.css"
  ],

Next open app.module.js file and import BrowserAnimationsModule and ToastrModule.
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';

import { ToastrModule‚Ä¶]]></summary>
        <author>
            <name>Mighty</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to add toastr module to Angular project]]></title>
        <id>https://dev.to/mightytechno/how-to-add-toastr-module-to-angular-project-34ki</id>
        <link href="https://dev.to/mightytechno/how-to-add-toastr-module-to-angular-project-34ki"/>
        <updated>2021-11-14T13:59:54.000Z</updated>
        <summary type="html"><![CDATA[In any web application showing the alert or message to indicate the different status is required functionality to have which help to understand the users what is happening under the hood.
First, open the terminal and run the following command inside your project to install the ngx-toastr plugin
npm install ngx-toastr --save

Next, you need to install animation package which is required to toastr plugin.
npm install @angular/animations --save

Next open angular.json and add the following style which is required for toastr.
"styles": [
       "src/styles.scss",
       "node_modules/ngx-toastr/toastr.css"
  ],

Next open app.module.js file and import BrowserAnimationsModule and ToastrModule.
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';

import { ToastrModule‚Ä¶]]></summary>
        <author>
            <name>Mighty</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[InterSystems Security Contest]]></title>
        <id>https://dev.to/intersystemsdev/intersystems-security-contest-1fe2</id>
        <link href="https://dev.to/intersystemsdev/intersystems-security-contest-1fe2"/>
        <updated>2021-11-14T12:49:24.000Z</updated>
        <summary type="html"><![CDATA[Security¬†wanted!
Welcome to the next InterSystems online¬†programming competition:¬†
üèÜ¬†InterSystems Security¬†Contest¬†üèÜ
Duration:¬†November 15 - December 05, 2021
Prizes: $9,450 in prizes!

Prizes
1. Experts Nomination¬†- a specially selected jury will determine winners:
1st place - $4,000¬†



  ü•à¬†2nd place - $2,000¬†



  ü•â¬†3rd place - $1,000



  üåü 4-10th places - $100


2.¬†Community winners¬†-¬†applications that will receive the most votes¬†in total:
1st place - $1,000¬†



  ü•à¬†2nd place - $500¬†



  ü•â¬†3rd place - $250


If several participants score¬†the same amount of votes, they all are considered winners, and the money prize is shared among the winners.¬†¬†
Who can participate?
Any Developer Community member, except for InterSystems employees (ISC contractors allowed).¬†Create an account!
‚Ä¶]]></summary>
        <author>
            <name>InterSystems Developer</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA["bulletproof-react" is a hidden treasure of React best practices!]]></title>
        <id>https://dev.to/texmeijin/bulletproof-react-is-a-hidden-treasure-of-react-best-practices-3m19</id>
        <link href="https://dev.to/texmeijin/bulletproof-react-is-a-hidden-treasure-of-react-best-practices-3m19"/>
        <updated>2021-11-14T12:42:03.000Z</updated>
        <summary type="html"><![CDATA[The GitHub repository "bulletproof-react", which is published as an example of React application architecture, is very informative and I will share it with my own views.
https://github.com/alan2207/bulletproof-react
https://github.com/alan2207/bulletproof-react/blob/master/docs/project-structure.md
First, you can learn about the directory structure, which tends to vary from project to project.
src.


In bulletproof-react, React-related source code is stored under the src directory; conversely, there are no directories such as components or utils in the root directory.
For example, the default application created by Create Next App has source code directories such as pages in the root directory, so putting them under src is the intentional directory structure of this repository.
The root of‚Ä¶]]></summary>
        <author>
            <name>meijin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Deno-licious Workflow]]></title>
        <id>https://dev.to/gjzwiers/a-deno-licious-workflow-30cm</id>
        <link href="https://dev.to/gjzwiers/a-deno-licious-workflow-30cm"/>
        <updated>2021-11-14T12:37:28.000Z</updated>
        <summary type="html"><![CDATA[If there is one project that has increased my developer happiness, it is probably Deno. One of the best things is the ease at which one can set up a coding workflow and maintain a project with the combination of Deno, Git and the GitHub CLI.
With this workflow, pull requests (PRs) can be made and merged from a terminal, release notes can be generated automatically and releases are made in the blink of an eye. Once you get used to this workflow, it feels about as fluent as coding gets.
A GitHub Account
deno installed
gh (GitHub CLI) installed
git installed
Recommended:
an autocompletion tool for your terminal, e.g. oh-my-zsh for the zsh shell or posh-git for PowerShell
As Deno places more emphasis on security, let's begin by creating a key to sign our commits with. This way we can make veri‚Ä¶]]></summary>
        <author>
            <name>Geert-Jan Zwiers</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Extract text with AWS Textract using AWS Step functions]]></title>
        <id>https://dev.to/shivangchauhan7/extract-text-with-aws-textract-using-aws-step-functions-odc</id>
        <link href="https://dev.to/shivangchauhan7/extract-text-with-aws-textract-using-aws-step-functions-odc"/>
        <updated>2021-11-14T12:34:18.000Z</updated>
        <summary type="html"><![CDATA[Introduction


In this post, we will look into how we can extract text from an image with AWS Textract and then generate a pdf file and upload it to S3 bucket using AWS Step functions, we are going to deploy a serverless stack with three lambda functions, one lambda will be triggering our AWS step functions state machine and other lambdas will be used to extract the text from the image, generate the pdf and then upload it to S3 bucket.
Project setup


Our project structure will look like this

We will need to set up a basic serverless project with a serverless.yml file and our lambda functions, we also need to install aws-sdk to interact with AWS services, I‚Äôll not go into details on what is serverless.yml file is or how to set up a serverless project, for that you can check out this post.‚Ä¶]]></summary>
        <author>
            <name>Shivang Chauhan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to configure static IP Address in Linux]]></title>
        <id>https://dev.to/danielcristho/how-to-configure-static-ip-address-in-linux-3670</id>
        <link href="https://dev.to/danielcristho/how-to-configure-static-ip-address-in-linux-3670"/>
        <updated>2021-11-14T12:07:28.000Z</updated>
        <summary type="html"><![CDATA[When you use Ubuntu server or other Linux server, you need configures IP Address using CLI interactive. Now i can show you how to configures IP Address in Ubuntu and Debian. Let's start
Ubuntu
first, you should know where is the interface when you assign an IP. Type this command on your terminal:
$ ifconfig   
or
$ ip address

after that, so we can assign an IP to interface 'ens33' by type this command:
$ sudo nano /etc/netplan/01-netcfg.yaml

then type this:
network:
  ethernets:
    ens33:
      addresses: [172.16.238.20/24]
      gateway4: 172.16.238.2
      nameservers:
        addresses: [8.8.8.8]
  version: 2


after all, you must apply or enable the configure:
$ sudo netplan apply
$ ifconfig

2: ens33: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether 00:0c:29:77:41:f0 brd ff:ff:ff:ff:ff:ff
    inet 172.16.238.20/24 brd 172.16.238.255 scope global ens33
       valid_lft forever preferred_lft forever
    inet6 fe80::20c:29ff:fe77:41f0/64 scope link 
       valid_lft forever preferred_lft forever

Debian
Okay, after that i think you should configure too in Debian side. First thing, type this command on your Debian terminal:
$ nano /etc/network/interfaces

after that, add this command to assign an IP:
auto ens33
iface ens33 inet static
address 172.16.238.10/24
gateway 172.16.238.2
nameservers 8.8.8.8

finally, save it by type ctrl+s to save then ctrl+x to exit. Let's apply:
$ /ete/init.d/networking restart

[ ok ] Restarting networking (via systemctl): networking.service.

then check your IP configure:
$ ip address

2: ens33: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000
    link/ether 00:0c:29:a0:41:4e brd ff:ff:ff:ff:ff:ff
    inet 172.16.238.10/24 brd 172.16.238.255 scope global ens33
       valid_lft forever preferred_lft forever
    inet6 fe80::20c:29ff:fea0:414e/64 scope link 
       valid_lft forever preferred_lft forever]]></summary>
        <author>
            <name>Daniel Pepuho</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Productionizing Observable Notebooks with 3rd party Active Monitoring]]></title>
        <id>https://dev.to/tomlarkworthy/productionizing-observable-notebooks-with-3rd-party-active-monitoring-4jkg</id>
        <link href="https://dev.to/tomlarkworthy/productionizing-observable-notebooks-with-3rd-party-active-monitoring-4jkg"/>
        <updated>2021-11-14T11:43:13.000Z</updated>
        <summary type="html"><![CDATA[Productionizing Observable Notebooks with 3rd party Active Monitoring


I keep my 200+ public notebooks on the observablehq.com platform running by actively monitoring them with a 3rd party monitoring tool uptimerobot. Here is how I got it connected, and how I did it unobtrusively without altering the original notebooks.

Broken notebooks are a big problem. I have encountered many broken notebooks on observablehq.com, and then much later, I have written many more. The thing is, I did not know my old notebooks were broken until I randomly checked! I don't want to host broken notebooks, but I can't be checking 200 notebooks every week, it doesn't scale! Instead, I figured out a way to bring off-the-shelf monitoring solutions to the notebook ecosystem. The best thing is that it can be applied‚Ä¶]]></summary>
        <author>
            <name>Tom Larkworthy</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hangi Sunucu ƒ∞≈ületim Sistemini tercih etmeliyim?]]></title>
        <id>https://dev.to/aciklab/hangi-sunucu-isletim-sistemini-tercih-etmeliyim-am7</id>
        <link href="https://dev.to/aciklab/hangi-sunucu-isletim-sistemini-tercih-etmeliyim-am7"/>
        <updated>2021-11-14T10:47:43.000Z</updated>
        <summary type="html"><![CDATA[√áe≈üitli proje ve durumlarda ilk kar≈üƒ±mƒ±za √ßƒ±kan √∂nemli bir sorunun "hangi sunucu i≈ületim sistemini tercih etmeliyim?" olduƒüunu d√º≈ü√ºn√ºyorum. √á√ºnk√º en basitinden √ºzerine kurulacak uygulamanƒ±n baƒüƒ±mlƒ±lƒ±klarƒ±nƒ±n belirlenmesi, g√ºncelleme s√ºre√ßlerinin y√∂netilme s√ºre√ßleri i√ßin ortaya √ßƒ±kacak cevap olduk√ßa √∂nemli. 
Her ne kadar bu soru "konteynƒ±r" mimarileriyle birlikte √∂nemini biraz yitirse de sanal makine (VM) kullanƒ±mƒ±nƒ±n hala ciddi oranda kullanƒ±ldƒ±ƒüƒ± alanlarda bu yapƒ± devam etmektedir. Bu yazƒ±mda genel olarak konteynƒ±r sistemlerle ilgili bir yorum i√ßermemektedir. Bu konu hakkƒ±nda ayrƒ±ca bir yazƒ± yazma d√º≈ü√ºncem var.
Tercih etmeden √∂nce elimizde neler olduƒüu ve tabi ki sonrasƒ±nda bu se√ßeneklerin neler sunduklarƒ±na bakmak gerekir. Tabi ki bu yazƒ±yƒ± yazarken yani 2021 yƒ±lƒ± sonu ve T√ºrkiye piyasas‚Ä¶]]></summary>
        <author>
            <name>Ali Orhun Akkirman</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Getting started with FastAPI and Docker]]></title>
        <id>https://dev.to/j0kim/getting-started-with-fastapi-and-docker-204j</id>
        <link href="https://dev.to/j0kim/getting-started-with-fastapi-and-docker-204j"/>
        <updated>2021-11-14T10:47:26.000Z</updated>
        <summary type="html"><![CDATA[In this beginner‚Äôs guide, I will take you through the basic steps to get your first application running using FastAPI and Docker. 
Table of contents
FastAPI
Docker
Building a FastAPI application with Docker
FastAPI is a fast, modern, high performance, open source Python web framework used to build APIs with Python 3.6+. It is a minimalistic framework and quite new with a smaller community compared to Django and Flask but when it comes to performance, it is the fastest by far. It supports asynchronous programming, which is a plus. To learn more about fastAPI, visit their official docs here
Docker is a containerization platform. It enables you to build, run and ship your application, packages your code and all its dependencies enabling your application to run consistently across different co‚Ä¶]]></summary>
        <author>
            <name>Joachim Watkidog</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What happens when you type ‚Äúls -l *.c‚Äù in the shell?]]></title>
        <id>https://dev.to/hamicch/what-happens-when-you-type-ls-l-c-in-the-shell-522e</id>
        <link href="https://dev.to/hamicch/what-happens-when-you-type-ls-l-c-in-the-shell-522e"/>
        <updated>2021-11-14T10:45:39.000Z</updated>
        <summary type="html"><![CDATA[You have to understand what a shell is in relation to the kernel to understand what really happens when you run a command.

The Kernel is the most fundamental part of a computer operating system. It‚Äôs a program itself and it controls all other programs on the computer. It talks to hardware and software and is highly involved in resource management.
The Shell is an application that executes programs called commands through an interactive user interface with an operating system. It is the layer of programming that understands and executes the commands a user enters. In some systems, the shell is called a command interpreter.
Use the syntax below to write a command with an argument.
command [arg1] [arg2] .. [argn]

ls?


ls is a shell command that lists files and directories within a director‚Ä¶]]></summary>
        <author>
            <name>Hayatu Sanusi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Automate Azure Service Bus SAS tokens with Github]]></title>
        <id>https://dev.to/pwd9000/automate-azure-service-bus-sas-tokens-with-github-37ok</id>
        <link href="https://dev.to/pwd9000/automate-azure-service-bus-sas-tokens-with-github-37ok"/>
        <updated>2021-11-14T10:04:58.000Z</updated>
        <summary type="html"><![CDATA[Overview


In todays tutorial I will demonstrate how to use powerShell in Github Actions to automate Azure Service Bus SAS tokens to generate short lived usable tokens with a validity period of 10 minutes and securely store the newly generated SAS tokens inside of an Azure Key Vault ready for consumption.
We will create an Azure Service Bus and Key Vault and a single reusable github workflow to handle our SAS token requests as well as a service principal / Azure identity to fully automate everything. For the purpose of this demonstration we will also have a main workflow that is triggered manually. Our main workflow, when triggered, will first call our reusable github workflow that will generate our temporary SAS token that will only be valid for 10 minutes and store the SAS token inside o‚Ä¶]]></summary>
        <author>
            <name>Marcel.L</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Automate Azure Service Bus SAS tokens with Github]]></title>
        <id>https://dev.to/pwd9000/automate-azure-service-bus-sas-tokens-with-github-37ok</id>
        <link href="https://dev.to/pwd9000/automate-azure-service-bus-sas-tokens-with-github-37ok"/>
        <updated>2021-11-14T10:04:58.000Z</updated>
        <summary type="html"><![CDATA[Overview


In todays tutorial I will demonstrate how to use powerShell in Github Actions to automate Azure Service Bus SAS tokens to generate short lived usable tokens with a validity period of 10 minutes and securely store the newly generated SAS tokens inside of an Azure Key Vault ready for consumption.
We will create an Azure Service Bus and Key Vault and a single reusable github workflow to handle our SAS token requests as well as a service principal / Azure identity to fully automate everything. For the purpose of this demonstration we will also have a main workflow that is triggered manually. Our main workflow, when triggered, will first call our reusable github workflow that will generate our temporary SAS token that will only be valid for 10 minutes and store the SAS token inside o‚Ä¶]]></summary>
        <author>
            <name>Marcel.L</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Setup Node Version Manager (NVM) on macOS M1 Silicon]]></title>
        <id>https://dev.to/httpjunkie/setup-node-version-manager-nvm-on-mac-m1-7kl</id>
        <link href="https://dev.to/httpjunkie/setup-node-version-manager-nvm-on-mac-m1-7kl"/>
        <updated>2021-11-14T09:50:41.000Z</updated>
        <summary type="html"><![CDATA[As a web developer these days, we typically need to be able to switch versions of Node on the fly, for this we want to install Node Version Manager on a clean install of our machine, we don't want to start by installin Node on it's own as this will give us a single version of Node (whichever we decide to install)
If you install Node first and then try to install NVM, things can get complicated, so if you have already installed Node, my suggestion is to completely remove it before installing NVM.
As well, NVM is explicitly not supported when installed via homebrew - the only correct way to install it is with the install script in NVM's Readme.
So if you have a Mac M1, these are the steps I would encourage you to try.
Navigate to your home directory




cd ~

Create a .zshrc file (if it does‚Ä¶]]></summary>
        <author>
            <name>Eric Bishard</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Setup Node Version Manager (NVM) on macOS M1 Silicon]]></title>
        <id>https://dev.to/httpjunkie/setup-node-version-manager-nvm-on-mac-m1-7kl</id>
        <link href="https://dev.to/httpjunkie/setup-node-version-manager-nvm-on-mac-m1-7kl"/>
        <updated>2021-11-14T09:50:41.000Z</updated>
        <summary type="html"><![CDATA[As a web developer these days, we typically need to be able to switch versions of Node on the fly, for this we want to install Node Version Manager on a clean install of our machine, we don't want to start by installin Node on it's own as this will give us a single version of Node (whichever we decide to install)
If you install Node first and then try to install NVM, things can get complicated, so if you have already installed Node, my suggestion is to completely remove it before installing NVM.
As well, NVM is explicitly not supported when installed via homebrew - the only correct way to install it is with the install script in NVM's Readme.
So if you have a Mac M1, these are the steps I would encourage you to try.
Navigate to your home directory




cd ~

Create a .zshrc file (if it does‚Ä¶]]></summary>
        <author>
            <name>Eric Bishard</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to enable passwordless sudo in Linux]]></title>
        <id>https://dev.to/danielcristho/how-passwordless-sudo-in-linux-14c0</id>
        <link href="https://dev.to/danielcristho/how-passwordless-sudo-in-linux-14c0"/>
        <updated>2021-11-14T09:22:33.000Z</updated>
        <summary type="html"><![CDATA[I can show you many steps to configure passwordless sudo for specific user: 
1.open your terminal and type this to add new user:
$ sudo adduser demo
Adding user `demo' ...
Adding new group `demo' (1004) ...
Adding new user `demo' (1004) with group `demo' ...
Creating home directory `/home/demo' ...
Copying files from `/etc/skel' ...
New password: 
Retype new password: 
passwd: password updated successfully
Changing the user information for demo
Enter the new value, or press ENTER for the default
    Full Name []: 
    Room Number []: 
    Work Phone []: 
    Home Phone []: 
    Other []: 
Is the information correct? [Y/n] y

2.after that type:
$ sudo visudo

3.go down to the bottom, then add this to assign a new user become sudo:
demo ALL=(ALL:ALL) ALL

4.done, now you have new user, that will able to execute sudo command without providing a sudo password.
N/B: in Debian you must install sudo:
$ apt install sudo]]></summary>
        <author>
            <name>Daniel Pepuho</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Node.js Event Loop In Action]]></title>
        <id>https://dev.to/altamashali/nodejs-event-loop-in-action-d5o</id>
        <link href="https://dev.to/altamashali/nodejs-event-loop-in-action-d5o"/>
        <updated>2021-11-14T07:20:22.000Z</updated>
        <summary type="html"><![CDATA[In my last post(Deep dive into Node.js Architecture), we learnt about the internals of Node.js and how multiple asynchronous operations work efficiently in a single-threaded environment. We also talked about how event loop works and facilitates the event-driven architecture of Node.js. I would recommend going through my previous post before reading this one.
In this article, we are going to learn more about event loop and it's different phases along with a code example.
Before we start, you might ask why does a Node.js developer need to know about Event loop. The answer to this is:
event loop is the one that handles all the scheduling of your application code and any misconceptions regarding this can lead to poor performance and buggy code,


and it is a very important interview question i‚Ä¶]]></summary>
        <author>
            <name>Altamash Ali</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Getting Started With FastAPI and Docker]]></title>
        <id>https://dev.to/kenny_me/getting-started-with-fastapi-and-docker-1hd7</id>
        <link href="https://dev.to/kenny_me/getting-started-with-fastapi-and-docker-1hd7"/>
        <updated>2021-11-14T07:11:39.000Z</updated>
        <summary type="html"><![CDATA[For those of us in the tech industry, we may have come across the phrase 'API' several times. It is important to clarify what an API means. An API is the gateway to your application, the interface that users and other services can use to interact with it. Traditionally, building APIs has been a challenging task until recently when web frameworks like FastAPI were introduced. FastAPI is a modern, fast and high-perfomance web framework for building APIs with Python 3.6+ based on standard Python type hints. Today, we are going to take a deep dive into how FastAPI works and also learn what Docker is.
Since I have already outlined what FastAPI is, I shall discuss a few thing about Docker. Docker is an open source containerization platform which enables developers to package applications into co‚Ä¶]]></summary>
        <author>
            <name>Magoto_devv</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[React File upload]]></title>
        <id>https://dev.to/suhakim/react-file-upload-4ak0</id>
        <link href="https://dev.to/suhakim/react-file-upload-4ak0"/>
        <updated>2021-11-14T05:48:01.000Z</updated>
        <summary type="html"><![CDATA[Hey there,Today we are going to discuss about react file uploading.We MERN developers use multer from our file uploading.But in some case when we are doing a demo project or practicing some thing then if i have to setup whole multer code base then it is horrible.For that today i am going to show you how can you upload a file using a react package called react-file-base64.
Today we are going to build the following app

Now,at first setup out project 
create a folder on Desktop and get init it
$ cd Desktop
$ mkdir react-file-upload
$ cd react-file-upload

and then create brand new react project with typescript
$ npx create-react-app ./ --template typescript

Now clean up all unnecessary files and get started
At the top of App.tsx file import
import FileBase from 'react-file-base64'

Now add ‚Ä¶]]></summary>
        <author>
            <name>sadiul hakim</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[conexi√≥n segura ssh para la RaspberryPi(FreeBSD,Linux)]]></title>
        <id>https://dev.to/gloriousmusketeer/conexion-segura-ssh-para-la-raspberrypifreebsdlinux-4ci0</id>
        <link href="https://dev.to/gloriousmusketeer/conexion-segura-ssh-para-la-raspberrypifreebsdlinux-4ci0"/>
        <updated>2021-11-14T03:46:12.000Z</updated>
        <summary type="html"><![CDATA[OpenSSH SSH client(SSH) es un protocolo de administraci√≥n remota que le permite a los usuarios controlar y modificar sus servidores remotos a trav√©s de Internet a trav√©s de un mecanismo de autenticaci√≥n.
La conexi√≥n SSH est√° cifrada de extremo a extremo adem√°s de necesitar una autenticaci√≥n para poder conectar al servidor. SSH funciona de manera similar a Telnet, pero al contrario que este, con SSH todos los datos que se env√≠an desde el cliente al servidor, y los que se reciban desde el servidor al cliente viajan cifrados para que nadie pueda interceptar la informaci√≥n dotando de una capa extra de seguridad con respecto a Telnet.
Este tutorial de SSH cubrir√° los conceptos b√°sicos de c√≥mo funciona, junto con las tecnolog√≠as subyacentes utilizadas por el protocolo SSH para ofrecer un m√©todo ‚Ä¶]]></summary>
        <author>
            <name>Glorious Musketeer‚Ñ¢</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[conexi√≥n segura ssh para la RaspberryPi(FreeBSD,Linux)]]></title>
        <id>https://dev.to/gloriousmusketeer/conexion-segura-ssh-para-la-raspberrypifreebsdlinux-4ci0</id>
        <link href="https://dev.to/gloriousmusketeer/conexion-segura-ssh-para-la-raspberrypifreebsdlinux-4ci0"/>
        <updated>2021-11-14T03:46:12.000Z</updated>
        <summary type="html"><![CDATA[OpenSSH SSH client(SSH) es un protocolo de administraci√≥n remota que le permite a los usuarios controlar y modificar sus servidores remotos a trav√©s de Internet a trav√©s de un mecanismo de autenticaci√≥n.
La conexi√≥n SSH est√° cifrada de extremo a extremo adem√°s de necesitar una autenticaci√≥n para poder conectar al servidor. SSH funciona de manera similar a Telnet, pero al contrario que este, con SSH todos los datos que se env√≠an desde el cliente al servidor, y los que se reciban desde el servidor al cliente viajan cifrados para que nadie pueda interceptar la informaci√≥n dotando de una capa extra de seguridad con respecto a Telnet.
Este tutorial de SSH cubrir√° los conceptos b√°sicos de c√≥mo funciona, junto con las tecnolog√≠as subyacentes utilizadas por el protocolo SSH para ofrecer un m√©todo ‚Ä¶]]></summary>
        <author>
            <name>Glorious Musketeer‚Ñ¢</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Javascript coding challange: explain output of ++[1,2,3][2]]]></title>
        <id>https://dev.to/ks_a4eb6224319/javascript-coding-challange-output-of-1232-4572</id>
        <link href="https://dev.to/ks_a4eb6224319/javascript-coding-challange-output-of-1232-4572"/>
        <updated>2021-11-14T03:20:42.000Z</updated>
        <summary type="html"><![CDATA[Here is a javascript trivia problem that gives you something to think about.
Go to your console and run below line.
++[1,2,3][2]

Can you exaplain the output ?]]></summary>
        <author>
            <name>KS</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[1 year at DEV]]></title>
        <id>https://dev.to/krishnapalrajput/1-year-at-dev-593g</id>
        <link href="https://dev.to/krishnapalrajput/1-year-at-dev-593g"/>
        <updated>2021-11-14T01:49:05.000Z</updated>
        <summary type="html"><![CDATA[Hello #DEV community I am feeling so glad to say that I have competed 1 year with sch wonderful community. It helps me a lot.
Thanks you all the members and teams of #DEV 
Thank you so muchüåπüåπ]]></summary>
        <author>
            <name>Krishnapal-rajput</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Name your github repos with style. Git to it!]]></title>
        <id>https://dev.to/gemini392/git-a-good-repo-name-will-you-2o5p</id>
        <link href="https://dev.to/gemini392/git-a-good-repo-name-will-you-2o5p"/>
        <updated>2021-11-14T01:13:13.000Z</updated>
        <summary type="html"><![CDATA[What is your name? 
Stop. I probably don't care (I just might!). No one can tell you your name doesn't suit you, because there are no conventions to naming people. 
Do you want to know what else doesn't have conventions for naming? No, it's not the dishes on expensive menus with weird french names. It's github repositories. If you are a github user, then you might not know this. Since there are no 'proper' rules for naming repositories, we just type the first thing that comes to mind, and bam!
So, how do you name a github repository properly, and why is it important? I'll start by answering the second question. When you reach out to employers sometimes, they ask you for your github profile link. This is because they want to see your activity, projects you've been working on, tech stuff you‚Ä¶]]></summary>
        <author>
            <name>Gemini392</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Understand unit tests once and for all [In less than 3 min]]]></title>
        <id>https://dev.to/talhakhalid101/understand-unit-tests-once-and-for-all-in-less-than-3-min-5bpm</id>
        <link href="https://dev.to/talhakhalid101/understand-unit-tests-once-and-for-all-in-less-than-3-min-5bpm"/>
        <updated>2021-11-13T22:37:20.000Z</updated>
        <summary type="html"><![CDATA[One day, browsing through software development communities I came across the following image:

Time passed, I finally learned what unit tests are, what this cheap rabbit represents and I would like to help you understand too.
But what are unit tests?
A unit test is basically testing the smallest testable part of a program.
Okay, but what does that mean?
If you pr the grass in a language that supports functional paradigm for example, the smallest testable part of your code should be a function. So a unit test would be the test of any function. In the case of object orientation it would be the testing of a method of your object.
Well‚Ä¶ as everything is easier to understand in practice, let's go to the code!
In the example below, we have a function that adds two numbers and returns the sum val‚Ä¶]]></summary>
        <author>
            <name>TalhaKhalid101</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The inmates are running the asylum: 10 things you should know about your internal Platform Team]]></title>
        <id>https://dev.to/peibolsang/the-inmates-are-running-the-asylum-10-things-you-should-know-about-your-internal-platform-team-4lk2</id>
        <link href="https://dev.to/peibolsang/the-inmates-are-running-the-asylum-10-things-you-should-know-about-your-internal-platform-team-4lk2"/>
        <updated>2021-11-13T21:04:16.000Z</updated>
        <summary type="html"><![CDATA[(Cover photo credits: James Harrison @jstrippa via Unsplash)
The idea of leveraging tools and frameworks to create better software is not new. For example, in traditional product-centric approaches, vendors pushed developers to build services that orbited around a smart integration bus with the vain hope of making the software more robust (Oracle SOA Suite anyone?). Constrained by lots of proprietary technologies, this approach was far from ideal for developers to design and build their applications. Nowadays, with the emergence of standards-based computing utilities (Serverless) and the novel software engineering practices that evolved with them (NoOps), we can look at these internal tools from a more developer-centric point of view.
Nowadays, you no longer need to buy a product to cover ‚Ä¶]]></summary>
        <author>
            <name>Pablo Bermejo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Uptime of macOS system via terminal]]></title>
        <id>https://dev.to/stankukucka/uptime-of-macos-system-via-terminal-4jip</id>
        <link href="https://dev.to/stankukucka/uptime-of-macos-system-via-terminal-4jip"/>
        <updated>2021-11-13T20:10:48.000Z</updated>
        <summary type="html"><![CDATA[You are logged into your system. In this case, it's macOS. You are facing just a simple question. Are you the only one who is logged in? I would like to give you an answer to this simple question with a bit of explanation. Here in upcoming lines, there will be a bit of theory background behind it.
In case your system is healthy (understand as an official system with applied updates), you are the only physical user logged in. You can check this logged in information with a simple command you will enter into the terminal. But there is a trick in that, will explain in next lines hereunder. Open your Terminal.app you'll find out in Finder in the section Applications and Utilities. For more informations check official Terminal User Guide.
By entering uptime command you'll be informed in one line output about the current time, number of days your system is up, number of logged-in users etc.
uptime

If you'll enter this very same command into the terminal in capital form as UPTIME, you'll receive a more readable summary of the logged-in sessions by the user.
UPTIME

The same output can be given by entering w command into the terminal.
w

Do remember you will always have a minimum of 2 logged-in users. By default when you open another terminal session it will be counted as another active user logged in. In other words, if you open four-terminal sessions, you will see 4 users logged in +1 as the default logged-in user I have written about.]]></summary>
        <author>
            <name>Stan ku2ck4</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Let's build a list of real and alive open-source Angular projects.]]></title>
        <id>https://dev.to/ovidiu141/lets-build-a-list-of-real-and-alive-open-source-angular-projects-1en6</id>
        <link href="https://dev.to/ovidiu141/lets-build-a-list-of-real-and-alive-open-source-angular-projects-1en6"/>
        <updated>2021-11-13T19:51:05.000Z</updated>
        <summary type="html"><![CDATA[I only found lists polluted with dead/toy/component-library OSS projects. (or even containing AngularJS projects)
I want to find some real and alive open source projects which are using Angular. I'm sure some of us want to dive deeper and read some Angular code used in real life.
Feel free to mention projects in the comments and I will try to keep the list up to date.
List:
PeerTube (Angular 13 | 9.9k Github stars) 
https://github.com/Chocobozzz/PeerTube


Openproject (Angular 12 | 5.3k Github stars)
https://github.com/opf/openproject


Oppia (Angular 11 | 4.3k Github stars)
https://github.com/oppia/oppia]]></summary>
        <author>
            <name>Ovidiu Miu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Your doctor (parent process) ‚Äì is your prescription  publisher, meanwhile you, well guess who you are ?..]]></title>
        <id>https://dev.to/projektorius96/your-doctor-parent-process-is-your-prescription-publisher-meanwhile-you-well-guess-who-you-are--38b9</id>
        <link href="https://dev.to/projektorius96/your-doctor-parent-process-is-your-prescription-publisher-meanwhile-you-well-guess-who-you-are--38b9"/>
        <updated>2021-11-13T19:19:41.000Z</updated>
        <summary type="html"><![CDATA[If you reading , it means you are subscriber , you (as child process) read doctor's stdout & stderr i.e. you are a child process (subscriber) that consumes the output as Writable, not as Readable stream as what you may expected initially. In layman's terms you behave opposite than you doctor, common sense, you are not a doctor (unless RIP Don Shirley)
const path = require('path')
const child_process = require('child_process');
// child_process.spawn(command@string, args@array, {options@object})

let ls = child_process.spawn('ls', ['-la'], {cwd: path.join(__dirname)})
// console.log(ls.pid /* self */ === ls._handle.pid /* inherited from parent */)

// the line below will be ignored , 'cause this is child process : it does not intended to consume stdin ;
ls.stdin.on('data', (data)=>console.log("data:", data))

ls.stdout.on('data', (data) => console.log(`stdout: ${data}`));

ls.stderr.on('data', (data) => console.log(`stderr: ${data}`)); // give spawn command as e.g lsapfhjsfjka to reproduce error

ls.on('close', (code) => console.log(`child process exited with code ${code}`));


This been first of short series on Dev.to . See you in a next one ! 

Thanks to @devternity
 for support I've been spared up today !]]></summary>
        <author>
            <name>projektorius96</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[File Uploads on GraphQL: Why or Why not]]></title>
        <id>https://dev.to/mrsauravsahu/file-uploads-on-graphql-why-or-why-not-ek0</id>
        <link href="https://dev.to/mrsauravsahu/file-uploads-on-graphql-why-or-why-not-ek0"/>
        <updated>2021-11-13T18:58:27.000Z</updated>
        <summary type="html"><![CDATA[Note: The code mentioned in this post can be found in these repositories. 
NestJS Reference - mrsauravsahu/blog-graphql-nestjs-fileupload

.NET Reference - mrsauravsahu/blog-graphql-dotnet-fileupload




If you just want to see how to do file uploads with GraphQL, just click here
GraphQL has become quite popular due to its various features fixing under/over fetching issues. It also allows for easy caching, federation, non-versioning APIs, subscriptions etc,.
For the modern Internet where data needs to be accessible on various types of applications running on various types of devices, GraphQL seems like a great way forward and also a good concept to put into your knowledge bag.
GraphQL request and responses are typically in JSON format even though the GraphQL Spec doesn't mandate any format‚Ä¶]]></summary>
        <author>
            <name>Sahu, S</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How does Angular know about (click)?]]></title>
        <id>https://dev.to/ovidiu141/how-does-angular-know-about-click-3poc</id>
        <link href="https://dev.to/ovidiu141/how-does-angular-know-about-click-3poc"/>
        <updated>2021-11-13T18:37:54.000Z</updated>
        <summary type="html"><![CDATA[<button (click)="doSomething()">Do it</button>
But how does Angular know how to deal with this (click) thing? 
It works because of the so called Event Biding. Basically it binds the target event name (click) to a method from the component (doSomething).
As explained in this nice article , Angular doesn't have a list of it's own event names, but it actually uses the names of the underlying DOM events.
So the event binding part of the <button (click)="doSomething()">Do it</button> snippet is the equivalent of this vanilla snippet:
element.addEventListener('click', () => { doSomething() });


This means the if I want to know which events I can bind to in Angular I can search them here: https://developer.mozilla.org/en-US/docs/Web/Events
What about the $event?
If the event is a DOM event, like click, mouseenter, keyup etc then the $event is the event itself. For example in the case of click, the $event is a MouseEvent.
EventEmitter) the $event is actually the emitted data.]]></summary>
        <author>
            <name>Ovidiu Miu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[KYS-ED: When Compressing come into Cryptography]]></title>
        <id>https://dev.to/xampy/kys-ed-when-compressing-come-into-cryptography-1iml</id>
        <link href="https://dev.to/xampy/kys-ed-when-compressing-come-into-cryptography-1iml"/>
        <updated>2021-11-13T17:06:58.000Z</updated>
        <summary type="html"><![CDATA[In this lecture, we will dicuss about a new compression/cryptography algorithm. We cover how it started and what we've got at the end of researches.
One month ago, We started working on a lossless compression algorithm. We took a message from an alphabets of $n$ symbols and tried to find a way to reduce the amount of bits used tohold the message. Normally each symbol in the alphabet hold 


After seraveral tries, We found an algorithm which compress the source data with a constant ratio. 
This is how the algorithm works.
The algorithm don't work on symbol directly but use them to construct the treatement block. And it takes as input the binary form of the message regardless of the message type, pass the binary data to the treatlent block and at output we get a new binary data which size is‚Ä¶]]></summary>
        <author>
            <name>Max-Xampy</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS modules in next.js]]></title>
        <id>https://dev.to/fredrikbergqvist/css-modules-in-nextjs-34nm</id>
        <link href="https://dev.to/fredrikbergqvist/css-modules-in-nextjs-34nm"/>
        <updated>2021-11-13T16:46:34.000Z</updated>
        <summary type="html"><![CDATA[On bergqvist.it I used styled jsx for styling my components. I preferred that to other css-in-js frameworks (like JSS) because of it actually using CSS syntax instead of JavaScript objects.
    // styled jsx example with good old CSS
    <style jsx>{`
      .label { color: red; font-style: italic; }
      .article { padding: 0; }
    `}
    </style>

    //JSS example with CSS as a JS object
    const useStyles = createUseStyles({
      label: {
        color: 'red'
        fontStyle: 'italic'
      },
      article: {
        padding: 0
      }
    })

I like Styled jsx but it has had an issue with FOUC in the last few versions of Next.js though, and with Next 12 I decided to try something new and migrate to CSS Modules instead.
A¬†CSS Module¬†is a CSS file in which all class names and anim‚Ä¶]]></summary>
        <author>
            <name>Fredrik Bergqvist</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to display a navbar component after logging in without reloading the page in angular 12]]></title>
        <id>https://dev.to/rammurthykota/how-to-display-a-navbar-component-after-logging-in-without-reloading-the-page-in-angular-12-2kfi</id>
        <link href="https://dev.to/rammurthykota/how-to-display-a-navbar-component-after-logging-in-without-reloading-the-page-in-angular-12-2kfi"/>
        <updated>2021-11-13T16:11:17.000Z</updated>
        <summary type="html"><![CDATA[My landing page does not show a navbar, but I want to display a navbar after logging in successfully.  Currently, I'm able to show navbar if I do a full page reload after logging in successfully. I'm very sure that there is a better way than this approach.
app.component.html
<app-navbar></app-navbar>
<router-outlet></router-outlet>

login.component.ts
login(){
    this.credentials = this.myForm.value;
    if(this.credentials){
      this.loginService.authenticate(this.credentials)
      .subscribe(data => {
        this.storageService.setLocalStorageItem('auth', JSON.stringify(data));
        this.dataService.global.showNav = true;
        this.sharedService.getProjectMetadata()
        .subscribe(metadata => {
          this.storageService.setLocalStorageItem('projectMetaData', JSON.strin‚Ä¶]]></summary>
        <author>
            <name>Ram Murthy Kota</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to display a navbar component after logging in without reloading the page in angular 12]]></title>
        <id>https://dev.to/rammurthykota/how-to-display-a-navbar-component-after-logging-in-without-reloading-the-page-in-angular-12-2kfi</id>
        <link href="https://dev.to/rammurthykota/how-to-display-a-navbar-component-after-logging-in-without-reloading-the-page-in-angular-12-2kfi"/>
        <updated>2021-11-13T16:11:17.000Z</updated>
        <summary type="html"><![CDATA[My landing page does not show a navbar, but I want to display a navbar after logging in successfully.  Currently, I'm able to show navbar if I do a full page reload after logging in successfully. I'm very sure that there is a better way than this approach.
app.component.html
<app-navbar></app-navbar>
<router-outlet></router-outlet>

login.component.ts
login(){
    this.credentials = this.myForm.value;
    if(this.credentials){
      this.loginService.authenticate(this.credentials)
      .subscribe(data => {
        this.storageService.setLocalStorageItem('auth', JSON.stringify(data));
        this.dataService.global.showNav = true;
        this.sharedService.getProjectMetadata()
        .subscribe(metadata => {
          this.storageService.setLocalStorageItem('projectMetaData', JSON.strin‚Ä¶]]></summary>
        <author>
            <name>Ram Murthy Kota</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Create A CallBack Functions JavaScript And TypeScript]]></title>
        <id>https://dev.to/own_alazzam10/create-a-callback-functions-javascript-and-typescript-4h9a</id>
        <link href="https://dev.to/own_alazzam10/create-a-callback-functions-javascript-and-typescript-4h9a"/>
        <updated>2021-11-13T16:08:36.000Z</updated>
        <summary type="html"><![CDATA[At Some Time You Want To Build A CallBack Functions With Parameters This Tutoial is For Begginers And Middle Level So Let`s Start
CallBack Functions is Mean A Function Then You Want To Make Thing After Exectue it By Browser Like This.
JavaScript
TypeScript
This Will Be Printing Function This Execute A callBack method after printing the name
JavaScript
TypeScript
Then We Need To Pass Data Between The Data Inside Function And CallBack Function Like This
JavaScript
TypeScript
This is the tutorial about CallBack Functions JavaScript And TypeScript follow me for more and sorry about syntex highlight because not working]]></summary>
        <author>
            <name>Own Alazzam</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cplayer and Its application]]></title>
        <id>https://dev.to/crajbanshi/cplayer-and-its-application-2eap</id>
        <link href="https://dev.to/crajbanshi/cplayer-and-its-application-2eap"/>
        <updated>2021-11-13T15:35:54.000Z</updated>
        <summary type="html"><![CDATA[I have created a web based music player using javascript. I kept its name as CPlayer.
Github link
https://github.com/crajbanshi/cplayer
And also created one website using this. Application name is MSound. Now it is deployed in stage trying to move it to production. I hope th MSound app will be in fly very soon.
Visit the application stage url: http://tune.rf.gd]]></summary>
        <author>
            <name>Chanchal Rajbanshi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cplayer and Its application]]></title>
        <id>https://dev.to/crajbanshi/cplayer-and-its-application-2eap</id>
        <link href="https://dev.to/crajbanshi/cplayer-and-its-application-2eap"/>
        <updated>2021-11-13T15:35:54.000Z</updated>
        <summary type="html"><![CDATA[I have created a web based music player using javascript. I kept its name as CPlayer.
Github link
https://github.com/crajbanshi/cplayer
And also created one website using this. Application name is MSound. Now it is deployed in stage trying to move it to production. I hope th MSound app will be in fly very soon.
Visit the application stage url: http://tune.rf.gd]]></summary>
        <author>
            <name>Chanchal Rajbanshi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[8 Most Common Type Of Cyber Attacks]]></title>
        <id>https://dev.to/prajwolshrestha/8-most-common-type-of-cyber-attacks-2be5</id>
        <link href="https://dev.to/prajwolshrestha/8-most-common-type-of-cyber-attacks-2be5"/>
        <updated>2021-11-13T14:43:43.000Z</updated>
        <summary type="html"><![CDATA[Before learning about types of cyber attacks, you must know what a cyber attack is. Basically, it is an attack performed by a group or an individual to gain unauthorized access to a system with the intent to harm the victim.
In this article, we will briefly learn about some of the most common types of cyber attacks  and how to protect yourself from them.
Phishing involves sending emails that appear to be from trusted sources. The goal is to make the victim click on the link and trick them into giving their login credentials or spreading malware.
Spear phishing is carried out in the same way, except it is more focused on particular people. The attacker has to do some research on the victim before sending them the malicious link. For example, with a little research an attacker can find your ‚Ä¶]]></summary>
        <author>
            <name>Prajwol Shrestha</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[An online Book shop API Node js]]></title>
        <id>https://dev.to/devtips3/an-online-book-shop-api-node-js-6a5</id>
        <link href="https://dev.to/devtips3/an-online-book-shop-api-node-js-6a5"/>
        <updated>2021-11-13T14:26:20.000Z</updated>
        <summary type="html"><![CDATA[bookstore-api
Features:
Technology Stack:
Github : https://github.com/saidMounaim/a-bookstore-api
Follow me on github : https://github.com/saidMounaim/]]></summary>
        <author>
            <name>dev tips</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Create a multi-tenant application in Nest.js Part 3 (multi-database setup)]]></title>
        <id>https://dev.to/ismaeil_shajar/create-a-multi-tenancy-application-in-nestjs-part-3-multi-database-setup-13ap</id>
        <link href="https://dev.to/ismaeil_shajar/create-a-multi-tenancy-application-in-nestjs-part-3-multi-database-setup-13ap"/>
        <updated>2021-11-13T14:11:35.000Z</updated>
        <summary type="html"><![CDATA[In part 1, we set up the nestjs framework and configured and tested microservices architecture application using nest.js. In part 2, we used Sequelize and mongoose to access the database and tested for both MySQL database and MongoDB.
In this part; we will see how to let the application connect to multiple databases depending on the request. Since it is a multi-tenancy application, each tenant has their own database containing their data accessing the same application, thus the application needs to connect to different databases.
forRootAsync() instead of forRoot(), we need to use a custom class for configuration.
For both sequelize and mongoose, add this:
MongooseModule.forRootAsync({
    useClass:MongooseConfigService
  }),
SequelizeModule.forRootAsync({
      useClass:SequelizeConfigSer‚Ä¶]]></summary>
        <author>
            <name>ismaeil-shajar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular app in Github pages]]></title>
        <id>https://dev.to/davidmimay/angular-app-in-github-pages-2a56</id>
        <link href="https://dev.to/davidmimay/angular-app-in-github-pages-2a56"/>
        <updated>2021-11-13T12:33:22.000Z</updated>
        <summary type="html"><![CDATA[How to deploy and angular app to GitHub pages and get it running under your own domain: username.github.io. Also you can use the GitHub API to get access to your repositories data as I did on my personal portfolio:
Live demo
Source code
Git
GitHub account
Angular CLI
Create a new public repository using your GitHub username and this form:
username.github.io

First, clone the newly created repository to a local folder:
$ git clone https://github.com/username/username.github.io.git
Navigate to the repository root folder:
$ cd username.github.io
Create a new angular project in the root directory of the repo:
$ ng new myApp --directory ./
Open angular.json file and change the buildOutput path to ‚Äúdocs‚Äù:
angular.json
‚Ä¶
"architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "docs",
‚Ä¶

Build the angular application in production mode:
$ ng build --prod
You can push the /docs folder only, or you can push the whole application /myApp (recommended):
$ git add .
$ git commit -m "Init app"
$ git push
Now navigate to your repository settings https://github.com/username/username.github.io/settings

scroll down to the GitHub pages section to change the build source to /docs. Few seconds later your site will be built and published and you should see the message ‚ÄúYour site is published at‚Ä¶‚Äù. If don‚Äôt, try refreshing the site.

Then you can view the deployments at the right side of the repository, under environments, pressing github-pages or at https://github.com/username/username.github.io/deployments

You can make changes locally, test them using $ ng serve and then build for production using $ ng build --prod and push your updated code to GitHub. The page will automatically re-build.]]></summary>
        <author>
            <name>david mimay</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Secrets With SOPS]]></title>
        <id>https://dev.to/aarushikansal/secrets-with-sops-2h5e</id>
        <link href="https://dev.to/aarushikansal/secrets-with-sops-2h5e"/>
        <updated>2021-11-13T11:58:54.000Z</updated>
        <summary type="html"><![CDATA[SOPS (Secrets OperationS) is an open source tool from Mozilla, intended to edit, encrypt, decrypt a range of different file types, such as YAML, JSON, ENV etc. 
Encryption can be done in variety of ways, using major cloud providers encryption tools, PGP, and even age.
In this article, we'll focus on using AWS + KMS. A similar setup and workflow can be used for GCP and Azure as well. 
Download + install one of: 
stable releases


unstable features



More details can be found on the SOPS github repo.
Pre-requistes for this are: 
A ready to use KMS key.
Correctly configured AWS credentials, for example:




[default]
aws_access_key_id = <access-key-id>
aws_secret_access_key = <access-key>

[kmsuser]
aws_access_key_id = <kmsuser-access-key-id>
aws_secret_access_key = <kmsuer-access-key>


A s‚Ä¶]]></summary>
        <author>
            <name>Aarushi Kansal</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Heal You - Fitness App UI kit]]></title>
        <id>https://dev.to/adom_shafi_17/heal-you-fitness-app-ui-kit-21c8</id>
        <link href="https://dev.to/adom_shafi_17/heal-you-fitness-app-ui-kit-21c8"/>
        <updated>2021-11-13T06:43:48.000Z</updated>
        <summary type="html"><![CDATA[Hello Everyone. Meet Heal You, it is a premium UI Kit consist of 80+ health & fitness app screens that can help you to boost your design process. This kit is carefully crafted and contains many UI components that you can use for design inspiration or speed up your design workflow. You can also find a series of screens that guide users through the app interface & functions. You can make your custom workout on this app. You can track your daily activity & set up an alarm for your exercise time. Easy to customize to fit your style. Also, You can get a dark mode version of it. Available in Figma, XD, Sketch & Flutter File.
https://www.uihut.com/feature/heal-you-fitness-app-ui-kit/16704]]></summary>
        <author>
            <name>Adom Shafi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[OS themed profile]]></title>
        <id>https://dev.to/yashdatir/os-themed-profile-4bf1</id>
        <link href="https://dev.to/yashdatir/os-themed-profile-4bf1"/>
        <updated>2021-11-13T05:53:38.000Z</updated>
        <summary type="html"><![CDATA[Hey there, m up with one of my other mini project, making an OS clone for my profile. It has its own UI, CLI, formats etc. I feel this may have endless possibilities for its usage, also may come up with something creative. I would also like if any one can collaborate for the same. Currently it has all the data static, but arrangements have been made to make it dynamic using a backend. So, lets get in touch...
https://yashdatir.github.io/profile-os/]]></summary>
        <author>
            <name>Yash Datir</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Green Flower - Global Voting]]></title>
        <id>https://dev.to/greenflowervoting/green-flower-global-voting-2kn2</id>
        <link href="https://dev.to/greenflowervoting/green-flower-global-voting-2kn2"/>
        <updated>2021-11-13T02:31:01.000Z</updated>
        <summary type="html"><![CDATA[This is the beginning of a Monthly Series about Voting The following Content is driven by the community of https://github.com/GreenFlowerVoting/GreenFlowerVoting/medium.md
This Space enables a discussion to create a global, society fair, secure voting system.
Imagination: We discover a planet and we are trying to create a voting system that stands for
global equality without any borders 
without any regional differences regardless of the geographical locations of the individuals
independent of society or education
Problems:
Regional differences 
Unique Identification 
Manipulation 
Desinterest 
Uncertainty 
Lobbying 
Contributions 
What are your concerns?
Goals for this Project:
Create an open collective - open source voting plattform
Start and Election
The chosen one will receive a Reward!
The voters will decide how the Reward will be spent to benefit the voters.
CONTRIBUTIONS: 
https://github.com/GreenFlowerVoting/GreenFlowerVoting]]></summary>
        <author>
            <name>GreenFlowerVoting</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Secure your app in a few easy steps üîí]]></title>
        <id>https://dev.to/leahein/secure-your-app-in-a-few-easy-steps-2amo</id>
        <link href="https://dev.to/leahein/secure-your-app-in-a-few-easy-steps-2amo"/>
        <updated>2021-11-13T00:26:33.000Z</updated>
        <summary type="html"><![CDATA[Security is a broad topic, and one that‚Äôs hard to master. However, there are some really simple things you can do to increase the security of your web application.
For starters, there are some HTTP Response Headers you can include in your web responses, that can prevent easily preventable vulnerabilities.
This will aim to outline all of the headers recommended by the OWASP Secure Headers Project, as part of a series. Let's begin with a couple.

As a caveat, these are by no means foolproof. However, they do provide a first layer of defense in depth for attackers.
The recommended mechanism for configuring your web application to return these headers in every response, is by configuring your web server. Since nginx is a widely used option, I will provide examples that demonstrate how to imple‚Ä¶]]></summary>
        <author>
            <name>Leah Einhorn</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Other Looks at the Conditional Border Radius Trick]]></title>
        <id>https://css-tricks.com/?p=356304</id>
        <link href="https://css-tricks.com/other-looks-at-the-conditional-border-radius-trick/"/>
        <updated>2021-11-12T23:54:00.000Z</updated>
        <summary type="html"><![CDATA[Remember when Ahmad Shadeed wrote about that border-radius ‚Äútoggle‚Äù he found in Facebook‚Äôs CSS? It was interesting! I covered it. A few weeks after that surge of linkage, a couple of articles came out digging into it a little deeper. ‚Ä¶
The post Other Looks at the Conditional Border Radius Trick appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Write Good Commit Messages with Commitlint]]></title>
        <id>618deac811d3cb08287a4ba3</id>
        <link href="https://www.freecodecamp.org/news/how-to-use-commitlint-to-write-good-commit-messages/"/>
        <updated>2021-11-12T20:11:06.000Z</updated>
        <summary type="html"><![CDATA[We are often in a hurry to commit our changes in Git and so we write something random in our commit messages. In fact, I have seen people putting the date and time or even something like commit 1, commit 2 in their messages.  This is not a good practice,]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[üîì Auth0 Integration with Singpass]]></title>
        <id>https://dev.to/robertinoc_dev/auth0-integration-with-singpass-4lc7</id>
        <link href="https://dev.to/robertinoc_dev/auth0-integration-with-singpass-4lc7"/>
        <updated>2021-11-12T18:58:21.000Z</updated>
        <summary type="html"><![CDATA[Learn how to enable Singpass login with QR code in Auth0 Universal Login.



  
  
  
When it comes to national digital identity, Singapore has a lot to say. 
Singpass in 2003 and has been enhancing it over the years. 
With Auth0's customer base quickly growing in Southeast Asia, Singapore and Japan, it was about time to officially offer Singpass services on the Auth0 platform.
This is the first of a two-post series. In this post, we‚Äôll learn how to integrate Singpass QR Login with Auth0 Universal Login. 
Singpass QR login uses OIDC authorization code flow. 
<script src=‚Äùhttps://id.singpass.gov.sg/static/ndi_embedded_auth.js‚Äù></script>

Websites integrate with Singpass by hosting NDI embedded Javascript SDK. On page load, the Singpass SDK starts an authorization flow, with the state and no‚Ä¶]]></summary>
        <author>
            <name>Robertino</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Security news weekly round-up - 12th November 2021]]></title>
        <id>https://dev.to/ziizium/security-news-weekly-round-up-12th-november-2021-5abe</id>
        <link href="https://dev.to/ziizium/security-news-weekly-round-up-12th-november-2021-5abe"/>
        <updated>2021-11-12T17:56:40.000Z</updated>
        <summary type="html"><![CDATA[Introduction


Hello there. Welcome to this week's security review where we talk about stories that are worthy of your time.
I am your host Habdul Hazeez.
This week, if your device could get infected with malware or affected by a vulnerability just by reading this edition, I am sure your device will get infected or an attacker might find a vulnerability on an app on your device and might just execute an RCE on it. Just saying üòá.
Let's get on with it.
New Android malware targets Netflix, Instagram, and Twitter users


It's a banking Trojan using a fake overlay in an attempt to steal your credit card information.
Stay safe.
Excerpt from the article:
By utilizing the Application Accessibility toolkit installed on Android by default, the attacker is able to use the application to implement th‚Ä¶]]></summary>
        <author>
            <name>Habdul Hazeez</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why Does my WiFi Keep Disconnecting? [Solved on Windows 10 PC]]]></title>
        <id>618e136011d3cb08287a4c71</id>
        <link href="https://www.freecodecamp.org/news/why-does-my-wifi-keep-disconnecting-solved-on-windows-10-pc/"/>
        <updated>2021-11-12T17:47:24.000Z</updated>
        <summary type="html"><![CDATA[When you're using your Windows machine, your WiFi might unexpectedly disconnect.  This might be caused by various problems such as an outdated network adapter driver, outdated router software, and optimized power management in Windows 10.  If your WiFi keeps disconnecting and you're looking for a solution, you've come to the]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Interactive Rebase: Clean up your Commit History]]></title>
        <id>https://css-tricks.com/?p=355658</id>
        <link href="https://css-tricks.com/interactive-rebase-clean-up-your-commit-history/"/>
        <updated>2021-11-12T15:16:24.000Z</updated>
        <summary type="html"><![CDATA[Interactive Rebase is the Swiss Army knife of Git commands: lots of use cases and lots of possibilities! It's really a great addition to any developer's tool chain, because it lets you revise your local commit history‚Äîbefore you share your work with the rest of the team. Let's see what you can do with an interactive rebase and then look at some practical examples.
The post Interactive Rebase: Clean up your Commit History appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Tobias G√ºnther</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Deploying .net core, angular and sql server to ubuntu]]></title>
        <id>https://dev.to/maxwelladn/deploying-net-core-angular-and-sql-server-to-ubuntu-2a6h</id>
        <link href="https://dev.to/maxwelladn/deploying-net-core-angular-and-sql-server-to-ubuntu-2a6h"/>
        <updated>2021-11-12T14:31:16.000Z</updated>
        <summary type="html"><![CDATA[In this article I will share with you how I deploy NGX.BILL a .net core/SQL Server and angular application to ubuntu using nginx
Prerequisites:  You must have an Ubuntu 16.04, 18.04, or 20.04 machine with at least 2 GB of memory.
Connect to the same server as the database using an ssh client.
Putty 
adduser USER

Enter new UNIX password:
Retype new UNIX password:
passwd: password updated successfully

Changing the user information for USER
Enter the new value, or press ENTER for the default
        Full Name []:
        Room Number []:
        Work Phone []:
        Home Phone []:
        Other []:
Is the information correct? [Y/n] y

Give admin rights to the user.
usermod -a -G sudo USER

Copy the ssh key the new user.
cp -r ~/.ssh /home/USER/
sudo chown -R USER:USER /home/USER/.ssh

Rest‚Ä¶]]></summary>
        <author>
            <name>Maxwell ADANZOUNNON</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[7 PWA Frameworks to Know in 2022]]></title>
        <id>https://dev.to/rlogical/7-pwa-frameworks-to-know-in-2022-3n2k</id>
        <link href="https://dev.to/rlogical/7-pwa-frameworks-to-know-in-2022-3n2k"/>
        <updated>2021-11-12T12:41:27.000Z</updated>
        <summary type="html"><![CDATA[Here are some of the best frameworks that you can use for developing your PWA.
Best Frameworks for Developing Progressive Web Applications
1. AngularJS
It is a framework built in 2010 and largely used for creating dependable and stable PWAs using the ecosystem of JavaScript. The system helps make an amazing PWA through JSON set up so that there is no need to begin from scratch. Angular‚Äôs web app development services are so much easier as it saves the hassle of handling repetitive tasks.
PWAs created using this framework also leverage the distinctive compilation method and ahead-of-time or AOT. It has a large developers community, a huge third-party extensions archive, and modular elements. The security and speed are increased with the amazing concept of the AOT compiler. There is dependenc‚Ä¶]]></summary>
        <author>
            <name>Rlogical Techsoft Pvt Ltd</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Useful React Hooks That You Can Use In Your Projects]]></title>
        <id>https://smashingmagazine.com/2021/11/useful-react-hooks/</id>
        <link href="https://smashingmagazine.com/2021/11/useful-react-hooks/"/>
        <updated>2021-11-12T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[The React team introduced several hooks in React 16.8 which you can use from third-party providers in your application, or even create your own custom hook. In this tutorial, we‚Äôll take a look at some of the most useful hooks in React and how to use them.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Ifeanyi Dike)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Fastest Way To Build Lightweight Angular Content Service]]></title>
        <id>https://dev.to/devbyrayray/the-fastest-way-to-build-lightweight-angular-content-service-3l6l</id>
        <link href="https://dev.to/devbyrayray/the-fastest-way-to-build-lightweight-angular-content-service-3l6l"/>
        <updated>2021-11-12T08:09:52.000Z</updated>
        <summary type="html"><![CDATA[In the typical Angular applications, we use a lot of titles, labels, headers, and more content. But if you need a way to put those content elements in one place, you need something like a dictionary. It's a combination of small words and more extensive sentences.
Some applications need multiple languages, but others need one language but have loads of content to re-use. In this article, I want to show you the fastest way to create a content (some call it a dictionary) Service for your Angular application.
If you need a content service with multiple languages, I highly recommend NGX-Translate. This package offers a simple API and Pipe mechanism to re-use pieces of content but also supports multiple languages.

The simplest and fastest way to create Angular Services is by using the Angular C‚Ä¶]]></summary>
        <author>
            <name>Dev By RayRay</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[NgRx Best Practices Series: 1. Cache & LoadStatus]]></title>
        <id>https://dev.to/this-is-angular/ngrx-best-practices-series-1-cache-loadstatus-3o8d</id>
        <link href="https://dev.to/this-is-angular/ngrx-best-practices-series-1-cache-loadstatus-3o8d"/>
        <updated>2021-11-11T21:03:56.000Z</updated>
        <summary type="html"><![CDATA[In this series of articles, I am sharing the lessons that I have learned from building reactive applications in Angular using NgRx state management. My introduction explained how I came to use NgRx. Going forward, I will share best practices in the form of an example application, Eternal. Here, we‚Äôll look at the way state management lets you add caching functionality to your code.
If you prefer watching over reading, here is the video version:




You can find  the sources files on 
 / 
        ngrx-best-practices
      
    
This pattern ensures that the store does not load data it already has. In other words: It adds a caching functionality.
We create this pattern in two steps. The state gets an additional property called loadStatus, which it uses internally to determine if a request to ‚Ä¶]]></summary>
        <author>
            <name>Rainer Hahnekamp</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Semantic menu context]]></title>
        <id>https://css-tricks.com/?p=356652</id>
        <link href="https://css-tricks.com/semantic-menu-context/"/>
        <updated>2021-11-11T20:07:40.000Z</updated>
        <summary type="html"><![CDATA[Scott digs into the history of the <menu> element. He traced it as far back as HTML 2 (!) in a 1994 changelog. The vibe then, it seems, was to mark up a list. I would suspect the intention ‚Ä¶
The post Semantic menu context appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GitHub Actions Hackathon 2021 - Hosting an Angular application on GitHub Pages using GitHub Actions]]></title>
        <id>https://dev.to/rodrigokamada/github-actions-hackathon-2021-hosting-an-angular-application-on-github-pages-using-github-actions-139k</id>
        <link href="https://dev.to/rodrigokamada/github-actions-hackathon-2021-hosting-an-angular-application-on-github-pages-using-github-actions-139k"/>
        <updated>2021-11-11T18:05:49.000Z</updated>
        <summary type="html"><![CDATA[My Workflow


I created this workflow to deploy an application example built with Angular 12 on GitHub Pages.
DIY Deployments
name: GitHub Pages

on:
  push:
    branches:
    - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm run test:headless

    - name: Build
      run: npm run build:prod

    - name: Deploy
      if: success()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: dist/angular-github-actions
        enable_jekyll: true

 / 
        angular-github-actions
      
    
Application example built with Angular 12 and hosted on GitHub Pages using GitHub Actions.
This tutorial was posted on my blog in portuguese and on the DEV Community in english.



Before you start, you need to install and configure the tools:
git
Node.js and npm
Angular CLI
IDE (e.g. Visual Studio Code)
1. Let's create the account. Access the site https://github.com/ and click on the button Sign up.

2. Fill in the fields Username, Email address, Password, click on the button Verify to solve the challenge and click on the button Create account.

3. Let's create the repository. Click on the menu with the avatar and click on the menu Your repositories.

4. Click on the button New.

5. Fill in the field Repository name and click‚Ä¶
View on GitHub
This tutorial was posted on my blog in portuguese and on the DEV Community in english.]]></summary>
        <author>
            <name>Rodrigo Kamada</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Set Up Laravel 8 on Your Android Phone]]></title>
        <id>618b035411d3cb08287a3f7d</id>
        <link href="https://www.freecodecamp.org/news/how-to-setup-laravel-8-on-android-phone/"/>
        <updated>2021-11-11T16:34:04.000Z</updated>
        <summary type="html"><![CDATA[Hey, how are you doing? In this article, I'm going to show you how you can install Laravel 8 on your phone.  To get the most out of this guide, you should have some knowledge of PHP and you should know what Laravel is. But if you don't, don't worry]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is Hoisting in JavaScript?]]></title>
        <id>618ca60511d3cb08287a474b</id>
        <link href="https://www.freecodecamp.org/news/what-is-hoisting-in-javascript/"/>
        <updated>2021-11-11T16:12:59.000Z</updated>
        <summary type="html"><![CDATA[In JavaScript, hoisting allows you to use functions and variables before they're declared. In this post, we'll learn what hoisting is and how it works. What is hoisting?Take a look at the code below and guess what happens when it runs: console.log(foo); var foo = 'foo'; It might]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Dockerize a Flask Application]]></title>
        <id>618a1b968bcfae07ca4e3a16</id>
        <link href="https://www.freecodecamp.org/news/how-to-dockerize-a-flask-app/"/>
        <updated>2021-11-11T16:04:40.000Z</updated>
        <summary type="html"><![CDATA[These days, developers need to develop, ship, and run applications quicker than ever. And fortunately, there's a tool that helps you do that ‚Äì¬†Docker. With Docker, you can now easily ship, test, and deploy your code quickly while maintaining full control over your infrastructure. It significantly reduces how long it]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Easy Dark Mode (and Multiple Color Themes!) in React]]></title>
        <id>https://css-tricks.com/?p=355683</id>
        <link href="https://css-tricks.com/easy-dark-mode-and-multiple-color-themes-in-react/"/>
        <updated>2021-11-11T15:28:04.000Z</updated>
        <summary type="html"><![CDATA[I was working on a large React application for a startup, and aside from just wanting some good strategies to keep our styles organized, I wanted to give this whole ‚Äúdark mode‚Äù thing a shot. With the huge ecosystem around ‚Ä¶
The post Easy Dark Mode (and Multiple Color Themes!) in React appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Abram Thau</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Quickly Get Alerted to Front-End Errors and Performance Issues]]></title>
        <id>https://css-tricks.com/?p=355516</id>
        <link href="https://css-tricks.com/quickly-get-alerted-to-front-end-errors-and-performance-issues/"/>
        <updated>2021-11-11T15:22:31.000Z</updated>
        <summary type="html"><![CDATA[(This is a sponsored post.)
Measuring things is great. They say what you only fix what you measure. Raygun is great at measuring websites. Measuring performance, measuring errors and crashes, measuring code problems. 
You know what‚Äôs even better than ‚Ä¶
The post Quickly Get Alerted to Front-End Errors and Performance Issues appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[From Good To Great In Dashboard Design: Research, Decluttering And Data Viz]]></title>
        <id>https://smashingmagazine.com/2021/11/dashboard-design-research-decluttering-data-viz/</id>
        <link href="https://smashingmagazine.com/2021/11/dashboard-design-research-decluttering-data-viz/"/>
        <updated>2021-11-11T14:00:00.000Z</updated>
        <summary type="html"><![CDATA[Dribbbleshots just might be the hotbed of questionable dashboards. Striking visuals, little context, and no research: all recipes for mediocrity. Mediocrity won‚Äôt do. We‚Äôll pursue greatness. And in that pursuit, we‚Äôll cover research, decluttering, and data visualization.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Adam Fard)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Don‚Äôt Snore on CORS]]></title>
        <id>https://css-tricks.com/?p=356058</id>
        <link href="https://css-tricks.com/dont-snore-on-cors/"/>
        <updated>2021-11-10T22:38:05.000Z</updated>
        <summary type="html"><![CDATA[Whatever, I just needed a title. Everyone‚Äôs favorite web security feature has crossed my desk a bunch of times lately and I always feel like that is a sign I should write something because that‚Äôs what blogging is. 
The main ‚Ä¶
The post Don‚Äôt Snore on CORS appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is a PC? Computer Definition and Computer Basics for Beginners]]></title>
        <id>6189613e8bcfae07ca4e3967</id>
        <link href="https://www.freecodecamp.org/news/what-is-a-pc-computer-definition-and-computer-basics-for-beginners/"/>
        <updated>2021-11-10T18:35:08.000Z</updated>
        <summary type="html"><![CDATA[Computers have revolutionized our lives.  They help us get repetitive tasks done quickly and accurately. And they are tireless and do not fear complexity.  Computers are able to process data and perform operations at a rate of millions per second. They can get a task done much faster compared to]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[No Audio Output Device is Installed [Fixed on Windows 10 PC]]]></title>
        <id>618bf06d11d3cb08287a4450</id>
        <link href="https://www.freecodecamp.org/news/no-audio-output-device-is-installed-fixed-on-windows-10-pc/"/>
        <updated>2021-11-10T18:27:53.000Z</updated>
        <summary type="html"><![CDATA[If you use Windows 10, you might have encountered the error "no audio output device is installed".    This error can be caused by a corrupt driver, overdue updates, or improper connection.  In this article, I will show you 2 ways you can fix the "no audio output]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python Reverse String ‚Äì String Reversal in Python Explained with Examples]]></title>
        <id>615eb0160d91c9077974e918</id>
        <link href="https://www.freecodecamp.org/news/python-reverse-string-string-reversal-in-python-explained-with-code-examples/"/>
        <updated>2021-11-10T16:40:09.000Z</updated>
        <summary type="html"><![CDATA[When you're working with Python strings, there are times when you'll have to reverse them, and work with their reversed copies instead.  But since Python strings are immutable, you cannot modify or reverse them in place. In Python, there are a few different ways you can do this. And this]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Array vs Object Destructuring in JavaScript ‚Äì What‚Äôs the Difference?]]></title>
        <id>61695ddc80d82d07c45a5220</id>
        <link href="https://www.freecodecamp.org/news/array-vs-object-destructuring-in-javascript/"/>
        <updated>2021-11-10T16:24:16.000Z</updated>
        <summary type="html"><![CDATA[The destructuring assignment in JavaScript provides a neat and DRY way to extract values from your arrays and objects. This article aims to show you exactly how array and object destructuring assignments work in JavaScript. So, without any further ado, let‚Äôs get started with array destructuring. What Is Array]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[React Authentication Tutorial ‚Äì How to Set Up Auth with Firebase V9 and React Router V6]]></title>
        <id>618671f48bcfae07ca4e299e</id>
        <link href="https://www.freecodecamp.org/news/react-firebase-authentication-and-crud-operations/"/>
        <updated>2021-11-10T16:22:43.000Z</updated>
        <summary type="html"><![CDATA[Hey everyone, in this tutorial we'll use React with Firebase V9 to setup authentication for an application.  We will create Firebase functions for Login and Register, we will add toast messages for errors, and we will add private routes using session-based authentication. It's going to be fun. We will use]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Quick and Dirty Bootstrap Overrides at Runtime]]></title>
        <id>https://css-tricks.com/?p=355649</id>
        <link href="https://css-tricks.com/quick-and-dirty-bootstrap-overrides-at-runtime/"/>
        <updated>2021-11-10T15:00:29.000Z</updated>
        <summary type="html"><![CDATA[Oh, Bootstrap, that old standard web library that either you hate or you spend all your time defending as ‚Äúit‚Äôs fine, it‚Äôs not that bad.‚Äù Regardless of what side you fall on, it‚Äôs a powerful UI framework that‚Äôs everywhere, ‚Ä¶
The post Quick and Dirty Bootstrap Overrides at Runtime appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Meredith Matthews</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[cleanup.pictures]]></title>
        <id>https://css-tricks.com/?p=356208</id>
        <link href="https://css-tricks.com/cleanup-pictures/"/>
        <updated>2021-11-10T14:55:26.000Z</updated>
        <summary type="html"><![CDATA[Nice domain, eh? Does just what it says on the tin: cleans up pictures. You draw over areas of the image you want cleaned up, and it does its best using weird science. It‚Äôs like Photoshop‚Äôs Spot Healing Brush‚Ä¶
The post cleanup.pictures appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Detecting Specific Text Input with HTML and CSS]]></title>
        <id>https://css-tricks.com/?p=356142</id>
        <link href="https://css-tricks.com/detecting-specific-text-input-with-html-and-css/"/>
        <updated>2021-11-09T22:53:45.000Z</updated>
        <summary type="html"><![CDATA[Louis Lazaris breaks down some bonafide CSS trickery from Jane. The Pen shows off interactivity where:
You have to press a special combination of keys on a keyboard.
Then type a secret password.
From there, a special message pops ‚Ä¶
The post Detecting Specific Text Input with HTML and CSS appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[VideoPress for WordPress]]></title>
        <id>https://css-tricks.com/?p=356370</id>
        <link href="https://css-tricks.com/videopress-for-wordpress/"/>
        <updated>2021-11-09T22:53:18.000Z</updated>
        <summary type="html"><![CDATA[(This is a sponsored post.)
The leade here is that VideoPress makes video on WordPress way better. VideoPress is a part of Jetpack. And now, if VideoPress is the only thing you care about from the Jetpack world, you ‚Ä¶
The post VideoPress for WordPress appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[React Suspense: Lessons Learned While Loading Data]]></title>
        <id>https://css-tricks.com/?p=356187</id>
        <link href="https://css-tricks.com/react-suspense-lessons-learned-while-loading-data/"/>
        <updated>2021-11-09T15:20:10.000Z</updated>
        <summary type="html"><![CDATA[Suspense is React‚Äôs forthcoming feature that helps coordinate asynchronous actions‚Äîlike data loading‚Äîallowing you to easily prevent inconsistent state in your UI. I‚Äôll provide a better explanation of what exactly that means, along with a quick introduction of Suspense, and then ‚Ä¶
The post React Suspense: Lessons Learned While Loading Data appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Adam Rackis</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Localizing Your Next.js App]]></title>
        <id>https://smashingmagazine.com/2021/11/localizing-your-nextjs-app/</id>
        <link href="https://smashingmagazine.com/2021/11/localizing-your-nextjs-app/"/>
        <updated>2021-11-09T13:00:00.000Z</updated>
        <summary type="html"><![CDATA[Internationalized routing is not exactly a new feature on Next.js. In this article, we are not only checking what we get from this feature, but also how to leverage such functionalities to achieve the best user experience and a smooth developer experience as well.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (√Åtila Fassina)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Automatically Transforming And Optimizing Images And Videos On Your WordPress Website]]></title>
        <id>https://smashingmagazine.com/2021/11/transforming-optimizing-images-videos-wordpress-website/</id>
        <link href="https://smashingmagazine.com/2021/11/transforming-optimizing-images-videos-wordpress-website/"/>
        <updated>2021-11-09T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[In this article, Leonardo Losoviz explains how Cloudinary‚Äôs integration can be used with WordPress to produce and deliver optimal digital experiences.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Leonardo Losoviz)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS Grid Can Do Auto Height Transitions]]></title>
        <id>https://css-tricks.com/?p=356204</id>
        <link href="https://css-tricks.com/css-grid-can-do-auto-height-transitions/"/>
        <updated>2021-11-08T19:01:31.000Z</updated>
        <summary type="html"><![CDATA[Bonafide CSS trick alert! Nelson Menezes figured out a new way (that only works in Firefox for now) that is awfully clever.
Perhaps you know that CSS cannot animate to auto dimensions, which is super unfortunate. Animating from ‚Ä¶
The post CSS Grid Can Do Auto Height Transitions appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Icon Glassmorphism Effect in CSS]]></title>
        <id>https://css-tricks.com/?p=322098</id>
        <link href="https://css-tricks.com/icon-glassmorphism-effect-in-css/"/>
        <updated>2021-11-08T14:57:42.000Z</updated>
        <summary type="html"><![CDATA[I recently came across a cool effect known as glassmorphism in a Dribble shot. My first thought was I could quickly recreate it in a few minutes if I just use some emojis for the icons without wasting time ‚Ä¶
The post Icon Glassmorphism Effect in CSS appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Ana Tudor</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Does the Next Generation of Static Site Generators Make Building Sites Better?]]></title>
        <id>https://css-tricks.com/?p=356134</id>
        <link href="https://css-tricks.com/does-the-next-generation-of-static-site-generators-make-building-sites-better/"/>
        <updated>2021-11-08T14:56:23.000Z</updated>
        <summary type="html"><![CDATA[Just ran across √Æles, a new static site generator mostly centered around Vue. The world has no particular shortage of static site generators, but it‚Äôs interesting to see what this ‚Äúnext generation‚Äù of SSGs seem to focus on or ‚Ä¶
The post Does the Next Generation of Static Site Generators Make Building Sites Better? appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Meet Hydrogen: A React Framework For Dynamic, Contextual And Personalized E-Commerce]]></title>
        <id>https://smashingmagazine.com/2021/11/hydrogen-react-framework-dynamic-contextual-personalized-ecommerce/</id>
        <link href="https://smashingmagazine.com/2021/11/hydrogen-react-framework-dynamic-contextual-personalized-ecommerce/"/>
        <updated>2021-11-08T14:30:00.000Z</updated>
        <summary type="html"><![CDATA[A great commerce experience is not a Lighthouse score or a set of Core Web Vitals figures (although both are important inputs), but it‚Äôs also a trilemma that carefully balances competing needs of delivering a great customer experience, dynamic storefront capabilities and long-term business objectives.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Ilya Grigorik)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Favicons: How to Make Sure Browsers Only Download the SVG Version]]></title>
        <id>https://css-tricks.com/?p=355780</id>
        <link href="https://css-tricks.com/favicons-how-to-make-sure-browsers-only-download-the-svg-version/"/>
        <updated>2021-11-05T20:47:32.000Z</updated>
        <summary type="html"><![CDATA[≈†ime Vidas DM‚Äôd me the other day about this thread from subzey on Twitter. My HTML for favicons was like this:
<!-- Warning! Typo! --<link rel="icon" href="/favicon.ico" size="any"<link rel="icon" href="/favicon.svg" type="image/svg+xml"
The attribute size is a typo there, ‚Ä¶
The post Favicons: How to Make Sure Browsers Only Download the SVG Version appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Value Of Concept Testing As Part Of Product Design]]></title>
        <id>https://smashingmagazine.com/2021/11/concept-testing-part-of-product-design/</id>
        <link href="https://smashingmagazine.com/2021/11/concept-testing-part-of-product-design/"/>
        <updated>2021-11-05T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[Concept testing ideas before moving into a detailed design is good UX practice. In this article, Victor Yocco presents details on how and when to engage in concept testing, as well as case studies providing details on the insights gained in two very different settings.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Victor Yocco)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 43 With Matthew Phillips: What Is Astro?]]></title>
        <id>https://smashingmagazine.com/2021/11/smashing-podcast-episode-43/</id>
        <link href="https://smashingmagazine.com/2021/11/smashing-podcast-episode-43/"/>
        <updated>2021-11-04T18:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode, we‚Äôre talking about Astro. Will this modern static site builder launch you into the stratosphere? Drew McLellan talks to developer Matthew Phillips to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GraphQL On The Front-End (React And Apollo)]]></title>
        <id>https://smashingmagazine.com/2021/11/graphql-frontend-react-apollo/</id>
        <link href="https://smashingmagazine.com/2021/11/graphql-frontend-react-apollo/"/>
        <updated>2021-11-04T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[Within the last decade, technologies like GraphQL have changed how we build web apps and how they communicate with each other. GraphQL provides certain benefits over REST APIs ‚Äî let‚Äôs find out what they are.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (David Atanda)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Deep Dive Into Serverless UI With TypeScript]]></title>
        <id>https://smashingmagazine.com/2021/11/deep-dive-into-serverless-ui-typescript/</id>
        <link href="https://smashingmagazine.com/2021/11/deep-dive-into-serverless-ui-typescript/"/>
        <updated>2021-11-03T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[Serverless UI is simply a free, open-source command-line utility for quickly building and deploying serverless applications on the AWS platform. In this article, we will learn and cover everything needed on using Serverless UI to deploy our projects or serverless applications to cloud services providers.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Ikeh Akinyemi)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Creating A Magento PWA: Customizing Themes vs. Coding From Scratch]]></title>
        <id>https://smashingmagazine.com/2021/11/magento-pwa-customizing-themes-coding/</id>
        <link href="https://smashingmagazine.com/2021/11/magento-pwa-customizing-themes-coding/"/>
        <updated>2021-11-02T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[This article sheds the spotlight on Magento PWAs and explains why business owners are getting them (often instead of native applications). Alex Husar introduces ways of how progressive web applications can be developed on Magento, as well as go over the major pros and cons of each development path.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Alex Husar)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Splash Of Color For Misty Days (November 2021 Desktop Wallpapers Edition)]]></title>
        <id>https://smashingmagazine.com/2021/10/desktop-wallpaper-calendars-november-2021/</id>
        <link href="https://smashingmagazine.com/2021/10/desktop-wallpaper-calendars-november-2021/"/>
        <updated>2021-10-31T08:20:00.000Z</updated>
        <summary type="html"><![CDATA[November is just around the corner, and with it, a new collection of desktop wallpapers to celebrate the beginning of the month. Designed by creatives from all across the globe, they come in versions with and without a calendar. Let‚Äôs make November colorful!]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cosima Mielke)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[50 Resources And Tools To Turbocharge Your Copywriting Skills]]></title>
        <id>https://smashingmagazine.com/2021/10/resources-tools-turbocharge-copywriting-skills/</id>
        <link href="https://smashingmagazine.com/2021/10/resources-tools-turbocharge-copywriting-skills/"/>
        <updated>2021-10-29T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[Stop wasting time and effort writing copy that falls flat. Raise your copywriting game and boost your powers of persuasion with these rich and informative online resources.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Freya Giles)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Build An Amazon Product Scraper With Node.js]]></title>
        <id>https://smashingmagazine.com/2021/10/building-amazon-product-scraper-nodejs/</id>
        <link href="https://smashingmagazine.com/2021/10/building-amazon-product-scraper-nodejs/"/>
        <updated>2021-10-28T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[The wealth of data that Amazon holds can make a huge difference when you‚Äôre designing a product or hunting for a bargain. But, how can a developer get that data? Simple, by using a web scraper. Here‚Äôs how to build your data extraction bot with Node.js.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Robert Sfichi)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Eye-Tracking In Mobile UX Research]]></title>
        <id>https://smashingmagazine.com/2021/10/eye-tracking-mobile-ux-research/</id>
        <link href="https://smashingmagazine.com/2021/10/eye-tracking-mobile-ux-research/"/>
        <updated>2021-10-27T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[Thanks to technology, eye-tracking has become more accessible to UX research as it allows researchers to get insights about users ‚Äôvisual attention. This article explores the latest trends in the eye-tracking market and how the methodology can be included in the UX researcher‚Äôs toolbox.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Mariana Macedo)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Optimizing Next.js Applications With Nx]]></title>
        <id>https://smashingmagazine.com/2021/10/optimizing-nextjs-applications-nx/</id>
        <link href="https://smashingmagazine.com/2021/10/optimizing-nextjs-applications-nx/"/>
        <updated>2021-10-26T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[Nx is a build framework that facilitates optimization, efficient scaling of applications, and other features such as shared libraries and components. In this article, we will be looking at how we can effectively scale Next.js applications by using Nx.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Melvin Kosisochukwu)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Deep Dive Into object-fit And background-size In CSS]]></title>
        <id>https://smashingmagazine.com/2021/10/object-fit-background-size-css/</id>
        <link href="https://smashingmagazine.com/2021/10/object-fit-background-size-css/"/>
        <updated>2021-10-25T13:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this article, we will go through how `object-fit` and `background-size` work, when we can use them, and why, along with some practical use cases and recommendations. Let‚Äôs dive in.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Ahmad Shadeed)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[An Introduction To Quasar Framework: Building Cross-Platform Applications]]></title>
        <id>https://smashingmagazine.com/2021/10/introduction-quasar-framework-cross-platform-applications/</id>
        <link href="https://smashingmagazine.com/2021/10/introduction-quasar-framework-cross-platform-applications/"/>
        <updated>2021-10-23T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[Quasar is an open-source Vue.js-based cross-platform framework that allows you, as a developer, to easily build apps for both desktop and mobile using technologies such as Cordova and Electron and writing your code once. The app we‚Äôll build will store and get its data from Firebase, meaning that we will also be seeing how to use Firebase in Quasar.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Joel Olawanle)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Build A Real-Time Multi-User Game From Scratch]]></title>
        <id>https://smashingmagazine.com/2021/10/real-time-multi-user-game/</id>
        <link href="https://smashingmagazine.com/2021/10/real-time-multi-user-game/"/>
        <updated>2021-10-22T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[This article highlights the process, technical decisions and lessons learned behind building the real-time game Autowuzzler. Learn how to share game state across multiple clients in real-time with Colyseus, do physics calculations with Matter.js, store data in Supabase.io and build the front-end with SvelteKit.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Martin Grubinger)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Respecting Users‚Äô Motion Preferences]]></title>
        <id>https://smashingmagazine.com/2021/10/respecting-users-motion-preferences/</id>
        <link href="https://smashingmagazine.com/2021/10/respecting-users-motion-preferences/"/>
        <updated>2021-10-21T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[The `prefers-reduced-motion` media query has excellent support in all modern browsers going back a couple of years. In this article, Michelle Barker explains why there‚Äôs no reason not to use it today to make your sites more accessible.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Michelle Barker)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building The SSG I‚Äôve Always Wanted: An 11ty, Vite And JAM Sandwich]]></title>
        <id>https://smashingmagazine.com/2021/10/building-ssg-11ty-vite-jam-sandwich/</id>
        <link href="https://smashingmagazine.com/2021/10/building-ssg-11ty-vite-jam-sandwich/"/>
        <updated>2021-10-20T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[Back in January 2020, Ben Holmes set out to do what just about every web developer does each year: rebuild his personal site. In this article, he shares his story of how he set out to build his own build pipeline from absolute ground zero and created ‚ÄúSlinkity‚Äù.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Ben Holmes)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building An API With Gatsby Functions]]></title>
        <id>https://smashingmagazine.com/2021/10/building-api-gatsby-functions/</id>
        <link href="https://smashingmagazine.com/2021/10/building-api-gatsby-functions/"/>
        <updated>2021-10-19T14:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this tutorial, Paul Scanlon explains how to build an API by using Gatsby Functions and what you need to keep in mind when deploying it to Gatsby Cloud.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Paul Scanlon)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 42 With Jeff Smith: What Is DevOps?]]></title>
        <id>https://smashingmagazine.com/2021/10/smashing-podcast-episode-42/</id>
        <link href="https://smashingmagazine.com/2021/10/smashing-podcast-episode-42/"/>
        <updated>2021-10-19T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode, we‚Äôre talking about DevOps. What is it, and is it a string to add to your web development bow? Drew McLellan talks to expert Jeff Smith to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Solving CLS Issues In A Next.js-Powered E-Commerce Website (Case Study)]]></title>
        <id>https://smashingmagazine.com/2021/10/nextjs-ecommerce-cls-case-study/</id>
        <link href="https://smashingmagazine.com/2021/10/nextjs-ecommerce-cls-case-study/"/>
        <updated>2021-10-18T14:00:00.000Z</updated>
        <summary type="html"><![CDATA[Cumulative Layout Shift is one of the hardest core web vital to debug. In this article, we go through different tools to investigate CLS, when to use them(and when not), and solutions to some of the CLS issues we faced in our Next.js-based e-commerce website.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Arijit Mondal)</name>
        </author>
    </entry>
</feed>
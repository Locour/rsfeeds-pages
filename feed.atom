<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2021-05-30T02:03:08.593Z</id>
    <title>osmos::feed</title>
    <updated>2021-05-30T02:03:08.593Z</updated>
    <generator>osmosfeed 1.9.0</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[Upgrade a Rails app from the Heroku-16 to the Heroku-18 Stack]]></title>
        <id>https://dev.to/jbranchaud/upgrade-a-rails-app-from-the-heroku-16-to-the-heroku-18-stack-5kp</id>
        <link href="https://dev.to/jbranchaud/upgrade-a-rails-app-from-the-heroku-16-to-the-heroku-18-stack-5kp"/>
        <updated>2021-05-30T00:44:42.000Z</updated>
        <summary type="html"><![CDATA[I'm working with a client to urgently upgrade their Rails app from the Heroku-16 stack to the Heroku-18 stack. Heroku has already end-of-life'd the Heroku-16 stack at the beginning of this month. And in a few days, on June 1st, they will completely turn off support patches and new builds of Heroku-16 apps.
The Heroku-18 stack is supported until April 2023 (source).
The minimum Ruby version supported by the Heroku-18 is Ruby 2.4.10 (source).
Install the target Ruby version:
$ asdf install ruby 2.4.10

Switch to that Ruby version:
$ asdf local ruby 2.4.10
$ ruby --version
ruby 2.4.10p364 (2020-03-31 revision 67879) [x86_64-darwin19]

Install an older version of bundler (pre 2.x):
$ gem install bundler:1.17.3

Install all the app's gems with for the new Ruby version using the specific version…]]></summary>
        <author>
            <name>Josh Branchaud</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Write Asynchronous JavaScript Code]]></title>
        <id>https://dev.to/cpustejovsky/how-to-write-asynchronous-code-448h</id>
        <link href="https://dev.to/cpustejovsky/how-to-write-asynchronous-code-448h"/>
        <updated>2021-05-29T22:37:18.000Z</updated>
        <summary type="html"><![CDATA[How to Write Asynchronous Code in NodeJS


JavaScript is a non-blocking, single-threaded programming language. It will not go from top to bottom, running your functions one line at a time like you would expect.
For example, here is some simple code to read a file:
const fs = require("fs");

console.log("starting");
fs.readFile("/path/to/helloworld.txt", "utf8", (err, data) => {
  if (err) console.log(err);
  console.log(data);
});
console.log("finishing");

You may expect the result to be
starting
<file contents>
finishing

But instead you get:
starting
finishing
<file contents>

This is because JavaScript does not stop. It will keep going down your code while waiting for a process to finish. There are three ways to handle this and I'll go over them from worst to best.
To use callbacks for…]]></summary>
        <author>
            <name>Charles Clinton Pustejovsky III</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How I Created an Event-Driven Backend with RxJS, Server-Sent Events and ExpressJS]]></title>
        <id>https://dev.to/sh4yy/how-i-created-an-event-driven-backend-with-rxjs-server-sent-events-and-expressjs-4d6k</id>
        <link href="https://dev.to/sh4yy/how-i-created-an-event-driven-backend-with-rxjs-server-sent-events-and-expressjs-4d6k"/>
        <updated>2021-05-29T20:36:28.000Z</updated>
        <summary type="html"><![CDATA[About a month ago, a friend and I came up with an idea for a small website and decided to create an MVP in a couple of days to give it a shot. The idea was pretty simple; a meme-driven chat room and a live price chart for each cryptocurrency. I was assigned to create the backend for the project, and my friend would make the web client.
I set three requirements for myself before starting to work on the server. First and foremost, I wanted to get the MVP out as soon as possible. Secondly, I wanted to make the server as lightweight as possible to just leave it running on a cheap VM. Lastly, I wanted to design the architecture to allow for easy scaling if the shit coin investors decide to make another stupid decision and use our application.
The first step was to think of the entire server as …]]></summary>
        <author>
            <name>Shayan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[You can't improve what you can't measure: 13 KPIs necessary for every DevOps leader]]></title>
        <id>https://dev.to/ryan_opsera/you-can-t-improve-what-you-can-t-measure-13-kpis-necessary-for-every-devops-leader-22ib</id>
        <link href="https://dev.to/ryan_opsera/you-can-t-improve-what-you-can-t-measure-13-kpis-necessary-for-every-devops-leader-22ib"/>
        <updated>2021-05-29T18:58:49.000Z</updated>
        <summary type="html"><![CDATA[Original Post: https://www.opsera.io/blog/you-cant-improve-what-you-cant-measure-13-kpis-necessary-for-every-devops-leader
DevOps is not an event: it’s a culture. As such, it demands continual improvement in order to stay relevant and competitive. Improvement, however, requires measurement. KPIs are measurements that allow DevOps leaders to see where their teams are, and map out where they are going.
KPIs are metrics that help everyone in an organization from the engineer to the CTO, CIO or CISO. When people at all levels are on the same page, using the same data to build upon, progress happens more easily and quickly. The engineering team uses the information to improve, while the executive team uses it to make decisions that reshape the DevOps in the organization.
KPIs also align everyon…]]></summary>
        <author>
            <name>Ryan Cartwright</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fedora Workstation 34: Guia pós-instalação e Ambiente Dev JavaScript]]></title>
        <id>https://dev.to/thiagoreis/fedora-workstation-34-guia-pos-instalacao-e-ambiente-dev-javascript-jbo</id>
        <link href="https://dev.to/thiagoreis/fedora-workstation-34-guia-pos-instalacao-e-ambiente-dev-javascript-jbo"/>
        <updated>2021-05-29T18:17:50.000Z</updated>
        <summary type="html"><![CDATA[O intuito deste post é apresentar o essencial a se fazer após a instalação do Fedora Workstation 34 e de bônus a configuração de um ambiente essencial de desenvolvimento JavaScript.
Vamos editar o arquivo /etc/dnf/dnf.conf e habilitar os mirrors mais rápidos e aumentar a quantidade de downloads paralelos. Execute os seguintes comandos no terminal:
echo 'fastestmirror=1' | sudo tee -a /etc/dnf/dnf.conf 
echo 'max_parallel_downloads=10' | sudo tee -a /etc/dnf/dnf.conf 
echo 'deltarpm=true' | sudo tee -a /etc/dnf/dnf.conf

Os 3 comandos acima irão adicionar as diretivas fastestmirror, max_parallel_downloads e deltarpm ao arquivo:

Free:
sudo rpm -Uvh https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm 

Non-free:
sudo rpm -Uvh https://download1.rpmf…]]></summary>
        <author>
            <name>Thiago Reis</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mi experiencia con Digital Ocean como hosting]]></title>
        <id>https://dev.to/neon_affogato/mi-experiencia-con-digital-ocean-como-hosting-50k8</id>
        <link href="https://dev.to/neon_affogato/mi-experiencia-con-digital-ocean-como-hosting-50k8"/>
        <updated>2021-05-29T17:58:50.000Z</updated>
        <summary type="html"><![CDATA[¿Estás eligiendo un servicio de hosting pero no sabes cual elegir? De seguro te topaste con publicidad de Digital Ocean pero quieres escuchar una opinión real de lo que tienen para ofrecer. Llevo usando Digital Ocean como hosting de mis proyectos personales por varios años y te platico como ha sido mi experiencia y lo que puedes encontrar si decides contratar sus servicios.
Estoy casi seguro de que has considerado usar Vercel, Netifly, Heroku u otro servicio de hosting moderno para tu aplicación (probablemente hecha en Javascript). Pero, ¿es lo mismo? Bien pues aquí hay que hacer una pequeña aclaración, solo en caso de que no lo sepas; existen diferentes tipos de empresas para servicios en línea; IAAS, Infrastructure as a service; y PAAS, platform as a service.
Traducido al español como "i…]]></summary>
        <author>
            <name>Eduardo Zepeda</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript tips: The labeled statement]]></title>
        <id>https://dev.to/davidarmendariz/the-labeled-statement-in-javascript-20f8</id>
        <link href="https://dev.to/davidarmendariz/the-labeled-statement-in-javascript-20f8"/>
        <updated>2021-05-29T15:47:36.000Z</updated>
        <summary type="html"><![CDATA[What if you type in the console something like this?
label: {}

You won't have any errors. This is valid JS!
It turns out you can reference loops in Javascript. This was something I did not know a few days ago, but is a really cool and helpful feature in Javascript. In the following video, I explain you with examples how to use labeled statements.]]></summary>
        <author>
            <name>David Armendáriz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[React + Firebase: A Simple Context-based Authentication Provider]]></title>
        <id>https://dev.to/dchowitz/react-firebase-a-simple-context-based-authentication-provider-1ool</id>
        <link href="https://dev.to/dchowitz/react-firebase-a-simple-context-based-authentication-provider-1ool"/>
        <updated>2021-05-29T15:23:38.000Z</updated>
        <summary type="html"><![CDATA[This post showcases a quick and easy way to make a Firebase-authenticated user available throughout your React web app.
We are using here plain React with Typescript, and no extra state management library like Redux involved.
Firebase offers us to register a callback that gets called every time a user is authenticated or signed out to get notified about the current authentication situation.
import firebase from "firebase/app";

firebase.auth().onAuthStateChanged((user) => {
  if (user) {
    console.log("authenticated", user);
  } else {
    console.log("signed out");
  }
});

We thus could implement a React component that is interested in the authenticated user quite straightforward like this:
import * as React from "react";
import firebase from "firebase/app";

function CurrentUser() {
 …]]></summary>
        <author>
            <name>Denny Christochowitz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to add editable post angular]]></title>
        <id>https://dev.to/mateuszto/how-to-add-editable-post-angular-44el</id>
        <link href="https://dev.to/mateuszto/how-to-add-editable-post-angular-44el"/>
        <updated>2021-05-29T15:21:54.000Z</updated>
        <summary type="html"><![CDATA[Hi, i got my app and now I try to make edit feature but I can't do you got any tutorials or tips?
https://stackblitz.com/edit/angular-ivy-qkhrjx?file=src%2Fapp%2Fnotes%2Fnotes.component.ts]]></summary>
        <author>
            <name>Mateusz Tomczyk</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to add editable post angular]]></title>
        <id>https://dev.to/mateuszto/how-to-add-editable-post-angular-44el</id>
        <link href="https://dev.to/mateuszto/how-to-add-editable-post-angular-44el"/>
        <updated>2021-05-29T15:21:54.000Z</updated>
        <summary type="html"><![CDATA[Hi, i got my app and now I try to make edit feature but I can't do you got any tutorials or tips?
https://stackblitz.com/edit/angular-ivy-qkhrjx?file=src%2Fapp%2Fnotes%2Fnotes.component.ts]]></summary>
        <author>
            <name>Mateusz Tomczyk</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Docker `with_build_env.sh` Script]]></title>
        <id>https://dev.to/smortimerk/docker-withbuildenv-sh-script-4o9a</id>
        <link href="https://dev.to/smortimerk/docker-withbuildenv-sh-script-4o9a"/>
        <updated>2021-05-29T15:01:02.000Z</updated>
        <summary type="html"><![CDATA[In Docker for the Build Process, I introduced the idea of extracting the build phase of a project into a dedicated build_img.sh script, which uses the project's Dockerised build environment to build the "run" image for the project, allowing a project to be built on a host environment without installing any extra tooling other than Docker. In this post I'll expand on this idea and show how we can use this script as a basis for a new, reusable script that allows us to easily work with the build environment of our project.
The idea here is to create a with_build_env.sh script which, at its most basic, will take a command and run it in the build environment, with the local project directory also mounted in this build environment. This means that we could, for example, run bash scripts/with_bui…]]></summary>
        <author>
            <name>Seán Kelleher</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Vim Cheat Sheet]]></title>
        <id>https://dev.to/harvey/the-vim-cheat-sheet-5624</id>
        <link href="https://dev.to/harvey/the-vim-cheat-sheet-5624"/>
        <updated>2021-05-29T14:53:48.000Z</updated>
        <summary type="html"><![CDATA[Vim is a highly configurable text editor built to enable efficient text editing. It is an improved version of the vi editor distributed with most UNIX systems.
Vim is often used by programmers on Linux. But it can be used on Mac OS X and Windows too.

Vim is a powerful text editor that runs in a terminal, yet can be used to edit any kind of file. It's old, it's weird, and it's hard to learn but also one of the most powerful tools for editing code on any operating system.
So what about commands?
Here's a handy cheat sheet to help you get started with the editor. 



Cursor Movement





h
move cursor left


j
move cursor down


k
move cursor up


l
move cursor right


w
jump forwards to the start of a word


b
jump backwards to the start of a word



To write and to use commands press ESC for command mode or i for insert mode.
To save, open and quit a file:



Basic editor commands





:e filename
edit a file in a new buffer


:w
write (save) the file, but don't exit


:wq
write (save) and quit


:x
write (save) and quit


:q
quit (fails if there are unsaved changes)


:q!
quit and throw away unsaved changes


:qa
quit all buffers and windows


ZZ
write (save) current file, if modified, and quit


ZQ
quit without checking for changes



You can copy and paste text too:



Cut and Paste





yy
yank (copy) a line


2yy
yank (copy) 2 lines


p
put (paste) the clipboard after cursor


P
put (paste) before cursor


dd
delete (cut) a line


2dd
delete (cut) 2 lines



There are quite a few commands you have to memorize to use Vim effectively, which can be overwhelming when you’re learning. 
You can use these exercises to memorize commands.]]></summary>
        <author>
            <name>Harvey</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Use Bash to Write a Simple Script]]></title>
        <id>https://dev.to/jones268/how-to-use-bash-to-write-a-simple-script-3loj</id>
        <link href="https://dev.to/jones268/how-to-use-bash-to-write-a-simple-script-3loj"/>
        <updated>2021-05-29T14:37:50.000Z</updated>
        <summary type="html"><![CDATA[Bash is a Unix shell used in Linux and MacOS. We will be using a bash script to make a program that runs in the background. 
You need to know how to open a terminal in your operating system. On Ubuntu, you can press Ctrl+Alt+t . On Mac, you can press Command+Space, then type Terminal and press Enter.
To make bash scripts, you should know Linux commands. To practice the command line, you can use this site
A Bash script is a text file containing a series of Bash commands. When the file is executed, the commands are executed in sequence as they appear in the text file.
To get started, you can create a new script called my_script.sh. 
A simple script would be:
echo "Hello World"

Make it executable with the command:
chmod +x my_script.sh

This script will run when you enter the following comma…]]></summary>
        <author>
            <name>jones268</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Welcome white hackers]]></title>
        <id>https://dev.to/jmau111/welcome-white-hackers-4m62</id>
        <link href="https://dev.to/jmau111/welcome-white-hackers-4m62"/>
        <updated>2021-05-29T14:37:44.000Z</updated>
        <summary type="html"><![CDATA[If hackers want to help you, don't reject them.
Here is a short explanation, but be aware these are generic names inspired by old western movies!
Hackers are of all kinds, genders, and ages. Forget about the hoodie, the darkroom, and the need for recognition. Not that the cliché never happens, but remember it's a stereotype.
Anyway, not all hackers are cybercriminals. White hats or "ethical hackers" use their skills to test and ultimately improve security for various organizations and people. For example, banks and medical services can be involved.
They use the same techniques as gray and black hats to infiltrate systems. Black hats are known for their dark intentions. I would describe gray hats as "not always ethical hackers." Sometimes, they do illegal stuff.
If you're a black hat, there…]]></summary>
        <author>
            <name>Julien Maury</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[We are DKFM - Making DevOps things that make DevOps things easier]]></title>
        <id>https://dev.to/devops-kung-fu/we-are-dkfm-making-devops-things-that-make-devops-things-easier-8o8</id>
        <link href="https://dev.to/devops-kung-fu/we-are-dkfm-making-devops-things-that-make-devops-things-easier-8o8"/>
        <updated>2021-05-29T14:25:33.000Z</updated>
        <summary type="html"><![CDATA[DevOps, DevSecOps, Rainbow Monkey Unicorn Pony, it really doesn't matter what you call it but one thing is certain - every one of these practices relies on innovative tooling to shift quality issues left to developers. Innovation is something I needed to turn to as a Security Architect many years ago as I built and deployed DevSecOps practices to a few Fortune 10 healthcare organizations.
When I met Julio Jimenez @juliojimenez
 we struck up a great friendship built on a shared vision of developing tools that would blur the line between Security and DevOps. We became Essentialists and adopted the mantra that security is just an attribute of quality. With that, we focused on developing tools that improve the quality of the code we built.
After Dan Walsh joined DKFM we had our core team and o…]]></summary>
        <author>
            <name>DJ Schleen</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[vim vs. emacs]]></title>
        <id>https://dev.to/harvey/vim-vs-emacs-5e96</id>
        <link href="https://dev.to/harvey/vim-vs-emacs-5e96"/>
        <updated>2021-05-29T14:05:56.000Z</updated>
        <summary type="html"><![CDATA[Vim and emacs are two of the most popular text editors in the world. They are very different, with a different design philosophy.
Vim and Emacs are still used to this day and are both great choices 😁
Vim's main advantage is that it is very good at being a text editor and that you can do a lot without having to learn anything new.
You can install plugins, change key mappings, etc. either with the builtin scripting language or by sourcing scripts from your .vimrc .
Emacs is a text editor but more than that. It can be used for email, browsing the internet and a lot more.
Vim is a modal editor. It operates in either the insert mode (where keystrokes are entered and text is composed) or the command mode (where text can be moved and modified). 
It is not until you exit command mode and return t…]]></summary>
        <author>
            <name>Harvey</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[gpg command examples]]></title>
        <id>https://dev.to/jones268/gpg-command-examples-2dek</id>
        <link href="https://dev.to/jones268/gpg-command-examples-2dek"/>
        <updated>2021-05-29T13:39:07.000Z</updated>
        <summary type="html"><![CDATA[gpg is a program to encrypt and decrypt files. In other words, it is a program for privacy and security.
Your data is safe if you store it on gpg (i.e. encrypted).
So why would you expose your secret information to the threat of being stolen by leaking it to a computer disk?
The only reason is ignorance, because encryption is easy and saves you effort and money in the long run.
Tools like gpg make encryption as easy as saving a file, or even easier.
gpg linux will help you encrypt your e-mails or to encrypt files on your disk so that nobody else can read them without knowing the decryption password which you alone know.
If you are new to the linux command line, you can practice here
Encryption is a method for obscuring electronic data from those who should not see it. 
Encrypted data is un…]]></summary>
        <author>
            <name>jones268</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[gpg command examples]]></title>
        <id>https://dev.to/jones268/gpg-command-examples-2dek</id>
        <link href="https://dev.to/jones268/gpg-command-examples-2dek"/>
        <updated>2021-05-29T13:39:07.000Z</updated>
        <summary type="html"><![CDATA[gpg is a program to encrypt and decrypt files. In other words, it is a program for privacy and security.
Your data is safe if you store it on gpg (i.e. encrypted).
So why would you expose your secret information to the threat of being stolen by leaking it to a computer disk?
The only reason is ignorance, because encryption is easy and saves you effort and money in the long run.
Tools like gpg make encryption as easy as saving a file, or even easier.
gpg linux will help you encrypt your e-mails or to encrypt files on your disk so that nobody else can read them without knowing the decryption password which you alone know.
If you are new to the linux command line, you can practice here
Encryption is a method for obscuring electronic data from those who should not see it. 
Encrypted data is un…]]></summary>
        <author>
            <name>jones268</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building a simple server using Node.js and Express.]]></title>
        <id>https://dev.to/allyedge/building-a-simple-server-using-node-js-and-express-26hm</id>
        <link href="https://dev.to/allyedge/building-a-simple-server-using-node-js-and-express-26hm"/>
        <updated>2021-05-29T13:26:20.000Z</updated>
        <summary type="html"><![CDATA[In this story, I will show you how to build a simple serve using Node.js and Express!
I will also talk about why and when to use Node.js for your backend.
So, what are you waiting for?
https://link.medium.com/PGLb3EYIEgb]]></summary>
        <author>
            <name>Allyedge</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Writing An Operating System - The Boot Process (Part 1)]]></title>
        <id>https://dev.to/arriqaaq/writing-an-operating-system-the-boot-process-part-1-48p0</id>
        <link href="https://dev.to/arriqaaq/writing-an-operating-system-the-boot-process-part-1-48p0"/>
        <updated>2021-05-29T13:04:46.000Z</updated>
        <summary type="html"><![CDATA[This post was originally published here
My journey on learning to build a simple OS
How many times have you read an OS book but not been able to code one?Operating System (OS) books are tedious, but only theory makes it hard to understand how an OS actually works. Here is my attempt to write a simple OS and document some of the concepts learned.
On a mac, install Homebrew and then brew install qemu nasm
For testing these low-level programs without continuously having to reboot a machine or risk scrubbing your important data off a disk, we will use a CPU emulator QEmu. 
docker run -it ubuntu bash.
NASM is an assembler and disassembler for the Intel x86 architecture. It can be used to write 16-bit, 32-bit (IA-32) and 64-bit (x86-64) programs. 
Booting an operating system consists of transfer…]]></summary>
        <author>
            <name>Farhan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Integrate a Health Check Endpoint into Your App]]></title>
        <id>https://dev.to/omarfben/how-to-integrate-a-health-check-endpoint-into-your-app-2oc4</id>
        <link href="https://dev.to/omarfben/how-to-integrate-a-health-check-endpoint-into-your-app-2oc4"/>
        <updated>2021-05-29T12:00:18.000Z</updated>
        <summary type="html"><![CDATA[As your client base grows, so does your responsibility to provide a reliable service at all times. Let's look at how you may achieve piece of mind by adding a few lines of code.
To begin with, making one is really straightforward and does not need a great deal of technical knowledge. Google "How to create a [insert language] health check" and you'll get some code you can copy/paste in no time!
The following are some possible causes:
SLA — You may be forced to adhere to a Service Level Agreement (SLA) that outlines the amount of uptime you must commit to.
Money loss – a minute of downtime may cost tens of thousands of dollars in some businesses. What would you lose in terms of money and business if you had a minute, an hour, or an entire day of downtime?
Reputation – a history of downtimes …]]></summary>
        <author>
            <name>Omar Ben.</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Single Sign On (SSO) with subdomains using Caddy v2]]></title>
        <id>https://dev.to/shu8/single-sign-on-sso-with-subdomains-using-caddy-v2-l2i</id>
        <link href="https://dev.to/shu8/single-sign-on-sso-with-subdomains-using-caddy-v2-l2i"/>
        <updated>2021-05-29T11:30:43.000Z</updated>
        <summary type="html"><![CDATA[I've recently taken an interest in self-hosting simple open source applications — to have fun, take control of my privacy, and learn more about Linux, Docker and DevOps!
However, with this comes the need to add some form of authentication in front of all your services. For example, you probably don't want just anyone to be able to view all your RSS feeds, or use your markdown editor freely!
The most basic form is HTTP Basic Authentication, which is a pain as it must be configured and re-entered for each subdomain/service. You also need to type it out for each service, which can be challenging on mobile.
Single Sign On (SSO) on the other hand allows you to authenticate with different services with a single login. For example, if you have a Google account, you can go to youtube.com, gmail.co…]]></summary>
        <author>
            <name>Shubham</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to plot bar chart with R]]></title>
        <id>https://dev.to/maxwizard01/how-to-plot-bar-chart-with-r-1e03</id>
        <link href="https://dev.to/maxwizard01/how-to-plot-bar-chart-with-r-1e03"/>
        <updated>2021-05-29T10:52:53.000Z</updated>
        <summary type="html"><![CDATA[How to plot bar graph in R.


One of the important aspect in statistics or data analysis is representing data in a graphical method. Today we are going to learn how to plot a common statistical graph called bar chart.
well, you don't have any problem concerning that. all you just need to use is the barplot() function. 
barplot function we declare a variable that will hold all the height given then we can insert it inside the function.
Codes>>
height= c(1,3, 6, 1,3,3, 4, 3, 3, 1, 3 ,5 ,1, 2, 1 ,4, 3, 2 ,3 ,1 ,1, 1 ,1, 4, 3, 1,5,5)
barplot(height) # this isn’t correct

Result>>

table() function. this table() function helps to count the occurrence of each data.
Codes>>
height= c(1,3, 6, 1,3,3, 4, 3, 3, 1, 3 ,5 ,1, 2, 1 ,4, 3, 2 ,3 ,1 ,1, 1 ,1, 4, 3, 1,5,5)
summarizedHeight=table(height)
barplot(summarizedHeight) # this correct

Result>>

However, what if we wish to design the graph by giving it title and color. won't that be more amazing??
Vectors: is the data will want to use to plot the graph which is important to be summarised by table() function.
col: this is use to color your bar(the rectangular shape).
main: this is the main title of your graph.
xlab: to label on X-axis
ylab: to label on Y-axis.
col.main: this will give main title the preferable colour.
Now let's quickly take alook at how to implement this in our codes.
Codes>>
height= c(1,3, 6, 1,3,3, 4, 3, 3, 1, 3 ,5 ,1, 2, 1 ,4, 3, 2 ,3 ,1 ,1, 1 ,1, 4, 3, 1,5,5)
summarizedHeight=table(height)
barplot(summarizedHeight,col = 'pink',main = 'The height of student in primary1',ylab="frequency",xlab = "Height",col.main='red')

Result>>

title() function

cex.sub 
that is a simple way to represent our data in bar chart. I hope you find this article helpful. consider to like, join me on histagram or chat me up on whatsapp(07045225718)]]></summary>
        <author>
            <name>maxwizard01</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Creating a Reddit Clone Using React and GraphQL - 19]]></title>
        <id>https://dev.to/rasikag/creating-a-reddit-clone-using-react-and-graphql-19-1md6</id>
        <link href="https://dev.to/rasikag/creating-a-reddit-clone-using-react-and-graphql-19-1md6"/>
        <updated>2021-05-29T10:51:22.000Z</updated>
        <summary type="html"><![CDATA[This blog post originally posted on my blog site and you can find it here.


From last post, we stopped with a bug that introduce to the system. If we check the console in API we can see there is an error.
error: bind message supplies 2 parameters, but prepared statement "" requires 1


The thing is, in the post resolver, we are providing 2 parameters in the replacement array. But in the query, we only have $1. Because if the user just scroll the home page without login to the system, there will not be an UserId . So we need to change the parameters dynamically according to the query.
So first change the replacement array.
const replacement: any[] = [realLimitPlusOne];

Then set the cursor index dynamically.
if (req.session.userId) {
  replacement.push(req.session.userId);
}
let cursorIdx …]]></summary>
        <author>
            <name>Rasika Gayan Gunarathna</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript Tips #1: Menunggu beberapa proses asynchronous dengan Promise.all()]]></title>
        <id>https://dev.to/hadihammurabi/javascript-tips-1-menunggu-beberapa-proses-asynchronous-dengan-promise-all-2b77</id>
        <link href="https://dev.to/hadihammurabi/javascript-tips-1-menunggu-beberapa-proses-asynchronous-dengan-promise-all-2b77"/>
        <updated>2021-05-29T09:47:17.000Z</updated>
        <summary type="html"><![CDATA[Hal menarik yang disediakan oleh Javascript salah satunya adalah kita dapat melakukan proses secara tidak sinkron (asynchronous) sehingga tidak terjadi saling tunggu antar proses. Dalam praktiknya, proses asynchronous ini digunakan untuk proses-proses yang waktu tunggunya tergantung pada hal di luar proses itu sendiri, seperti koneksi internet, kecepatan penyimpanan, dll. Contoh proses yang dapat dilakukan secara asynchronous:
Query database
Mengambil data dari web lain (HTTP Request)
Menulis/membaca isi file
Mengirim email
Selengkapnya baca di:
https://hadihammurabi.hashnode.dev/javascript-tips-1-menunggu-beberapa-proses-asynchronous-dengan-promiseall
Terima kasih sudah baca.
Kalau mau diskusi, komen aja. Kalau mau berteman, bilang aja 😎]]></summary>
        <author>
            <name>Hadi Hidayat Hammurabi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[6 Easy steps for sharing AWS Encrypted RDS snapshot between two accounts.]]></title>
        <id>https://dev.to/chrisedrego/6-easy-steps-for-sharing-aws-encrypted-rds-snapshot-between-two-accounts-1c40</id>
        <link href="https://dev.to/chrisedrego/6-easy-steps-for-sharing-aws-encrypted-rds-snapshot-between-two-accounts-1c40"/>
        <updated>2021-05-29T08:20:37.000Z</updated>
        <summary type="html"><![CDATA[This is a hassle-free guide to share AWS Encrypted RDS across two different AWS accounts within 7 easy steps.

Overview




Login to the Source Account, Create a snapshot from RDS.


Creating KMS Key (with details of the destination account)


After the snapshot is created, Create a new copy of the snapshot & attach the KMS key.


Share the newly created snapshot to the destination account.


Log in to the **Destination Account, **head over to **Shared with me **snapshots, and create a new copy of the snapshot.
Restore the copied Snapshot into a new RDS Instance.
Log in to the source AWS Account which contains the source Database and create a snapshot from it.


Cannot share an Encrypted Snapshot straight away.
Click on Share Snapshot, we can see that we cannot directly share the snapshot. For that, we have the KMS key to the rescue.

Open Key Management Service (KMS)
Create a Symmetric key, and add a label along with permission.

Enter the AWS Account ID and save the KMS key.

Once the snapshot is created, Select Snapshot, Click Actions > Copy Snapshot

Provide a name & select the newly create KMS key under the Master key

Once the Copy of the snapshot is created, click on Actions > Share snapshot

Provide the AWS Account key and click Save.

Snapshot which we have shared from the source account will be available in the Shared with me tab under the snapshot window for AWS RDS.
Create a Copy of Snapshot click on Actions > Copy snapshot

Once the Copy of the share snapshot is created we can Restore the snapshot.
Select the Snapshot, Click on Actions > Restore Snapshot


Provide the Details for the new RDS instance and there we go!!.



  
  
  “if you found this article useful, feel free to show some ❤️ and click on ❤️ many times or share it with your friends. Also follow us for more DevOps content”]]></summary>
        <author>
            <name>chrisedrego</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[MYSQL Operator: A MYSQL ❤ affair with Kubernetes]]></title>
        <id>https://dev.to/chrisedrego/mysql-operator-a-mysql-affair-with-kubernetes-551j</id>
        <link href="https://dev.to/chrisedrego/mysql-operator-a-mysql-affair-with-kubernetes-551j"/>
        <updated>2021-05-29T08:18:16.000Z</updated>
        <summary type="html"><![CDATA[We will explore how to easily provision, backup, restore & monitor MYSQL Instances on Kubernetes the easy way using MYSQL Operator.
“Running databases in Kubernetes is one shiny disco ball that attracts a lot of limelight. Although Databases by their very nature are stateful, on the other hand, Kubernetes is more inclined towards running stateless & ephemeral applications, which makes them two different worlds apart, although to make them one ❤ we have MYSQL Operator. As there is some great amount of work done worldwide in the Open Source community by Oracle, Presslabs & Percona providing rich MySQL Operator’s which make running MYSQL on Kubernetes a hassle-free experience.”

Operator are applications written ontop of kubernetes which makes challenging & domain specific operations automate…]]></summary>
        <author>
            <name>chrisedrego</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kubernetes Monitoring: Kube-State-Metrics]]></title>
        <id>https://dev.to/chrisedrego/kubernetes-monitoring-kube-state-metrics-2bbi</id>
        <link href="https://dev.to/chrisedrego/kubernetes-monitoring-kube-state-metrics-2bbi"/>
        <updated>2021-05-29T08:13:38.000Z</updated>
        <summary type="html"><![CDATA[In a pursuit to monitor our Kubernetes Cluster we often need the right set of tools to capture, the right metrics. Although there are a couple of tools present already, today let’s discuss Kube-state-metrics.
Kube-State-Metrics is an open-source light-weight utility used to monitor the Kubernetes Cluster. As the name suggests, it provides information about the state of a couple of Kubernetes objects by listening to Kubernetes API. Kube-State-Metrics acts like a Swiss Army Knife that provides metrics for a long list of Kubernetes-Objects.

git clone [https://github.com/kubernetes/kube-state-metrics](https://github.com/kubernetes/kube-state-metrics)
kubectl apply -f kube-state-metrics/examples/standard/

This will go ahead and install all the components needed such as ServiceAccount, ClusterRole, ClusterRolebinding along with Deployment, and Service.
Let’s test it locally, by exposing the service, run the command
kubectl port-forward svc/kube-state-metrics -n kube-system 8080:8080



As we already, know Kube-state-metrics is Prometheus friendly let's get started with scrapping the Kube-State-metrics with Prometheus.

Assuming that you have already installed on Prometheus on your cluster, you can use the above Prometheus Configuration to start scraping metrics.



  
  
  if you found this article useful, feel free to click ❤️ heart many times or share it with your friends.]]></summary>
        <author>
            <name>chrisedrego</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Monitoring Nginx Ingress Controller with Prometheus & Grafana.]]></title>
        <id>https://dev.to/chrisedrego/monitoring-nginx-ingress-controller-with-prometheus-grafana-2l37</id>
        <link href="https://dev.to/chrisedrego/monitoring-nginx-ingress-controller-with-prometheus-grafana-2l37"/>
        <updated>2021-05-29T08:11:12.000Z</updated>
        <summary type="html"><![CDATA[Before getting started we need to make sure that we have the following tools installed.
Nginx Ingress Controller


Prometheus


Grafana.



Let’s install Nginx-Ingress Controller, Prometheus, Grafana with ***helm3***
helm repo add nginx-stable [https://helm.nginx.com/stable](https://helm.nginx.com/stable)
helm repo update

helm install controller  nginx-stable/nginx-ingress 
--set prometheus.create=true --set prometheus.port=9901

helm install prometheus stable/prometheus
helm install grafana stable/grafana

You can tweak the installation as per your needs, more details on this on https://docs.nginx.com/nginx-ingress-controller/installation/installation-with-helm/
One extra work that is needed is that we need to expose a service that listens to the port that contains the Nginx-Ingress-Cont…]]></summary>
        <author>
            <name>chrisedrego</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kubernetes Monitoring: Metrics Server]]></title>
        <id>https://dev.to/chrisedrego/kubernetes-monitoring-metrics-server-3fhk</id>
        <link href="https://dev.to/chrisedrego/kubernetes-monitoring-metrics-server-3fhk"/>
        <updated>2021-05-29T08:04:08.000Z</updated>
        <summary type="html"><![CDATA[Kubernetes Monitoring Series: Understanding the what, why, how & behind the scenes — Metrics-server.

Metrics Server is another useful lightweight tool that can be added to your Kubernetes Monitoring arsenal. As the name suggests Metrics Server provides metrics for resource utilization like CPU & Memory. Metrics Server discovers all the nodes in the cluster and queries the kubelet which is an agent that runs on each node and further forwards the details for resource utilization i.e CPU/Memory to Kubernetes API Server which exposes it as a Metrics API endpoint.
In most of the managed Kubernetes as a service offering from cloud vendors, it does come as an addon by default, as well a couple of bootstrapping tools like Kube-up.sh. If you are using minkube it can be enabled as an addon.
Althoug…]]></summary>
        <author>
            <name>chrisedrego</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Deep Dive with Provisioning AKS RBAC Enabled Kubernetes Cluster using Terraform.]]></title>
        <id>https://dev.to/chrisedrego/deep-dive-with-provisioning-aks-rbac-enabled-kubernetes-cluster-using-terraform-1geg</id>
        <link href="https://dev.to/chrisedrego/deep-dive-with-provisioning-aks-rbac-enabled-kubernetes-cluster-using-terraform-1geg"/>
        <updated>2021-05-29T07:58:58.000Z</updated>
        <summary type="html"><![CDATA[In this long descriptive blog post, where we would understand what is Infrastructure a code. Understanding the what, why, and how behind **terraform **and how to a provision simple RBAC enabled Azure Kubernetes Service (AKS) Cluster using Terraform.

Terraform is an open-source, cross-platform Infrastructure as a code,(Iaac) software tool that is provided by Hashicorp which is available on Windows, Linux, Mac, and other OS. Terraform provides a better way to provision Infrastructure on various platforms and cloud providers with the help of a configuration file (main.tf). Terraform uses a high-level configuration language called HCL(Hashicorp Configuration Language) which is more human-readable, and easy to understand.
So in simple words, instead of manually configuring the Infrastructure w…]]></summary>
        <author>
            <name>chrisedrego</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Setup CI/CD Pipeline using Gitlab-CI to Deploy to Azure Storage & Azure CDN.]]></title>
        <id>https://dev.to/chrisedrego/how-to-setup-ci-cd-pipeline-using-gitlab-ci-to-deploy-to-azure-storage-azure-cdn-15g5</id>
        <link href="https://dev.to/chrisedrego/how-to-setup-ci-cd-pipeline-using-gitlab-ci-to-deploy-to-azure-storage-azure-cdn-15g5"/>
        <updated>2021-05-29T07:56:58.000Z</updated>
        <summary type="html"><![CDATA[A Complete Zero-to-Hero guide in setting up a CI/CD Pipeline using Gitlab-CI to deploy with the help of Azure Storage



For the purpose of this demo, I have already created a simple Angular 7 application that is hosted on Gitlab, the application is a simple, digital clock that looks something like this.


The above diagram describes the whole process, right from a developer pushing the code, to the point where the CI/CD Pipeline builds & deploys the code to Azure Storage (Blob) which is linked to Azure CDN Endpoint.
Developer goes ahead and performs the development locally of the application after which he goes ahead and commits and pushes the code to the version control system in our case it’s Gitlab.


We would then have Gitlab perform the CI/CD in the form of the steps mentioned in git…]]></summary>
        <author>
            <name>chrisedrego</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[secretlint v3.0 support GitHub’s new authentication token detection]]></title>
        <id>https://dev.to/azu/secretlint-v3-0-support-github-token-detection-57eg</id>
        <link href="https://dev.to/azu/secretlint-v3-0-support-github-token-detection-57eg"/>
        <updated>2021-05-29T07:30:31.000Z</updated>
        <summary type="html"><![CDATA[secretlint is a pluggable linting tool to prevent committing credential.
secretlint/secretlint: Pluggable linting tool to prevent committing credential.
secretlint is similar tools to git-secrets, but it is more flexible and support more credentials.
secretlint v3.0 support new GitHub Token format.
Release v3.0.0 · secretlint/secretlint
Recently, GitHub introduce new authentication token format.
Behind GitHub's new authentication token formats | The GitHub Blog
Authentication token format updates are generally available | GitHub Changelog
The character set changed from [a-f0-9] to [A-Za-z0-9_]
secretlint support them!
You can prevent to commit GitHub Tokens!
github.com/secretlint/sec… 
    
You can use secretlint as Docker Container or Node.js CLI.
If you already have installed Docker:
docker run -v `pwd`:`pwd` -w `pwd` --rm -it secretlint/secretlint secretlint "**/*"

If you already have installed Node.js:
npx @secretlint/quick-start "**/*"

secretlint also support custom rules like ESLint.
secretlint documenataion.
You can setup pre-commit Hook per project or pre-commit Hook globally.
pre-commit prevent you to commit your credentials  like GitHub Token, SSH key, AWS crendentials.
If you want to know about secretlint, please visit secretlint/secretlint.]]></summary>
        <author>
            <name>azu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Install Visual Studio Code On CentOS 8]]></title>
        <id>https://dev.to/hitjethva/how-to-install-visual-studio-code-on-centos-8-69d</id>
        <link href="https://dev.to/hitjethva/how-to-install-visual-studio-code-on-centos-8-69d"/>
        <updated>2021-05-29T07:15:59.000Z</updated>
        <summary type="html"><![CDATA[Visual Studio Code is an open-source, lightweight and powerful code editor developed by Microsoft. It supports Linux, macOS and Windows, and runs on the Desktop operating system. It has a built-in support for Node.js, TypeScript and JavaScript. You can add other language support including, Python, Go, PHP, Java and C++ with the help of extensions. It has a lot of features including, debugging, Git control and GitHub, syntax highlighting, snippets, intelligent code completion and code refactoring.
In this tutorial, we will show you how to install Visual Studio Code On CentOS 8.
A fresh CentOS 8 Desktop.
A root password is configured on your server.
If you want to create a new VPS server, Login to your Atlantic.Net Cloud Server. Create a new server, choosing CentOS 8 as the operating system,…]]></summary>
        <author>
            <name>Hitesh Jethva</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Top 10 Tips to Secure your Smartphone in 2021]]></title>
        <id>https://dev.to/techbethink/top-10-tips-to-secure-your-smartphone-in-2021-579h</id>
        <link href="https://dev.to/techbethink/top-10-tips-to-secure-your-smartphone-in-2021-579h"/>
        <updated>2021-05-29T06:59:23.000Z</updated>
        <summary type="html"><![CDATA[As we all know very well that we can keep our body healthy by applying masks doing exercise and so many things but what can we do to keep our smartphone healthy.
Let me tell you how you can secure your phone if you are uncomfortable with the privacy of your smartphone, there are many tips to secure your smartphone with various types of malware but in this article, I will tell you the Top 10 Tips to Secure Your Smartphone in 2021.
Why your smartphone may hack?
Unknown source
Permissions
Keep Your OS and app updated
Different password
Backup 
Public charging 
No need for an antivirus app 
Passphrase 
Incognito mode
Ad Personalisation
To Know More Read The Full Article : https://techbethink.com/top-10-tips-to-secure-your-smartphone-in-2021/]]></summary>
        <author>
            <name>Ruler Of Dark</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to clean up disk space on Ubuntu server]]></title>
        <id>https://dev.to/crazyoptimist/how-to-clean-up-disk-space-on-ubuntu-server-40gp</id>
        <link href="https://dev.to/crazyoptimist/how-to-clean-up-disk-space-on-ubuntu-server-40gp"/>
        <updated>2021-05-29T05:44:00.000Z</updated>
        <summary type="html"><![CDATA[If you are running your own cloud instances and use them for development purposes, their capacities would probably be limited and sometimes you might notice that the disk space is too low.
TL;DR
sudo apt-get autoremove
sudo apt-get autoclean
sudo apt-get clean

Check it first:
journalctl --disk-usage

sudo journalctl --vacuum-time=3d

Check it first:
du -h /var/lib/snapd/snaps

This is a bash script.
#!/bin/bash
# Removes old revisions of snaps
# CLOSE ALL SNAPS BEFORE RUNNING THIS
set -eu
snap list --all | awk '/disabled/{print $1, $3}' |
    while read snapname revision; do
        snap remove "$snapname" --revision="$revision"
    done

Please add more in the comment section if you have another ones.
Happy coding! :)]]></summary>
        <author>
            <name>CrazyOptimist</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to convert your website from HTTP to HTTPS]]></title>
        <id>https://dev.to/deepakfilth/how-to-convert-your-website-from-http-to-https-boj</id>
        <link href="https://dev.to/deepakfilth/how-to-convert-your-website-from-http-to-https-boj"/>
        <updated>2021-05-29T04:49:33.000Z</updated>
        <summary type="html"><![CDATA[Recently I developed a personal blog website, bought a domain and wanted to go-live, but had no idea on how to make my website secure. It wasn't easy to find the list of steps to achieve this, so I wrote an article so that it will be helpful for others.
If you want to protect communication between the client and the server from eavesdroppers then HTTPS is the way to go because if anyone tries to listen to your communication it will be just random characters to them as HTTPS makes all the calls encrypted. Also browsers nowadays enforce all the sites to be secured and you can notice a padlock icon beside the URL, whereas websites which doesn't have a padlock icon beside the URL are flagged as not secured and a warning is displayed before you can continue to browse.
Prepare a Certificate Sign…]]></summary>
        <author>
            <name>deepak pd</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A safer alternative to 'any' in TypeScript]]></title>
        <id>https://dev.to/saulodias/a-safer-alternative-to-any-in-typescript-2g67</id>
        <link href="https://dev.to/saulodias/a-safer-alternative-to-any-in-typescript-2g67"/>
        <updated>2021-05-29T04:28:45.000Z</updated>
        <summary type="html"><![CDATA[We've all been there. For some reason we are not really sure what type of object to expect from an API endpoint. Maybe the API has not been defined yet, or whatever. So what do we do?
You've probably seen code like this, because someone knew it was going to be a list of things.
getData(): Observable<any[]> {
  // return this.http.get<any[]>(API_URL); // TODO: Integrate with api
  return of([]);
}

But we can do better than that.
You might not know what type of object to expect, but you probably have a vague idea. Maybe it is going to be a list of objects with keys (strings) which you don't know yet.
In that case you want to do something like this:
getData(): Observable<Record<string, unknown>[]> {
  // return this.http.get<Record<string, unknown>[]>(API_URL); // TODO: Integrate with api
  …]]></summary>
        <author>
            <name>Dias</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Exploring [key:string]: any in TypeScript]]></title>
        <id>https://dev.to/tlylt/exploring-key-string-any-in-typescript-4ake</id>
        <link href="https://dev.to/tlylt/exploring-key-string-any-in-typescript-4ake"/>
        <updated>2021-05-29T02:31:41.000Z</updated>
        <summary type="html"><![CDATA[With this series I intend to note down some of the confusion and quirky stuff that I encountered out in the wild. So, today I am going to start with this snippet in TypeScript. 
interface CustomState {
  value: {
    [key:string]: any
  }
}

const defaultState : CustomState = {
  value: {}
}

const reducer = (state: CustomState, action: { type: string }): CustomState => {
  if (action.type === 'reset') {
    return {
      value: []
    }
  } else {
    return {
      ...state
    }
  }
}

The CustomState declared at the start includes a property called value, which is an object with key-value pairs of the form string - any. The defaultState variable contains an (empty) object conforming to the interface declared above, which is perfectly normal.
The thing that caught me off-guard is in th…]]></summary>
        <author>
            <name>Liu YongLiang</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Introduction to Chore-cli, easy to generate development infrastructure for typescript project.]]></title>
        <id>https://dev.to/iwfan/introduction-to-chore-cli-easy-to-generate-development-infrastructure-for-typescript-project-1co</id>
        <link href="https://dev.to/iwfan/introduction-to-chore-cli-easy-to-generate-development-infrastructure-for-typescript-project-1co"/>
        <updated>2021-05-29T01:50:01.000Z</updated>
        <summary type="html"><![CDATA[I made a library to generate development infrastructure for typescript project.
chore-cli is the super assistant for building a typescript library. It can generate development infrastructure for projects or libraries, such as prettier, eslint, husky etc, or even Github Actions Config files. It can save a lot of time every time you create new stuff.
As we know, These tools like eslint, prettier can make the codebase better. But it takes us a lot of time to configure them. If you don't want your enthusiasm for writing code to be consumed by these configurations, and if you don't like doing these annoying "chores" frequently, try chore-cli.
It's easy to use：
npx chore-cli <path-to-project>


Take a look at the README.md for examples and further documentation, and let me know if you find any bugs, or you have any idea for improving it.]]></summary>
        <author>
            <name>Zi莱卷</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Install SSL Certificate on XAMPP]]></title>
        <id>https://dev.to/hilmi/how-to-install-ssl-certificate-on-xampp-19lk</id>
        <link href="https://dev.to/hilmi/how-to-install-ssl-certificate-on-xampp-19lk"/>
        <updated>2021-05-29T00:53:45.000Z</updated>
        <summary type="html"><![CDATA[Install XAMPP SSL - In some cases, a developer requires the presence of an SSL certificate on his local server to build a system or program that does require an SSL certificate or the HTTPS protocol. How to install SSL or HTTPS on localhost XAMPP? Following are the steps;
Open your terminal


Type makecert as shown above.


Enter the PEM pass phrase or enter the password. Enter a password that is easy to remember because in the next step we are asked to enter a verification password.


Verify the password or type the password again as in step 3.


Type as shown above. If there is a command other than the picture above, you can just ENTER.



Enter the password again as was done in numbers 3 and 4.


Configure the file by going to C:\xampp\apache\conf\extra


Open the httpd-xampp.conf file
…]]></summary>
        <author>
            <name>Hilmi Hidayat</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Containerize your Dev environment! Forget about painful project setup. (Beginner friendly)]]></title>
        <id>https://dev.to/alwaysup/containerize-your-dev-environment-forget-about-painful-setup-beginner-friendly-10bp</id>
        <link href="https://dev.to/alwaysup/containerize-your-dev-environment-forget-about-painful-setup-beginner-friendly-10bp"/>
        <updated>2021-05-29T00:24:31.000Z</updated>
        <summary type="html"><![CDATA[After only a few years of working in the industry I am already tired of having to setup my machine each time something happens to it or I want to work on it on my laptop when visiting someone. Setting up DEV environment has irked me for as long as I have been working in this industry. And after some inspiration from a company that is doing many things right, I decided to make this amazing solution easily available to everyone!
NOTE: IDE will not work on Windows. Please read windows section.
Install docker
For Windows: install wsl




  
  
  Disclaimer (For Windows users)


The display of IDE is done by piggybacking off the X11 server that unix systems use for display. This is not available in windows. However, you should still have full read write access to the "devenv" folder which will …]]></summary>
        <author>
            <name>Adnan Alam</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[TypeScript Index Signature]]></title>
        <id>https://dev.to/afrazkhan/typescript-index-signature-4npo</id>
        <link href="https://dev.to/afrazkhan/typescript-index-signature-4npo"/>
        <updated>2021-05-28T23:14:18.000Z</updated>
        <summary type="html"><![CDATA[Javascript objects obj:{} are usually indexed using strings. But certainly, its possible to index them using number and even object types as keys. Because when it comes to index a particular element of a javascript object, JS always stringifies a non-string key by calling toString() method. So number as key will get stringified and object as key must have a toString() method which returns a valid string key.
let obj = {
  toString(){
    console.log('toString called')
    return 'Hello'
  }
}
let foo: any = {};
foo[obj] = 'World'; // toString called
console.log(foo[obj]); // toString called, World
console.log(foo['Hello']); // World

In typescript, object as key does not work as above in javascript. Typescript usually throws error doing that.
Lets suppose that if somehow developer uses an …]]></summary>
        <author>
            <name>Afraz Khan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[My Developer Journey – How I Went from Making $1,000 to $100,000 a Year]]></title>
        <id>60acf28e11ffb70827ef6dd9</id>
        <link href="https://www.freecodecamp.org/news/my-developer-journey-how-i-went-from-1000-a-year-to-100000-as-a-dev/"/>
        <updated>2021-05-28T22:58:18.000Z</updated>
        <summary type="html"><![CDATA[Hey everyone, my name is Santosh. In this article, I will tell you how I ramped up my career and ended up making $100,000 a year as a developer.  I'll share what I learned from each job along the way, how you can stand out, tips for negotiating salary,]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[p-MultiSelect - JAWS - Issue]]></title>
        <id>https://dev.to/goku2358/p-multiselect-jaws-issue-2a3f</id>
        <link href="https://dev.to/goku2358/p-multiselect-jaws-issue-2a3f"/>
        <updated>2021-05-28T21:02:17.000Z</updated>
        <summary type="html"><![CDATA[p-multiselect isnt getting read by JAWS screen reader for some reason. Can someone help please?]]></summary>
        <author>
            <name>Gokul Nath</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Referrers on the web]]></title>
        <id>https://dev.to/jordanfinners/referrers-on-the-web-n2b</id>
        <link href="https://dev.to/jordanfinners/referrers-on-the-web-n2b"/>
        <updated>2021-05-28T20:25:16.000Z</updated>
        <summary type="html"><![CDATA[Contents



 Intro

 Referrer-Policy

 Linking

 Bonus: Server header

 Summary




  
  
  Intro 


Continuing on from my previous blog about website security week, we're going to talk about a Referrers on the web.
Referrers on the web allow sites you are visiting to see what site you have come from, as the Referer header (it is actually mispelled in the HTTP Specification) contains a absolute or partial url of the site you've come from if you have followed a link.
commonly used for tracking and analytics, but it can also be used to steal information for example that contained in the URL of a reset password page or where a token is part of the URL, which is why it comes under security headers.



This header indicates how much information can be shared in the Referer header on requests ma…]]></summary>
        <author>
            <name>Jordan Finneran</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Minimizing Webpack bundle size]]></title>
        <id>https://dev.to/useanvil/minimizing-webpack-bundle-size-38gg</id>
        <link href="https://dev.to/useanvil/minimizing-webpack-bundle-size-38gg"/>
        <updated>2021-05-28T20:24:34.000Z</updated>
        <summary type="html"><![CDATA[The dreaded loading spinner


The two key metrics in determining whether users will stay on your site is the time it takes to load the page and the time it takes to interact with it. The first is First Contentful Paint and the second is Time to Interactive. You can find these metrics for your own site by going to your developer tools and generating a report under the Lighthouse tab on Chrome.

Lighthouse metrics for a random web app
By minimizing the size of the bundle, we reduce the time it takes for browsers to download the JavaScript for our site, improving user experience. With every additional second of wait time, the user is more likely to close the tab. Consider all of the users that visit your site everyday and that can be thousands of seconds wasted. The chance of losing a potenti…]]></summary>
        <author>
            <name>Anvil Engineering</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Top 10 Linux Commands Every Programmer Should Know]]></title>
        <id>https://dev.to/harvey/the-top-10-linux-commands-every-programmer-should-know-11hf</id>
        <link href="https://dev.to/harvey/the-top-10-linux-commands-every-programmer-should-know-11hf"/>
        <updated>2021-05-28T19:44:37.000Z</updated>
        <summary type="html"><![CDATA[Linux systems are powerful operating systems with endless possibilities. However, learning to use this amazing OS can be difficult if you’re new to the Linux world. 
You could spend days browsing through forums, copy/pasting code and never really knowing what’s going on or why it works. If you want to learn commands, I recommend this site.
My first tip is pretty basic, but very important. Before you can run any of these commands, you’ll need to start the terminal.
One way is to enter the terminal outside of the GUI. X11 or Wayland provides the graphical user interface on linux. You can switch to the terminal by pressing Alt+Ctrl+F1 to F12.
You can also start a graphical terminal. There are many variants like gnome-terminal, konsole, xterm, kitty and many others.

The Linux Command Line is …]]></summary>
        <author>
            <name>Harvey</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Is it possible to have ssl certificate for ip address 
not domain name? Answer is YES :)]]></title>
        <id>https://dev.to/manishfoodtechs/is-it-possible-to-have-ssl-certificate-for-ip-address-not-domain-name-answer-is-yes-519o</id>
        <link href="https://dev.to/manishfoodtechs/is-it-possible-to-have-ssl-certificate-for-ip-address-not-domain-name-answer-is-yes-519o"/>
        <updated>2021-05-28T19:21:38.000Z</updated>
        <summary type="html"><![CDATA["To be concise, here is how to generate an individual self signed SAN certificate with IP addresses. Expand the IP list to include your entire subnet and use one cert for everything."
https://stackoverflow.com/users/3421482/josiah-dewitt





#!/bin/bash
#using: OpenSSL 1.1.1c FIPS  28 May 2019 / CentOS Linux release 8.2.2004

C=US ; ST=Confusion ; L=Anywhere ; O=Private\ Subnet ; EMAIL=admin@company.com
BITS=2048
CN=RFC1918
DOM=company.com
SUBJ="/C=$C/ST=$ST/L=$L/O=$O/CN=$CN.$DOM"

openssl genrsa -out ip.key $BITS

SAN='\n[SAN]\nsubjectAltName=IP:192.168.1.0,IP:192.168.1.1,IP:192.168.1.2,IP:192.168.1.3,IP:192.168.1.4,IP:192.168.1.5,IP:192.168.1.6,IP:192.168.1.7,IP:192.168.1.8,IP:192.168.1.9,IP:192.168.1.10'

cp /etc/pki/tls/openssl.cnf /tmp/openssl.cnf
echo -e "$SAN" >> /tmp/openssl.cnf

openssl req -subj "$SUBJ" -new -x509 -days 10950 \
    -key ip.key -out ip.crt -batch \
    -set_serial 168933982 \
    -config /tmp/openssl.cnf \
    -extensions SAN

openssl x509 -in ip.crt -noout -text

$DOM is Domain (Incase you need)
https://stackoverflow.com/questions/2043617/is-it-possible-to-have-ssl-certificate-for-ip-address-not-domain-name#:~:text=An%20SSL%20certificate%20is%20typically,Certificate%20Signing%20Request%20(CSR).


  
  
  THE END]]></summary>
        <author>
            <name>manish srivastava</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Is it possible to have ssl certificate for ip address 
not domain name? Answer is YES :)]]></title>
        <id>https://dev.to/manishfoodtechs/is-it-possible-to-have-ssl-certificate-for-ip-address-not-domain-name-answer-is-yes-519o</id>
        <link href="https://dev.to/manishfoodtechs/is-it-possible-to-have-ssl-certificate-for-ip-address-not-domain-name-answer-is-yes-519o"/>
        <updated>2021-05-28T19:21:38.000Z</updated>
        <summary type="html"><![CDATA["To be concise, here is how to generate an individual self signed SAN certificate with IP addresses. Expand the IP list to include your entire subnet and use one cert for everything."
https://stackoverflow.com/users/3421482/josiah-dewitt





#!/bin/bash
#using: OpenSSL 1.1.1c FIPS  28 May 2019 / CentOS Linux release 8.2.2004

C=US ; ST=Confusion ; L=Anywhere ; O=Private\ Subnet ; EMAIL=admin@company.com
BITS=2048
CN=RFC1918
DOM=company.com
SUBJ="/C=$C/ST=$ST/L=$L/O=$O/CN=$CN.$DOM"

openssl genrsa -out ip.key $BITS

SAN='\n[SAN]\nsubjectAltName=IP:192.168.1.0,IP:192.168.1.1,IP:192.168.1.2,IP:192.168.1.3,IP:192.168.1.4,IP:192.168.1.5,IP:192.168.1.6,IP:192.168.1.7,IP:192.168.1.8,IP:192.168.1.9,IP:192.168.1.10'

cp /etc/pki/tls/openssl.cnf /tmp/openssl.cnf
echo -e "$SAN" >> /tmp/openssl.cnf

openssl req -subj "$SUBJ" -new -x509 -days 10950 \
    -key ip.key -out ip.crt -batch \
    -set_serial 168933982 \
    -config /tmp/openssl.cnf \
    -extensions SAN

openssl x509 -in ip.crt -noout -text

$DOM is Domain (Incase you need)
https://stackoverflow.com/questions/2043617/is-it-possible-to-have-ssl-certificate-for-ip-address-not-domain-name#:~:text=An%20SSL%20certificate%20is%20typically,Certificate%20Signing%20Request%20(CSR).


  
  
  THE END]]></summary>
        <author>
            <name>manish srivastava</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Create your first S3 bucket using AWS CDK]]></title>
        <id>https://dev.to/aws-builders/create-your-first-s3-bucket-using-aws-cdk-cj7</id>
        <link href="https://dev.to/aws-builders/create-your-first-s3-bucket-using-aws-cdk-cj7"/>
        <updated>2021-05-28T18:52:00.000Z</updated>
        <summary type="html"><![CDATA[Infrastructure as Code


Infrastructure as code is the process of managing and provisioning computer data centers through machine-readable definition files, rather than physical hardware configuration or interactive configuration tools.
If you want to know more about Infrastructure as Code and and when to use different IaC tools take a look at this article of mine.
What is Infrastructure-as-Code and how is Terraform, CDK Ansible different?
 
The AWS Cloud Development Kit (AWS CDK) is an open-source software development framework to define cloud infrastructure in code and provision it through AWS CloudFormation.


It offers a high-level object-oriented abstraction to define AWS resources imperatively using the power of modern programming languages. Using the CDK's library of infrastructure …]]></summary>
        <author>
            <name>Supratip Banerjee</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Adding physics to web components]]></title>
        <id>https://dev.to/eerk/adding-physics-to-web-components-4kh2</id>
        <link href="https://dev.to/eerk/adding-physics-to-web-components-4kh2"/>
        <updated>2021-05-28T17:20:48.000Z</updated>
        <summary type="html"><![CDATA[It's Friday afternoon, so I wanted to do some crazy experiment. In a previous post I already looked into using Web Components (Custom Elements) for browser game development.
Today we're going to add physics to our HTML tags, just because it's possible! And to learn a bit about web components and Matter.JS
We'll be looking at:
Custom Elements
Game Loop
Adding Physics (with Matter.js)
Project setup (with Parcel.js)

A simulation with bouncy barrels, stubborn crates, platforms and a player character.
Example code is in Typescript, but you can leave out type annotations such as a:number and public, private to convert to Javascript.
A custom element is a HTML tag that has executable code added to it. That's really handy for game objects! We'll use that to add physics later. You can nest custom …]]></summary>
        <author>
            <name>eerk</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why You Should Learn Next Next]]></title>
        <id>https://dev.to/sanspanic/why-you-should-learn-next-next-5427</id>
        <link href="https://dev.to/sanspanic/why-you-should-learn-next-next-5427"/>
        <updated>2021-05-28T16:25:32.000Z</updated>
        <summary type="html"><![CDATA[So you've learned React. You know, at least vaguely, what the virtual DOM is and are comfortable with using hooks including useState , useEffect and useRef. What is the logical next step? I think you'll find the answer to this question within the question itself. 

Next is a framework built on top of React that purports to make the development process even more palatable. Personally, I enjoy working with React already, so I was surprised to find the extent to which Next delivers on its promise. 
What exactly makes learning Next a worthwhile endeavour? There's a lot that sets Next apart from simply using React, but let's start with 3 key features that Next implements to solve common React problems.
Upon inspecting the source code of a classic React application in the browser, you will notic…]]></summary>
        <author>
            <name>Sandra Spanik</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Get user's location in your app]]></title>
        <id>https://dev.to/leonidascostas/get-user-s-location-in-your-app-486a</id>
        <link href="https://dev.to/leonidascostas/get-user-s-location-in-your-app-486a"/>
        <updated>2021-05-28T16:14:43.000Z</updated>
        <summary type="html"><![CDATA[This module allows you to locate your user either by navigator permission, either by IP address.
(For the browser solution) Navigator permission ask
(For the browser solution) Navigator coordinate ask
(For the IP solution) Retrieving of IP address in the backend
(For the IP solution) Calls to ip-api.com service in order to get the location of a specific IP
3 hours of work saved 
To make this module work, a 13€/month subscription to ip-api service is needed.
We’ll store user’s IP address present in the « x-forwarded-for » field from the HTTP header of its request.
request.ipAddress = request?.headers['x-forwarded-for']?.split(',')[0] || request.connection.remoteAddress

This ip address is now accessible through request.ipAddress, but we’ll create a custom decorator to ease the retrieve of i…]]></summary>
        <author>
            <name>Leonidas Costas</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Secure Your Android App – Four Security Best Practices Every Android Dev Should Know]]></title>
        <id>60b08d8811ffb70827ef8c7b</id>
        <link href="https://www.freecodecamp.org/news/how-to-secure-your-android-app/"/>
        <updated>2021-05-28T16:01:05.000Z</updated>
        <summary type="html"><![CDATA[If you've been following the news lately, you may have noticed a worrisome tech trend. The frequency and severity of cybersecurity attacks are exploding.  We've seen news of a sprawling hack involving the SolarWinds management platform. That attack may have compromised the systems of over 18,000 SolarWinds customers.  Then,]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[VSCode Extension to expand hard-to-read type definitions in TypeScript]]></title>
        <id>https://dev.to/kimuson/vscode-extensions-to-expand-hard-to-read-type-definitions-in-typescript-299</id>
        <link href="https://dev.to/kimuson/vscode-extensions-to-expand-hard-to-read-type-definitions-in-typescript-299"/>
        <updated>2021-05-28T15:59:23.000Z</updated>
        <summary type="html"><![CDATA[I've created a VSCode extension that makes complex types easier to read, and I'll show you how to use it!
When I'm writing TypeScript, it sometimes hard-to-read complex types for me, so I often need to bind them to variables and use completion to find properties. I was wondering if there was something I could do to see the expanded types.
I found out about TypeScript's CompilerAPI, so I thought it would be a good idea to extract the type and pass it to the VSCode Tree View, so I made it.
An extension that can expand TypeScript type definitions
You can install from ts-type-expand - Visual Studio Marketplace.

Like this, You can expand and check the hard-to-read types on VSCode as many times as you need.
If you hover over a variable, you will see the type information, but it sometimes hard t…]]></summary>
        <author>
            <name>kimuson</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dynamic Favicons for WordPress]]></title>
        <id>https://css-tricks.com/?p=341163</id>
        <link href="https://css-tricks.com/dynamic-favicons-for-wordpress/"/>
        <updated>2021-05-28T14:36:47.000Z</updated>
        <summary type="html"><![CDATA[Typically, a single favicon is used across a whole domain. But there are times you wanna step it up with different favicons depending on context. A website might change the favicon to match the content being viewed. Or a site …
The post Dynamic Favicons for WordPress appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Thomas Park</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Short Polling vs Long Polling]]></title>
        <id>https://dev.to/bibekkakati/short-polling-vs-long-polling-2fme</id>
        <link href="https://dev.to/bibekkakati/short-polling-vs-long-polling-2fme"/>
        <updated>2021-05-28T14:28:12.000Z</updated>
        <summary type="html"><![CDATA[Hello everyone👋
Before proceeding, I am assuming, you are aware of the request-response architecture of a basic web application. To build a real-time application like a chat application we can't use the basic request-response architecture, but we can use it with a polling mechanism to achieve the real-time behaviour. Apart from the polling mechanism we also have SSE(server-side event) and WebSocket to achieve real-time behaviour.
In this article, I am going to discuss two types of polling techniques i.e, long polling and short polling.
First, we need to know, what is polling?
Polling is a technique in which the client sends a request to the server asking for data in an interval of time.
The response from the server can be empty or any kind of data.
Short Polling is a technique in which th…]]></summary>
        <author>
            <name>Bibek</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[O que é selfhosting e por que adotá-lo]]></title>
        <id>https://dev.to/computandoarte/o-que-e-selfhosting-e-por-que-adota-lo-3ld</id>
        <link href="https://dev.to/computandoarte/o-que-e-selfhosting-e-por-que-adota-lo-3ld"/>
        <updated>2021-05-28T14:24:53.000Z</updated>
        <summary type="html"><![CDATA[Muitos dos serviços digitais que utilizamos no nosso dia a dia estão na "nuvem", como Gmail, LinkedIn, Google Drive/Docs etc ... e como diria um famoso ditado “essa tal de "nuvem" não existe, são apenas computadores de outras pessoas”. Mas, então quais as implicações da maioria das nossas vidas digitais estar nesses computadores dessas grandes empresas? Essas implicações no geral são positivas para os usuários?
 
Neste texto, que vai ser o primeiro de uma série, vamos falar de uma alternativa simples chamada self hosting, ou seja, hospedar os serviços que usamos em computadores que de fato temos controle, e como fazê-lo.
Dentre todos os motivos para adotar o self-hosting, vale destacar os seguintes:
Com muita frequência, vemos notícias de vazamentos envolvendo nossos dados, e mesmo assim m…]]></summary>
        <author>
            <name>Caio Volpato</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[3 Task Scheduling Packages for Node.js]]></title>
        <id>https://dev.to/richardwynn/3-task-scheduling-packages-for-node-js-5de4</id>
        <link href="https://dev.to/richardwynn/3-task-scheduling-packages-for-node-js-5de4"/>
        <updated>2021-05-28T14:15:53.000Z</updated>
        <summary type="html"><![CDATA[⏳ Task scheduling allows you to schedule your code to be executed at a scheduled date/ time, at recurring intervals, or once after a specified interval. In Linux, this is often handled by packages like cron. In this article, I will show you top 4 task scheduling packages that emulate cron-like functionality for Node.js apps.
Node Cron


The node-cron module is tiny task scheduler in pure JavaScript for node.js based on GNU crontab. This module allows you to schedule task in node.js using full crontab syntax.
1.449.775 Weekly Downloads (Up to the time of this article)
You can install node-cron by using npm.
$ npm install --save node-cron

var cron = require('node-cron');

cron.schedule('* * * * *', () => {
  console.log('running a task every minute');
});

Node Schedule


Node Schedule is a…]]></summary>
        <author>
            <name>Richard Wynn</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[NodeJS vs DenoJS]]></title>
        <id>https://dev.to/rlogical/nodejs-vs-denojs-55cc</id>
        <link href="https://dev.to/rlogical/nodejs-vs-denojs-55cc"/>
        <updated>2021-05-28T13:54:38.000Z</updated>
        <summary type="html"><![CDATA[What exactly is Deno?
Deno happens to be a runtime for TypeScript and JavaScript, based upon the Rust programming language and V8 JavaScript engine.
Key comparisons with NodeJS
The core of Deno has been created in Rust programming language in addition to Tokio. Nodejs was created in C++.

Typescript is a JavaScript superset aimed at getting rid of the development issues before the execution of the code.

Typescript is ideal for big applications.

ES6 imports Statements as dependency management.

An absence of npm, indicating that it doesn’t use any package manager such as npm and doesn’t come with package.json for handling modules.

Deno will be breaking on unhandled exceptions that are not the case with NodeJS.

Deno demands explicit permissions for network, file, and environment access.

Will Deno JS be able to replace NodeJS?
Given that Deno can be considered to be an improved alternative to node JS, it might replace node JS in the long run. Nevertheless, it will only be possible over a significant period mainly because a large community depends on node js. At least for the time being, Node js isn’t going anywhere; Deno is only considered a fancy alternate choice.
Learn more here: https://www.rlogical.com/blog/nodejs-vs-denojs-which-is-better-for-you/]]></summary>
        <author>
            <name>Rlogical Techsoft Pvt Ltd</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[NodeJS vs DenoJS]]></title>
        <id>https://dev.to/rlogical/nodejs-vs-denojs-55cc</id>
        <link href="https://dev.to/rlogical/nodejs-vs-denojs-55cc"/>
        <updated>2021-05-28T13:54:38.000Z</updated>
        <summary type="html"><![CDATA[What exactly is Deno?
Deno happens to be a runtime for TypeScript and JavaScript, based upon the Rust programming language and V8 JavaScript engine.
Key comparisons with NodeJS
The core of Deno has been created in Rust programming language in addition to Tokio. Nodejs was created in C++.

Typescript is a JavaScript superset aimed at getting rid of the development issues before the execution of the code.

Typescript is ideal for big applications.

ES6 imports Statements as dependency management.

An absence of npm, indicating that it doesn’t use any package manager such as npm and doesn’t come with package.json for handling modules.

Deno will be breaking on unhandled exceptions that are not the case with NodeJS.

Deno demands explicit permissions for network, file, and environment access.

Will Deno JS be able to replace NodeJS?
Given that Deno can be considered to be an improved alternative to node JS, it might replace node JS in the long run. Nevertheless, it will only be possible over a significant period mainly because a large community depends on node js. At least for the time being, Node js isn’t going anywhere; Deno is only considered a fancy alternate choice.
Learn more here: https://www.rlogical.com/blog/nodejs-vs-denojs-which-is-better-for-you/]]></summary>
        <author>
            <name>Rlogical Techsoft Pvt Ltd</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux for Devops Basic Cource]]></title>
        <id>https://dev.to/rk7/linux-for-devops-basic-cource-3bkp</id>
        <link href="https://dev.to/rk7/linux-for-devops-basic-cource-3bkp"/>
        <updated>2021-05-28T12:30:35.000Z</updated>
        <summary type="html"><![CDATA[Hey People,
I took this course because I want to learn Devops from scratch and Linux is the base of learning Devops!
The Course Contain:
Basic Linux Commands:
AWS and how to create an Ec2 Instance from AWS.
To run Linux on windows, use MobaXterm.
Linux File System Hierarchy.
Managing Files:
Read/Write/Access command
Changing Directory
Search and Replace a word in Linux
User Management:
Login as a User onto EC2 Instance.
Changing Permissions - Commands: chmod
Changing Ownership - Commands: chown, file.
System Management:
Gather System Information - Commands: free, cpuinfo, uname.
Software Management:
Installation Packages - Commands : yum [install, remove]
Updating and getting info about packages - Commands: yum 
Networking:
Collect Network info - Commands: hostname, ping, wget
Telnet
Services:
Services - Commands: service [status, start, stop]
Services - commands chkconfig, systemctl
Process Management:
Process Management - Commands: ps, fg, bg, top.
Other Topics:
Archiving files and directories - Commands: gzip, gunzip, zip, unzip.
Crontab.


Softlink and Hardlink.


Copy files from Windows to Linux - Commands: scp



If you are new to Linux and want to learn Devops as Scratch then I will recommend you this course as it contains all the required commands and learning which is used in Devops!
Course: https://www.udemy.com/course/valaxy-linux/]]></summary>
        <author>
            <name>Rahul Khinchi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Advanced Computer Vision with Python]]></title>
        <id>60b0de2211ffb70827ef8d7c</id>
        <link href="https://www.freecodecamp.org/news/advanced-computer-vision-with-python/"/>
        <updated>2021-05-28T12:26:38.000Z</updated>
        <summary type="html"><![CDATA[More and more applications are using computer vision these days. We just published a full course on the freeCodeCamp.org YouTube channel that will help you learn advanced computer vision using Python. You will learn state of the art computer vision techniques by building five projects with libraries such as]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[📱Build a Flutter Wishlist App, Part 3: Finishing the App with User Authentication and a Secured API.]]></title>
        <id>https://dev.to/robertinoc_dev/build-a-flutter-wishlist-app-part-3-finishing-the-app-with-user-authentication-and-a-secured-api-nhl</id>
        <link href="https://dev.to/robertinoc_dev/build-a-flutter-wishlist-app-part-3-finishing-the-app-with-user-authentication-and-a-secured-api-nhl"/>
        <updated>2021-05-28T12:11:18.000Z</updated>
        <summary type="html"><![CDATA[Update the Flutter wishlist app to use Auth0 authentication so that the user has to log in and the app accesses a secured API.



  
  
  
This is the third and final article in a series that guides you through the process of creating a “wishlist” mobile application using the Flutter SDK. The wishlist contains items that the user would like to someday own, storing each item’s name, description, and URL. The mobile app provides the user interface and communicates with a back-end application, which stores the list and provides an API to perform CRUD operations on it. The initial version of the app simply provides a functioning wishlist, while the final version incorporates Auth0 authentication to allow only authorized users to use the app as well as to use a secure API.
Note: This article bu…]]></summary>
        <author>
            <name>Robertino</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Security news weekly round-up - 28th May 2021]]></title>
        <id>https://dev.to/ziizium/security-news-weekly-round-up-28th-may-2021-3ll0</id>
        <link href="https://dev.to/ziizium/security-news-weekly-round-up-28th-may-2021-3ll0"/>
        <updated>2021-05-28T11:21:41.000Z</updated>
        <summary type="html"><![CDATA[Yeah, it feels like last week, reality, it's 2 weeks already.
Let's get on with it.
Introduction


This week it's mostly about bugs.
Vulnerabilities in billions of Wi-Fi devices let hackers bypass firewalls


It's dubbed FragAttacks and it's bad news.
Excerpt from the article:
FragAttacks allow data to be injected into Wi-Fi traffic, but they don’t make it possible to exfiltrate anything out. That means FragAttacks can’t be used to read passwords or other sensitive information the way a previous Wi-Fi attack of Vanhoef, called Krack, did.
But it turns out that the vulnerabilities—some that have been part of Wi-Fi since its release in 1997—can be exploited to inflict other kinds of damage, particularly if paired with other types of hacks.
New Bluetooth Flaws Let Attackers Impersonate Legiti…]]></summary>
        <author>
            <name>Habdul Hazeez</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Adding A Commenting System To A WYSIWYG Editor]]></title>
        <id>https://smashingmagazine.com/2021/05/commenting-system-wysiwyg-editor/</id>
        <link href="https://smashingmagazine.com/2021/05/commenting-system-wysiwyg-editor/"/>
        <updated>2021-05-28T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this article, we’ll be re-using the foundational WYSIWYG Editor built in the first article to build a commenting system for a WYSIWYG Editor that enables users to select text inside a document and share their comments on it. Let’s dig in!]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Shalabh Vyas)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Best Frontend Framework: The Battle Lines are Drawn]]></title>
        <id>https://dev.to/manav_jain/the-best-frontend-framework-the-battle-lines-are-drawn-3onm</id>
        <link href="https://dev.to/manav_jain/the-best-frontend-framework-the-battle-lines-are-drawn-3onm"/>
        <updated>2021-05-28T07:31:07.000Z</updated>
        <summary type="html"><![CDATA[Taking into thought the viewpoint of the product development life cycle, the correct decision among top front-end frameworks will be the major advance of your future achievement. 
The market has a wide variety because of the tremendous arrangement of difficulties that developers address each day. Along these lines the quantity of new front-end frameworks extensively increments. An ever increasing number of various frameworks show up, and in this article, we would examine top front-end frameworks in 2021. 
At the point when you settle on your decision, remember certain necessities that will help you incredibly. Choosing among top UI frameworks, consider both the clients' and development groups' points of view. Those features cover "planning, development, testing and upkeep stages**. 
The be…]]></summary>
        <author>
            <name>Manav Jain</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Keycloak on Distroless]]></title>
        <id>https://dev.to/stack-labs/keycloak-on-distroless-12ng</id>
        <link href="https://dev.to/stack-labs/keycloak-on-distroless-12ng"/>
        <updated>2021-05-28T06:04:52.000Z</updated>
        <summary type="html"><![CDATA[Keycloak is a wonderful piece of software, managed with success by RedHat, to be used as an Identity and Access Management software. RedHat distribute it as a zip package to be run on a machine with a JVM installed or as a container. Nowadays, container is a simpler solution, especially if you are using an orchestrator like Kubernetes.
The Keycloak image is available on the DockerHub or Quay. It  provides an important level of configuration through environment variables, which is useful if you are not familiar with WildFly configuration. But, this solution has an important downside, especially for a tool dedicated to security… tags are not maintained at OS level over time and has many vulnerabilities.
You can see below, a lot of vulnerabilities in the latest Keycloak image, especially at t…]]></summary>
        <author>
            <name>Λ\: Davin Kevin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Your Angular code base is deprecated.]]></title>
        <id>https://dev.to/shivamd20/your-angular-code-base-is-deprecated-315e</id>
        <link href="https://dev.to/shivamd20/your-angular-code-base-is-deprecated-315e"/>
        <updated>2021-05-27T23:27:40.000Z</updated>
        <summary type="html"><![CDATA[No, upgrading to Angular 12.x.x will not help.
The Typescript experimental decorators were based on TC39 proposal-decorators.
We use the same Decorators in our Angular codebase to create services, components and other Angular constructs.
But the same TC39 proposal has evolved in a different direction which is semantically not compatible with the experimental Typescript decorators.   
The new spec for Decorators is easier to use and write.
You can find the detailed comparison between old and new decorators here. 
Just finished up the first draft of the new decorators spec, pretty excited about it 😄 https://t.co/ELhZbsiaiR
— The p is silent (@pzuraq
) May 27, 2021
 



Does this mean that Typescript experimental decorators will not be compatible with Javascript decorators 😨
— Shivam (@shivamd20
) May 27, 2021
 



Unfortunately no, the new proposal has differing semantics from previous proposals in a number of ways. TypeScript experimental decorators were also incompatible with the Define semantics class fields, which caused a decent amount of breakage in the ecosystem.
— The p is silent (@pzuraq
) May 27, 2021
 



When the proposal advances, figuring out a step-by-step incremental upgrade path for existing decorators users is definitely going to be a priority though! No user left behind 😄
— The p is silent (@pzuraq
) May 27, 2021
 

Let's just hope that this doesn’t result in fragmentation of JavaScript decorators. We have already faced a lot inconvenience due to commonsjs and ES6 imports.]]></summary>
        <author>
            <name>Shivam</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular- Delete item from array of object]]></title>
        <id>https://dev.to/mateuszto/angular-delete-item-from-array-of-object-3316</id>
        <link href="https://dev.to/mateuszto/angular-delete-item-from-array-of-object-3316"/>
        <updated>2021-05-27T21:06:32.000Z</updated>
        <summary type="html"><![CDATA[Here's my app: https://stackblitz.com/edit/angular-ivy-s6usrl?file=src%2Fapp%2Fnotes%2Fsingle-note%2Fsingle-note.component.ts
As you can see I try to delete item but it doesn't work, can sb look at that? Thanks alot!]]></summary>
        <author>
            <name>Mateusz Tomczyk</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Freehand Drawing in Angular]]></title>
        <id>https://dev.to/ngconf/freehand-drawing-in-angular-1h</id>
        <link href="https://dev.to/ngconf/freehand-drawing-in-angular-1h"/>
        <updated>2021-05-27T19:06:50.000Z</updated>
        <summary type="html"><![CDATA[Jim Armstrong | ng-conf | Dec 2019

I wanted to something fun for the holiday season, so I decided to port a variable-width stroke from the Flex Freehand Drawing Library I created back in the early 2010’s. This stroke actually has a venerable history, going back to about 1983, as an exercise I was assigned as a teaching assistant for a graduate course in computational geometry. The instructor’s company recently obtained a very expensive tablet. This system allowed users to scan or load drawings already in electronic form into a display and annotate them with hand-drawn notes using a fixed-width stroke. The instructor had an idea for a variable-width (speed-dependent) stroke that would be the basis for a number of lab exercises. My job was to get his idea working in Fortran (yes, now you ca…]]></summary>
        <author>
            <name>ng-conf</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[To $ or Not to $: Displaying Terminal Code Snippets]]></title>
        <id>https://css-tricks.com/?p=341298</id>
        <link href="https://css-tricks.com/to-or-not-to-displaying-terminal-code-snippets/"/>
        <updated>2021-05-27T18:22:11.000Z</updated>
        <summary type="html"><![CDATA[It’s very popular to put a $ on lines that are intended to be a command in code documentation that involves the terminal (i.e. the command line).
Like this:
$ brew install somepackage
The point of that is that it …
The post To $ or Not to $: Displaying Terminal Code Snippets appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Improve Machine Learning Model Performance by Combining Categorical Features]]></title>
        <id>60af931811ffb70827ef85d3</id>
        <link href="https://www.freecodecamp.org/news/improve-machine-learning-model-performance-by-combining-categorical-features/"/>
        <updated>2021-05-27T17:55:23.000Z</updated>
        <summary type="html"><![CDATA[When you're training a machine learning model, you can have some features in your dataset that represent categorical values. Categorical features are types of data that you can divide into groups. There are three common categorical data types: Ordinal – a set of values in ascending or descending order. Example: rating]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Make a Bouncing Basketball in Unity with Materials and Textures 🏀]]></title>
        <id>60a325c6906c5207e3a7da25</id>
        <link href="https://www.freecodecamp.org/news/how-to-make-a-basketball-in-unity-with-materials-and-textures/"/>
        <updated>2021-05-27T15:16:34.000Z</updated>
        <summary type="html"><![CDATA[In this article, I'll teach you how to make a basketball using materials and textures in Unity. You can extend this micro-concept to create any kind of ball like a football, tennis ball, or snooker balls.  That said, these techniques aren't just limited to creating round 3D objects like balls.]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[🖥 Get Better Angular UX Using 4 Animation Techniques]]></title>
        <id>https://dev.to/robertinoc_dev/get-better-angular-ux-using-4-animation-techniques-2gjk</id>
        <link href="https://dev.to/robertinoc_dev/get-better-angular-ux-using-4-animation-techniques-2gjk"/>
        <updated>2021-05-27T14:26:24.000Z</updated>
        <summary type="html"><![CDATA[⌨️ Improve the User Experience (UX) of an e-commerce application by implementing animations utilizing Angular animations, CSS animations, and Web Animation APIs.



  
  
  
Developers can use animations in meaningful and non-distracting ways to significantly improve their application's user experience (UX). This blog post discusses four effective techniques to animate your application's user interface, covering popular use cases. You'll learn how to transform bland experiences into memorable ones for your users.
I created a demo application to help you focus on adding animations to Angular. You'll add animations to a starter app as you progress through this tutorial. The starter application uses Tailwind to take care of its style and layout, but none of the animations discussed here are dependent on it.
Follow this tutorial without cloning any repo, right in the browser using Stackblitz or CodeSandbox.
If you prefer to work locally in your IDE, clone the demo app and check out its starter branch:
git clone -b starter git@github.com:auth0-blog/angular-animations-storefront.git

Once you clone the repo, make angular-animations-storefront your current directory:
cd angular-animations-storefront

Install the project's dependencies:
npm i

Run the project locally:
npm run start

Angular comes with a powerful animation module that lets you quickly add motion to your application: BrowserAnimationsModule. Under the hood, this module uses the Web Animations API (WAAPI) to create motion and interactivity. Whenever WAAPI isn't available, BrowserAnimationsModule falls back to using CSS keyframes. Angular animations give you the option to use their abstraction layer to animate any properties that the web considers animatable such as positions, sizes, colors, and many more.
Read more...]]></summary>
        <author>
            <name>Robertino</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Show Images on Click]]></title>
        <id>https://css-tricks.com/?p=341020</id>
        <link href="https://css-tricks.com/how-to-show-images-on-click/"/>
        <updated>2021-05-27T14:25:29.000Z</updated>
        <summary type="html"><![CDATA[Most images on the web are superfluous. If I might be a jerk for a bit, 99% of them aren’t even that helpful at all (although there are rare exceptions). That’s because images don’t often complement the text they’re …
The post How to Show Images on Click appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Robin Rendle</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Rethinking Postgres in a Post-Server World]]></title>
        <id>https://css-tricks.com/?p=340910</id>
        <link href="https://css-tricks.com/rethinking-postgres-in-a-post-server-world/"/>
        <updated>2021-05-27T14:23:23.000Z</updated>
        <summary type="html"><![CDATA[Serverless architectures have brought engineering teams a great number of benefits. We get simpler deployments, automatic and infinite scale, better concurrency, and a stateless API surface. It’s hard to imagine going back to the world of managed services, broken local …
The post Rethinking Postgres in a Post-Server World appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Michael Rispoli</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Useful VS Code Extensions For Front-End Developers]]></title>
        <id>https://smashingmagazine.com/2021/05/useful-vs-code-extensions-web-developers/</id>
        <link href="https://smashingmagazine.com/2021/05/useful-vs-code-extensions-web-developers/"/>
        <updated>2021-05-27T13:30:00.000Z</updated>
        <summary type="html"><![CDATA[Meet useful Visual Studio Code extensions for web developers: little helpers to minimize slow-downs and frustrations, and boost developer’s workflow along the way. With auto log messages, auto code formatting, file utils, file labels, code snippets, highlight brackets, tags, indents and workspaces, onboarding and remote SSH.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cosima Mielke)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Build And Launch Responsive Websites Faster With Editor X]]></title>
        <id>https://smashingmagazine.com/2021/05/build-launch-responsive-websites-editorx/</id>
        <link href="https://smashingmagazine.com/2021/05/build-launch-responsive-websites-editorx/"/>
        <updated>2021-05-27T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[While web builders have been around for a long time, it wasn’t until recently that they became practical for professional use. Closing the gap between design and code has become the north star for many companies and we are seeing a wave of tools that deliver on this promise.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Miroslav Bekyarov)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The collection reference method *.valueChanges(...) visualized (and explained)!]]></title>
        <id>https://dev.to/kwhjvdkamp/the-collection-method-valuechanges-visualized-and-explained-5g13</id>
        <link href="https://dev.to/kwhjvdkamp/the-collection-method-valuechanges-visualized-and-explained-5g13"/>
        <updated>2021-05-27T09:15:29.000Z</updated>
        <summary type="html"><![CDATA[Context 
Building a web application with Angular and Firebase presented by Mark Thompson. 
| Angular 12.0.1 | firebase 9.11.0 | Node 14.17 |
Taking Mark's instruction a bit further; to achieve drag&drop in a bit more realistic situation, calling the store in a service asynchronously. To achieve this status, I stumbled on the .valueChanges(...) method.
The internal firestore documents explains the working of this .valueChanges(...) method as it listen to all documents in the retrieved collection and queries this list as an Observable. 
idField. When the idField option is provided like 
.valueChanges({idField: '<a-property-of-the-document'}) it means that the document ID (actually the document's name) will be mapped to the provided property being one of the properties within the document-object.
Know the construction of the document, in this case document (ITask) = { id?: string; title?:string; description?: string'; }. 

When calling the .valueChanges(...) method with a provided idField, which is set to one of the provided properties as stated, internally, the ID (actually the document's name) of that document is mapped to the 'provided'-property within the document object. 

The service
snapshotChanges() as stated elsewhere.]]></summary>
        <author>
            <name>Koen (K.W.H.J.) van der Kamp</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Giphy API Tutorial – How to Generate Animated Text GIFs with ReactJS]]></title>
        <id>60a44b9f906c5207e3a7e098</id>
        <link href="https://www.freecodecamp.org/news/giphy-api-tutorial/"/>
        <updated>2021-05-26T21:44:01.000Z</updated>
        <summary type="html"><![CDATA[In this tutorial you will create an app that generates dynamic animated text using Giphy's API with ReactJS. After that I'll go over some of the other API features Giphy provides that you can use to make other interesting projects. You can find the code for the tutorial here. Video]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Contribute to Open Source  Projects – A Beginner&#x27;s Guide]]></title>
        <id>60abe7fb11ffb70827ef63a6</id>
        <link href="https://www.freecodecamp.org/news/how-to-contribute-to-open-source-projects-beginners-guide/"/>
        <updated>2021-05-26T18:01:00.000Z</updated>
        <summary type="html"><![CDATA[If you're a developer, you've probably come across the term "open source." If you've ever wondered what it's all about and how to contribute, you are in exactly the right place.  I put aside all my fears about how and what to contribute during Hacktoberfest 2020, and made]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learn Basic Terraform Syntax in 20 minutes]]></title>
        <id>606f4f5fd5756f080ba96b65</id>
        <link href="https://www.freecodecamp.org/news/terraform-syntax-for-beginners/"/>
        <updated>2021-05-26T18:00:52.000Z</updated>
        <summary type="html"><![CDATA[In this article, I'll give you a brief overview of the configuration syntax of Terraform.  Terraform's docs provide the most comprehensive look at its syntax. But this article should serve as a condensed quick start introduction that'll give new users a simplified overview. We'll focus on the basic structures without]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Awesome Standalone (Web Components)]]></title>
        <id>https://css-tricks.com/?p=339759</id>
        <link href="https://css-tricks.com/awesome-standalone-web-components/"/>
        <updated>2021-05-26T17:56:34.000Z</updated>
        <summary type="html"><![CDATA[In his last An Event Apart talk, Dave made a point that it’s really only just about right now that Web Components are becoming a practical choice for production web development. For example, it has only been about a year …
The post Awesome Standalone (Web Components) appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Links on Web Components]]></title>
        <id>https://css-tricks.com/?p=340901</id>
        <link href="https://css-tricks.com/links-on-web-components/"/>
        <updated>2021-05-26T17:56:12.000Z</updated>
        <summary type="html"><![CDATA[How we use Web Components at GitHub — Kristján Oddsson talks about how GitHub is using web components. I remember they were very early adopters, and it says here they released a <relative-time> component in 2014! Now they’ve got a 
…
The post Links on Web Components appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[My Journey with Angular and SSR]]></title>
        <id>https://dev.to/danywalls/my-journey-with-angular-and-ssr-47l3</id>
        <link href="https://dev.to/danywalls/my-journey-with-angular-and-ssr-47l3"/>
        <updated>2021-05-26T17:15:07.000Z</updated>
        <summary type="html"><![CDATA[Last month I setup my blog with Angular Universal (Server Side Render) this is about my steps installing SSR in my blog, so keep in mind a simple blog with only text with http request to contentful, so is real scenario, but the simple case to get start with Angular and Server Side render.
First step install Angular universal.
ng add @nguniversal/express-engine@next

Next step was set up the build in netlify
npm run build:ssr

The page is ready with server side render, but my client application need to request the articles, The TransferState service help to send information from the server to the client.
  imports: [
    BlogHeaderModule,
    BrowserModule,
    InfrastructureModule,
    AppRoutingModule,
    BrowserModule.withServerTransition({ appId: 'dw' }),
    TransferHttpCacheModule
  ],

Install it as part of the App module and import into  ServerTransferStateModule in server module.
@NgModule({
  imports: [AppModule, ServerModule, ServerTransferStateModule],
  bootstrap: [AppComponent],
})

Done
Because my app is only text was easy to get more than 95% but keep in mind the following points.
Not all application are the same, my case is a simple blog, so not issues with images, or authentication.
Use https://contrastchecker.com/ and https://alex-page.github.io/sass-a11ycolor for accesibility issues.
If is your first time, try with an easy proyect like a blog or small app.
Take care about how to use or transfer data between components, I got an issue to send data using this.location.getState().
Done!]]></summary>
        <author>
            <name>Dany Paredes</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Build a GraphQL API Using Laravel]]></title>
        <id>60abc59d11ffb70827ef6304</id>
        <link href="https://www.freecodecamp.org/news/build-a-graphql-api-using-laravel/"/>
        <updated>2021-05-26T16:34:32.000Z</updated>
        <summary type="html"><![CDATA[In this article, I'll walk you through how to set up your own GraphQL API using PHP and Laravel. Two years ago, I started working professionally as a backend developer. And I was very intimidated by all the technology I didn't yet know. Words like Docker, Kubernetes, and GraphQL seemed]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Build Super Mario Bros, Zelda, and Space Invaders with Kaboom.js]]></title>
        <id>60aced0011ffb70827ef6d96</id>
        <link href="https://www.freecodecamp.org/news/how-to-build-mario-zelda-and-space-invaders-with-kaboom-js/"/>
        <updated>2021-05-26T14:12:27.000Z</updated>
        <summary type="html"><![CDATA[In this video course I show you how to build three popular games using the latest game development library for JavaScript called Kaboom.js. This course is exciting for two reasons: First of all, I am going to be introducing a new technology designed especially for game development in JavaScript.]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Thorough Analysis of CSS-in-JS]]></title>
        <id>https://css-tricks.com/?p=340705</id>
        <link href="https://css-tricks.com/a-thorough-analysis-of-css-in-js/"/>
        <updated>2021-05-26T14:08:49.000Z</updated>
        <summary type="html"><![CDATA[Wondering what’s even more challenging than choosing a JavaScript framework? You guessed it: choosing a CSS-in-JS solution. Why? Because there are more than 50 libraries out there, each of them offering a unique set of features.
We tested 10 different …
The post A Thorough Analysis of CSS-in-JS appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Andrei Pfeiffer</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular 11 - JWT Authentication Example & Tutorial With PHP]]></title>
        <id>https://dev.to/jumamiller/angular-11-jwt-authentication-example-tutorial-with-php-2d7d</id>
        <link href="https://dev.to/jumamiller/angular-11-jwt-authentication-example-tutorial-with-php-2d7d"/>
        <updated>2021-05-26T13:59:56.000Z</updated>
        <summary type="html"><![CDATA[A user is usually authenticated by entering a username, email address, and/or password and then being given access to various resources or services. By its very existence, authentication relies on maintaining the user's state. This seems to go against HTTP's fundamental property of being a stateless protocol.  
Your Angular app will communicate with a backend that generates tokens. The Angular app can then send the token to the backend as an Authorization header to show they're authenticated. The JWT should be checked by the backend, and access should be granted based on its validity.  
This tutorial will walk you through the process of developing and implementing JWT-based authentication in an Angular 11 application step by step. This tutorial takes you a step further by developing a back…]]></summary>
        <author>
            <name>Miller Juma</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Accessible SVGs: Perfect Patterns For Screen Reader Users]]></title>
        <id>https://smashingmagazine.com/2021/05/accessible-svg-patterns-comparison/</id>
        <link href="https://smashingmagazine.com/2021/05/accessible-svg-patterns-comparison/"/>
        <updated>2021-05-26T13:20:00.000Z</updated>
        <summary type="html"><![CDATA[Discover which SVG patterns we should avoid and which patterns are the most inclusive when comparing different combinations of OSs, browsers, and screen readers.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Carie Fisher)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[what is difference in angular use component or modals as element ref and what is it effect on performance in angular]]></title>
        <id>https://dev.to/ahmed1985/which-is-difference-in-angular-use-component-or-modals-as-element-ref-and-what-is-it-effect-on-performance-in-angular-4g3a</id>
        <link href="https://dev.to/ahmed1985/which-is-difference-in-angular-use-component-or-modals-as-element-ref-and-what-is-it-effect-on-performance-in-angular-4g3a"/>
        <updated>2021-05-26T12:13:21.000Z</updated>
        <summary type="html"><![CDATA[I need to create an angular component as alert "are you sure to do xyz?" one of my colleagues used element ref and another use component. what is the difference and use cases of each one and what the effect of the performace]]></summary>
        <author>
            <name>Attia</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.9.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.9.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.9.0"/>
        <updated>2021-05-26T06:02:55.000Z</updated>
        <summary type="html"><![CDATA[Added: experimental support for iTunes podcast feed: Demo | Source. With this new release, you can render an audio control to play the mp3 file and display iTunes episode duration. It is "experimental" due to these caveats:

This feature is currently only available through custom template.
iTunes has no strict format requirement for duration. The unit is most likely seconds but can be "hh:mm:ss" or "mm:ss" for some sources. A future version may expose a human readable string to the template.
No image support yet. Some shows might have disabled CORS or use a relative URL for image, which forces osmosfeed to download the image during build. A future version may support it.
You can't republish the podcast in the feed output. Supporting this goes beyond the scope of the project at the moment.
Fixed: the articles in template data were not sorted.
Thank you @Zenigata]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What I Learned Building a Word Game App With Nuxt on Google Play]]></title>
        <id>https://css-tricks.com/?p=340759</id>
        <link href="https://css-tricks.com/what-i-learned-building-a-word-game-app-with-nuxt-on-google-play/"/>
        <updated>2021-05-25T14:25:06.000Z</updated>
        <summary type="html"><![CDATA[I fell in love with coding the moment I created my first CSS :hover effect. Years later, that initial bite into interactivity on the web led me to a new goal: making a game.
Table of contents
What’s the game 
…
The post What I Learned Building a Word Game App With Nuxt on Google Play appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Josh Collinsworth</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Guide To Undoing Mistakes With Git (Part 2)]]></title>
        <id>https://smashingmagazine.com/2021/05/undoing-mistakes-git-part2/</id>
        <link href="https://smashingmagazine.com/2021/05/undoing-mistakes-git-part2/"/>
        <updated>2021-05-25T14:00:00.000Z</updated>
        <summary type="html"><![CDATA[Mistakes. These cruel villains do not even stop at the beautiful world of software development. But although we cannot avoid making mistakes, we can learn to undo them! This post will show the right tools for your daily work with Git.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Tobias Günther)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Creating Powerful Websites with Serverless-Driven CMS Development]]></title>
        <id>https://css-tricks.com/?p=341383</id>
        <link href="https://css-tricks.com/creating-powerful-websites-with-serverless-driven-cms-development/"/>
        <updated>2021-05-25T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[Choosing the right tools to build a website for your organization is essential, but it can be tough to find the right fit. Simple site builders like Wix and Squarespace are easy for marketers to use, but severely limit developers …
The post Creating Powerful Websites with Serverless-Driven CMS Development appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Ahmed Bouchefra</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A New Way To Reduce Font Loading Impact: CSS Font Descriptors]]></title>
        <id>https://smashingmagazine.com/2021/05/reduce-font-loading-impact-css-descriptors/</id>
        <link href="https://smashingmagazine.com/2021/05/reduce-font-loading-impact-css-descriptors/"/>
        <updated>2021-05-25T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[Web fonts are often terrible for web performance and none of the font loading strategies are particularly effective to address that. Upcoming font options may finally deliver on the promise of making it easier to align fallback fonts to the final fonts.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Barry Pollard)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Links on Performance]]></title>
        <id>https://css-tricks.com/?p=340808</id>
        <link href="https://css-tricks.com/links-on-performance/"/>
        <updated>2021-05-24T22:03:30.000Z</updated>
        <summary type="html"><![CDATA[Making GitHub’s new homepage fast and performant — Tobias Ahlin describes how the scrolling effects are done more performantly thanks to IntersectionObserver and the fact that it avoids the use of methods that trigger reflows, like getBoundingClientRect. Also, 
…
The post Links on Performance appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[proxy-www]]></title>
        <id>https://css-tricks.com/?p=341153</id>
        <link href="https://github.com/justjavac/proxy-www"/>
        <updated>2021-05-24T19:09:59.000Z</updated>
        <summary type="html"><![CDATA[I like a good trick. What if… a URL was…  a promise… that fetched said URL?
www.codepen.io.then((response) ={
  console.log(response);
});
That’s what @justjavac did with JavaScript Proxys. A clever trick, that. Don’t @ me about the practicality. Trick…
The post proxy-www appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Wrangling Control Over PDFs with the Adobe PDF Embed API]]></title>
        <id>https://css-tricks.com/?p=340626</id>
        <link href="https://css-tricks.com/wrangling-control-over-pdfs-with-the-adobe-pdf-embed-api/"/>
        <updated>2021-05-24T13:57:21.000Z</updated>
        <summary type="html"><![CDATA[By our last estimate, there are now more PDFs in the world than atoms in the universe (not verified by outside sources) so chances are, from time to time, you’re going to run into a PDF document or two. Browsers …
The post Wrangling Control Over PDFs with the Adobe PDF Embed API appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Raymond Camden</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS Container Queries: Use-Cases And Migration Strategies]]></title>
        <id>https://smashingmagazine.com/2021/05/css-container-queries-use-cases-migration-strategies/</id>
        <link href="https://smashingmagazine.com/2021/05/css-container-queries-use-cases-migration-strategies/"/>
        <updated>2021-05-24T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[CSS Container queries bring media queries closer to the target elements themselves and enables them to adapt to virtually any given container or layout. In this article, we’re going to cover CSS container query basics and how to use them today with progressive enhancement or polyfills.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Adrian Bece)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.8.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.1"/>
        <updated>2021-05-23T05:40:12.000Z</updated>
        <summary type="html"><![CDATA[Fixed: UnhandledPromiseRejectionWarning: Error: At least one option must be a string]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.8.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.0"/>
        <updated>2021-05-23T05:12:08.000Z</updated>
        <summary type="html"><![CDATA[Changed: Smart summary truncation. When there is no dedicated summary (only Atom feed has it, and many sites don't use it) from the source, we check if the content/description (Both Atom and RSS) field is long enough to be full text. If so, it will be truncated into a "pseudo" summary. If not, we assume the source used the content field as summary, and it will be displayed in full length.
Thank you: @LooperXX.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Should DevTools teach the CSS cascade?]]></title>
        <id>https://css-tricks.com/?p=340991</id>
        <link href="https://www.stefanjudis.com/blog/should-devtools-teach-the-css-cascade/"/>
        <updated>2021-05-21T23:22:54.000Z</updated>
        <summary type="html"><![CDATA[Stefan Judis, two days before I mouthed off about using (X, X, X, X) for talking about specificity, has a great blog post not only using that format, but advocating that browser DevTools should show us that value by …
The post Should DevTools teach the CSS cascade? appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Svelte for the Experienced React Dev]]></title>
        <id>https://css-tricks.com/?p=340825</id>
        <link href="https://css-tricks.com/svelte-for-the-experienced-react-dev/"/>
        <updated>2021-05-21T14:30:59.000Z</updated>
        <summary type="html"><![CDATA[This post is an accelerated introduction to Svelte from the point of view of someone with solid experience with React. I’ll provide a quick introduction, and then shift focus to things like state management and DOM interoperability, among other things. …
The post Svelte for the Experienced React Dev appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Adam Rackis</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS Hell]]></title>
        <id>https://css-tricks.com/?p=340919</id>
        <link href="https://csshell.dev/"/>
        <updated>2021-05-21T14:29:16.000Z</updated>
        <summary type="html"><![CDATA[Collection of common CSS mistakes, and how to fix them
From Stefánia Péter. 
Clever idea for a site! Some of them are little mind-twisters that could bite you, and some of them are honing in on best practices that …
The post CSS Hell appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building A Rich Text Editor (WYSIWYG)]]></title>
        <id>https://smashingmagazine.com/2021/05/building-wysiwyg-editor-javascript-slatejs/</id>
        <link href="https://smashingmagazine.com/2021/05/building-wysiwyg-editor-javascript-slatejs/"/>
        <updated>2021-05-21T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[Let’s build a rich text, WYSIWYG-editor that supports rich text, images, links and some nuanced features from word processing apps. We will use SlateJS to build the shell of the editor and then add a toolbar and custom configurations.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Shalabh Vyas)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Boost Your Skills Online: Smashing Workshops On Front-End And Design]]></title>
        <id>https://smashingmagazine.com/2021/05/new-online-workshops-front-end-ux/</id>
        <link href="https://smashingmagazine.com/2021/05/new-online-workshops-front-end-ux/"/>
        <updated>2021-05-20T14:20:00.000Z</updated>
        <summary type="html"><![CDATA[Front-end and design are remarkably complex these days. That’s why we invite kind, smart folks from the community to run online workshops for all of us to learn together. And we have new ones coming up, and we’d like to kindly welcome you to join in.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Iris Lješnjanin)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Implement Authentication In Next.js With Auth0]]></title>
        <id>https://smashingmagazine.com/2021/05/implement-authentication-nextjs-auth0/</id>
        <link href="https://smashingmagazine.com/2021/05/implement-authentication-nextjs-auth0/"/>
        <updated>2021-05-20T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[A step-by-step tutorial on adding authentication and authorization to your Next.js apps, with Auth0. We’ll be using a Next.js SDK to connect our application to the Auth0 API and will create the dynamic API route for React.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Facundo Giuliani)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Frustrating Design Patterns: Mega-Dropdown Hover Menus]]></title>
        <id>https://smashingmagazine.com/2021/05/frustrating-design-patterns-mega-dropdown-hover-menus/</id>
        <link href="https://smashingmagazine.com/2021/05/frustrating-design-patterns-mega-dropdown-hover-menus/"/>
        <updated>2021-05-19T11:40:00.000Z</updated>
        <summary type="html"><![CDATA[Everything to keep in mind when designing and building a mega-dropdown, common pitfalls, hover entry/exit delays, trajectory triangle technique and SVG path exit areas.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Vitaly Friedman)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Create, Edit And Animate SVGs All In One Place With SVGator 3.0]]></title>
        <id>https://smashingmagazine.com/2021/05/create-edit-animate-svg-svgator3/</id>
        <link href="https://smashingmagazine.com/2021/05/create-edit-animate-svg-svgator3/"/>
        <updated>2021-05-18T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[Today, we are taking a closer look at [SVGator 3.0](https://www.svgator.com/?utm_source=article&utm_medium=smashingmag&utm_campaign=svgator3_smashing), a new major release of the popular SVG application that lets you create, edit and animate SVG files and make the best out of what SVG has to offer — from start to finish.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Mikołaj Dobrucki)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 37 With Adam Argyle: What Is VisBug?]]></title>
        <id>https://smashingmagazine.com/2021/05/smashing-podcast-episode-37/</id>
        <link href="https://smashingmagazine.com/2021/05/smashing-podcast-episode-37/"/>
        <updated>2021-05-18T05:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode, we’re talking about VisBug. What is it, and how is it different from the array of options already found in Chrome DevTools? Drew McLellan talks to its creator Adam Argyle to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How We Improved Our Core Web Vitals (Case Study)]]></title>
        <id>https://smashingmagazine.com/2021/05/core-web-vitals-case-study/</id>
        <link href="https://smashingmagazine.com/2021/05/core-web-vitals-case-study/"/>
        <updated>2021-05-17T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[Google’s “Page Experience Update” will start rolling out in June. At first, sites that meet Core Web Vitals thresholds will have a minor ranking advantage in mobile search for all browsers. Search is important to any business, and this is the story of how Beau Hartshorne and his team at Instant Domain Search improved their Core Web Vitals scores.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Beau Hartshorne)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.2]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2"/>
        <updated>2021-05-17T05:32:19.000Z</updated>
        <summary type="html"><![CDATA[⚠ Deprecated: To accommodate the monorepo setup, the node version in all templates/demos/examples has changed from 14 to 16. This is not a breaking change as our compile target is still node 14, and node 16 is backward compatible. We still recommend you start using node-version: "16" in your .github/workflows/update-feed.yaml today to get the performance/security improvements from the newer node. See example
Chore: Reorganize to monorepo with npm workspace.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.1"/>
        <updated>2021-05-16T02:33:58.000Z</updated>
        <summary type="html"><![CDATA[Fixed: static files were unnecessarily copied for custom templates.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.0"/>
        <updated>2021-05-16T01:42:24.000Z</updated>
        <summary type="html"><![CDATA[Added: templating system. Demo | Source | Docs
Chore: rendering logic refactoring. Adopting functional paradigm.
Thank you @tianheg, @onnyyonn]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Tree-Shaking: A Reference Guide]]></title>
        <id>https://smashingmagazine.com/2021/05/tree-shaking-reference-guide/</id>
        <link href="https://smashingmagazine.com/2021/05/tree-shaking-reference-guide/"/>
        <updated>2021-05-14T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[“Tree-shaking” is a must-have performance optimization when bundling JavaScript. In this article, we dive deeper on how exactly it works and how specs and practice intertwine to make bundles leaner and more performant. Plus, you’ll get a tree-shaking checklist to use for your projects.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Átila Fassina)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Frustrating Design Patterns That Need Fixing: Birthday Picker]]></title>
        <id>https://smashingmagazine.com/2021/05/frustrating-design-patterns-birthday-picker/</id>
        <link href="https://smashingmagazine.com/2021/05/frustrating-design-patterns-birthday-picker/"/>
        <updated>2021-05-12T12:42:00.000Z</updated>
        <summary type="html"><![CDATA[In this new series of articles on UX, we take a closer look at some frustrating design patterns and explore better alternatives, along with plenty of examples to keep in mind when building or designing one. Let’s start with an infamous birthday picker.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Vitaly Friedman)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Little Smashing Stories]]></title>
        <id>https://smashingmagazine.com/2021/05/little-smashing-stories/</id>
        <link href="https://smashingmagazine.com/2021/05/little-smashing-stories/"/>
        <updated>2021-05-12T08:00:00.000Z</updated>
        <summary type="html"><![CDATA[Today marks the day we sent out our 300th edition of the Smashing Newsletter. This article is a little celebration in which we share little Smashing stories from people working behind the scenes.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Vitaly Friedman)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Primer On CSS Container Queries]]></title>
        <id>https://smashingmagazine.com/2021/05/complete-guide-css-container-queries/</id>
        <link href="https://smashingmagazine.com/2021/05/complete-guide-css-container-queries/"/>
        <updated>2021-05-11T13:30:00.000Z</updated>
        <summary type="html"><![CDATA[A prototype of the long-awaited CSS container queries has landed in Chrome Canary and is available for experimentation. Let’s look at what problem is being solved, learn how container queries work, and see how they compare with and complement existing CSS features for layout.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Stephanie Eckles)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Conference Platform We Use For Our Online Events: Hopin]]></title>
        <id>https://smashingmagazine.com/2021/05/smashingconf-conference-platform-hopin/</id>
        <link href="https://smashingmagazine.com/2021/05/smashingconf-conference-platform-hopin/"/>
        <updated>2021-05-11T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[At the beginning of 2020, the SmashingConf team was ready for a new year. We had so many things that excited us. New speakers, new workshops, new cities, new attendees, new experiences. And as we all know, 2020 had other ideas. With so many people working from home, we thought we would bring our [Smashing workshops](https://smashingconf.com/online-workshops/) from our home offices to yours — but how?]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Amanda Annandale)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Get Started With React By Building A Whac-A-Mole Game]]></title>
        <id>https://smashingmagazine.com/2021/05/get-started-whac-a-mole-react-game/</id>
        <link href="https://smashingmagazine.com/2021/05/get-started-whac-a-mole-react-game/"/>
        <updated>2021-05-10T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[Want to get started with React but struggling to find a good place to start? This article should have you covered. We’ll focus on some of the main concepts of React and then we’ll be building a game from scratch!]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Jhey Tompkins)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.4.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.4.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.4.0"/>
        <updated>2021-05-10T08:55:42.000Z</updated>
        <summary type="html"><![CDATA[Added: Basic theme customization: Demo | Source | Docs.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.6.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.6.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.6.0"/>
        <updated>2021-05-10T08:15:20.000Z</updated>
        <summary type="html"><![CDATA[Added: Link from the title of a subscription to its website.
Added: Store feedUrl and siteUrl for each source in cache.
Added: Semantic element (<time>) for timestamp on the UI.
Added: Semantic API for theming the default template. Demo | Source | Docs
Changed: Moved feed metadata from article level to feed level in cache.
Fixed: Any html-like text was stripped from title. Fixed with encoded text.
Removed: href for each source in cache. The value was never used so it's not a breaking change.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.5.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.5.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.5.0"/>
        <updated>2021-05-08T05:16:47.000Z</updated>
        <summary type="html"><![CDATA[Added: Atom feed generator
Added: Customizable site title
Added: Copy all files from static directory to the root of the site.
Changed: Favicon, css, and js assets now existing at site root level.
Chore: Excluded testing files from repo.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Organize Product-Related Assets And Collaborate Better]]></title>
        <id>https://smashingmagazine.com/2021/05/product-records-organization-collaboration-best-practices/</id>
        <link href="https://smashingmagazine.com/2021/05/product-records-organization-collaboration-best-practices/"/>
        <updated>2021-05-07T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[How do you organize your Google Drive assets? How do you name your Dropbox Paper documents? How do you deal with comments? Let’s get it right.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Valeriia Panina)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Improving The Performance Of Shopify Themes (Case Study)]]></title>
        <id>https://smashingmagazine.com/2021/05/improving-performance-shopify-themes-case-study/</id>
        <link href="https://smashingmagazine.com/2021/05/improving-performance-shopify-themes-case-study/"/>
        <updated>2021-05-06T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[When dealing with themes for large platforms and CMS, legacy issues often become a bottleneck. In this article, Carson Shold discusses how his team improved the performance and organization of their Shopify themes, and improved maintainability along the way.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Carson Shold)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Reducing HTML Payload With Next.js (Case Study)]]></title>
        <id>https://smashingmagazine.com/2021/05/reduce-data-sent-client-nextjs/</id>
        <link href="https://smashingmagazine.com/2021/05/reduce-data-sent-client-nextjs/"/>
        <updated>2021-05-05T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[This article showcases a case study of Bookaway’s landing page performance. We’ll see how taking care of the props we send to Next.js pages can make loading times and Web Vitals better.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Liran Cohen)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.3.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.3.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.3.1"/>
        <updated>2021-05-05T05:19:57.000Z</updated>
        <summary type="html"><![CDATA[Fixed: Avoid crwalers.
Fixed: Error logging from XML parser.
Fixed: Typo in docs.
Thank you: @dym-sh, @tabokie, @cheese1]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Guide To Undoing Mistakes With Git (Part 1)]]></title>
        <id>https://smashingmagazine.com/2021/05/undoing-mistakes-git-part1/</id>
        <link href="https://smashingmagazine.com/2021/05/undoing-mistakes-git-part1/"/>
        <updated>2021-05-04T14:30:00.000Z</updated>
        <summary type="html"><![CDATA[No matter how experienced you are, mistakes are an inevitable part of software development. But we can learn to repair them! And this is what we'll be looking at in this two-part series: how to undo mistakes using Git.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Tobias Günther)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 36 With Miriam Suzanne: What Is The Future Of CSS?]]></title>
        <id>https://smashingmagazine.com/2021/05/smashing-podcast-episode-36/</id>
        <link href="https://smashingmagazine.com/2021/05/smashing-podcast-episode-36/"/>
        <updated>2021-05-04T05:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode, we’re starting our new season of the Smashing Podcast with a look at the future of CSS. What new specs will be landing in browsers soon? Drew McLellan talks to expert Miriam Suzanne to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Evolution Of Jamstack]]></title>
        <id>https://smashingmagazine.com/2021/05/evolution-jamstack/</id>
        <link href="https://smashingmagazine.com/2021/05/evolution-jamstack/"/>
        <updated>2021-05-03T07:00:00.000Z</updated>
        <summary type="html"><![CDATA[Web-oriented databases, frameworks like Nuxt and Next.js, and even frameworkless approaches are evolving the Jamstack, but the core principles are more powerful than ever.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Mathias Biilmann)</name>
        </author>
    </entry>
</feed>
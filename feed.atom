<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2021-06-13T00:54:47.125Z</id>
    <title>osmos::feed</title>
    <updated>2021-06-13T00:54:47.125Z</updated>
    <generator>osmosfeed 1.10.2</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[I Built A Whatsapp Bot And Linked It To My Site Free (No third-party service)]]></title>
        <id>https://dev.to/cyril_ogoh/i-built-a-whatsapp-bot-and-linked-it-to-my-site-free-no-third-party-service-23f2</id>
        <link href="https://dev.to/cyril_ogoh/i-built-a-whatsapp-bot-and-linked-it-to-my-site-free-no-third-party-service-23f2"/>
        <updated>2021-06-13T00:44:25.000Z</updated>
        <summary type="html"><![CDATA[I've always wanted to build or have my own WHATSAPP BOT, to reply my messages as I've never being one to read and reply chats and also send scheduled and automated messages sure as birthday wishes (is kind of a big deal over here)
So i start by building a uni-gram Pattern Bot in node and feeding it some data, it was super dumb at first but the more data i fed it, the more manageable it was getting 

Now What was left was to integrate it with Whatsapp

So I jumped to Twilio WhatsApp Business API 😎😎 and the cost was fair $0.0042 to send a WhatsApp Template message and $0.005 for WhatsApp Session messages; BUT sadly that much 💔💔 for me as a student in a third world country with high exchange rate, I couldn't waste that amount for the Restriction Twilio was giving and I wanted it to come f…]]></summary>
        <author>
            <name>ogoh cyril</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using an IIFE to Create a Module]]></title>
        <id>https://dev.to/rthefounding/using-an-iife-to-create-a-module-l1b</id>
        <link href="https://dev.to/rthefounding/using-an-iife-to-create-a-module-l1b"/>
        <updated>2021-06-12T22:34:41.000Z</updated>
        <summary type="html"><![CDATA[An immediately invoked function expression (IIFE) is often used to group related functionality into a single object or module. 
Ex:




let isCuteMixin = function(obj) {
  obj.isCute = function() {
    return true;
  };
};
let singMixin = function(obj) {
  obj.sing = function() {
    console.log("Singing to an awesome tune");
  };
};

We can group these mixins into a module as follows:




let funModule = (function() {
  return {
    isCuteMixin: function(obj) {
      obj.isCute = function() {
        return true;
      };
    },
    singMixin: function(obj) {
      obj.sing = function() {
        console.log("Singing to an awesome tune");
      };
    }
  };
})();

Note that you have an immediately invoked function expression (IIFE) that returns an object funModule. This returned object contains all of the mixin behaviors as properties of the object. The advantage of the module pattern is that all of the motion behaviors can be packaged into a single object that can then be used by other parts of your code.]]></summary>
        <author>
            <name>Randy Rivera</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Understanding the Immediately Invoked Function Expression (IIFE)]]></title>
        <id>https://dev.to/rthefounding/understanding-the-immediately-invoked-function-expression-iife-1fce</id>
        <link href="https://dev.to/rthefounding/understanding-the-immediately-invoked-function-expression-iife-1fce"/>
        <updated>2021-06-12T22:27:03.000Z</updated>
        <summary type="html"><![CDATA[A common pattern in JavaScript is to execute a function as soon as it is declared:




(function () {
  console.log("Chirp, chirp!");
})();

This is an anonymous function expression that executes right away, and outputs Chirp, chirp! immediately.
Note that the function has no name and is not stored in a variable. The two parentheses () at the end of the function expression cause it to be immediately executed or invoked. This pattern is known as an immediately invoked function expression or IIFE.


Let's rewrite the function makeNest and remove its call so instead it's an anonymous immediately invoked function expression (IIFE).




function makeNest() {
  console.log("A cozy nest is ready");
}

makeNest();

Answer:




(function () {
  console.log("A cozy nest is ready");
})();]]></summary>
        <author>
            <name>Randy Rivera</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using Closure to Protect Properties Within an Object from Being Modified Externally]]></title>
        <id>https://dev.to/rthefounding/using-closure-to-protect-properties-within-an-object-from-being-modified-externally-dnj</id>
        <link href="https://dev.to/rthefounding/using-closure-to-protect-properties-within-an-object-from-being-modified-externally-dnj"/>
        <updated>2021-06-12T22:23:34.000Z</updated>
        <summary type="html"><![CDATA[In the previous post, bird had a public property name. It is considered public because it can be accessed and changed outside of bird's definition.




bird.name = "Duffy";

Therefore, any part of your code can easily change the name of bird to any value. Think about things like passwords and bank accounts being easily changeable by any part of your codebase. That could cause a lot of issues.


The simplest way to make this public property private is by creating a variable within the constructor function. This changes the scope of that variable to be within the constructor function versus available globally. This way, the variable can only be accessed and changed by methods also within the constructor function.




function Bird() {
  let weight = 15;

  this.getWeight = function() {
    return weight;
  }
}
let ducky = new Bird();
console.log(ducky.getWeight()); // will display 15

Here getWeight is a privileged method, because it has access to the private variable weight. This is possible because weight is declared in the same context as getWeight. In JavaScript, a function always has access to the context in which it was created. This is called closure.]]></summary>
        <author>
            <name>Randy Rivera</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using a Mixin to Add Common Behavior Between Unrelated Objects]]></title>
        <id>https://dev.to/rthefounding/using-a-mixin-to-add-common-behavior-between-unrelated-objects-5g62</id>
        <link href="https://dev.to/rthefounding/using-a-mixin-to-add-common-behavior-between-unrelated-objects-5g62"/>
        <updated>2021-06-12T22:17:57.000Z</updated>
        <summary type="html"><![CDATA[As you have seen, behavior is shared through inheritance. However, there are cases when inheritance is not the best solution. Inheritance does not work well for unrelated objects like Bird and Airplane. They can both fly, but a Bird is not a type of Airplane and vice versa.
For unrelated objects, it's better to use mixins. A mixin allows other objects to use a collection of functions.




let flyMixin = function(obj) {
  obj.fly = function() {
    console.log("Flying, wooosh!");
  }
};

The flyMixin takes any object and gives it the fly method.




let bird = {
  name: "Donald",
  numLegs: 2
};

let plane = {
  model: "777",
  numPassengers: 524
};

flyMixin(bird);
flyMixin(plane);

Here bird and plane are passed into flyMixin, which then assigns the fly function to each object. Now bird and plane can both fly:




bird.fly();
plane.fly();

The console would display the string Flying, wooosh! twice, once for each .fly() call.]]></summary>
        <author>
            <name>Randy Rivera</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Overriding Inherited Methods]]></title>
        <id>https://dev.to/rthefounding/overriding-inherited-methods-3oo6</id>
        <link href="https://dev.to/rthefounding/overriding-inherited-methods-3oo6"/>
        <updated>2021-06-12T22:10:17.000Z</updated>
        <summary type="html"><![CDATA[In previous posts, you learned that an object can inherit its behavior (methods) from another object by referencing its prototype object:




ChildObject.prototype = Object.create(ParentObject.prototype);

Then the ChildObject received its own methods by chaining them onto its prototype:




ChildObject.prototype.methodName = function() {...};

It's possible to override an inherited method. It's done the same way - by adding a method to ChildObject.prototype using the same method name as the one to override. Here's an example of Dog overriding the eat() method inherited from Animal:




function Animal() { }
Animal.prototype.eat = function() {
  return "nom nom nom";
};

function Dog() { }
Dog.prototype = Object.create(Animal.prototype);
Dog.prototype.eat = function() {
  return "chew chew chew";
};

If you have an instance let beagle = new Dog(); and you call beagle.eat(), this is how JavaScript looks for the method on beagle’s prototype chain:
beagle => Is eat() defined here? No.


Dog => Is eat() defined here? => Yes. Execute it and stop searching.


Animal => eat() is also defined, but JavaScript stopped searching before reaching this level.


Object => JavaScript stopped searching before reaching this level.]]></summary>
        <author>
            <name>Randy Rivera</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is Node JS ?]]></title>
        <id>https://dev.to/buzzedison/what-is-node-js-1gnd</id>
        <link href="https://dev.to/buzzedison/what-is-node-js-1gnd"/>
        <updated>2021-06-12T21:48:42.000Z</updated>
        <summary type="html"><![CDATA[Node.js is a very popular open source javascript runtime environment which is used to develop network applications. Node JS has gained massive popularity and now is used by thousands of developers all over the world for server-side programming.
Node.js is a platform built on Chrome’s JavaScript runtime for easily building fast, scalable network applications. Node.js uses event-driven, non-blocking I/O for file system access, networking, and other API calls, allowing it to support thousands of concurrent connections with near-zero programming latency.
You can make really cool real-time web applications using Node Js. There are a whole bunch of libraries and modules available to help you achieve this.   
Node JS is a fast growing platform for running JS based applications outside of the browser. 
Node JS has rocked the world of web application and making some big waves in the tech market. It’s been around for quite some time back in 2009 but is now widely used. (Initial release    May 27, 2009)
What do you think ? Share your knowledge with the community.]]></summary>
        <author>
            <name>Edison Ade</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What Is SSH and How Does It Work?]]></title>
        <id>https://dev.to/calvin087/what-is-ssh-and-how-does-it-work-e6n</id>
        <link href="https://dev.to/calvin087/what-is-ssh-and-how-does-it-work-e6n"/>
        <updated>2021-06-12T17:02:14.000Z</updated>
        <summary type="html"><![CDATA[What Is SSH?


SSH or Secure Shell allows people to have remote access to their servers. It uses cryptographic techniques to make sure all communication to and from the server happens in an encrypted way.
It gives you a method of authenticating remote users, transferring inputs from the client to the host and relay information back to the client.
Linux and macOS users can use the terminal to SSH into their remote server directly. Windows users have to use something like Putty.
You're able to use shell commands in the same way you would if you were physically using the remote computer.
The SSH command has three pieces;
ssh {user}@{host}

SSH tells the system that you want to open an encrypted connection.


User is for the account you want to access (root === admin for example).


Host is th…]]></summary>
        <author>
            <name>Calvin T</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Typing effect in React with typed.js and hooks]]></title>
        <id>https://dev.to/shareef/typing-effect-in-react-with-typed-js-and-hooks-5bl2</id>
        <link href="https://dev.to/shareef/typing-effect-in-react-with-typed-js-and-hooks-5bl2"/>
        <updated>2021-06-12T16:10:16.000Z</updated>
        <summary type="html"><![CDATA[Hello Developers 🤩🤩🤩


Let's admit it typing effect looks cool and the good news is we can achieve it without any pain 😜.
    npm install typed.js
    or
    yarn add typed.js
    or
    bower install typed.js

Let's dive into the code.





import Typed from "typed.js";
import { useEffect, useRef } from "react";

export default function App() {
  // Create Ref element.
  const el = useRef(null);

  useEffect(() => {
    const typed = new Typed(el.current, {
      strings: ["Handy", "Mandy", "Candy", "More Strings"], // Strings to display
      // Speed settings, try diffrent values untill you get good results
      startDelay: 300,
      typeSpeed: 100,
      backSpeed: 100,
      backDelay: 100
    });

    // Destropying
    return () => {
      typed.destroy();
    };
  }, []);

  return (
    <div>
      <h1>Hello Developers</h1>
      {/* Element to display typing strings */}
      <span ref={el}></span>
    </div>
  );
}


Kaboom🔥🔥🔥 with just some lines of codes we achieve a lot thanks to typed.js
Custom cursor.
Loop.
Smart backspace





    ...
  useEffect(() => {
    const typed = new Typed(el.current, {
      strings: ["Handy", "Mandy", "Candy", "More Strings"], // Strings to display
      // Speed settings, try diffrent values untill you get good results
      startDelay: 300,
      typeSpeed: 100,
      backSpeed: 100,
      backDelay: 100,
      smartBackspace: true,
      loop: true,
      showCursor: true,
      cursorChar: "!"
    });

    // Destropying
    return () => {
      typed.destroy();
    };
  }, []);
    ...


For TypeScript lovers it provide types by default.
Closing here 👋👋👋.
Typed.js examples
Typed.js docs
This is Shareef.
Live demo
GitHub repo of this blog
GitHub
Portfolio
ShareefBhai99
Linkedin
Cover photo by Firmbee
 from Pixabay]]></summary>
        <author>
            <name>Mohammed Nadeem Shareef</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Prevent disposable email signup for your company]]></title>
        <id>https://dev.to/rudsarkar/prevent-disposable-email-signup-for-your-company-483o</id>
        <link href="https://dev.to/rudsarkar/prevent-disposable-email-signup-for-your-company-483o"/>
        <updated>2021-06-12T16:04:14.000Z</updated>
        <summary type="html"><![CDATA[Few days back I was testing a company security as penetration tester. one thing I saw that they only allow user signup with corporate email such yourname@company.abc.
One thing popup in my mind so I can use disposable email to bypass interesting right? few company disable disposable email but in this case I found that they aren't preventing disposable email.
I am writing this blog because I wasn't able to find the prevent because if I wanted to do it manually then I have to create a bunch of list to blacklisted those disposable email, this kind of messy to work for me or the developer to deploy fix asap.
Example if I wanted to prevent manually I have to write code like this to blacklist the disposable email. Code Source
function is_temp_mail($mail) {
    $mail_domains_ko = array('0815.ru0c…]]></summary>
        <author>
            <name>Rudra Sarkar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Node.js][TypeScript][Windows] Play with child process]]></title>
        <id>https://dev.to/masanori_msl/node-js-typescript-windows-play-with-child-process-114e</id>
        <link href="https://dev.to/masanori_msl/node-js-typescript-windows-play-with-child-process-114e"/>
        <updated>2021-06-12T15:24:00.000Z</updated>
        <summary type="html"><![CDATA[Intro


When I call another software from Node.js, I use "child_process" like this.
[Windows][Node.js][TypeScript] Get installed printer driver names
"child_process" has four kind of methods(exclude "Sync" mehtods).
exec
execFile
fork
spawn
Because I wanted to know how to use them properly, I will try them.
Node.js ver.16.3.0
ts-node ver.10.0.0
TypeScript ver.4.3.2
According to the documents, they are based on "child_process.spawn()".
import { exec, execFile, fork, spawn } from "child_process";
import path, { resolve } from "path/posix";

function start() {
    spawnSample('powershell',['node', '-v']);
}
function spawnSample(command: string, args: string[]) {
    const execProcess = spawn(command, args);
    console.log('spawn');
    console.log(execProcess.spawnfile);
    execProcess.on('…]]></summary>
        <author>
            <name>Masui Masanori</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Node.js][TypeScript][Windows] Play with child process]]></title>
        <id>https://dev.to/masanori_msl/node-js-typescript-windows-play-with-child-process-114e</id>
        <link href="https://dev.to/masanori_msl/node-js-typescript-windows-play-with-child-process-114e"/>
        <updated>2021-06-12T15:24:00.000Z</updated>
        <summary type="html"><![CDATA[Intro


When I call another software from Node.js, I use "child_process" like this.
[Windows][Node.js][TypeScript] Get installed printer driver names
"child_process" has four kind of methods(exclude "Sync" mehtods).
exec
execFile
fork
spawn
Because I wanted to know how to use them properly, I will try them.
Node.js ver.16.3.0
ts-node ver.10.0.0
TypeScript ver.4.3.2
According to the documents, they are based on "child_process.spawn()".
import { exec, execFile, fork, spawn } from "child_process";
import path, { resolve } from "path/posix";

function start() {
    spawnSample('powershell',['node', '-v']);
}
function spawnSample(command: string, args: string[]) {
    const execProcess = spawn(command, args);
    console.log('spawn');
    console.log(execProcess.spawnfile);
    execProcess.on('…]]></summary>
        <author>
            <name>Masui Masanori</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[PowerShell Equivalents of Common Bash Commands]]></title>
        <id>https://dev.to/devppratik/powershell-equivalents-of-common-bash-commands-32mo</id>
        <link href="https://dev.to/devppratik/powershell-equivalents-of-common-bash-commands-32mo"/>
        <updated>2021-06-12T14:53:21.000Z</updated>
        <summary type="html"><![CDATA[Hello Everyone👋

Hope this helps. I will make a few more cheat-sheets and dive into the various commands in more detail.
Thanks for reading 🤝🤝
Twitter | LinkedIn | GitHub
Let me know in the comment section if you have any doubt or feedback. Feedback is appreciated!!
See you in my next post!! Stay Safe😷
Happy Learning! 😃😃]]></summary>
        <author>
            <name>Pratik Kumar Panda</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Prefer npm scripts to global commands]]></title>
        <id>https://dev.to/evgenyorekhov/prefer-npm-scripts-to-global-commands-8g3</id>
        <link href="https://dev.to/evgenyorekhov/prefer-npm-scripts-to-global-commands-8g3"/>
        <updated>2021-06-12T13:18:13.000Z</updated>
        <summary type="html"><![CDATA[Define npm scripts in your package.json:
"start": "ember serve",
"test": "ember exam --load-balance --parallel=4",
"lint": "npm-run-all --parallel --aggregate-output lint:**",

and use those scripts, don't use global commands.
Bad: ember test (yes, it's bad even if you see it in the official docs)
Good: npm test
There are several benefits to using npm scripts instead of global commands:
No chance of local vs global package version mismatch that can lead to inexplicable errors
No chance of using the wrong command and/or options (for example, the default command for running tests in Ember projects is ember test, but a project might use ember exam and/or additional options like --load-balance --parallel=4)
No need to remember specific commands for each type of project, because npm start and npm test are standard commands used by virtually every JavaScript project, be it an Ember project, a React project, or an Express project
No need to install global packages, keep track of their versions, and update them
If you really need to run a one-off command, use npx, it will protect you from local vs global package version mismatch (because it uses local package if it detects one):
npx prettier --write .]]></summary>
        <author>
            <name>Evgeny Orekhov</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What's the difference between var, let and const keywords?]]></title>
        <id>https://dev.to/letstechtalks/what-s-the-difference-between-var-let-and-const-keywords-5ape</id>
        <link href="https://dev.to/letstechtalks/what-s-the-difference-between-var-let-and-const-keywords-5ape"/>
        <updated>2021-06-12T13:03:00.000Z</updated>
        <summary type="html"><![CDATA[JavaScript has three ways to declare variables.





var width = 100;
let height = 200;
const key = "Tech Talks";

The scope of a variable defined with the keyword “var” is limited to the “function” within which it is defined.
If it is defined outside any function, the scope of the variable is global.
var is function scoped



Block Example
{
 var a = 10;
 console.log(a);
} //block 1
{
 a++;
 console.log(a);
} //block 2

We are using the keyword var to define the variable a, the scope of a is limited to the function within which it is defined.
Since a is not defined within any function, the scope of the variable a is global, which means that a is recognized within block 2
Function Example
function fun1() {
 var a = 10;
 console.log(a);
} //function scope of fun1

function fun2() {
 a++;
 c…]]></summary>
        <author>
            <name>Ankit Kumar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Implement Copy to Clipboard on a Website]]></title>
        <id>https://dev.to/bibekkakati/how-to-implement-copy-to-clipboard-on-a-website-1p0l</id>
        <link href="https://dev.to/bibekkakati/how-to-implement-copy-to-clipboard-on-a-website-1p0l"/>
        <updated>2021-06-12T12:41:15.000Z</updated>
        <summary type="html"><![CDATA[In this article, we are going to see how we can implement a copy to clipboard functionality on our website. On clicking the Copy button, the content/text of a paragraph tag should be copied to the clipboard which we can paste anywhere in our system.
Let's directly jump onto the code part.
I am assuming you have some basic knowledge of HTML, JavaScript and DOM manipulation.
We will write a very simple HTML code to display the paragraph content and a copy button.
index.html
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Copy To Clipboard</title>
</head>

<body align="center">
    <p id="content">The text to be copied.</p>
    <bu…]]></summary>
        <author>
            <name>Bibek</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[New Beginning...! MERN]]></title>
        <id>https://dev.to/shaileshparmarwebdeveloper/new-beginning-mern-4cin</id>
        <link href="https://dev.to/shaileshparmarwebdeveloper/new-beginning-mern-4cin"/>
        <updated>2021-06-12T12:17:21.000Z</updated>
        <summary type="html"><![CDATA[Hello Readers,
After a long time i am writing on Dev[.]to website,
I have decided to take 100Daysofcode challenge, so it will give motivate me to learn more and improve myself in dev world.
my main goal is to become full-stack developer,
Day 1/100 Days.
Today i have created covid-19 tracker(India) with React, TypeScript, TailwindCss & API.
Hosted on: https://shaileshparmar-webdeveloper.github.io/covid19-tracker-india/
Github: https://github.com/ShaileshParmar-WebDeveloper/covid19-tracker-india]]></summary>
        <author>
            <name>Shailesh Parmar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Reduce load time for Angular Apps]]></title>
        <id>https://dev.to/gourav_gunjan/reduce-load-time-for-angular-apps-2gg0</id>
        <link href="https://dev.to/gourav_gunjan/reduce-load-time-for-angular-apps-2gg0"/>
        <updated>2021-06-12T11:27:52.000Z</updated>
        <summary type="html"><![CDATA[Hi All


Hi Guys, I have created the second post in the series where I talk about boosting performance in Angular. I would really appreciate if your one like or comment can help me reach those who require to know about these topics. Happy Coding!]]></summary>
        <author>
            <name>Gourav Gunjan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Improving security of your apps' source-code in a few minutes]]></title>
        <id>https://dev.to/truelime/improving-security-of-your-apps-source-code-in-a-few-minutes-3nfn</id>
        <link href="https://dev.to/truelime/improving-security-of-your-apps-source-code-in-a-few-minutes-3nfn"/>
        <updated>2021-06-12T10:06:30.000Z</updated>
        <summary type="html"><![CDATA[Introduction 📄


It's a common mistake that every developer tends to make, especially early on: adding secrets to source-control or saving them somewhere else in plain-text. A good example of this is an API key stored in the web.config or settings.json.
Saving secrets as plain-text is a bad-practice can be a security risk. But where should you save your secrets? And how much does it cost to implement an alternative solution?
Azure Key Vault (AKV) is a service provided by Microsoft Azure that lets you store encryption keys, secrets and certificates. AKV can be easily integrated with almost any other service in Azure, but it doesn't stop there. It can easily be integrated in other environments too: local machines, apps, if you want to go crazy you can even use it in an AWS environment.
Make…]]></summary>
        <author>
            <name>Sietse Trommelen</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AdonisJS - Operações CRUD  (Parte 1).]]></title>
        <id>https://dev.to/franciiscocampos170/adonisjs-operacoes-crud-parte-1-3agg</id>
        <link href="https://dev.to/franciiscocampos170/adonisjs-operacoes-crud-parte-1-3agg"/>
        <updated>2021-06-12T09:02:26.000Z</updated>
        <summary type="html"><![CDATA[Olá, hoje quero falar sobre as operações de CRUD do AdonisJS.
AdonisJS é um framework MVC completo para o NodeJS.
Para programadores PHP o AdonisJS é comparado ao Laravel, a sua sintaxe é quase semelhante, sem falar que os dois usam Template Engine.
O AdonisJS é um framework NodeJS e para isso precisamos do NodeJS instalado no nosso computador. Para ser mais especifico, precisamos do NodeJS na versão igual ou superior a 14.15.4 e precisamos também do NPM instalado na versão igual ou superior a 6.0.0.
Você pode criar um novo projecto utilizando o npm init ou yarn create. Os dois comandos vão instalar os pacotes do AdonisJS no seu computador.
Nesse caso vamos usar o NPM.
Vamos abrir o terminal e escrever:
npm init adonis-ts-app@latest crud-operations
Depois de executar o comando no terminal você pode escolher entre 3 opções a sua estrutura de projecto.
web: estrutura de projecto ideal para a criação de aplicações clássicos renderizados para servidores. Nessa selecção vai ser configurado suporte para sessões e também o template engine do AdonisJS


api: estrutura de projecto ideal para criação de um servidor API


slim: estrutura de projecto ideal para criar a menor aplicação AdonisJS possível e não instala nenhum pacote adicional, expecto o núcleo do framework.



Para o nosso projecto vamos selecionar a estrutura API.
Podes ver mais sobre instalação de um projecto AdonisJS aqui.]]></summary>
        <author>
            <name>Francisco Campos</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Branch Protection in GitHub]]></title>
        <id>https://dev.to/ladiesindevops/branch-protection-in-github-5fn9</id>
        <link href="https://dev.to/ladiesindevops/branch-protection-in-github-5fn9"/>
        <updated>2021-06-12T08:53:18.000Z</updated>
        <summary type="html"><![CDATA[Ever been in a position where you wish you could prevent your teammates from merging unapproved code from a development branch to the main branch?
Do you want to prevent merging code which you are not sure of its build status to your main branch?
Recently, I found myself in this situation and I plan to share a concept which helped me out - 'Branch Protection in GitHub'.
Branch protection is the act of setting rules to prevent certain actions from occurring on your branch(es) without your approval.
This article focuses on, preventing branches (development etc) from being merged to the main branch; such that before any merge can occur, a pull request would require a selected reviewer to review the request and then merge the commit.
It is expected that you have prior knowledge of:
  Github
  …]]></summary>
        <author>
            <name>Mbaoma Chioma (Omarrr)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Branch Protection in GitHub]]></title>
        <id>https://dev.to/mbaoma/branch-protection-in-github-32io</id>
        <link href="https://dev.to/mbaoma/branch-protection-in-github-32io"/>
        <updated>2021-06-12T08:37:32.000Z</updated>
        <summary type="html"><![CDATA[Ever been in a position where you wish you could prevent your teammates from merging unapproved code from a development branch to the main branch?
Do you want to prevent merging code which you are not sure of its build status to your main branch?
Recently, I found myself in this situation and I plan to share a concept which helped me out - 'Branch Protection in GitHub'.
Branch protection is the act of setting rules to prevent certain actions from occurring on your branch(es) without your approval.
This article focuses on, preventing branches (development etc) from being merged to the main branch; such that before any merge can occur, a pull request would require a selected reviewer to review the request and then merge the commit.
It is expected that you have prior knowledge of:
  Github
  …]]></summary>
        <author>
            <name>Mbaoma Chioma (Omarrr)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Configure application-specific gestures with Fusuma v2!]]></title>
        <id>https://dev.to/iberianpig/configure-application-specific-gestures-in-fusuma-v2-43p6</id>
        <link href="https://dev.to/iberianpig/configure-application-specific-gestures-in-fusuma-v2-43p6"/>
        <updated>2021-06-12T07:10:49.000Z</updated>
        <summary type="html"><![CDATA[Starting from this article, I will explain how to configure the new features available in Fusuma v2.
Fusuma, multi-touch gestures for Linux, updated to v2!
Kohei Yamada ・ Jun 9 ・ 1 min read
#linux
        #ubuntu
        #ruby
      
So far, Fusuma has only allowed you to set one type of action for a gesture globally.
In this article, we will install fusuma-plugin-appmatcher and configure application-specific settings on Fusuma's config.yml.
Run the following command in a terminal
$ sudo gem install fusuma-plugin-appmatcher

To get application name (WM_CLASS) to specify in config.yml, use $ fusuma-appmatcher -l.
-l option, only foreground application names are retrieved.
$ fusuma-appmatcher -l
discord
Slack
Gnome-terminal
Google-chrome

context: WM_CLASS in config.yml.


To add to the exis…]]></summary>
        <author>
            <name>Kohei Yamada</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hyperconverged Infrastructure Explained]]></title>
        <id>https://dev.to/kelly27473238/hyperconverged-infrastructure-explained-c6j</id>
        <link href="https://dev.to/kelly27473238/hyperconverged-infrastructure-explained-c6j"/>
        <updated>2021-06-12T06:48:28.000Z</updated>
        <summary type="html"><![CDATA[When considering an on-premises or hybrid IT infrastructure, you will no doubt come into contact with the hyperconvergence hype train. Promising reduced costs, greater flexibility, and free puppies for everyone; what is a hyperconverged infrastructure, what are its benefits, and does it deserve a place in your budget?
Traditional 3-Tier Infrastructure
It’s a single box that contains computational resources (processors and memory) and storage resources (hard drives). This is no different to your desktop PC or even your laptop or phone. Everything you need is together in one package. When you scale out your infrastructure this approach becomes inefficient.
You have to worry about managing loads of different pieces of storage in loads of different discrete units. Expansion is limited by the p…]]></summary>
        <author>
            <name>Kelly</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[TryHackMe HTTP in Detail]]></title>
        <id>https://dev.to/applegamer22/tryhackme-http-in-detail-4fcl</id>
        <link href="https://dev.to/applegamer22/tryhackme-http-in-detail-4fcl"/>
        <updated>2021-06-12T06:41:36.000Z</updated>
        <summary type="html"><![CDATA[TryHackMe HTTP in Detail



  
  
  What is HTTP(S)?



  
  
  What does HTTP stand for?


Answer: HyperText Transfer Protocol
Answer: Secure
The page does not support HTTPS, click on the lock next to the page's address.




Flag: THM{INVALID_HTTP_CERT}
GET / HTTP/1.1
Host: tryhackme.com
User-Agent: Mozilla/5.0 Firefox/87.0
Referer: https://tryhackme.com/

HTTP/1.1 200 OK
Server: nginx/1.15.8
Date: Fri, 09 Apr 2021 13:34:03 GMT
Content-Type: text/html
Content-Length: 98

<html>
<head>
    <title>TryHackMe</title>
</head>
<body>
    Welcome To TryHackMe.com
</body>
</html>

Answer: HTTP/1.1
Answer: Content-Length
According to the information provided in the question:
POST Request


This is used for submitting data to the web server and potentially creating new records.
Answer: POST
Accordi…]]></summary>
        <author>
            <name>Omri Bornstein</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A simple but customizable accordion component in Angular]]></title>
        <id>https://dev.to/angular/a-simple-but-customizable-accordion-component-in-angular-ck0</id>
        <link href="https://dev.to/angular/a-simple-but-customizable-accordion-component-in-angular-ck0"/>
        <updated>2021-06-12T06:38:09.000Z</updated>
        <summary type="html"><![CDATA[How to create a super simple accordion component in Angular. Using the power of content projection in Angular, we are going to build an accordion/expansion panel that can be customized in multiple ways.
Accordions in general are vertically stacked lists of headers when clicked reveals some content. Accordions or expandable sections are seen as part of almost all the UI libraries out there.
If we take a look at Angular material, we have Expansion Panel (ref) and in Ng Bootstrap its called simple Accordion (ref).
What we are gonna build is a much simpler version of these. And as always, the whole idea behind this is to help you explore some possibilities of Angular. This blog post would be mostly about how we can use Content Projection (ref) in Angular to create reusable and customizable UI …]]></summary>
        <author>
            <name>Adithya Sreyaj</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A simple but customizable accordion component in Angular]]></title>
        <id>https://dev.to/angular/a-simple-but-customizable-accordion-component-in-angular-ck0</id>
        <link href="https://dev.to/angular/a-simple-but-customizable-accordion-component-in-angular-ck0"/>
        <updated>2021-06-12T06:38:09.000Z</updated>
        <summary type="html"><![CDATA[How to create a super simple accordion component in Angular. Using the power of content projection in Angular, we are going to build an accordion/expansion panel that can be customized in multiple ways.
Accordions in general are vertically stacked lists of headers when clicked reveals some content. Accordions or expandable sections are seen as part of almost all the UI libraries out there.
If we take a look at Angular material, we have Expansion Panel (ref) and in Ng Bootstrap its called simple Accordion (ref).
What we are gonna build is a much simpler version of these. And as always, the whole idea behind this is to help you explore some possibilities of Angular. This blog post would be mostly about how we can use Content Projection (ref) in Angular to create reusable and customizable UI …]]></summary>
        <author>
            <name>Adithya Sreyaj</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Nodejs, How do I wait until the previous post request is completed.]]></title>
        <id>https://dev.to/reachmmadhu/nodejs-how-do-i-wait-until-the-previous-post-request-is-completed-1i0g</id>
        <link href="https://dev.to/reachmmadhu/nodejs-how-do-i-wait-until-the-previous-post-request-is-completed-1i0g"/>
        <updated>2021-06-12T06:34:11.000Z</updated>
        <summary type="html"><![CDATA[How can i make to wait until I get response from the below snippet before moving with the next line. In Nodejs it is executing further lines of code or functions. Here i am calling GetAccessToken() First and then fn1(). IN this case GetAccessToken is not waiting for the response and get executed fn1() later getting the Token Value. Any help on this would be great.
var log = {
    GetAccessToken: function() 
    {
        var https = require('follow-redirects').https;

        var qs = require('querystring');

        var options = {
        'method': 'POST',
        'hostname': 'corpqa.sts.xxxx.com',
        'path': '/adfs/oauth2/token',
        'headers': {
            'Content-Type': 'application/x-www-form-urlencoded'
        },
        'maxRedirects': 20
        };

        var req =  https.request(options, function (res) {
            var chunks = [];

            res.on("data", function (chunk) {
                chunks.push(chunk);   
            });

             res.on("end",  function (chunk) {
                var body = Buffer.concat(chunks);

                console.log(body.toString());        
            });

            res.on("error", function (error) {
                console.error(error);  
            });
            });

        var postData = qs.stringify({
        'grant_type': 'client_credentials',
        'client_id': '0asda7b-a7dc-8582-6b0f-02f6d704d4b0',
        'client_secret': 'm2deXPEvx2sdlRFZtsjkKR_HfDvW5MuDp4',
        'resource': 'urn:webservices:resource:api_webservices:dev',
        'redirect_uri': 'https://xgtwdev.xxxx.com/7777/ssswebsvc/sssdocumentumservicesWeb',        
        'code': '',
        'nonce': 'Nonce Change for each Transaction',
        'state': 'State Change for each Transaction'
        });

        req.write(postData);

        req.end();

    },
    UploadFile:function()
    {
        console.log("Execute UploadFile");
    }
}

module.exports = log]]></summary>
        <author>
            <name>reachmmadhu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learn about developer platforms and tools by taking this survey]]></title>
        <id>https://dev.to/rahul72/learn-about-developer-platforms-and-tools-by-taking-this-survey-5f04</id>
        <link href="https://dev.to/rahul72/learn-about-developer-platforms-and-tools-by-taking-this-survey-5f04"/>
        <updated>2021-06-12T06:28:39.000Z</updated>
        <summary type="html"><![CDATA[Which skills do you think more people should master in software development? Take this survey and spend 15 min answering questions about programming languages, libraries, tools, and platforms. You could win: a MacBook Pro 13 inch, a Samsung Galaxy S21 +Plus, GitKraken Pro license, $200 towards the tool license of your choice, a portable monitor, VIVO standing desk, ELEGOO Mars 3D printer, Raspberry Pi starter kit, Amazon vouchers, and more. Plus you will get the results of the survey and free goody bag with resources to help you learn more about where to invest your time and skills in 2021. The survey closes on August 4th, so don't leave it for later. Join now, it's easy!
https://developereconomics.net?utm_campaign=affiliate&utm_source=website&utm_medium=banne&member_id=KgN1BPYe&lang=en&locale=e]]></summary>
        <author>
            <name>Rahul</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[Discussion] Use a template engine with backend integration instead of a fully-JS UI framework like react or angular?]]></title>
        <id>https://dev.to/pazvanti/discussion-use-a-template-engine-instead-of-a-fully-js-ui-4k84</id>
        <link href="https://dev.to/pazvanti/discussion-use-a-template-engine-instead-of-a-fully-js-ui-4k84"/>
        <updated>2021-06-12T05:09:39.000Z</updated>
        <summary type="html"><![CDATA[Let me start by saying that I am a back-end developer. I do have some experience with front-end technologies, but I can't say that I am capable of a full-stack dev session. With that being said, let me rant a bit.
I find all the JS UI frameworks confusing. There are so many of them, each has its own syntax and structure, many components, and doesn't use "traditional" JS/TS, but many placeholders that get "replaced" later on. I reached this conclusion recently when I started a new project (with a new company) and the UI part was done purely in Angular and the UI communicated with the BE using REST calls. The project had less than a month since it started, so I wasn't quite from the start so I could not impose my view :D
This brings me to my next rant. The UI does soo many calls to the backe…]]></summary>
        <author>
            <name>pazvanti</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is new in nueva]]></title>
        <id>https://dev.to/codingwith3dv/what-is-new-in-nueva-23md</id>
        <link href="https://dev.to/codingwith3dv/what-is-new-in-nueva-23md"/>
        <updated>2021-06-12T04:59:39.000Z</updated>
        <summary type="html"><![CDATA[Hello there,
When I posted it, nueva can only render simple elements like div, p, h1 and others.
But now we can render it as a component. So that we can make it much cleaner and easy to build complex UI's. Check the repo for an example
It is currently on v-0.0.9-full. We can add reactive values and all to the Element.
Check out the project:-
https://github.com/codingwith3dv/nueva
https://npmjs.org/package/nueva
Before you go please try contribute to the project and help it grow.
Thanks for reading till here
🤗🤗🤗]]></summary>
        <author>
            <name>codingwith3dv</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mutable and immutable useRef semantics with React & TypeScript]]></title>
        <id>https://dev.to/wojciechmatuszewski/mutable-and-immutable-useref-semantics-with-react-typescript-30c9</id>
        <link href="https://dev.to/wojciechmatuszewski/mutable-and-immutable-useref-semantics-with-react-typescript-30c9"/>
        <updated>2021-06-12T04:03:28.000Z</updated>
        <summary type="html"><![CDATA[In this post, you will learn how different ways declaring a ref with useRef hook influence the immutability of the current ref property. We will be looking at how to make the current property immutable, mutable, and know without much effort if the ref is one or the other.
All the behavior I'm going to talk about is only relevant in the context of TypeScript. The mutability / immutability is enforced at type level, not runtime level.
current property


The immutable semantics of the useRef hooks are usually used with DOM elements. A common use-case might be to get the ref of an element and focus that element whenever a button is clicked.
Here is how I would write that.
import * as React from "react";

const Component = () => {
  const inputRef = React.useRef<HTMLInputElement>(null);

  retu…]]></summary>
        <author>
            <name>Wojciech Matuszewski</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using Typescript Unions With Never and Extends]]></title>
        <id>https://dev.to/bionicjulia/using-typescript-unions-with-never-and-extends-39ef</id>
        <link href="https://dev.to/bionicjulia/using-typescript-unions-with-never-and-extends-39ef"/>
        <updated>2021-06-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I've reached a point where I'm now really enjoying working with Typescript. I remember one of the senior engineers in my team telling me when I first started that I would find myself being a Typescript convert one day. I didn't really believe it then, as TS seemed to be so much more of a hindrance than help in the early days (it wouldn't even allow me to run my code to debug it!)...but I'm happy to say he was right. ✌🏻
I've reached the tipping point, where it now feels weird to NOT have Typescript switched on for a Javascript repo. There are, for sure, still days when I'm trying to get a specific scenario typed properly and I'm finding it difficult to even know what to Google for... but it gets easier over time as you start to build a bank of knowledge and realise that the same patterns k…]]></summary>
        <author>
            <name>Bionic Julia</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AWS IAM users, groups and roles explained in an airport]]></title>
        <id>https://dev.to/carlosloredo/aws-iam-users-groups-and-roles-explained-in-an-airport-399a</id>
        <link href="https://dev.to/carlosloredo/aws-iam-users-groups-and-roles-explained-in-an-airport-399a"/>
        <updated>2021-06-11T23:54:31.000Z</updated>
        <summary type="html"><![CDATA[First, what is this IAM thing about?


Imagine a really big airport, like Hartsfield–Jackson Airport in Atlanta (U.S) or Beijing International Airport (China) with hundreds of airline offices, a lot of flights arriving and leaving, employees doing their different jobs, and many people going around. Even if we don't know exactly how everything works in an airport, we can be sure that it works.

Well, to understand Identity access management (IAM) we can think of Amazon Web Services (AWS) as a big Airport with hundreds of services (airlines), traffic between services (flights), and many users with different roles taking advantage of cloud services (people).



I think that we've all been to the airport at least one time, right? Well, I don't know if you noticed but in airports, there is a co…]]></summary>
        <author>
            <name>Carlos Loredo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript Quick Tip: Quickly Filter Out All Falsy Values From An Array]]></title>
        <id>https://dev.to/oliverjumpertz/javascript-quick-tip-quickly-filter-out-all-falsy-values-from-an-array-4bcj</id>
        <link href="https://dev.to/oliverjumpertz/javascript-quick-tip-quickly-filter-out-all-falsy-values-from-an-array-4bcj"/>
        <updated>2021-06-11T23:37:23.000Z</updated>
        <summary type="html"><![CDATA[Working with arrays in a functional way has mostly become the default when working with JavaScript these days. Why should you use a traditional imperative loop, like for, for..of, while, do..while, etc., when you can use map, filter, and forEach?
These functional methods have one caveat, though: You can never throw from them without aborting the whole pipeline.
someArray.map((value) => {
  if (someConditionMet) {
    throw new Error('...'); // this is not the best idea...
  }
  // ...
  return someValidValue;
});

So what do you do then? Well, you can return null to mark that you have an invalid result.
someArray.map((value) => {
  if (someConditionMet) {
    return null; // now the pipeline can continue
  }
  // ...
  return someValidValue;
});

That's fine. If you don't want your pipelin…]]></summary>
        <author>
            <name>Oliver Jumpertz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is a Disaster Recovery Plan? How to Use RTO and RPO to Protect your Business]]></title>
        <id>60b72d5facb62507dd1d777b</id>
        <link href="https://www.freecodecamp.org/news/disaster-recovery-plan-what-are-rto-and-rpo/"/>
        <updated>2021-06-11T22:56:56.000Z</updated>
        <summary type="html"><![CDATA[If you're in the world of tech, you will inevitably run into a work-related disaster now and then. These setbacks come in many forms such as cyber-attacks, theft, leaks, and corruption. And every business must be ready to face these things and plan for them. Sir Benjamin Franklin famously said,]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Security news weekly round-up - 11th June 2021]]></title>
        <id>https://dev.to/ziizium/security-news-weekly-round-up-11th-june-2021-5725</id>
        <link href="https://dev.to/ziizium/security-news-weekly-round-up-11th-june-2021-5725"/>
        <updated>2021-06-11T21:59:45.000Z</updated>
        <summary type="html"><![CDATA[3 weeks on the bounce!, for the first time this year 2021. Let's go!
This week it's mostly about malware and bugs, and one news about data theft. Without no further ado, let's begin.
Mystery malware steals 26M passwords from millions of PCs. Are you affected?


I know, it's terrifying!.
Excerpt from the article:
The stash also included over 1 million images and more than 650,000 Word and .pdf files. Additionally, the malware made a screenshot after it infected the computer and took a picture using the device’s webcam. Stolen data also came from apps for messaging, email, gaming, and file-sharing. The data was extracted between 2018 and 2020 from more than 3 million PCs.
Hackers can mess with HTTPS connections by sending data to your email server


HTTP is not secure, well, now, HTTPS is un…]]></summary>
        <author>
            <name>Habdul Hazeez</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ransomware: What is it and how do you avoid becoming a victim?]]></title>
        <id>https://dev.to/leading-edje/ransomware-what-is-it-and-how-do-you-avoid-becoming-a-victim-5glc</id>
        <link href="https://dev.to/leading-edje/ransomware-what-is-it-and-how-do-you-avoid-becoming-a-victim-5glc"/>
        <updated>2021-06-11T21:48:41.000Z</updated>
        <summary type="html"><![CDATA[The landscape of malware has shifted dramatically in the past decade or so. Computer viruses that were developed to wreak havoc on companies and individuals by self-replicating, and slowing down or wiping out systems have evolved into big business. Not to diminish the severity of these types of malware, some of them caused billions of dollars in damage. However, the cost of these early viruses usually came in the form of lost revenue due to downtime while the systems were repaired, along with the hit to a company's reputation and customer confidence. Many also resulted in stolen data, leading to compromised credentials and identity theft. But more and more, attackers are shifting to a different type of malware for their attacks. Ransomware isn't a new type of virus. The first known variant…]]></summary>
        <author>
            <name>Andy Kofod</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Interview Scheduling Solutions with Spurwing API]]></title>
        <id>https://dev.to/spurwing/interview-scheduling-solutions-with-spurwing-api-4nk2</id>
        <link href="https://dev.to/spurwing/interview-scheduling-solutions-with-spurwing-api-4nk2"/>
        <updated>2021-06-11T21:41:04.000Z</updated>
        <summary type="html"><![CDATA[The Covid-19 pandemic has turned the job market inside out. It's now easier, and in some cases more profitable, for people to stay at home and look for a job. So the faster you can bring great talent onto your team, the better.
Speed and organization are necessary to keep a good applicant from slipping through the cracks. How are you going to meet that standard if your company receives hundreds of applications a day? 
scheduling API with an Applicant Tracking System (ATS).

An applicant tracking system is software used by human resources that acts as a database for job applicants. They're one of those hot little items that are becoming the norm for today's HR teams. They allow companies of all sizes to organize, search, and communicate with large groups of applicants.
If it's your job to b…]]></summary>
        <author>
            <name>Spurwing</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Safari 15: New UI, Theme Colors, and… a CSS-Tricks Cameo!]]></title>
        <id>https://css-tricks.com/?p=342429</id>
        <link href="https://css-tricks.com/safari-15-new-ui-theme-colors-and-a-css-tricks-cameo/"/>
        <updated>2021-06-11T21:38:48.000Z</updated>
        <summary type="html"><![CDATA[There’s a 33-minute video (and resources) over on apple.com covering the upcoming Safari changes we saw in the WWDC keynote this year in much more detail. Look who’s got a little cameo in there:
Perhaps the most noticeable thing there …
The post Safari 15: New UI, Theme Colors, and… a CSS-Tricks Cameo! appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Possibilities of Syndication]]></title>
        <id>https://css-tricks.com/?p=342237</id>
        <link href="https://css-tricks.com/the-possibilities-of-syndication/"/>
        <updated>2021-06-11T21:25:56.000Z</updated>
        <summary type="html"><![CDATA[That’s the one word that isn’t an adjective in the acronym RSS. 
Really Simple Syndication.
RSS isn’t just about RSS readers. Even though, gosh if I don’t love RSS readers. It’s about putting content in a format that is …
The post The Possibilities of Syndication appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSP - Content Security Policy]]></title>
        <id>https://dev.to/jordanfinners/csp-content-security-policy-d3c</id>
        <link href="https://dev.to/jordanfinners/csp-content-security-policy-d3c"/>
        <updated>2021-06-11T21:10:25.000Z</updated>
        <summary type="html"><![CDATA[Contents



 Intro

 Directives

 Values

 Summary




  
  
  Intro 


Lastly but by no means least, carrying on from my previous blog about website security week, we're going to talk about CSP or Content Security Policy.
CSP is Content Security Policy this is one of the most powerful tools in your arsenal to secure your website.
These are two ways to to set your content security policy, either as a header Content-Security-Policy or via a meta tag in your HTML for example:
<meta http-equiv="Content-Security-Policy" content="default-src 'none'; img-src https://google.com; child-src 'none';">




The content policy is made up of directives (the thing to restrict) and the value(s) on how it can be restricted. We won't cover all all the possible directives in this blog but you can find a list…]]></summary>
        <author>
            <name>Jordan Finneran</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Center Anything in CSS Using Flexbox and Grid ✨]]></title>
        <id>6063b9189618b008528a9d81</id>
        <link href="https://www.freecodecamp.org/news/how-to-center-objects-using-css/"/>
        <updated>2021-06-11T20:40:17.000Z</updated>
        <summary type="html"><![CDATA[Today I'm gonna show you how you can center and align your content with CSS. Along the way, we'll look at various alignment techniques. So, let's get started! 🥇 Table of Contents -> How to Use Flexbox to center anything horizontally center anything vertically center both horizontally & Vertically How]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[My Completely Biased Reasons for Choosing Angular]]></title>
        <id>https://dev.to/johnbwoodruff/my-completely-biased-reasons-for-choosing-angular-1hbg</id>
        <link href="https://dev.to/johnbwoodruff/my-completely-biased-reasons-for-choosing-angular-1hbg"/>
        <updated>2021-06-11T20:14:48.000Z</updated>
        <summary type="html"><![CDATA[I wanted the title to be painfully obvious. Just in case that didn't make it obvious enough, let me be even more clear. This is my completely biased opinion. You possibly vehemently disagree with me on this, and that's okay. This is not a post to try to claim Angular is better than React or Vue or Svelt or whatever other framework you're in love with. It's literally a post talking about why I, John Woodruff, choose to use Angular in personal projects small and large. Honestly, I'm not even trying to convince you to use Angular. In fact, my honest advice for picking a framework for a project is to pick the one you know the best, so you can be as productive as possible. So let's get all that out of the way up front, and dive into my heavily biased reasons for choosing Angular for personal pr…]]></summary>
        <author>
            <name>John Woodruff</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Node URL Shortener]]></title>
        <id>https://dev.to/pinceladasdaweb/node-url-shortener-4234</id>
        <link href="https://dev.to/pinceladasdaweb/node-url-shortener-4234"/>
        <updated>2021-06-11T19:49:08.000Z</updated>
        <summary type="html"><![CDATA[I recently ended up creating a URL shortener using NodeJS, Fastify, Postgres and Redis for study purposes. If you think it might be useful for you, if only for study purposes too, come take a look: 
https://github.com/pinceladasdaweb/node-url-shortener]]></summary>
        <author>
            <name>Pedro Rogério</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Move commits from one branch to another]]></title>
        <id>https://dev.to/pranav2612000/move-commits-from-one-branch-to-another-fil</id>
        <link href="https://dev.to/pranav2612000/move-commits-from-one-branch-to-another-fil"/>
        <updated>2021-06-11T19:33:18.000Z</updated>
        <summary type="html"><![CDATA[Scenario:


You encountered a production issue. Immediately you stopped doing whatever you were working on and started fixing the bug. After fixing the bug you observe that you fixed the bug on a different branch. Now you want to move a certain number of commits from a branch A to branch B.
To move a small number of commits from A to B, use the git cherry-pick command
Say, you have the following branches
P ----- Q ----- R ------ S
F ----- G ----- H
(Note: P, Q, R, S, F, G, H are all commit hashes/ids)
and you want to move commits Q & R to B(in front of H). You can do the following by
git checkout branchB
git cherry-pick Q
git cherry-pick R

This will result in
Branch B
F ----- G ----- H ----- Q ----- R
Basically, we first checkout to the branch where we want to add the commits, and cherry-pick the commits we want to move, in the order in which they appear in the first branch. Ensuring that the commits being cherry-picked are in sequential order is important or can result in complications.
Like I said, this method works if the number of commits is small, but to move a large number of commits we can use a better method
git checkout <branchname where commits are to be moved>
git rebase --onto <SHA of most recent commit in branchB> <SHA of the commit before the commit that is to be moved> <SHA of the last commit that is to be moved>
git rebase HEAD <branchname where commits are to be moved>

So, for the above example - moving Q & R to branch B, the commands would be
git checkout branchB
git rebase --onto H P R
git rebase HEAD branchB

These two tricks should be enough for moving commits between branches.
To read more of such git tips visit my blog - https://pranavjoglekarcodes.web.app/blogs/posts/2021/git_tricks_1/]]></summary>
        <author>
            <name>Pranav Joglekar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Design Keyboard Accessibility for Complex React Experiences]]></title>
        <id>5f9c97e9740569d1a4ca1768</id>
        <link href="https://www.freecodecamp.org/news/designing-keyboard-accessibility-for-complex-react-experiences/"/>
        <updated>2021-06-11T19:10:00.000Z</updated>
        <summary type="html"><![CDATA[How you can design an inclusive and accessible org chart experience and solutions to common development challenges you will face.]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Real-World Angular Ivy Upgrade (v9-next)]]></title>
        <id>https://dev.to/ngconf/real-world-angular-ivy-upgrade-v9-next-9cn</id>
        <link href="https://dev.to/ngconf/real-world-angular-ivy-upgrade-v9-next-9cn"/>
        <updated>2021-06-11T19:02:47.000Z</updated>
        <summary type="html"><![CDATA[Jared Youtsey | ng-conf | Oct 2019
I recently published an article about the compatibility opt-in preview version of Ivy in version 8 and what I experienced attempting to upgrade. This is a follow-on to show what the current upgrade path looks like using Angular v9.0.0-next.6 pre-beta, which contains optimizations for bundle size and performance as well as some bug fixes that were not present in v8’s preview.
As a reminder, Ivy is not ready for production. This is still a compatibility opt-in preview. Use at your own risk. Your mileage may vary.
I’ll be upgrading a large commercial application that leverages many third-party dependencies and a wide gamut of the Angular framework.
The initial step is to upgrade Angular:
ng update @angular/cli@next @angular/core@next

On first attempt I ran …]]></summary>
        <author>
            <name>ng-conf</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[TS-Function-Returns]]></title>
        <id>https://dev.to/jsinkler713/ts-function-returns-5anf</id>
        <link href="https://dev.to/jsinkler713/ts-function-returns-5anf"/>
        <updated>2021-06-11T18:18:33.000Z</updated>
        <summary type="html"><![CDATA[Is it one drink or two?

Photo by Nathan Dumlao on Unsplash
The beauty of typescript is supposed to be safety. But safety is hard to achieve and at some point typescript may not let you do something that you can tell will work.
This is good. It will make you write a bit more code to explain yourself to typescript.
Let's say you want to write a function that can take 2 arguments, and return an array between those two values.
range(3, 5) // returns [3, 4, 5]

So far this is not too dificult with typescript. Let's make a little for loop to do it.
function range(start: number, end: number): number[] {
  let newArr: number[] = [start]
  for (let i=start+1; i<= newEnd; i++) {
    newArr.push(i)
  }
  return newArr
}

To break it down this is a function which has takes two arguments, and we are u…]]></summary>
        <author>
            <name>James Sinkler</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Ask Good Technical Questions – the Ultimate Guide]]></title>
        <id>60bc0444acb62507dd1d9a31</id>
        <link href="https://www.freecodecamp.org/news/how-to-ask-good-technical-questions/"/>
        <updated>2021-06-11T17:39:28.000Z</updated>
        <summary type="html"><![CDATA[Knowing how to ask effective technical questions is an essential skill every software engineer should have.  You may be stuck with a bug, unable to figure out why your program isn't working correctly, or you might be having trouble learning how to implement a certain algorithm. In all of these]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Introduction to Azure Bicep v 0.4.x]]></title>
        <id>https://dev.to/omiossec/azure-bicep-v-0-4-x-1lim</id>
        <link href="https://dev.to/omiossec/azure-bicep-v-0-4-x-1lim"/>
        <updated>2021-06-11T17:19:28.000Z</updated>
        <summary type="html"><![CDATA[Azure Bicep is the new domain-specific language to deploy your resources in Azure using a declarative syntax. The main difference with ARM templates, Bicep uses a more concise syntax and helps you to scale your deployment without having to pull out your hairs. 
Bicep Doc in Microsoft Doc and Microsoft Learn
One of the big changes, Bicep is no longer only present on GitHub. Bicep is now present on Microsoft Doc.
Microsoft Learn 
Installation
You can install Bicep by using Howbrew on MacOs, by Windows Installer or Chocolatey on Windows, or by downloading the binary files on Linux. 
az bicep install

If you want to upgrade your current installation, you can use
az bicep upgrade

But if you use Azure CLI to install bicep, it will not update PATH, so you will need to do it manually after. 
A Po…]]></summary>
        <author>
            <name>Olivier Miossec</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Use Utility Types for Transforming TypeScript Types]]></title>
        <id>https://dev.to/saranshk/how-to-use-utility-types-for-transforming-typescript-types-42nf</id>
        <link href="https://dev.to/saranshk/how-to-use-utility-types-for-transforming-typescript-types-42nf"/>
        <updated>2021-06-11T17:15:59.000Z</updated>
        <summary type="html"><![CDATA[TypeScript provides some built-in utility types that help facilitate transformations of types from one form to another.
These utilities are available globally. They can be quite handy in various situations.
Before understanding the TypeScript utility types, it is important to understand type aliases and generics. You can create type aliases for any existing type in TypeScript.
type MyString = string;

let helloWorldMessage: MyString = 'Hello Wisdom Geek';

Type generics are used to create reusable type aliases. Let us say we had an identity function which returns whatever value is passed back in:
Type generics are used to create reusable type aliases. Let us say we had an identity function which returns whatever value is passed back in:
const identity = (arg: string): string => arg;

What …]]></summary>
        <author>
            <name>saransh kataria</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kali Linux 2021.2 Review and What's New?]]></title>
        <id>https://dev.to/mbcrump/kali-linux-2021-2-review-and-what-s-new-49e2</id>
        <link href="https://dev.to/mbcrump/kali-linux-2021-2-review-and-what-s-new-49e2"/>
        <updated>2021-06-11T17:15:27.000Z</updated>
        <summary type="html"><![CDATA[Hello everyone, 
Kali Linux is geared for users who aim to meet the requirements of professional penetration testing and security auditing. It is completely free and has many amazing new features. Recently, Kali Linux 2021.2 was released. You can upgrade an existing install or start a new install. 
Several notable new items that I wanted to call out in this release are: 
Releasing Kaboxer v1.0 - Introducing Kali Applications Boxer v1.0! Applications in containers
Releasing Kali-Tweaks v1.0 - Our way to make it easier to configure Kali Linux to your taste
Disabled privileged ports - Opening a listener on ports 1024/TCP-UDP and below no longer requires super-user access
Theme enhancements - We added a way to quickly swap between double & one-line terminal prompt and made Xfce4 Quick launch + file manager tweaks
Desktop wallpaper & login background updates - Default images have changed with more to choose from
Parallels support - Kali is fully supported for Apple M1 users who have Parallels
I have created a video to show you all of this awesome stuff together! 
Video (24 mins)




Conclusion
Stay tuned for future Twitch streams as we learn about security and app development or you can watch the condensed version by subscribing to my YouTube. 
Stay connected with me on social platforms for daily software development news.
-Twitter | Twitch | Instagram | YouTube | GitHub | Website]]></summary>
        <author>
            <name>Michael Crump</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Creating a custom Array.prototype.filter in javascript]]></title>
        <id>https://dev.to/pazfelipe/creating-a-custom-array-prototype-filter-in-javascript-2nkc</id>
        <link href="https://dev.to/pazfelipe/creating-a-custom-array-prototype-filter-in-javascript-2nkc"/>
        <updated>2021-06-11T17:09:59.000Z</updated>
        <summary type="html"><![CDATA[Javascript is a prototype-based language. It means that every native function can receive custom functions or having its original functions modified.
In this article, we will create a custom filter function. For who doesn't know, the filter function is an array prototype function that returns all elements that match against the callback passed as argument. For more information about filter you can check the MDN Doc.
So, without further ado, let's code!
const data = [1, 2, 3, 4, 5];

Array.prototype.myCustomFilter = function (fn) {
  const filtered = []; // it will receive all values that match to condition passed in fn callback.

  for (let i = 0; i < this.length; i++) {
    if (fn(this[i])) {
      filtered.push(this[i]);
    }
  }

  return filtered;
};

const filteredData = data.myCusto…]]></summary>
        <author>
            <name>Felipe Paz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript Quick Tip: Make Function Arguments Required With Default Parameters]]></title>
        <id>https://dev.to/oliverjumpertz/javascript-quick-tip-make-function-arguments-required-with-default-parameters-4bbm</id>
        <link href="https://dev.to/oliverjumpertz/javascript-quick-tip-make-function-arguments-required-with-default-parameters-4bbm"/>
        <updated>2021-06-11T16:24:16.000Z</updated>
        <summary type="html"><![CDATA[Have you ever written code like this?
const myFunction = (argument) => {
  if (argument == null) {
    throw new Error('argument is a required argument');
  }
}

Guarding against invalid arguments is perfectly fine. It's way better than failing at some random point in your function with a usually pretty obscure error message. But writing guard statements over and over again can bloat code pretty fast.
You could, of course, write a helper function for this, like the one below, which is already better.
const assertPresent = (value, name) => {
  if (value == null) throw new Error(`${name} is a required argument`);
};

You can then assert the presence of a parameter on the first lines of your function like this:
const myFunction = (argument) => {
  assertPresent(argument, 'argument');
  // fur…]]></summary>
        <author>
            <name>Oliver Jumpertz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Level Up Your React Conditionals]]></title>
        <id>60c24cf8d3126007592d61d5</id>
        <link href="https://www.freecodecamp.org/news/learn-react-conditionals/"/>
        <updated>2021-06-11T16:04:46.000Z</updated>
        <summary type="html"><![CDATA[Do you write conditionals correctly within your React applications?  Good conditionals are an essential part of any React application. We use conditionals to show or hide elements or components in our applications.  In short – to be an effective React developer, you must know how to write good conditionals. Let's go]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A dashboard service for quality control of client projects]]></title>
        <id>https://dev.to/evrone/a-dashboard-service-for-quality-control-of-client-projects-3opb</id>
        <link href="https://dev.to/evrone/a-dashboard-service-for-quality-control-of-client-projects-3opb"/>
        <updated>2021-06-11T15:35:46.000Z</updated>
        <summary type="html"><![CDATA[Even before the widespread introduction of CI/CD practices and various manifestos for quality development, we committed ourselves to making sure that every project was successful.
To do this, we strove to be early birds in the development world. We introduced new methodologies and were the first to try promising tools and offer them to our clients. To prevent the quality of work from suffering during our expansion, we decided to develop an internal product development metrics dashboard for controlling the quality of projects.
In six months, we developed a Ruby on Rails application called Pulse: a quality management dashboard that displayed all current projects and their statuses on one screen.]]></summary>
        <author>
            <name>Evrone</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Automatización de pruebas en Angular con GitHub Actions]]></title>
        <id>https://dev.to/angelxehg/automatizacion-de-pruebas-en-angular-con-github-actions-53e5</id>
        <link href="https://dev.to/angelxehg/automatizacion-de-pruebas-en-angular-con-github-actions-53e5"/>
        <updated>2021-06-11T15:11:59.000Z</updated>
        <summary type="html"><![CDATA[Conforme un producto de software crece, también suele incrementar el número de pruebas unitarias que se deben ejecutar. Existen varias soluciones para automatizar la ejecución de pruebas y una de ellas es GitHub Actions. A continuación explicaré como configurarlo en un proyecto de Angular.
Primero crearemos un proyecto Angular en blanco. Es necesario instalar la ultima versión de Angular CLI, la cual podemos instalar o actualizar con el siguiente comando.
npm i @angular/cli -g # Instalación global

Ahora podemos crear nuestro proyecto con el siguiente comando
ng new ghactions-angular # Cambia ghactions... por el nombre de tu proyecto

Escoge las opciones de Angular Router y de formato de hojas de estilo que más te convengan. En mi caso si utilizaré Angular Router y SCSS como formato de hoj…]]></summary>
        <author>
            <name>Angel Hurtado</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Web Design Done Well: Making Use Of Audio]]></title>
        <id>https://smashingmagazine.com/2021/06/web-design-done-well-audio/</id>
        <link href="https://smashingmagazine.com/2021/06/web-design-done-well-audio/"/>
        <updated>2021-06-11T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[Design often revolves around visuals, but the other senses deserve love too. In this article, we tune in to audio features that are making sites sing.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Frederick O’Brien)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to melt your processor]]></title>
        <id>https://dev.to/adam_cyclones/how-to-melt-your-processor-227h</id>
        <link href="https://dev.to/adam_cyclones/how-to-melt-your-processor-227h"/>
        <updated>2021-06-11T14:30:31.000Z</updated>
        <summary type="html"><![CDATA[Recently I have been building a software development lifecycle for Java RhinoJS, enhanced with Typescript backend.
We write JavaScript and get .ts feedback, its a nice middle-ground, I have never considered, I want the benefits of TS without the overhead of scaring others who don't know it (know your audience of developers).
In our product, we have some java classes injected into Rhino, and so I want type defs for when I write unit tests in our Mocha like Rhino framework. 
jar tf TicTacToe.jar to get the contents, aka the com.path.to.Class structure in slash format
I do some string transforms to stdout and write all possilbe 
.class files to a ts file.
I got 380000 classes in a type myLib
:) fun]]></summary>
        <author>
            <name>Adam Crockett</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Adding Shadows to SVG Icons With CSS and SVG Filters]]></title>
        <id>https://css-tricks.com/?p=342164</id>
        <link href="https://css-tricks.com/adding-shadows-to-svg-icons-with-css-and-svg-filters/"/>
        <updated>2021-06-11T14:30:29.000Z</updated>
        <summary type="html"><![CDATA[Why would we need to apply shadows to SVG?
Shadows are a common design feature that can help elements, like icons, stand out. They could be persistent, or applied in different states (e.g. :hover, :focus, or :active) 
…
The post Adding Shadows to SVG Icons With CSS and SVG Filters appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Joel Olawanle</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[🤖 Dependable and Secure Realtime in Spring Boot with Auth0 and Ably]]></title>
        <id>https://dev.to/robertinoc_dev/dependable-and-secure-realtime-in-spring-boot-with-auth0-and-ably-1o6m</id>
        <link href="https://dev.to/robertinoc_dev/dependable-and-secure-realtime-in-spring-boot-with-auth0-and-ably-1o6m"/>
        <updated>2021-06-11T11:35:22.000Z</updated>
        <summary type="html"><![CDATA[📕 Learn how to build a realtime chat application with Spring Boot, Auth0 and Ably.


When developing a service, one of the main hurdles to consider is authentication. For every action, you’ll need to both authorize the user (check they are who they say they are) and then ensure they can only do actions which they have permission to do.
Auth0, an authentication and authorization platform, simplifies this process immensely. Not only does it allow for easy integration with your own login systems, it makes integrating other login services such as Google and Twitter simple. It allows for a simple setup of permissions, roles with set permissions attached, and for these roles to be assigned to users. These users can then make use of various login systems to access the same account and thus have the same permissions associated with them.
With Spring Boot, this is extremely powerful, partially due to the strong integration of Auth0 with it. A simple redirect to an Auth0 login page will return a token which a Spring Boot server can use to verify the user and access their associated permissions.
This token can then be used to correctly generate access to other services. For example, Ably, a real-time communications solution, makes use of tokens to authenticate with an Ably App. Once a user has authenticated with Auth0 and has an Auth0 token, they can use this to request a token from a Spring Boot server to authenticate directly with Ably, with the appropriate permissions and access granted.
In this tutorial, we’ll be going through the basics of setting up an interoperating system as described above. The actual service we’ll be providing is a chat application, which will:
Allow users to sign in using a Google account
Signed in users will be able to publish messages to a group chat
Non-signed in users will be able to subscribe and read messages published
Users will be able to see who is online in the chat
Users will, when joining, be able to load the last 20 messages of conversation they’ve missed
Read more...]]></summary>
        <author>
            <name>Robertino</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Get your battery capacity in Linux with Node]]></title>
        <id>https://dev.to/aminnairi/get-your-battery-capacity-in-linux-with-node-4m95</id>
        <link href="https://dev.to/aminnairi/get-your-battery-capacity-in-linux-with-node-4m95"/>
        <updated>2021-06-11T10:44:53.000Z</updated>
        <summary type="html"><![CDATA[Getting your battery capacity in GNU/Linux is pretty simple since it does not rely on any third-party libraries or programs. You can just read it directly from a file. Using Node, this operation gets very trivial and can be as simple as below.
$ touch index.js

const {promises: {readFile}} = require("fs");

const append =
  newString =>
    string =>
      `${string}${newString}`;

const trim =
  string =>
    string.trim();

const main = async () => {
  const capacity =
    "/sys/class/power_supply/BAT0/capacity";

  const battery =
    await readFile(capacity)
      .then(String)
      .then(trim)
      .then(append("%"))
      .catch(() => "No battery");

  console.log(battery);
};

main();

$ node index.js
34%]]></summary>
        <author>
            <name>Amin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What stack did we choose For Our Next Project!!!]]></title>
        <id>https://dev.to/priyanshubelwal/how-did-we-choose-vuejs-for-our-next-project-2lg0</id>
        <link href="https://dev.to/priyanshubelwal/how-did-we-choose-vuejs-for-our-next-project-2lg0"/>
        <updated>2021-06-11T10:25:56.000Z</updated>
        <summary type="html"><![CDATA[I started learning React 1 year ago. There was only one thing in my mind How Awesome is React.
Gradually I started thinking about my own website and came over an idea to launch a website, where I can share some technical stuff among people.
I started thinking and thinking🤔 about its architecture (Obviously I am not an architect🤪).
I got some options like ReactJS (Or NextJS), Angular, VueJS or Plain HTML-CSS-JS. Now it was totally on me, which one should I choose, obviously it was going to affect my audience and performance of website too.
I was also aware about the SEO part,🥰 obviously how could I forgot that, because that was the entrypoint of my orgaic readers.
Finally I had these options:
Angular
React (Or NextJS)
VueJS (Or NuxtJS)
Now I compared all of these and found something in Angular and React, which does not fits to my requirements.
Angular Too Hactic🤯
React Server Side Rendering was complex to achieve for a production grade application.😩
NextJS Server Side Rendering was supported, but deployment on personal server was removing some important features.😡
Now the last one
VueJS  I explored VueJS and found that there is a awesome framework on the top of Vue, NuxtJS. I explored it more and more and found these keypoints:
Server Side Rendering Support
Built on Top of VueJS
Lightweight
Can be deployed to own servers, without any performance loss
Open Source
Lot of Options For handling SEO
At this point, I had no doubts & no questions. I had decided that I will go with NuxtJS and create this awesome site.
Now its been 1 month passed, everything is running fine and smoothly with NuxtJS.
Hashcodec.com now. We are planning to launch it on 01st June 2021.
Thanks For Reading This Guys.😇
Don't forgot to visit our website Hashcodec.com

Suggestions are welcome and appreciated.]]></summary>
        <author>
            <name>Priyanshu Belwal</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AWS Systems Manager Session Manager implementation]]></title>
        <id>https://dev.to/aws-builders/aws-systems-manager-session-manager-implementation-f9a</id>
        <link href="https://dev.to/aws-builders/aws-systems-manager-session-manager-implementation-f9a"/>
        <updated>2021-06-11T10:06:05.000Z</updated>
        <summary type="html"><![CDATA[Session Manager Overview
Session Manager is a fully managed AWS Systems Manager capability that lets you manage your Amazon EC2 instances through an interactive one-click browser-based shell or through the AWS CLI.


Session Manager provides secure and auditable instance management without the need to open inbound ports, maintain bastion hosts, or manage SSH keys.


Session Manager also makes it easy to comply with corporate policies that require controlled access to instances, strict security practices, and fully auditable logs with instance access details, while still providing end users with simple one-click cross-platform access to your Amazon EC2 instances.



Architecture


How Session Manager works
Admin users are authenticated through IAM roles and policies.
If authentication is su…]]></summary>
        <author>
            <name>Arun Kumar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Boosting Performance of Angular App]]></title>
        <id>https://dev.to/gourav_gunjan/boosting-performance-of-angular-app-1m6f</id>
        <link href="https://dev.to/gourav_gunjan/boosting-performance-of-angular-app-1m6f"/>
        <updated>2021-06-11T08:03:35.000Z</updated>
        <summary type="html"><![CDATA[Hi All,
I have started a new series on channel to go through different aspects of performance tuning in Angular. Would need your feedback and help to create useful content for people. Please watch the video and let me know your thoughts.]]></summary>
        <author>
            <name>Gourav Gunjan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Deno Vs Node.js- A Comparison You Need To Know]]></title>
        <id>https://dev.to/ltdsolace/deno-vs-node-js-a-comparison-you-need-to-know-41h0</id>
        <link href="https://dev.to/ltdsolace/deno-vs-node-js-a-comparison-you-need-to-know-41h0"/>
        <updated>2021-06-11T07:39:10.000Z</updated>
        <summary type="html"><![CDATA[If you are using Node.js but don’t like its package manager npm, or want a more secure Javascript runtime environment than Node.js, then Deno is for you. It is a program for running Javascript and Typescript code outside of a browser. It is an attempt to reimagine Node.js with the advances in Javascript since 2009, including Typescript compiler. Like Node.js, Deno is basically a shell around the Google V8 JavaScript engine, although dissimilar to Node.js it includes the TypeScript compiler for its executable image. If you are still confused between Deno and Node.js, then this article is for you. Here we’ll discuss the comparison of Deno and Node.js. But before digging to the comparison let’s see the overview of each one.
It executes Typescript and JavaScript to asynchronous desktop servers and apps. Deno is the new implementation which uses modern features of JS language. It is a secure runtime for Typescript and Javascript that uses Google’s V8 and core is built in Rust. Here are some of the advantages of Deno.
Benefits Of Deno-
Supports Typescript
Uses a single executable file
It has a well designed module system
Built-in dependency inspector
It has a code formatter
It takes care of security
Node.js is a server-side javascript environment, based on Google’s JS engine. It is focused on the event-driven HTTP servers. Node.js is an easy-to-built platform which is a scalable and fast network application. It has an event-driven I/O model and non-blocking Node.js which makes it highly efficient. Also, it is a great solution for data-intensive and real-time apps that can run on distributed devices.       
Know the amazing new features of Node.js 16 at- What’s New In Node.js 16?           
Benefits Of Node.js-
Highly extensible
Offers easy scalability
Can catch single modules
1. Language Support-
Deno-
Node.js-
2. Package Management-
https://solaceinfotech.com/blog/deno-vs-node-js-a-comparison-you-need-to-know/]]]></summary>
        <author>
            <name>Solace Infotech Pvt. Ltd.</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Need guidance with securing the REST API from DDoS]]></title>
        <id>https://dev.to/gauravchandra/need-guidance-with-securing-the-rest-api-from-ddos-ljp</id>
        <link href="https://dev.to/gauravchandra/need-guidance-with-securing-the-rest-api-from-ddos-ljp"/>
        <updated>2021-06-11T07:25:37.000Z</updated>
        <summary type="html"><![CDATA[Hi community. I am planning to build my own product which would have the functionality exposed as a REST API for others to consume and I am looking to secure my API against DDoS. 
I am thinking of creating the REST API in PHP but I can go with Firebase also for Serverless Architecture, if the cost is not going to be exorbitant in the long run and the Firebase Functions are secured automatically against DDoS.
Can anybody give me some pointers? Thanks.]]></summary>
        <author>
            <name>Gaurav Chandra</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript news weekly article for June 2021 2nd week]]></title>
        <id>https://dev.to/pratik240895/javascript-news-weekly-article-for-june-2021-2nd-week-8m2</id>
        <link href="https://dev.to/pratik240895/javascript-news-weekly-article-for-june-2021-2nd-week-8m2"/>
        <updated>2021-06-11T06:43:23.000Z</updated>
        <summary type="html"><![CDATA[This week highlight is: 
Integrate face, hand tracking to frontend
The Plan for React 18
History of Angular with Misko Hevery
4.JavaScript quiz to test your knowledge 
Check the link for more
https://thearrowfn.com/javascript-news-2nd-weekjun-integrate-face-hand-tracking-frontend-javascript-quiz-to-test-your-knowledge/]]></summary>
        <author>
            <name>Pratik P. Sanap</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Serving Static Files with Custom Headers using Golang]]></title>
        <id>https://dev.to/mecode4food/serving-static-files-with-custom-headers-using-golang-426h</id>
        <link href="https://dev.to/mecode4food/serving-static-files-with-custom-headers-using-golang-426h"/>
        <updated>2021-06-11T06:08:18.000Z</updated>
        <summary type="html"><![CDATA[Basic Golang Static File Server


One of the common uses for Golang is to create servers to serve content, be it an API, or serve some files. Develop APIs long enough and soon you'll find yourself needing to serve static content such as HTML, JS, CSS.
Let's use the following as an example:
index.html:
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Basic HTML Document</title>
  </head>
  <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css"
    rel="stylesheet"
    integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x"
    crossorigin="anonymous"
  />
  <link…]]></summary>
        <author>
            <name>CK L</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Network Topology Setup in such a way that System A can ping to two Systems B & C but both systems not able to ping each other]]></title>
        <id>https://dev.to/vishnuswmech/network-topology-setup-in-such-a-way-that-system-a-can-ping-to-two-systems-b-c-but-both-systems-not-able-to-ping-each-other-1f0p</id>
        <link href="https://dev.to/vishnuswmech/network-topology-setup-in-such-a-way-that-system-a-can-ping-to-two-systems-b-c-but-both-systems-not-able-to-ping-each-other-1f0p"/>
        <updated>2021-06-11T04:58:36.000Z</updated>
        <summary type="html"><![CDATA[Note: We are not going to use any firewall, since it is simple and everyone aware of this, so we are going to use unique way to achieve this topology setup.
Concepts used: Routing tables and Netmask
In this practical, We are going to use three Redhat Enterprise Linux Virtual Machines which are hosting by Oracle VirtualBox.
I already explained these Routing table and Netmask concepts in my previous blog, if you want to know these basic concepts then please refer this
Note: Before starting these VM's, make sure that it is connected in Host-only adapter mode and the adapter name should be the same in all three VMs.

First step is to change the IP and set the Netmask by running the following command.
ifconfig enp0s3 162.168.1.1/29

route add -net 162.168.1.0 netmask 255.255.255.248 enp0s3

Fir…]]></summary>
        <author>
            <name>Sri Vishnuvardhan A</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Change filenames]]></title>
        <id>https://dev.to/rytsh/change-filenames-4d9f</id>
        <link href="https://dev.to/rytsh/change-filenames-4d9f"/>
        <updated>2021-06-11T04:06:08.000Z</updated>
        <summary type="html"><![CDATA[If you want to change filenames with given a prefix and do it in all inner folders, its little bit problem and I didn't find a solution just pre-defined one command until if you not prepare a command for this reason.
A way to do that, I want to show my way.
After that goes to deep folder, first searching files with regular expressions (Added asterix to code due to passing asterix cause passing all filenames to function) and executing that filename with our ${2} given function.
[[ -n ${2} ]] && (${2} ${file})

Good, now can prepare change filename function and give it to this script. As you see ${file} will be our first argument ${1}.
function changeFileName() { mv $(pwd)/${1} $(pwd)/_${1}; }
export -f changeFileName

Ok than,
./check.sh .scss changeFileName

Now I added prefix underscore for all my related files in all folders.]]></summary>
        <author>
            <name>Eray Ates</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Use Vim Mode On The Command Line In Bash]]></title>
        <id>https://dev.to/brandonwallace/how-to-use-vim-mode-on-the-command-line-in-bash-fnn</id>
        <link href="https://dev.to/brandonwallace/how-to-use-vim-mode-on-the-command-line-in-bash-fnn"/>
        <updated>2021-06-11T03:02:33.000Z</updated>
        <summary type="html"><![CDATA[Introduction


Learn how to use Vi mode on the command line in Bash.
Did you know you can use Vim mode on the command line?
After I found out you could enable Vim mode in bash 
set -o vi is always the first line I add to by .bashrc.

In this article I will go over 
Movement 
Editing
Searching
By default, the Bash command line uses Emacs style keyboard shortcuts, such as CTRL+A and CTRL+E. 



Emacs
Vim
Result




Ctrl+A
0
Move cursor to beginning of line.


Ctrl+E
$
Move cursor to end of line.


Alt+B
b
Move cursor back one word.


Alt+F
w
Move cursor right one word.


Ctrl+B
h
Move cursor back one character.


Ctrl+F
l
Move cursor right one character.



Add this line to the bottom of your .vimrc file.
set -o vi

Source your .bashrc file to make the changes take effect.
$ source ~/.bashrc…]]></summary>
        <author>
            <name>brandon_wallace</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Put a Background on Open Details Elements]]></title>
        <id>https://css-tricks.com/?p=342050</id>
        <link href="https://css-tricks.com/put-a-background-on-open-details-elements/"/>
        <updated>2021-06-11T00:16:28.000Z</updated>
        <summary type="html"><![CDATA[One thing that can be just a smidge funky about the <details> element is that, when open, it’s not always 100% clear what is inside that element and what isn’t. I’m not saying that always matters or that it’s a …
The post Put a Background on Open Details Elements appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[SQL Server on Linux via Docker]]></title>
        <id>https://dev.to/roxberry/sql-server-on-linux-via-docker-efd</id>
        <link href="https://dev.to/roxberry/sql-server-on-linux-via-docker-efd"/>
        <updated>2021-06-11T00:09:19.000Z</updated>
        <summary type="html"><![CDATA[Get Docker (if it is not already running)


Get the SQL Server on Linux for Docker Engine image



I'm running Docker on MacOS, I will use the SQL Server on Linux for Docker Engine at Docker Hub
   docker pull microsoft/mssql-server-linux

Set the settings and start the container
SQL Server on Linux for Docker Engine requires an environment setting to accept the EULA and set a strong SA password:
   ACCEPT_EULA = Y
   SA_PASSWORD = <your password>

Run this in the terminal:
   docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=yourStrong(!)Password' -p 1433:1433 -d microsoft/mssql-server-linux

Copy a backup to the container




   docker cp '/tmp/DatabaseName.bak' mssql-server-linux:/tmp

Restore the backup




   RESTORE DATABASE DatabaseName FROM DISK='/tmp/DatabaseName.bak'
   WITH MOVE 'DatabaseName' TO '/var/opt/mssql/data/DatabaseName.MDF',
   MOVE 'DatabaseName_log' TO '/var/opt/mssql/data/DatabaseName_log.ldf'
   Go

Connect with a docker command or an IDE like DataGrip




Using SQL Server for Linux in Docker has allowed me to continue to develop using a Linux distro or macOS without needing to set up a VM to run the database backend.]]></summary>
        <author>
            <name>Mark Roxberry</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[WordPress forgotten password localhost hack]]></title>
        <id>https://dev.to/thomasxbanks/wordpress-forgotten-password-localhost-hack-4aj5</id>
        <link href="https://dev.to/thomasxbanks/wordpress-forgotten-password-localhost-hack-4aj5"/>
        <updated>2021-06-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I have lost count of the number of times I've forgotten the password to the local or development CMS.
My natural instinct is to click the Forgot Password link but, obviously, there's no way to trigger that email from the local system.
I've spent too long hunting through articles on how to recover the forgotten password. The quickest and easiest solution that I've found is to change the password manually in the database.

WordPress stores passwords in the wp_users table. The prefix may be different if you have elected to change that in the wp-config.php file. It's good practice to do that for security.
When you look at the table, it'll look a little like this…



ID
user_login
user_pass




1
thomasxbanks
$P$BHpcLw/aWsTPmeDprzXwOEl45bJm9A3



WordPress stores your password as an MD5 hashed string. This prevents anyone with access to the database seeing confidential information in plain text.
If this wasn't obfuscated like this, we'd be able to copy our password and paste it into the login form…but we can't - and for good reason!
So, to fix our little problem, we need to replace the existing hashed password with a new hashed password - we can't overwrite the MD5 hash with plain text because that won't work.
I have Hasher installed as a plugin in VS Code. If you don't use VS Code or don't want to use this extension, MD5 Hash Generator Online works pretty well.
I would recommend that you don't create your "forever password" using these hash generators though. Overwrite the existing password with something easy to remember and very, very temporary - a favourite of mine is Pa55word! —
267057150e34eca5c6af39ec9b30864e

Once the password has been changed, you can log in with your new password and immediately change it to something more secure.
I hope this helps you as much as it has helped me. 😎]]></summary>
        <author>
            <name>Thomas Banks</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[First Steps on the research of Web Hosting]]></title>
        <id>https://dev.to/fangoh/first-steps-on-the-research-of-web-hosting-4jia</id>
        <link href="https://dev.to/fangoh/first-steps-on-the-research-of-web-hosting-4jia"/>
        <updated>2021-06-10T22:33:07.000Z</updated>
        <summary type="html"><![CDATA[One of the more daunting thing of developing, is to get to know how to deploy, as it's almost guaranteed that you will incur in some kind of cost, so before doing the big jump to trying a VPS (as a service), I decided to make a local Virtual Server to do some testing in setting up server environments.
Well, to give a little explanation of what I was doing, I need to explain how to web works.
Now and then I have been mentioning about Front-end and Back-end, in some way, you can rename both to Client-Side and Server-Side. The Client is often you, the end-user, whoever visits the web app or webpage, technically the client-side code is executed by the browser and do whatever needs to be done. Typically, it means to fetch, display, and update data.
Think of Facebook, for example, the posts, use…]]></summary>
        <author>
            <name>Hector Osuna</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to import several folders with files into WordPress Media Library using wp-cli]]></title>
        <id>https://dev.to/dacog/how-to-import-several-folders-with-files-into-wordpress-media-library-using-wp-cli-4547</id>
        <link href="https://dev.to/dacog/how-to-import-several-folders-with-files-into-wordpress-media-library-using-wp-cli-4547"/>
        <updated>2021-06-10T21:54:14.000Z</updated>
        <summary type="html"><![CDATA[wp-content/uploads was done quickly, but Wordpress Media Library didn’t “see” the files. 
After some quick reading I found out that they need to be imported into the Library, and after some more reading I found wp-cli works with ‘xargs’ in Bash.
Helpful links at Dev Notes and StackOverflow
The command I ended using is as follows through SSH:
find /tmp -name '*.pdf' -or -name '*.doc' -or -name '*.jpg' -or -name '*.xls' -or -name '*.docx' -or -name '*.xlsx' | xarg wp media import

Then you can regenerate all the thumbnails using
wp media regenerate --all

I recommend using screen as the import could stop if the connection gets down, because for me on a Digital Ocean server with 2gb took around 2-3 hours.
Source]]></summary>
        <author>
            <name>Diego Carrasco Gubernatis</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Bash script to count words and characters of multiple documents *.[txt|doc]]]></title>
        <id>https://dev.to/alfiosalanitri/bash-script-to-count-words-and-characters-of-multiple-documents-txt-doc-221f</id>
        <link href="https://dev.to/alfiosalanitri/bash-script-to-count-words-and-characters-of-multiple-documents-txt-doc-221f"/>
        <updated>2021-06-10T18:00:41.000Z</updated>
        <summary type="html"><![CDATA[a simple tool for people that need to count characters and words of multiple documents from command line interface.
Supports: *.txt and *.doc filetype
a linux distro
sudo privileges
unzip package
catdoc package
download this script
open your CLI and type:




sudo mv linux_doc_words_counter /usr/bin
sudo chmod +x /usr/bin/linux_doc_words_counter

linux_doc_words_counter /path/to/archive.zip]]></summary>
        <author>
            <name>alfiosalanitri</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Useful Front-End Boilerplates And Starter Kits]]></title>
        <id>https://smashingmagazine.com/2021/06/useful-frontend-boilerplates-starter-kits/</id>
        <link href="https://smashingmagazine.com/2021/06/useful-frontend-boilerplates-starter-kits/"/>
        <updated>2021-06-10T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[We don’t need to write everything from scratch every single time. With boilerplates and starter kits, we can set up our projects faster, and get to work immediately.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cosima Mielke)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Equal Columns With Flexbox: It’s More Complicated Than You Might Think]]></title>
        <id>https://css-tricks.com/?p=341894</id>
        <link href="https://css-tricks.com/equal-columns-with-flexbox-its-more-complicated-than-you-might-think/"/>
        <updated>2021-06-10T14:34:22.000Z</updated>
        <summary type="html"><![CDATA[As awesome as flexbox is, what it’s doing under the hood is actually a little strange because, by default, it is doing two things at once. It first looks at the content size which is what we would get if by declaring width: max-content on an element. But on top of that, flex-shrink is also doing some work allowing the items to be smaller, but only if needed.
Let’s break those two down and see how they work together.
The post Equal Columns With Flexbox: It’s More Complicated Than You Might Think appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Kevin Powell</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building a Headless CMS with Fauna and Vercel Functions]]></title>
        <id>https://css-tricks.com/?p=342182</id>
        <link href="https://css-tricks.com/building-a-headless-cms-with-fauna-and-vercel-functions/"/>
        <updated>2021-06-10T14:26:47.000Z</updated>
        <summary type="html"><![CDATA[In this tutorial, we will learn and use headless CMS, Fauna, and Vercel functions to build a blogging platform, Blogify After that, you can easily build any web application using a headless CMS, Fauna and Vercel functions.
The post Building a Headless CMS with Fauna and Vercel Functions appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Ikeh Akinyemi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA["Luxarg" Text Editor ! Pure Python and liberty !]]></title>
        <id>https://dev.to/amzy0/luxarg-text-editor-pure-python-and-socialist-3mkk</id>
        <link href="https://dev.to/amzy0/luxarg-text-editor-pure-python-and-socialist-3mkk"/>
        <updated>2021-06-10T14:26:03.000Z</updated>
        <summary type="html"><![CDATA[Luxarg link :
Link]]></summary>
        <author>
            <name>Amzy 0 |  محمد امین عظیمی</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Generate breadcrums for your Angular-Router and set page title dynamically.]]></title>
        <id>https://dev.to/gaurangdhorda/generate-breadcrums-for-your-angular-router-and-set-page-title-dynamically-npo</id>
        <link href="https://dev.to/gaurangdhorda/generate-breadcrums-for-your-angular-router-and-set-page-title-dynamically-npo"/>
        <updated>2021-06-10T13:50:42.000Z</updated>
        <summary type="html"><![CDATA[In this example I am going to explain you that You can use library to generate breadcrumbs, and also set each page title dynamically.
first you need to install this library to your angular project.
npm install set-title-with-breadcrumbs
This will install library called set-title-with-breadcrumbs, this library is used to generate breadcrumbs component and also you can set page title using angular router. After installing this library..
Go to your app.module.ts file and add below code
import { SetTitleWithBreadcrumbsModule} from 'set-title-with-breadcrumbs';
    @NgModule({
        imports : [SetTitleWithBreadcrumbsModule]
    })

in side your app-routing.module.ts file you have to add new data:{} object with breadcrumbs and title object property.
const routes: Routes = [
  {
    path: 'home',
    component: HomeComponent,
    data: { title: 'Home Page', breadcrums: 'Home' },
    children: [
      {
        path: 'records',
        component: RecordsComponent,
        data: { title: 'Find Records Page', breadcrums: 'Find-Records' },
        children: [
          {
            path: 'child',
            component: ChildComponent,
            data: { title: 'Child Record Page', breadcrums: 'Child-Record' }
          }
        ]
      }
    ]
  }
]

as you can see above, each router-path has data object with two property - breadcrumbs and title.
Now inside your app.component.html file you need to add component of library.
<lib-set-title-with-breadcrumbs></lib-set-title-with-breadcrumbs>
<router-outlet></router-outlet>


Connect with me by email : grdtechlab@gmail.com 
Working demo in this stackblitz link]]></summary>
        <author>
            <name>GaurangDhorda</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learn the Angular Pipe in-Depth + Tips on boosting performance using Pipe]]></title>
        <id>https://dev.to/yuvgeek/learn-the-angular-pipe-in-depth-tips-on-boosting-performance-using-pipe-5aa5</id>
        <link href="https://dev.to/yuvgeek/learn-the-angular-pipe-in-depth-tips-on-boosting-performance-using-pipe-5aa5"/>
        <updated>2021-06-10T12:30:21.000Z</updated>
        <summary type="html"><![CDATA[Hello everyone 👋,
In this article, we are going to cover what is Angular Pipe, how to create it and utilize it in our template. Additionally, we will learn how to boost performance with a custom Pipe. 
From  Angular Documentation, 
Use pipes to transform strings, currency amounts, dates, and other data for display. Pipes are simple functions you can use in template expressions to accept an input value and return a transformed value.
Usecase of pipe:
Use DatePipe to convert the Date object to a human-readable format.
UpperCasePipe can be used to convert text to Uppercase.
CurrencyPipe helps to transform a number to a currency string, formatted according to locale rules.
The best advantage to use Pipe is, while transforming the data, it doesn't modify the original data. Let's see it in acti…]]></summary>
        <author>
            <name>Yuvaraj</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Azure Data Fundamentals Certification (DP-900) – Pass the Exam With This Free 4.5-Hour Course]]></title>
        <id>60b93afaacb62507dd1d8915</id>
        <link href="https://www.freecodecamp.org/news/azure-data-fundamentals-certification-dp-900-pass-the-exam-with-this-free-4-5-hour-course/"/>
        <updated>2021-06-10T11:35:00.000Z</updated>
        <summary type="html"><![CDATA[You can learn everything you need to know to earn the Azure Data Fundamentals certification by completing this free 4.5 hour course. What is the Azure Data Fundamentals Certification?The Azure Data Fundamentals Certification is for those seeking a data-related role such as Data Analyst, Data Engineer, or Data]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Three Front-End Auditing Tools I Discovered Recently]]></title>
        <id>https://smashingmagazine.com/2021/06/three-frontend-auditing-tools/</id>
        <link href="https://smashingmagazine.com/2021/06/three-frontend-auditing-tools/"/>
        <updated>2021-06-10T11:15:00.000Z</updated>
        <summary type="html"><![CDATA[Building a faster website can be a rocket task these days. There are so many things to consider, so it’s challenging to get everything right. Here are some less-known tools that might help you get there.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Stefan Judis)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[From the Slums of Mumbai to a Rented Apartment – My 30-Year Developer Journey]]></title>
        <id>60b357ad11ffb70827ef9a90</id>
        <link href="https://www.freecodecamp.org/news/my-journey-into-tech-from-slums-of-mumbai-to-my-own-apartment/"/>
        <updated>2021-06-09T21:55:16.000Z</updated>
        <summary type="html"><![CDATA[Last year I tweeted about how I was moving from a Slum where I lived for 29 years to a multi-story rented apartment.  The tech community on Twitter responded with nothing but love. Dan Wahlin posted that he would love to hear more about my story. It's not going to]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Cornucopia of Container Queries]]></title>
        <id>https://css-tricks.com/?p=340967</id>
        <link href="https://css-tricks.com/a-cornucopia-of-container-queries/"/>
        <updated>2021-06-09T20:37:00.000Z</updated>
        <summary type="html"><![CDATA[I don’t know about y’all, but my feeds have been flooded with articles about CSS Container Queries these past few weeks. The buzz about container queries actually started back in December after Miriam Suzanne posted a proposal (picking up on …
The post A Cornucopia of Container Queries appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Geoff Graham</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Skills You Need to Start Freelancing as a Developer]]></title>
        <id>60c0ccbed3126007592d5781</id>
        <link href="https://www.freecodecamp.org/news/the-skills-you-need-to-start-freelancing/"/>
        <updated>2021-06-09T19:45:20.000Z</updated>
        <summary type="html"><![CDATA[Here's the bottom line: you don't need much to get started as a freelance developer.  The biggest obstacle developers face when they're thinking about getting started is that they tend to overcomplicate things.  Most are intimidated by the sheer number of different paths or skills deemed necessary by various blog]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learn Bootstrap 5 and SASS by Building a Portfolio Website]]></title>
        <id>60c10a1dd3126007592d5988</id>
        <link href="https://www.freecodecamp.org/news/learn-bootstrap-5-and-sass-by-building-a-portfolio-website/"/>
        <updated>2021-06-09T18:43:07.000Z</updated>
        <summary type="html"><![CDATA[Bootstrap is one of the most popular CSS frameworks and Sass is one of the most popular preprocessors for CSS. We just published a course on the freeCodeCamp.org YouTube channel that will teach you about Bootstrap 5 and Sass by building a portfolio website. Patrick Muriungi developed this course.]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[target=blank]]></title>
        <id>https://css-tricks.com/?p=341916</id>
        <link href="https://css-tricks.com/targetblank/"/>
        <updated>2021-06-09T14:37:31.000Z</updated>
        <summary type="html"><![CDATA[Does that make your eye twitch a little bit? Like… it’s a typo. It should be target="_blank" with an underscore to start the value. As in…
<a target="_blank" href="https://codepen.io"Open CodePen in a New Tab
</a
Welp, that’s correct syntax!…
The post target=blank appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Meet <code>:has</code>, A Native CSS Parent Selector (And More)]]></title>
        <id>https://smashingmagazine.com/2021/06/has-native-css-parent-selector/</id>
        <link href="https://smashingmagazine.com/2021/06/has-native-css-parent-selector/"/>
        <updated>2021-06-09T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[What makes relational selector one of the most requested features and how are we, as developers, working around not having it? In this article, we’re going to check the early spec of the :has selector, and see how it should improve the CSS workflow once it’s released.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Adrian Bece)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Deploy Your freeCodeCamp Project on AWS – A Beginner&#x27;s Guide to the Cloud]]></title>
        <id>60bfa4d4d3126007592d5160</id>
        <link href="https://www.freecodecamp.org/news/how-to-deploy-your-freecodecamp-project-on-aws/"/>
        <updated>2021-06-08T23:47:43.000Z</updated>
        <summary type="html"><![CDATA[One night in June, 2017 I stumbled across a website called freecodecamp.org. I was a teacher at the time who was looking for a career change. But I assumed being a programmer was out of my reach. After all, I didn’t consider myself a math whiz, never went]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Looking at WCAG 2.5.5 for Better Target Sizes]]></title>
        <id>https://css-tricks.com/?p=341982</id>
        <link href="https://css-tricks.com/looking-at-wcag-2-5-5-for-better-target-sizes/"/>
        <updated>2021-06-08T18:31:08.000Z</updated>
        <summary type="html"><![CDATA[Have you ever experienced the frustration of trying to tap a button on a mobile device only to have it do nothing because the target size is just not large enough **and it’s not picking up on your press? Maybe …
The post Looking at WCAG 2.5.5 for Better Target Sizes appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Todd Libby</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS-Trickz: An Experiment with Netlify’s On-Demand Builders]]></title>
        <id>https://css-tricks.com/?p=341884</id>
        <link href="https://alex.party/posts/2021-05-31-css-trickz-an-experiment-with-netlify-s-on-demand-builders/"/>
        <updated>2021-06-08T14:16:07.000Z</updated>
        <summary type="html"><![CDATA[WordPress sites have an API by default. Wanna see this site’s most recent posts, with just a specific set of data… in JSON format? Here ya go. Alex Riviere made a joke site using that.
At first, the site …
The post CSS-Trickz: An Experiment with Netlify’s On-Demand Builders appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[From AVIF to WebP: A New Smashing Book By Addy Osmani]]></title>
        <id>https://smashingmagazine.com/2021/06/image-optimization-book-release/</id>
        <link href="https://smashingmagazine.com/2021/06/image-optimization-book-release/"/>
        <updated>2021-06-08T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[It’s here! For the last year, we’ve been working with Addy Osmani on a new Smashing Book all around image optimization. And now it’s here. Meet “Image Optimization”, our deep-dive guide to understand how to deliver high-quality images on the web fast.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Vitaly Friedman)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Links on Accessibility]]></title>
        <id>https://css-tricks.com/?p=341805</id>
        <link href="https://css-tricks.com/links-on-accessibility/"/>
        <updated>2021-06-07T19:52:26.000Z</updated>
        <summary type="html"><![CDATA[Show/Hide password accessibility and password hints tutorial — Nicolas Steenhout goes deep on <input type="password"> accessibility. For one thing, being able to toggle it to type="text" should be possible, while announcing, politely, the change. But also, put the password hints 
…
The post Links on Accessibility appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[VS Code Extensions for HTML]]></title>
        <id>https://css-tricks.com/?p=340390</id>
        <link href="https://css-tricks.com/vs-code-extensions-for-html/"/>
        <updated>2021-06-07T14:13:50.000Z</updated>
        <summary type="html"><![CDATA[Let’s look at some extensions for VS Code that make writing and editing HTML (and languages that are basically HTML with extra powers) better. You may not like all of them. Maybe some of them don’t appeal to you, solve …
The post VS Code Extensions for HTML appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Build A Geocoding App In Vue.js Using Mapbox]]></title>
        <id>https://smashingmagazine.com/2021/06/building-geocoding-app-vue-mapbox/</id>
        <link href="https://smashingmagazine.com/2021/06/building-geocoding-app-vue-mapbox/"/>
        <updated>2021-06-07T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this guide, we’ll be taking a general look at the concepts of forward geocoding and reverse geocoding, and will build a mini-app that applies these concepts to display specific locations, using Mapbox and Vue.js 2.6.11 to achieve this.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Prince Chukwudire)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Principles for user-centered front-end development]]></title>
        <id>https://css-tricks.com/?p=341793</id>
        <link href="https://colinoakley.medium.com/the-web-we-choose-to-build-e921510e3f1b"/>
        <updated>2021-06-04T20:36:46.000Z</updated>
        <summary type="html"><![CDATA[Colin Oakley:
• Accessible — Use semantic HTML, and make sure we meet the WCAG 2.1 AA standard as a minimum and it works with assisted technologies (this sits alongside the DWP Accessibility Manual)
• Agnostic — Build 
…
The post Principles for user-centered front-end development appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Can I :has()]]></title>
        <id>https://css-tricks.com/?p=341968</id>
        <link href="https://bkardell.com/blog/canihas.html"/>
        <updated>2021-06-04T14:37:59.000Z</updated>
        <summary type="html"><![CDATA[I just joked that we’re basically getting everything we want in CSS super fast (mostly referring to container queries, my gosh, can you imagine they are actually coming?). Now we might actually get parent selectors?! As in .parent:has(.child) { …
The post Can I :has() appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Getting Started With Webpack]]></title>
        <id>https://smashingmagazine.com/2021/06/getting-started-webpack/</id>
        <link href="https://smashingmagazine.com/2021/06/getting-started-webpack/"/>
        <updated>2021-06-04T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[Modern browsers provide good support for JavaScript modules, but module bundlers such as webpack stay a critical part of the JavaScript toolchain. Let’s take a deep dive into what webpack is and how to use it in your development workflow.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Nwani Victory)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hexagons and Beyond: Flexible, Responsive Grid Patterns, Sans Media Queries]]></title>
        <id>https://css-tricks.com/?p=341584</id>
        <link href="https://css-tricks.com/hexagons-and-beyond-flexible-responsive-grid-patterns-sans-media-queries/"/>
        <updated>2021-06-03T14:25:57.000Z</updated>
        <summary type="html"><![CDATA[A little while back, Chris shared this nice hexagonal grid. And true to its name, it’s using —wait for it — CSS Grid to form that layout. It’s a neat trick! Combining grid columns, grid gaps, and creative clipping …
The post Hexagons and Beyond: Flexible, Responsive Grid Patterns, Sans Media Queries appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Temani Afif</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Managing Shared State In Vue 3]]></title>
        <id>https://smashingmagazine.com/2021/06/managing-shared-state-vue3/</id>
        <link href="https://smashingmagazine.com/2021/06/managing-shared-state-vue3/"/>
        <updated>2021-06-03T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[Writing large-scale Vue applications can be a challenge. In this article, Shawn Wildermuth dives into the pros and cons of approaches like factories, shared objects, and using Vuex. He also explains what is coming in Vuex 5.0 that might change how we all use shared state in Vue 3.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Shawn Wildermuth)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Fix Cumulative Layout Shift (CLS) Issues]]></title>
        <id>https://smashingmagazine.com/2021/06/how-to-fix-cumulative-layout-shift-issues/</id>
        <link href="https://smashingmagazine.com/2021/06/how-to-fix-cumulative-layout-shift-issues/"/>
        <updated>2021-06-02T12:30:00.000Z</updated>
        <summary type="html"><![CDATA[Google’s Core Web Vitals initiative has taken the SEO and Web Performance worlds by storm and many sites are busy optimizing their Page Experience to maximize the ranking factor. The Cumulative Layout Shift metric is causing trouble to a lot of sites, so let’s have a look at ways of addressing any issues for that metric.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Barry Pollard)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Improving The Performance Of An Online Store (Case Study)]]></title>
        <id>https://smashingmagazine.com/2021/06/front-end-performance-online-store-jewellerybox/</id>
        <link href="https://smashingmagazine.com/2021/06/front-end-performance-online-store-jewellerybox/"/>
        <updated>2021-06-02T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[Getting a good performance score from Google is hard for any website — but doing so for an online store is even harder. We achieved green scores — even several for mobile. Here is how we did it.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Jennifer Brehm)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 38 With Ivan Akulov: Why Is My React App Slow?]]></title>
        <id>https://smashingmagazine.com/2021/06/smashing-podcast-episode-38/</id>
        <link href="https://smashingmagazine.com/2021/06/smashing-podcast-episode-38/"/>
        <updated>2021-06-01T14:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode, we’re talking about React performance. What factors slow our React apps down, and how can we fix it? Drew McLellan talks to expert Ivan Akulov to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Setting Up A Currency Convertor With ExchangeRatesApi.io]]></title>
        <id>https://smashingmagazine.com/2021/06/currency-convertor-exchangeratesapi/</id>
        <link href="https://smashingmagazine.com/2021/06/currency-convertor-exchangeratesapi/"/>
        <updated>2021-06-01T09:00:00.000Z</updated>
        <summary type="html"><![CDATA[Amazon allows visitors to display prices in their own currency. Thanks to *ExchangeRatesApi.io*, we can do the same for our online shops, providing a better experience to our customers. Let’s find out how.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Leonardo Losoviz)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.10.2]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.10.2</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.10.2"/>
        <updated>2021-06-01T04:39:30.000Z</updated>
        <summary type="html"><![CDATA[Added: testing and CI/CD workflows]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Happy June Vibes For Your Screen (2021 Desktop Wallpapers Edition)]]></title>
        <id>https://smashingmagazine.com/2021/05/desktop-wallpaper-calendars-june-2021/</id>
        <link href="https://smashingmagazine.com/2021/05/desktop-wallpaper-calendars-june-2021/"/>
        <updated>2021-05-31T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[What could be a better way to welcome June than with some colorful inspiration? Well, we might have something for you: wallpapers created with love by artists and designers from across the globe.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cosima Mielke)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Adding A Commenting System To A WYSIWYG Editor]]></title>
        <id>https://smashingmagazine.com/2021/05/commenting-system-wysiwyg-editor/</id>
        <link href="https://smashingmagazine.com/2021/05/commenting-system-wysiwyg-editor/"/>
        <updated>2021-05-28T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this article, we’ll be re-using the foundational WYSIWYG Editor built in the first article to build a commenting system for a WYSIWYG Editor that enables users to select text inside a document and share their comments on it. Let’s dig in!]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Shalabh Vyas)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Useful VS Code Extensions For Front-End Developers]]></title>
        <id>https://smashingmagazine.com/2021/05/useful-vs-code-extensions-web-developers/</id>
        <link href="https://smashingmagazine.com/2021/05/useful-vs-code-extensions-web-developers/"/>
        <updated>2021-05-27T13:30:00.000Z</updated>
        <summary type="html"><![CDATA[Meet useful Visual Studio Code extensions for web developers: little helpers to minimize slow-downs and frustrations, and boost developer’s workflow along the way. With auto log messages, auto code formatting, file utils, file labels, code snippets, highlight brackets, tags, indents and workspaces, onboarding and remote SSH.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cosima Mielke)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Build And Launch Powerful Responsive Websites With Editor X]]></title>
        <id>https://smashingmagazine.com/2021/05/build-launch-responsive-websites-editorx/</id>
        <link href="https://smashingmagazine.com/2021/05/build-launch-responsive-websites-editorx/"/>
        <updated>2021-05-27T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[While web builders have been around for a long time, it wasn’t until recently that they became practical for professional use. Closing the gap between design and code has become the north star for many companies and we are seeing a wave of tools that deliver on this promise.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Miroslav Bekyarov)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Accessible SVGs: Perfect Patterns For Screen Reader Users]]></title>
        <id>https://smashingmagazine.com/2021/05/accessible-svg-patterns-comparison/</id>
        <link href="https://smashingmagazine.com/2021/05/accessible-svg-patterns-comparison/"/>
        <updated>2021-05-26T13:20:00.000Z</updated>
        <summary type="html"><![CDATA[Discover which SVG patterns we should avoid and which patterns are the most inclusive when comparing different combinations of OSs, browsers, and screen readers.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Carie Fisher)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.9.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.9.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.9.0"/>
        <updated>2021-05-26T06:02:55.000Z</updated>
        <summary type="html"><![CDATA[Added: experimental support for iTunes podcast feed: Demo | Source. With this new release, you can render an audio control to play the mp3 file and display iTunes episode duration. It is "experimental" due to these caveats:

This feature is currently only available through custom template.
iTunes has no strict format requirement for duration. The unit is most likely seconds but can be "hh:mm:ss" or "mm:ss" for some sources. A future version may expose a human readable string to the template.
No image support yet. Some shows might have disabled CORS or use a relative URL for image, which forces osmosfeed to download the image during build. A future version may support it.
You can't republish the podcast in the feed output. Supporting this goes beyond the scope of the project at the moment.
Fixed: the articles in template data were not sorted.
Thank you @Zenigata]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Guide To Undoing Mistakes With Git (Part 2)]]></title>
        <id>https://smashingmagazine.com/2021/05/undoing-mistakes-git-part2/</id>
        <link href="https://smashingmagazine.com/2021/05/undoing-mistakes-git-part2/"/>
        <updated>2021-05-25T14:00:00.000Z</updated>
        <summary type="html"><![CDATA[Mistakes. These cruel villains do not even stop at the beautiful world of software development. But although we cannot avoid making mistakes, we can learn to undo them! This post will show the right tools for your daily work with Git.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Tobias Günther)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A New Way To Reduce Font Loading Impact: CSS Font Descriptors]]></title>
        <id>https://smashingmagazine.com/2021/05/reduce-font-loading-impact-css-descriptors/</id>
        <link href="https://smashingmagazine.com/2021/05/reduce-font-loading-impact-css-descriptors/"/>
        <updated>2021-05-25T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[Web fonts are often terrible for web performance and none of the font loading strategies are particularly effective to address that. Upcoming font options may finally deliver on the promise of making it easier to align fallback fonts to the final fonts.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Barry Pollard)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS Container Queries: Use-Cases And Migration Strategies]]></title>
        <id>https://smashingmagazine.com/2021/05/css-container-queries-use-cases-migration-strategies/</id>
        <link href="https://smashingmagazine.com/2021/05/css-container-queries-use-cases-migration-strategies/"/>
        <updated>2021-05-24T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[CSS Container queries bring media queries closer to the target elements themselves and enables them to adapt to virtually any given container or layout. In this article, we’re going to cover CSS container query basics and how to use them today with progressive enhancement or polyfills.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Adrian Bece)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.8.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.1"/>
        <updated>2021-05-23T05:40:12.000Z</updated>
        <summary type="html"><![CDATA[Fixed: UnhandledPromiseRejectionWarning: Error: At least one option must be a string]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.8.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.0"/>
        <updated>2021-05-23T05:12:08.000Z</updated>
        <summary type="html"><![CDATA[Changed: Smart summary truncation. When there is no dedicated summary (only Atom feed has it, and many sites don't use it) from the source, we check if the content/description (Both Atom and RSS) field is long enough to be full text. If so, it will be truncated into a "pseudo" summary. If not, we assume the source used the content field as summary, and it will be displayed in full length.
Thank you: @LooperXX.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building A Rich Text Editor (WYSIWYG)]]></title>
        <id>https://smashingmagazine.com/2021/05/building-wysiwyg-editor-javascript-slatejs/</id>
        <link href="https://smashingmagazine.com/2021/05/building-wysiwyg-editor-javascript-slatejs/"/>
        <updated>2021-05-21T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[Let’s build a rich text, WYSIWYG-editor that supports rich text, images, links and some nuanced features from word processing apps. We will use SlateJS to build the shell of the editor and then add a toolbar and custom configurations.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Shalabh Vyas)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Boost Your Skills Online: Smashing Workshops On Front-End And Design]]></title>
        <id>https://smashingmagazine.com/2021/05/new-online-workshops-front-end-ux/</id>
        <link href="https://smashingmagazine.com/2021/05/new-online-workshops-front-end-ux/"/>
        <updated>2021-05-20T14:20:00.000Z</updated>
        <summary type="html"><![CDATA[Front-end and design are remarkably complex these days. That’s why we invite kind, smart folks from the community to run online workshops for all of us to learn together. And we have new ones coming up, and we’d like to kindly welcome you to join in.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Iris Lješnjanin)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Implement Authentication In Next.js With Auth0]]></title>
        <id>https://smashingmagazine.com/2021/05/implement-authentication-nextjs-auth0/</id>
        <link href="https://smashingmagazine.com/2021/05/implement-authentication-nextjs-auth0/"/>
        <updated>2021-05-20T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[A step-by-step tutorial on adding authentication and authorization to your Next.js apps, with Auth0. We’ll be using a Next.js SDK to connect our application to the Auth0 API and will create the dynamic API route for React.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Facundo Giuliani)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Frustrating Design Patterns: Mega-Dropdown Hover Menus]]></title>
        <id>https://smashingmagazine.com/2021/05/frustrating-design-patterns-mega-dropdown-hover-menus/</id>
        <link href="https://smashingmagazine.com/2021/05/frustrating-design-patterns-mega-dropdown-hover-menus/"/>
        <updated>2021-05-19T11:40:00.000Z</updated>
        <summary type="html"><![CDATA[Everything to keep in mind when designing and building a mega-dropdown, common pitfalls, hover entry/exit delays, trajectory triangle technique and SVG path exit areas.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Vitaly Friedman)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Create, Edit And Animate SVGs All In One Place With SVGator 3.0]]></title>
        <id>https://smashingmagazine.com/2021/05/create-edit-animate-svg-svgator3/</id>
        <link href="https://smashingmagazine.com/2021/05/create-edit-animate-svg-svgator3/"/>
        <updated>2021-05-18T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[Today, we are taking a closer look at [SVGator 3.0](https://www.svgator.com/?utm_source=article&utm_medium=smashingmag&utm_campaign=svgator3_smashing), a new major release of the popular SVG application that lets you create, edit and animate SVG files and make the best out of what SVG has to offer — from start to finish.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Mikołaj Dobrucki)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 37 With Adam Argyle: What Is VisBug?]]></title>
        <id>https://smashingmagazine.com/2021/05/smashing-podcast-episode-37/</id>
        <link href="https://smashingmagazine.com/2021/05/smashing-podcast-episode-37/"/>
        <updated>2021-05-18T05:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode, we’re talking about VisBug. What is it, and how is it different from the array of options already found in Chrome DevTools? Drew McLellan talks to its creator Adam Argyle to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How We Improved Our Core Web Vitals (Case Study)]]></title>
        <id>https://smashingmagazine.com/2021/05/core-web-vitals-case-study/</id>
        <link href="https://smashingmagazine.com/2021/05/core-web-vitals-case-study/"/>
        <updated>2021-05-17T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[Google’s “Page Experience Update” will start rolling out in June. At first, sites that meet Core Web Vitals thresholds will have a minor ranking advantage in mobile search for all browsers. Search is important to any business, and this is the story of how Beau Hartshorne and his team at Instant Domain Search improved their Core Web Vitals scores.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Beau Hartshorne)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.2]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2"/>
        <updated>2021-05-17T05:32:19.000Z</updated>
        <summary type="html"><![CDATA[⚠ Deprecated: To accommodate the monorepo setup, the node version in all templates/demos/examples has changed from 14 to 16. This is not a breaking change as our compile target is still node 14, and node 16 is backward compatible. We still recommend you start using node-version: "16" in your .github/workflows/update-feed.yaml today to get the performance/security improvements from the newer node. See example
Chore: Reorganize to monorepo with npm workspace.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.1"/>
        <updated>2021-05-16T02:33:58.000Z</updated>
        <summary type="html"><![CDATA[Fixed: static files were unnecessarily copied for custom templates.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.0"/>
        <updated>2021-05-16T01:42:24.000Z</updated>
        <summary type="html"><![CDATA[Added: templating system. Demo | Source | Docs
Chore: rendering logic refactoring. Adopting functional paradigm.
Thank you @tianheg, @onnyyonn]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
</feed>
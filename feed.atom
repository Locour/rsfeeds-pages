<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2021-05-31T02:14:43.503Z</id>
    <title>osmos::feed</title>
    <updated>2021-05-31T02:14:43.503Z</updated>
    <generator>osmosfeed 1.9.0</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[VirtualBox installation error in Linux -  Error: Dependency is not satisfiable: libc6 (>=2.28)]]></title>
        <id>https://dev.to/rahedmir/virtualbox-installation-error-in-linux-error-dependency-is-not-satisfiable-libc6-2-28-12b2</id>
        <link href="https://dev.to/rahedmir/virtualbox-installation-error-in-linux-error-dependency-is-not-satisfiable-libc6-2-28-12b2"/>
        <updated>2021-05-31T02:05:01.000Z</updated>
        <summary type="html"><![CDATA[This is one of the strange problems of VirtualBox which drives me crazy until I figured out how simple a solution it was.
If you are running from the same problem, don't worry. Just make sure you are using the right installer for your distribution/OS
By the way, Error: Dependency is not satisfiable: libc6 (>=2.28) or libc6 (>=2.29) is referred to as the same problem
OK, Let me explain a bit further,  A few months ago I was wanted to install VirtualBox on my Linux Mint computer, So, I went to the VirtualBox Official website (https://www.virtualbox.org/wiki/Linux_Downloads) but I won't found the installer for Linux Mint Version ( It's still not present here as you can see in the picture below)

So, I downloaded  Ubuntu 19.10 / 20.04 / 20.10 / 21.04 version because I knew Linux Mint is based on Ubuntu. so, whatever works on Ubuntu should be work on Linux Mint as well. It was not a big deal. But it won't worked and threw this Dependency is not satisfiable: libc6 (>=2.28) error.

At that moment I reconsider my OS. I was using Linux Mint 19.3 Cinnamon. OS version placed a critical role here. I simply Googled "Linux Mint 19.3 Ubuntu Version"  and found Mint 19.3 is based on Ubuntu 18.04 . 
I revisit the download page and download it again but now from the  Ubuntu 18.04 / 18.10 / 19.04  option and run the installer and Guess what, It was running absolutely fine without any issue. Through the installer required some extra dependency, not an issue, just allowed it

Maybe you downloaded the Debian 10 version installer, not working.. then download it for Debian 9. Fedora 33/34 not working... download it for Fedora 32. Just make sure that the VirtualBox installer is compatible with your OS version :)
Share your thoughts if you find something more interesting...
Watch on YouTube


Thanks for reading. Have a great day :)
Coffee https://www.buymeacoffee.com/rahedmir]]></summary>
        <author>
            <name>Mir Rahed Uddin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[VirtualBox installation error in Linux -  Error: Dependency is not satisfiable: libc6 (>=2.28)]]></title>
        <id>https://dev.to/rahedmir/virtualbox-installation-error-in-linux-error-dependency-is-not-satisfiable-libc6-2-28-12b2</id>
        <link href="https://dev.to/rahedmir/virtualbox-installation-error-in-linux-error-dependency-is-not-satisfiable-libc6-2-28-12b2"/>
        <updated>2021-05-31T02:05:01.000Z</updated>
        <summary type="html"><![CDATA[This is one of the strange problems of VirtualBox which drives me crazy until I figured out how simple a solution it was.
If you are running from the same problem, don't worry. Just make sure you are using the right installer for your distribution/OS
By the way, Error: Dependency is not satisfiable: libc6 (>=2.28) or libc6 (>=2.29) is referred to as the same problem
OK, Let me explain a bit further,  A few months ago I was wanted to install VirtualBox on my Linux Mint computer, So, I went to the VirtualBox Official website (https://www.virtualbox.org/wiki/Linux_Downloads) but I won't found the installer for Linux Mint Version ( It's still not present here as you can see in the picture below)

So, I downloaded  Ubuntu 19.10 / 20.04 / 20.10 / 21.04 version because I knew Linux Mint is based on Ubuntu. so, whatever works on Ubuntu should be work on Linux Mint as well. It was not a big deal. But it won't worked and threw this Dependency is not satisfiable: libc6 (>=2.28) error.

At that moment I reconsider my OS. I was using Linux Mint 19.3 Cinnamon. OS version placed a critical role here. I simply Googled "Linux Mint 19.3 Ubuntu Version"  and found Mint 19.3 is based on Ubuntu 18.04 . 
I revisit the download page and download it again but now from the  Ubuntu 18.04 / 18.10 / 19.04  option and run the installer and Guess what, It was running absolutely fine without any issue. Through the installer required some extra dependency, not an issue, just allowed it

Maybe you downloaded the Debian 10 version installer, not working.. then download it for Debian 9. Fedora 33/34 not working... download it for Fedora 32. Just make sure that the VirtualBox installer is compatible with your OS version :)
Share your thoughts if you find something more interesting...
Watch on YouTube


Thanks for reading. Have a great day :)
Coffee https://www.buymeacoffee.com/rahedmir]]></summary>
        <author>
            <name>Mir Rahed Uddin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Introduction to RabbitMQ for Node.js Developers]]></title>
        <id>https://dev.to/pharzad/introduction-to-rabbitmq-for-node-js-developers-1clm</id>
        <link href="https://dev.to/pharzad/introduction-to-rabbitmq-for-node-js-developers-1clm"/>
        <updated>2021-05-31T02:01:54.000Z</updated>
        <summary type="html"><![CDATA[Prerequisites


For this tutorial you need some background of Node.js and have docker installed on your machine 
In computer science there’s the concept of queues. Queue is the set of messages that are meant to be delivered from one sender to one or more receivers. The messages can be delivered in order or out of order by design. The computer program that handles these transactions is called message broker. RabbitMQ is one the most popular message brokers that runs on top of Advanced Message Queuing Protocol (AMQP). There are four main components forming AMQP protocol: Publisher, Exchange, Queue, Consumer.
Messages are Published to an exchange by a publisher, Publisher also is responsible for setting the attributes of the message which we will cover later.
Exchanges are responsible for rou…]]></summary>
        <author>
            <name>Farzad Aziminia</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Famous Misconceptions in Angular]]></title>
        <id>https://dev.to/angular/the-famous-misconceptions-in-angular-3dl1</id>
        <link href="https://dev.to/angular/the-famous-misconceptions-in-angular-3dl1"/>
        <updated>2021-05-31T01:38:27.000Z</updated>
        <summary type="html"><![CDATA[In this blog, we gonna discuss some famous misconceptions among non-Angular developers.
As Front End developer who worked in Forune 500 companies such as Raymond James financial advisory company and SwissRe leading insurance broker, in this blog we gonna discuss some famous misconceptions among non- Angular developers. This blog should be unbiased and focused on facts only.
Myth #1: Steep Learning Curve in Angular

One of the famous misleading opinions we observe among people especially on Twitter and youtube gurus is ‘Angular has a steep learning curve’. The short answer is yes, Angular has not a small road to learning and master. But let’s first analyze the definition of this concept. A steep learning curve refers to: ‘The amount of time required to learn is big’. Interesting but what ma…]]></summary>
        <author>
            <name>Vugar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Arch Linux — Learnings While Installing]]></title>
        <id>https://dev.to/daniloab_/arch-linux-learnings-while-installing-582g</id>
        <link href="https://dev.to/daniloab_/arch-linux-learnings-while-installing-582g"/>
        <updated>2021-05-31T00:53:36.000Z</updated>
        <summary type="html"><![CDATA[TL;DR
Learning that I got while installing Arch Linux.
  what isdev/sdx

  fdisk andcfdisk
  mbr vs gpt drives
  useful commands
Please, note this: If you are looking for a tutorial to help into the installation process, go with the official docs of ArchWiki. And, if needs a help feel free to call me on Twitter or on my discord.
Let’s go
I made an upgrade on my computer and add a new SSD to be dedicated only to Linux. Since I was going to have to format the current HD with a partition for Ubuntu 20.04, I soon decided to migrate to Arch Linux.
Arch is a more robust version that brings in its installation the minimum necessary to run the system in a terminal. At the end of the installation process if you want a GUI you can choose one of your own and move on.
During this post that I write to …]]></summary>
        <author>
            <name>Danilo Assis</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[VSCode Property Snippet With XML Doc Comments]]></title>
        <id>https://dev.to/michaelherndon/vscode-property-snippet-with-xml-doc-comments-27lg</id>
        <link href="https://dev.to/michaelherndon/vscode-property-snippet-with-xml-doc-comments-27lg"/>
        <updated>2021-05-31T00:52:28.000Z</updated>
        <summary type="html"><![CDATA[I wanted a way to make it easier to generate C# XML code comments for properties for Visual Studio Code ("VSCode"). Working with doc comments in VSCode is painful.
There is no ghost-doc extension equivelant for C# in VSCode.
The closest extension for generating comments is the docomment extension which is being replaced by omnisharp functionality.
If you run analyzers for code documentation; constructors, properties, and other public code fragments require specific phrases and required XML elements.
On windows, you can fall back to Visual Studio.  If you're running your dev-environment on Linux, using Visual Studio isn't an option.
Visual Studio Code has documentation for user-defined code snippets.
I found a post on how to split camel-cased words into lower-cased fragments on stack overflow
Using the above, I was able to cobble together the snippets below.
{ 
    "prop": {
        "prefix": "prop",
        "body": [
            "/// <summary>Gets or sets the ${2/([A-Z][a-z]+$)|([A-Z][a-z]+)/${1:/downcase}${2:/downcase}${2:+ }/g}<summary>",
            "/// <value>Property <c>${2:property}</c> represents ${3:description}.</value>",
            "public ${1:type} ${2:Property} { get; set; }"
        ]
    },
    "ctor-summary": {
        "prefix": "ctor-summary",
        "body": [
            "Initializes a new instance of the <see cref=\"$TM_FILENAME_BASE\"/> class."
        ]
    },
}

I hope this helps.]]></summary>
        <author>
            <name>nerdymishka</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AWS CDK Node.JS: Hello World]]></title>
        <id>https://dev.to/josuebustos/aws-cdk-node-js-hello-world-38c5</id>
        <link href="https://dev.to/josuebustos/aws-cdk-node-js-hello-world-38c5"/>
        <updated>2021-05-30T23:04:55.000Z</updated>
        <summary type="html"><![CDATA[Introduction


This tutorial will show you how to install the AWS CDK on Ubuntu and deploy your first JavaScript Infrastructure as Code (IAS) to AWS. 
Warning: I do not assume any responsibility if you incur any charges. You are responsible for managing your resources in your AWS account. 
If you find yourself stuck, I recommend reviewing the AWS documentation to find detailed concepts, definitions, and critical terminology to help you along the way. 
"AWS CDK is a software development framework for defining cloud infrastructure in code and provisioning it through AWS CloudFormation.
You use the CDK to define your cloud resources in a familiar programming language. The CDK supports TypeScript, JavaScript, Python, Java, C#/.Net, and (in developer preview) Go." - AWS Docs.
Today we're going …]]></summary>
        <author>
            <name>Josue Bustos</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[O início que agora é begin.]]></title>
        <id>https://dev.to/kennyalves/o-inicio-que-agora-e-begin-bbm</id>
        <link href="https://dev.to/kennyalves/o-inicio-que-agora-e-begin-bbm"/>
        <updated>2021-05-30T22:48:29.000Z</updated>
        <summary type="html"><![CDATA[Comecei a trabalhar quando fiz quatorze anos de idade, estava no segundo ano do ensino médio e tinha acabado de conseguir meu primeiro emprego, que foi em telemarketing, um início comum para jovens brasileiros.
Muita coisa se passou desde aquele início, meses depois troquei de emprego e fui trabalhar num banco. Com dezessete entrei na faculdade de Engenharia de Produção e desde então quatorze anos se passaram, trabalho todo esse período no setor administrativo e financeiro.
E mesmo tendo alcançado um bom cargo, um relativo bom salário, nesses quatorze anos de experiência profissional, tenho periódicas crises existenciais, com a grande questão que me cerca:

E com meus, atuais, vinte oito anos decidi aprender uma nova profissão, algo que unisse alguns elementos que eu gosto, e no fim optei por aprender a de Desenvolvedor Front-End.
Feliz em poder compartilhar o início dessa jornada aqui nessa comunidade, mesmo não tendo certeza se é pra isso que ela existe. 
Mas agora, estudando, acho melhor começar a chamar início de begin, ou start ou qualquer outro termo inglês, porquê combina mais com esse mundo.]]></summary>
        <author>
            <name>Kenny Alves</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Recursive Dynamic Matrix Generation with nodejs (just to run)]]></title>
        <id>https://dev.to/yugely/recursive-matrix-generation-with-nodejd-just-to-run-2pgi</id>
        <link href="https://dev.to/yugely/recursive-matrix-generation-with-nodejd-just-to-run-2pgi"/>
        <updated>2021-05-30T21:31:59.000Z</updated>
        <summary type="html"><![CDATA[quebert


I wanted to do a walkthrough and explanation of the dynamic matrix generator I built to build analytic timelines on matrix function execution. This was the beginning of a project I ultimately went to Kotlin to do. This is a loop-less, dynamic and single threaded process. It utilizes a subroutine pattern on instantiation and bring in the "out" variable concept to the object manipulation. Past this, it will be a lot of annotated code. Its Open-Source and MIT licensed. Copypasta at will. I'd be flattered.

/*
when I started the project it was initially going to be
built as a pen testing client (SOAP/RPC/HTTP{S}). 
These functions execute from a linear and single 
dimension matrix, utilizing the bState objects 
as a reference point for state.
*/

//These are the initial functions to …]]></summary>
        <author>
            <name>Al</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why your website needs validation]]></title>
        <id>https://dev.to/jordanfinners/why-your-website-needs-validation-44jm</id>
        <link href="https://dev.to/jordanfinners/why-your-website-needs-validation-44jm"/>
        <updated>2021-05-30T21:19:39.000Z</updated>
        <summary type="html"><![CDATA[Contents



 Intro

 Forms

 Custom Validation

 Summary




  
  
  Intro 


Continuing on from my previous blog about website security week, we're going to talk about a validation.
If accept user input, you are going to need to validate the input. Non validated user inputs can lead to security vulnerabilities for example SQL injection attacks, where user input escapes your database and starts modifying it. It can also lead to exceptions from your code if a user inputs text rather than a number for example.
Please Please Please ensure you do the same validation server side as you do on the frontend (client) side.



You user inputs should be contained in HTML forms which comes with lots of powerful validation tools built in.
First thing to check on your inputs is, are you using the correc…]]></summary>
        <author>
            <name>Jordan Finneran</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[TypeScript][PostgreSQL]Try TypeORM]]></title>
        <id>https://dev.to/masanori_msl/typescript-postgresql-try-typeorm-28en</id>
        <link href="https://dev.to/masanori_msl/typescript-postgresql-try-typeorm-28en"/>
        <updated>2021-05-30T19:13:07.000Z</updated>
        <summary type="html"><![CDATA[Intro


This time, I will try accessing PostgreSQL from a TypeScript(Node.js) project.
Node.js ver.16.2.0
TypeScript ver.4.3.2
ts-node ver.10.0.0
typeorm ver.0.2.32
pg ver.8.6.0",
reflect-metadata ver.0.1.13
According to the documents, I installed TypeORM and added some files.
TypeORM - Amazing ORM for TypeScript and JavaScript (ES7, ES6, ES5). Supports MySQL, PostgreSQL, MariaDB, SQLite, MS SQL Server, Oracle, WebSQL databases. Works in NodeJS, Browser, Ionic, Cordova and Electron platforms.
{
    "type": "postgres",
    "host": "localhost",
    "port": 5432,
    "username": "postgres",
    "password": "example",
    "database": "print_sample",
    "synchronize": true,
    "logging": true,
    "entities": [
       "ts/src/entity/**/*.ts"
    ],
    "migrations": [
       "src/migration/**…]]></summary>
        <author>
            <name>Masui Masanori</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to use MJS files in Node.js?]]></title>
        <id>https://dev.to/bennycode/how-to-use-mjs-files-in-node-js-23ep</id>
        <link href="https://dev.to/bennycode/how-to-use-mjs-files-in-node-js-23ep"/>
        <updated>2021-05-30T18:23:55.000Z</updated>
        <summary type="html"><![CDATA[Today I want to show you how to import functions from *.mjs files. You can think of MJS as JavaScript code that is exported in a standardized module format. It's basically (M)odular (J)ava(S)cript. The standardization itself is called ECMAScript Modules (ESM).
By default, the Node.js platform doesn't use ES modules but CommonJS, which is a different module formatting system. Fortunately, the Node.js team introduced the concept of ES modules back in 2017 with Node v8.9.0. At that time, you could run Node.js with an additional flag (--experimental-modules) to make use of it.
Since Node v13.2.0 the experimental flag is no longer required. It only takes a few steps now to use an ECMAScript module. Let me show you how to do it.
Setting up an ES module is simple: Just create a file with the *.mj…]]></summary>
        <author>
            <name>Benny Neugebauer</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Answer: What is the best way to make a simple Video API in Node.js?]]></title>
        <id>https://dev.to/harshsavasil/answer-what-is-the-best-way-to-make-a-simple-video-api-in-node-js-1gfb</id>
        <link href="https://dev.to/harshsavasil/answer-what-is-the-best-way-to-make-a-simple-video-api-in-node-js-1gfb"/>
        <updated>2021-05-30T18:17:56.000Z</updated>
        <summary type="html"><![CDATA[answer re:  What is the best way to make a simple Video API in Node js?
            
        
May 30 '21
        
We can use HTTP range requests and the streaming APIs of the fs module in Node.js to create video streaming APIs.
HTTP range requests allow sending only a portion of an HTTP message from a server to a client. Partial requests are useful for large media or downloading files with…
Open Full Answer]]></summary>
        <author>
            <name>Harsh Gupta</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How I use vim to Edit Code Faster]]></title>
        <id>https://dev.to/bigcoder/how-i-use-vim-to-edit-code-faster-4gb5</id>
        <link href="https://dev.to/bigcoder/how-i-use-vim-to-edit-code-faster-4gb5"/>
        <updated>2021-05-30T17:30:55.000Z</updated>
        <summary type="html"><![CDATA[If you work in a programming language that is not C, C++ or a shell language then you may not be using the vim text editor. Vim is an acronym for vi improved and it has been around since the 1970s. 
Due to the popularity of Unix and Linux systems, vim has been ported to most operating systems which means that, with minimal effort, you can run vim on your own computer. 
Using vim is often described as “the best thing since sliced bread” and many people believe it makes coding easier. 
Learning vim is not something you can do overnight and you will only become efficient if you practice for some time. 
To practice vim, I recommend this site.
Before I discovered Vim, I learned to program using basic text editors like Notepad++. They are easy to use, but they don't have any function to make you…]]></summary>
        <author>
            <name>BigCoder</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to submit a form with Playwright?]]></title>
        <id>https://dev.to/kami4ka/how-to-submit-a-form-with-playwright-3185</id>
        <link href="https://dev.to/kami4ka/how-to-submit-a-form-with-playwright-3185"/>
        <updated>2021-05-30T16:05:54.000Z</updated>
        <summary type="html"><![CDATA[In this article, we'll take a look at how to submit forms using Playwright. This knowledge might be beneficial while scraping the web, as it allows to get the information from the target web page, which requires providing parameters before.
We're going to check out several different topics about the form submission:
how to fill an input and click a button using Playwright API
how to upload a file to a file input using Playwright API
hot to fill an input and click a button using an internal Javascript execution
Let's start with automating Google search using Playwright.
By visiting Google.com and revealing HTML sources, we may observe required selectors for both the search input field and the search button.

The text input has the name attribute q, while the form submission button has the n…]]></summary>
        <author>
            <name>Oleg Kulyk</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AWS DynamoDB DocumentClient & Node.js - Complete Cheat Sheet]]></title>
        <id>https://dev.to/rafalwilinski/aws-dynamodb-documentclient-node-js-complete-cheat-sheet-551m</id>
        <link href="https://dev.to/rafalwilinski/aws-dynamodb-documentclient-node-js-complete-cheat-sheet-551m"/>
        <updated>2021-05-30T15:13:28.000Z</updated>
        <summary type="html"><![CDATA[DynamoDB Node.js Query Examples


This cheat sheet should help you how to perform variefy of operations starting from simple queries ending with complex transactions using AWS DynamoDB DocumentClient and Node.js.
There are two basic ways to interact with DynamoDB tables from Node.js applications:
Class AWS.DynamoDB from AWS SDK for JavaScript/Typescript
AWS.DynamoDB.DocumentClient which simplifies working with DynamoDB items by abstracting away DynamoDB Types and converting responses to native JS
This cheat sheet will mostly focus on DocumentClient but some of the operations like creating tables must be run using classical DynamoDB service.
If you're looking for similar cheat sheet but for Python, you can find it here
Bonus: AWS recently announced Node.js AWS SDK v3. I wrote a tutorial on …]]></summary>
        <author>
            <name>Rafal Wilinski</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AWS DynamoDB DocumentClient & Node.js - Complete Cheat Sheet]]></title>
        <id>https://dev.to/rafalwilinski/aws-dynamodb-documentclient-node-js-complete-cheat-sheet-551m</id>
        <link href="https://dev.to/rafalwilinski/aws-dynamodb-documentclient-node-js-complete-cheat-sheet-551m"/>
        <updated>2021-05-30T15:13:28.000Z</updated>
        <summary type="html"><![CDATA[DynamoDB Node.js Query Examples


This cheat sheet should help you how to perform variefy of operations starting from simple queries ending with complex transactions using AWS DynamoDB DocumentClient and Node.js.
There are two basic ways to interact with DynamoDB tables from Node.js applications:
Class AWS.DynamoDB from AWS SDK for JavaScript/Typescript
AWS.DynamoDB.DocumentClient which simplifies working with DynamoDB items by abstracting away DynamoDB Types and converting responses to native JS
This cheat sheet will mostly focus on DocumentClient but some of the operations like creating tables must be run using classical DynamoDB service.
If you're looking for similar cheat sheet but for Python, you can find it here
Bonus: AWS recently announced Node.js AWS SDK v3. I wrote a tutorial on …]]></summary>
        <author>
            <name>Rafal Wilinski</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[MobX State Tree (MST) - State Management]]></title>
        <id>https://dev.to/kpiteng/mobx-state-tree-mst-state-management-5h6o</id>
        <link href="https://dev.to/kpiteng/mobx-state-tree-mst-state-management-5h6o"/>
        <updated>2021-05-30T15:02:13.000Z</updated>
        <summary type="html"><![CDATA[Hello Developers, Everyone uses various State Management library on their Application, many of us already use Redux, Redux Saga, Redux Rematch. Today we will explore MobX which is the most popular Redux alternative. MobX State Tree (MST) is the powerful state management library which you can use from small to enterprise grade applications and it’s very simple to plug & play. I will take you from core concept to component level integration, So let’s continue,
What will we cover?
What is MobX-State-Tree?
Why should I use MobX-State-Tree?
MobX-State-Tree Installation
Getting Started - MobX Entity
Creating Model
Creating Model Instance
Meeting Types
Modifying Data
Snapshot
Snapshot to Model
Getting to the UI
Improving Render Performance
Computed Properties
References
MobX-State-Tree (MST) is a…]]></summary>
        <author>
            <name>kpiteng</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to use Notion API with NextJS]]></title>
        <id>https://dev.to/geobrodas/how-to-use-notion-api-with-nextjs-5940</id>
        <link href="https://dev.to/geobrodas/how-to-use-notion-api-with-nextjs-5940"/>
        <updated>2021-05-30T14:27:46.000Z</updated>
        <summary type="html"><![CDATA[Notion API is finally here, and it's so cool. But you must be wondering what is Notion in the first case? Well, it's a powerful productivity tool for managing your daily day-to-day tasks, or maybe jotting down a lot of ideas you want to put up in your next blog? There are unlimited possibilities. 
I myself found it annoying at first because I have a habit of writing down things instead of typing them out on a notepad. But turns out, it did boost my productivity moreover, it's much more noticeable when you are working with a team.
Now imagine if you could display all these data to a front-end, and update them directly on the Notion database instead of pushing some extra line of code. Your favorite tool now has its own API!
This tutorial is beginner-friendly, so don't hesitate. I assure you,…]]></summary>
        <author>
            <name>Georgey</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Together in a Safer Environment]]></title>
        <id>https://dev.to/sourceless/together-in-a-safer-environment-fl2</id>
        <link href="https://dev.to/sourceless/together-in-a-safer-environment-fl2"/>
        <updated>2021-05-30T13:54:01.000Z</updated>
        <summary type="html"><![CDATA[The hybrid network provides all the critical features of a public Blockchain, such as secure, transparent, immutable, and decentralized, and restricts the ability to access, view, or change transactions in any way.
Distributed ledger technology (DLT) is a digital system for recording the transaction of assets in which the transactions and their details are recorded in multiple places at the same time. Unlike traditional databases, distributed ledgers have no central data store or administration functionality.
Instead, a distributed network of nodes maintains a public record of all transactions between them. In a blockchain, transactions are made on a record called a "block" that is updated by the distributed public ledger]]></summary>
        <author>
            <name>SourceLess Blockchain</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Track user location coordinates realtime using geolocation api, nextjs , nodejs and socket.io]]></title>
        <id>https://dev.to/harshmangalam/track-user-location-coordinates-realtime-using-geolocation-api-nextjs-nodejs-and-socket-io-2nf3</id>
        <link href="https://dev.to/harshmangalam/track-user-location-coordinates-realtime-using-geolocation-api-nextjs-nodejs-and-socket-io-2nf3"/>
        <updated>2021-05-30T12:49:51.000Z</updated>
        <summary type="html"><![CDATA[Hello developers , realtime things are really mind blowing it have a lot of fun that amaze us.
When a new user will connect other users in app will get new user coordinates and new user will get all users coordinates.
Nextjs
Socket.io-client
Chakra UI
Geolocation API
hooks
context
vercel


Nodejs


socket.io


heroku







 / 
        live-location-tracker-nextjs-client
      
    
This is a Next.js project bootstrapped with create-next-app.
First, run the development server:
npm run dev
# or
yarn dev
Open http://localhost:3000 with your browser to see the result.
You can start editing the page by modifying pages/index.js. The page auto-updates as you edit the file.
API routes can be accessed on http://localhost:3000/api/hello. This endpoint can be edited in pages/api/hello.js.
The pages/api directory is mapped to /api/*. Files in this directory are treated as API routes instead of React pages.
To learn more about Next.js, take a look at the following resources:
Next.js Documentation - learn about Next.js features and API.
Learn Next.js - an interactive Next.js tutorial.
You can check out the Next.js GitHub repository - your feedback and contributions are welcome!
The easiest way to deploy your Next.js app is to use the Vercel Platform from…
View on GitHub
 / 
        live-location-tracking-nodejs-socketio-server
      
    
nextjs frontend live]]></summary>
        <author>
            <name>Harsh Mangalam</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Docker Fundamentals]]></title>
        <id>https://dev.to/samalasumanth0262/docker-fundamentals-101-l80</id>
        <link href="https://dev.to/samalasumanth0262/docker-fundamentals-101-l80"/>
        <updated>2021-05-30T12:48:58.000Z</updated>
        <summary type="html"><![CDATA[since you landed here you definitely want to know what docker is?
We'll start off by telling the problem statement: let's say we want to use create-react-app where the OS is not compatible of node to install npm install -g create-react-app 😿 , you can achieve this by using Docker Image. Hurray!!!! Interesting. isn't it? 🤔
WHAT is docker? simply you can think off like a Sea Port harbour docker 🚢 where we have containers to be exported into other places across the world and container contains the goods and materials. Similarly, our docker also has containers but here we call those goods and materials as an Image, just a technical term. so all the images need a place to store we call it Docker Hub. just like a GitHub is the place to store code as simple as that.
Now, How does docker solve …]]></summary>
        <author>
            <name>Samala Sumanth</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to plot a box plot using R]]></title>
        <id>https://dev.to/maxwizard01/how-to-plot-a-box-plot-using-r-5dbg</id>
        <link href="https://dev.to/maxwizard01/how-to-plot-a-box-plot-using-r-5dbg"/>
        <updated>2021-05-30T12:27:31.000Z</updated>
        <summary type="html"><![CDATA[How do you construct a boxpot with ease using R



  
  
  How to plot Boxplot in R-programming


box plot also is very similar to all others graphs in method. All we need to draw it is our data then the box plot() function.
Represent the following  weight of some students in boxpot.
Codes
weight=c(1,3, 6, 1,3,3, 4, 3, 3, 1, 3 ,5 ,1, 2, 1 ,4, 3, 2 ,3 ,1 ,1, 1 ,1, 4, 3, 1,5,5)
boxplot(weight)

Result>>


Now that is nice, how about given it color and title?? then we can make use of some other parameters in boxplot() function. they are :
main: to write the main title of the graph
col: to give preferable colour for our boxpot.
col.main : to give a preferable font color of our main title
xlab: to give a label on x axis
use the weights in example to plot boxplot.
weight=c(1,3, 6, 1,3,3, 4, 3, 3, 1, 3 ,5 ,1, 2,
         1 ,4, 3, 2 ,3 ,1 ,1, 1 ,1, 4, 3, 1,5,5)
boxplot(weight,
        ylab = "numbers",
        main = "The weight of some students.",
        col = "darkorange",
        col.main='red',border='green')

Result>>

One more thing is that you can have more than one boxplot on your graph, just list them in the boxplot() function.  
Example
Mathematics=c(61,53, 46, 61,63,53, 44, 43, 43, 61, 33 ,45 ,31, 52,    51 ,54, 53, 44 ,38 ,51 ,41, 51 ,61, 44, 53, 61,45,55)
English = c(51,43, 66, 51,43,33, 44, 53, 63, 41, 53, 45 ,51, 52,
         61 ,44, 33, 42 ,53 ,61 ,61, 51 ,41, 44, 43, 41,45,45)
boxplot(Mathematics,English
        ylab = "numbers",
        main = "The Mathematics and English Score of some students.",
        col = "orange",
        col.main='red',border='blue')

Result>>

Now I believe you now understand both stem and boxplot. I hope you find this article helpful?? consider to follow me. it's the guy Maxwizard. chat me up on whatsapp(07045225718) if you have any question on this or any big deal. enjoy coding!]]></summary>
        <author>
            <name>maxwizard01</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to plot stem and leaf in R-programming]]></title>
        <id>https://dev.to/maxwizard01/how-to-plot-stem-and-leaf-in-r-programming-3529</id>
        <link href="https://dev.to/maxwizard01/how-to-plot-stem-and-leaf-in-r-programming-3529"/>
        <updated>2021-05-30T12:21:15.000Z</updated>
        <summary type="html"><![CDATA[Stem-and-leaf Charts


There are a range of graphical summaries of data. If the data set is relatively small, the stem-and-leaf diagram is
stem() function.
Codes>>
score=c(21, 13, 16, 23, 14, 12, 14, 13 ,22 1,20, 10, 20 ,16, 28 21,14,14,18,22,15)
stem(scores)

Result>>
> score=c(21, 13, 16, 23, 14, 12, 14, 13 ,22,13,20, 10, 20 ,16, 28, 21,14,14,18,22,15)
> stem(score)

  The decimal point is 1 digit(s) to the right of the |

  1 | 023334444
  1 | 5668
  2 | 0011223
  2 | 8

Can you see how easy it is?? let's try one more Example
Represent the following data in stem and leaf.
Solution.
data=c(1,3, 6, 1,3,3, 4, 3, 3, 1, 3 ,5 ,1, 2, 1 ,4, 3, 2 ,3 ,1 ,1, 1 ,1, 4, 3, 1,5,5)
stem(data)

Result>>
data=c(1,3, 6, 1,3,3, 4, 3, 3, 1, 3 ,5 ,1, 2, 1 ,4, 3, 2 ,3 ,1 ,1, 1 ,1, 4, 3, 1,5,5)
> stem(data)

  The decimal point is at the |

  1 | 0000000000
  2 | 00
  3 | 000000000
  4 | 000
  5 | 000
  6 | 0

Exercise
I hope this article satisfy your needs?? if so, then don't stop here try to read the next articles..]]></summary>
        <author>
            <name>maxwizard01</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Designing A Simple Key-logger In Python]]></title>
        <id>https://dev.to/biah/designing-a-simple-key-logger-in-python-5ek8</id>
        <link href="https://dev.to/biah/designing-a-simple-key-logger-in-python-5ek8"/>
        <updated>2021-05-30T12:10:24.000Z</updated>
        <summary type="html"><![CDATA[Before we start, you need to be conversant with the python programming language, it is what we are going to use in this tutorial. Let’s get started.
We are going to use the keyboard module for the keylogger.  To install it, open your terminal type in pip install keyboard. If no error occured, you are good to go.
After that, open a new python file and let's start coding 🕶️
import keyboard #The keyboard module

def logger(event):
    print(event.name)

keyboard.on_press(logger)
keyboard.wait()

I can say we are done, maybe above 50% done. Let me explain the code; on the first line, we imported the keyboard module. Then we defined our logger(event) function, it takes event as parameter and then it print's it's .name out. Then to the next line, we assigned the logger function as a parameter t…]]></summary>
        <author>
            <name>Lucretius Biah</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Understanding Kubernetes in a visual way (in 🎥 video): part 15 – Deployment Rolling Update]]></title>
        <id>https://dev.to/aurelievache/understanding-kubernetes-in-a-visual-way-in-video-part-15-deployment-rolling-update-i19</id>
        <link href="https://dev.to/aurelievache/understanding-kubernetes-in-a-visual-way-in-video-part-15-deployment-rolling-update-i19"/>
        <updated>2021-05-30T11:51:10.000Z</updated>
        <summary type="html"><![CDATA[Understanding Kubernetes can be difficult or time-consuming. In order to spread knowledges about Cloud technologies I started to create sketchnotes about Kubernetes, then I've auto-published a book and since now I've started a new serie of video! :-)
I imagined a serie of short videos with a mix of sketchnotes and speech.
I think it could be a good way, more visual, with audio & video to explain Kubernetes (and others technologies).
This episode is focused on Deployment Rolling Update.




The video is in French BUT I done the subtitles in english (and french too).
If you liked the video and are interested to watch another ones, please give me some feedbacks (and you can also subscribe to my Youtube channel, if you want to ❤️).
If you are interested, I published all the sketchnotes on Kubernetes (and new ones!) to make a "book" of 165 pages: "Understanding Kubernetes in a visual way".
If you like theses sketchnotes, you can follow me, I will publish others sketchs shortly :-).]]></summary>
        <author>
            <name>Aurélie Vache</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Full Tutorial #12: Querying Using GraphQL and Storing Data in Recoil | Microservices Chat App Using React, Node and GraphQL]]></title>
        <id>https://dev.to/bettercodingacademy/full-tutorial-12-querying-using-graphql-and-storing-data-in-recoil-microservices-chat-app-using-react-node-and-graphql-cmh</id>
        <link href="https://dev.to/bettercodingacademy/full-tutorial-12-querying-using-graphql-and-storing-data-in-recoil-microservices-chat-app-using-react-node-and-graphql-cmh"/>
        <updated>2021-05-30T11:47:39.000Z</updated>
        <summary type="html"><![CDATA[About Me: I've been a professional web developer for just over 10 years now. I'm currently the lead web development instructor at Better Coding Academy, and as part of what I do, I post videos on our YouTube channel at https://www.youtube.com/c/BetterCodingAcademy.
(Subscribe for awesome web development content!)
Part 12 of the Microservices Chat App is here! In this episode, I show how we can query the GraphQL API using Apollo Client, and store the resulting information using Recoil.




Happy coding!
Source code: https://github.com/lucaschen/microservices-chat-demo]]></summary>
        <author>
            <name>Better Coding Academy</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Best Node.js Framework]]></title>
        <id>https://dev.to/allyedge/best-node-js-framework-5bba</id>
        <link href="https://dev.to/allyedge/best-node-js-framework-5bba"/>
        <updated>2021-05-30T11:16:44.000Z</updated>
        <summary type="html"><![CDATA[Looking for a detailed comparison of the most popular Node.js frameworks? Then you are at the right place.
In this story we will compare the most popular three Node.js frameworks (aka Express.js, Nest.js and Sails.js), and talk about why/when to use them.
Interested? Read it now!
https://alimarslank.medium.com/best-node-js-framework-d4a8ee9b7168]]></summary>
        <author>
            <name>Allyedge</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Sort an Array Element Ascending order without sort() Method ?]]></title>
        <id>https://dev.to/arvind632/sort-an-array-element-ascending-order-without-sort-method-23c7</id>
        <link href="https://dev.to/arvind632/sort-an-array-element-ascending-order-without-sort-method-23c7"/>
        <updated>2021-05-30T11:14:38.000Z</updated>
        <summary type="html"><![CDATA[function bubbleSort(array) {
    var done = false;
    while (!done) {
        done = true;
        for (let i = 0; i &lt; array.length; i++) {
          if (array[i] &gt; array[i+1]) {
             done = false;
             var tmp = array[i];
            array[i] = array[i+1];
            array[i+1] = tmp;
          }
        }
    }
    console.log(array); 
}

var numbers = [12, 10, 15, 1, 11, 14, 13, 16];
bubbleSort(numbers);]]></summary>
        <author>
            <name>Arvind SIngh</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Scheduling API for Digital Courses and e-learning]]></title>
        <id>https://dev.to/spurwing/scheduling-api-for-digital-courses-and-e-learning-7hj</id>
        <link href="https://dev.to/spurwing/scheduling-api-for-digital-courses-and-e-learning-7hj"/>
        <updated>2021-05-30T10:57:53.000Z</updated>
        <summary type="html"><![CDATA[The world of work, learning, and play has been forever changed. What was once a source of anxiety has now begun to bear fruit, showing us that the new normal is a frontier with some exciting opportunities for training and learning.
As businesses and institutions acclimatize to their new environment, attempting to schedule classes around the world is becoming a costly problem to fix.
Spurwing's time management solutions and API systems can help institutions in this transition: offering scheduling interfaces that can even help businesses open themselves to the training systems of the future.
 
Distance learning and work from home have spread students, teachers, or tutors around the world. And, for perhaps the first time, businesses are having to contend with digital classrooms full of learne…]]></summary>
        <author>
            <name>Spurwing</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to receive video in real-time for computation?]]></title>
        <id>https://dev.to/d1coy/how-to-receive-video-in-real-time-for-computation-bck</id>
        <link href="https://dev.to/d1coy/how-to-receive-video-in-real-time-for-computation-bck"/>
        <updated>2021-05-30T10:56:05.000Z</updated>
        <summary type="html"><![CDATA[Hello developers, I want to create a Deep learning model which can detect objects in real time, I'll be creating an Android application which will send realtime video. The Backend which will be created in node.js will receive the video and forward it to the DL model to for further computation in real-time. After that the model will providee the results which needs to be sent back toh the Android application / client for displaying the results.
How to receive the video in Backend in realtime so that the DL model can do the computation?]]></summary>
        <author>
            <name>The_Crypto_Guy</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[7 Ways to Use Your Linux Terminal]]></title>
        <id>https://dev.to/harvey/7-ways-to-use-your-linux-terminal-4fk6</id>
        <link href="https://dev.to/harvey/7-ways-to-use-your-linux-terminal-4fk6"/>
        <updated>2021-05-30T09:40:19.000Z</updated>
        <summary type="html"><![CDATA[The terminal is the command line interface (CLI) to a Linux or Unix-like computer operating system. It’s a place where you can type in commands and get things done. Here are 7 ways to use your Linux terminal
1. Manage your hard drive
In order to get anything done with your computer, you will need to manage your hard drive. Using commands in your terminal, you can easily perform tasks like creating, moving, copying and deleting files. 
It's important to note that these commands can be destructive, so any rm command you perform with them will remove data from your computer 
2. Manage Your Cloud Servers
You can connect to your cloud servers / vps servers using a program called ssh. After logging in to your server, you can use any Linux command.
One click deploy vps servers and then control th…]]></summary>
        <author>
            <name>Harvey</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Securing Azure SignalR +Azure App Service - Part 2]]></title>
        <id>https://dev.to/jayendran/securing-azure-signalr-azure-app-service-part-2-2mf1</id>
        <link href="https://dev.to/jayendran/securing-azure-signalr-azure-app-service-part-2-2mf1"/>
        <updated>2021-05-30T09:33:06.000Z</updated>
        <summary type="html"><![CDATA[In the previous part, we saw the basics of azure signalr connections. In this part we are going to see how to secure the connection between azure signalr and web app.
By the design itself Azure signalr service has a public endpoint that is accessible through the internet, and it currently does not support deploying directly into a virtual network and allowing IP address because of this you cannot leverage certain networking features with the offering's resources such as network security groups, route tables, or other network dependent appliances such as an Azure Firewall. 
However, it allows you to create private endpoints to secure the traffic between resources in your virtual network and Azure SignalR Service.
You can also use Service tags and configure network security group rules to re…]]></summary>
        <author>
            <name>Jayendran Arumugam</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Beginner's Guide to Linux Commands]]></title>
        <id>https://dev.to/jones268/a-beginner-s-guide-to-linux-commands-49hf</id>
        <link href="https://dev.to/jones268/a-beginner-s-guide-to-linux-commands-49hf"/>
        <updated>2021-05-30T09:13:09.000Z</updated>
        <summary type="html"><![CDATA[The world is going Linux. At least that's what we tell ourselves every time we open a terminal window and type in a cryptic series of characters that do nothing but make us more frustrated than we were when we started. If you've ever considered using Linux, but aren't sure where to start, this guide is for you.
The command line might seem intimidating at first, but it's actually not so bad. You can use the GUI (Graphical User Interface) if you want, but the terminal has a lot of cool features that make using Linux much easier.
If you're on Ubuntu and want to see what commands you have available, just hit the CTRL+ALT+T key combination and a box will appear in the top left corner showing you all the different programs available. 

Linux commands are essentially small bundles of text designed to perform a specific task, such as move files from one location to another or run a program.
The Linux command line is not intimidating once you learn a few basic commands. The following are some of the most common commands and cover a wide range of tasks you might want to do.
The cd command stands for "change directory" and it changes the current working directory on your computer. It's very useful for navigating around your filesystem.
For example, if you're in your home directory and want to get to /etc/hosts, you could type:
cd /etc/hosts

You could also do this if you're already in /etc/hosts but want to go back up one directory:
cd ..

If you want to see what's in your current working directory, use the ls command like this: ls.
ls

This will list all of the files and directories in the current working directory.
There are many other commands that accomplish the same tasks for some commands, such as cp (copy) and mv (move).
cp file /home/user/Desktop/

There's a lot more to learn, but the commands in this article will serve you well no matter which Linux distro you're using. They even work on Mac OS X and on the BSD systems.
If you are new to the command line, I recommend this site]]></summary>
        <author>
            <name>jones268</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[React Runtime Variables]]></title>
        <id>https://dev.to/an1meshk/react-runtime-variables-49dc</id>
        <link href="https://dev.to/an1meshk/react-runtime-variables-49dc"/>
        <updated>2021-05-30T03:56:05.000Z</updated>
        <summary type="html"><![CDATA[As React is a single page application that runs as static page inside a browser runtime environment, there is nothing like a runtime variable. However, there are few hacks through which we can implement dynamic variables in a React application.
But the question is why we need a runtime variable for static page? Well, in my experience there are few cases which compel us to look for runtime or dynamic variable in a React app or for that matter of fact any SPA. For example, different API endpoints for local, pre-prod, and production, different API keys for pre-prod and prod, and likewise.
An environment file
A Bash script
A NPM script 
Include script tag in public/index.html
Script where runtime variable is needed
Create an env.preprod file, create this file at /public/env/ location e.g. /pub…]]></summary>
        <author>
            <name>Animesh Kumar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Routing Requests in Node Server]]></title>
        <id>https://dev.to/achukka/routing-requests-in-node-server-12gj</id>
        <link href="https://dev.to/achukka/routing-requests-in-node-server-12gj"/>
        <updated>2021-05-30T03:29:09.000Z</updated>
        <summary type="html"><![CDATA[In this post, we will learn how to route requests using Router on Express Server.
Routing determines how an application responds to a request for particular endpoint. 
For an introduction to routing, please see Express docs
When a server manages multiple objects it results in serving multiple endpoints. At this point,  it would become harder to main the application logic at one place. Express helps us divide the application logic based on objects it serves into individual routes. 
We will demonstrate a simple example of routing on a node server
You can skip to tutorial and refer to this commit for source code
This post assumes users have the knowledge of basic express server. If you are not familiar with it please refer to demo example


We will be using postman to test our end points




…]]></summary>
        <author>
            <name>Aditya Chukka</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[5 Common Mistakes When Using the Bootstrap Framework.]]></title>
        <id>https://dev.to/amran92/5-common-mistakes-when-using-the-bootstrap-framework-28c</id>
        <link href="https://dev.to/amran92/5-common-mistakes-when-using-the-bootstrap-framework-28c"/>
        <updated>2021-05-30T02:33:54.000Z</updated>
        <summary type="html"><![CDATA[At first glance, this framework seems to us as simple and easy to deal with, and of course, it is so, and starting to use it is not difficult. Documenting this framework is well written and contains a lot of programming code related to HTML, CSS, and JavaScript. but some errors and problems may not be apparent or may be present in ambiguous use cases. Because the Bootstrap framework seems simple and easy to use, this framework spread like wildfire and many developers started using it, which led to many errors and some problems.

Mistake 1: This framework was misunderstood in the first place.
There are some misconceptions present in the minds of developers about this framework, and this may be because these concepts are not explicitly and clearly present in the framework site or because dev…]]></summary>
        <author>
            <name>Amran Hussein</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Upgrade a Rails app from the Heroku-16 to the Heroku-18 Stack]]></title>
        <id>https://dev.to/jbranchaud/upgrade-a-rails-app-from-the-heroku-16-to-the-heroku-18-stack-5kp</id>
        <link href="https://dev.to/jbranchaud/upgrade-a-rails-app-from-the-heroku-16-to-the-heroku-18-stack-5kp"/>
        <updated>2021-05-30T00:44:42.000Z</updated>
        <summary type="html"><![CDATA[I'm working with a client to urgently upgrade their Rails app from the Heroku-16 stack to the Heroku-18 stack. Heroku has already end-of-life'd the Heroku-16 stack at the beginning of this month. And in a few days, on June 1st, they will completely turn off support patches and new builds of Heroku-16 apps.
The Heroku-18 stack is supported until April 2023 (source).
The minimum Ruby version supported by the Heroku-18 is Ruby 2.4.10 (source).
Install the target Ruby version:
$ asdf install ruby 2.4.10

Switch to that Ruby version:
$ asdf local ruby 2.4.10
$ ruby --version
ruby 2.4.10p364 (2020-03-31 revision 67879) [x86_64-darwin19]

Install an older version of bundler (pre 2.x):
$ gem install bundler:1.17.3

Install all the app's gems with for the new Ruby version using the specific version…]]></summary>
        <author>
            <name>Josh Branchaud</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Setting up a NextJS Markdown Blog with Typescript]]></title>
        <id>https://dev.to/bionicjulia/setting-up-a-nextjs-markdown-blog-with-typescript-3591</id>
        <link href="https://dev.to/bionicjulia/setting-up-a-nextjs-markdown-blog-with-typescript-3591"/>
        <updated>2021-05-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[NextJS has been all the rage, especially in React-land which is where I tend to reside. There's no better way of learning (in my humble opinion), than actually trying to build something from scratch, so what better than experimenting on my personal website. 😆 It was well due for an upgrade anyway, as I was using Ruby with Middleman as my static site generator. And whilst Middleman does the job, it isn't really maintained much anymore, and functionality was starting to get stale.
So first things first, here are my basic requirements:
Capable of hosting multiple blogs.
Able to parse blog posts written in markdown.
Proper syntax highlighting of code snippets in the UI.
Quick build process with blazing speeds on the front end.
Capable of being hosted for free e.g. on Netlify or Vercel, with o…]]></summary>
        <author>
            <name>Bionic Julia</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fedora Workstation 34: Guia pós-instalação e Ambiente Dev JavaScript]]></title>
        <id>https://dev.to/thiagoreis/fedora-workstation-34-guia-pos-instalacao-e-ambiente-dev-javascript-jbo</id>
        <link href="https://dev.to/thiagoreis/fedora-workstation-34-guia-pos-instalacao-e-ambiente-dev-javascript-jbo"/>
        <updated>2021-05-29T18:17:50.000Z</updated>
        <summary type="html"><![CDATA[O intuito deste post é apresentar o essencial a se fazer após a instalação do Fedora Workstation 34 e de bônus a configuração de um ambiente essencial de desenvolvimento JavaScript.
Vamos editar o arquivo /etc/dnf/dnf.conf e habilitar os mirrors mais rápidos e aumentar a quantidade de downloads paralelos. Execute os seguintes comandos no terminal:
echo 'fastestmirror=1' | sudo tee -a /etc/dnf/dnf.conf 
echo 'max_parallel_downloads=10' | sudo tee -a /etc/dnf/dnf.conf 
echo 'deltarpm=true' | sudo tee -a /etc/dnf/dnf.conf

Os 3 comandos acima irão adicionar as diretivas fastestmirror, max_parallel_downloads e deltarpm ao arquivo:

Free:
sudo rpm -Uvh https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm 

Non-free:
sudo rpm -Uvh https://download1.rpmf…]]></summary>
        <author>
            <name>Thiago Reis</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript tips: The labeled statement]]></title>
        <id>https://dev.to/davidarmendariz/the-labeled-statement-in-javascript-20f8</id>
        <link href="https://dev.to/davidarmendariz/the-labeled-statement-in-javascript-20f8"/>
        <updated>2021-05-29T15:47:36.000Z</updated>
        <summary type="html"><![CDATA[What if you type in the console something like this?
label: {}

You won't have any errors. This is valid JS!
It turns out you can reference loops in Javascript. This was something I did not know a few days ago, but is a really cool and helpful feature in Javascript. In the following video, I explain you with examples how to use labeled statements.]]></summary>
        <author>
            <name>David Armendáriz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[React + Firebase: A Simple Context-based Authentication Provider]]></title>
        <id>https://dev.to/dchowitz/react-firebase-a-simple-context-based-authentication-provider-1ool</id>
        <link href="https://dev.to/dchowitz/react-firebase-a-simple-context-based-authentication-provider-1ool"/>
        <updated>2021-05-29T15:23:38.000Z</updated>
        <summary type="html"><![CDATA[This post showcases a quick and easy way to make a Firebase-authenticated user available throughout your React web app.
We are using here plain React with Typescript, and no extra state management library like Redux involved.
Firebase offers us to register a callback that gets called every time a user is authenticated or signed out to get notified about the current authentication situation.
import firebase from "firebase/app";

firebase.auth().onAuthStateChanged((user) => {
  if (user) {
    console.log("authenticated", user);
  } else {
    console.log("signed out");
  }
});

We thus could implement a React component that is interested in the authenticated user quite straightforward like this:
import * as React from "react";
import firebase from "firebase/app";

function CurrentUser() {
 …]]></summary>
        <author>
            <name>Denny Christochowitz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to add editable post angular]]></title>
        <id>https://dev.to/mateuszto/how-to-add-editable-post-angular-44el</id>
        <link href="https://dev.to/mateuszto/how-to-add-editable-post-angular-44el"/>
        <updated>2021-05-29T15:21:54.000Z</updated>
        <summary type="html"><![CDATA[Hi, i got my app and now I try to make edit feature but I can't do you got any tutorials or tips?
https://stackblitz.com/edit/angular-ivy-qkhrjx?file=src%2Fapp%2Fnotes%2Fnotes.component.ts]]></summary>
        <author>
            <name>Mateusz Tomczyk</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to add editable post angular]]></title>
        <id>https://dev.to/mateuszto/how-to-add-editable-post-angular-44el</id>
        <link href="https://dev.to/mateuszto/how-to-add-editable-post-angular-44el"/>
        <updated>2021-05-29T15:21:54.000Z</updated>
        <summary type="html"><![CDATA[Hi, i got my app and now I try to make edit feature but I can't do you got any tutorials or tips?
https://stackblitz.com/edit/angular-ivy-qkhrjx?file=src%2Fapp%2Fnotes%2Fnotes.component.ts]]></summary>
        <author>
            <name>Mateusz Tomczyk</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Vim Cheat Sheet]]></title>
        <id>https://dev.to/harvey/the-vim-cheat-sheet-5624</id>
        <link href="https://dev.to/harvey/the-vim-cheat-sheet-5624"/>
        <updated>2021-05-29T14:53:48.000Z</updated>
        <summary type="html"><![CDATA[Vim is a highly configurable text editor built to enable efficient text editing. It is an improved version of the vi editor distributed with most UNIX systems.
Vim is often used by programmers on Linux. But it can be used on Mac OS X and Windows too.

Vim is a powerful text editor that runs in a terminal, yet can be used to edit any kind of file. It's old, it's weird, and it's hard to learn but also one of the most powerful tools for editing code on any operating system.
So what about commands?
Here's a handy cheat sheet to help you get started with the editor. 



Cursor Movement





h
move cursor left


j
move cursor down


k
move cursor up


l
move cursor right


w
jump forwards to the start of a word


b
jump backwards to the start of a word



To write and to use commands press ESC for command mode or i for insert mode.
To save, open and quit a file:



Basic editor commands





:e filename
edit a file in a new buffer


:w
write (save) the file, but don't exit


:wq
write (save) and quit


:x
write (save) and quit


:q
quit (fails if there are unsaved changes)


:q!
quit and throw away unsaved changes


:qa
quit all buffers and windows


ZZ
write (save) current file, if modified, and quit


ZQ
quit without checking for changes



You can copy and paste text too:



Cut and Paste





yy
yank (copy) a line


2yy
yank (copy) 2 lines


p
put (paste) the clipboard after cursor


P
put (paste) before cursor


dd
delete (cut) a line


2dd
delete (cut) 2 lines



There are quite a few commands you have to memorize to use Vim effectively, which can be overwhelming when you’re learning. 
You can use these exercises to memorize commands.]]></summary>
        <author>
            <name>Harvey</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Use Bash to Write a Simple Script]]></title>
        <id>https://dev.to/jones268/how-to-use-bash-to-write-a-simple-script-3loj</id>
        <link href="https://dev.to/jones268/how-to-use-bash-to-write-a-simple-script-3loj"/>
        <updated>2021-05-29T14:37:50.000Z</updated>
        <summary type="html"><![CDATA[Bash is a Unix shell used in Linux and MacOS. We will be using a bash script to make a program that runs in the background. 
You need to know how to open a terminal in your operating system. On Ubuntu, you can press Ctrl+Alt+t . On Mac, you can press Command+Space, then type Terminal and press Enter.
To make bash scripts, you should know Linux commands. To practice the command line, you can use this site
A Bash script is a text file containing a series of Bash commands. When the file is executed, the commands are executed in sequence as they appear in the text file.
To get started, you can create a new script called my_script.sh. 
A simple script would be:
echo "Hello World"

Make it executable with the command:
chmod +x my_script.sh

This script will run when you enter the following comma…]]></summary>
        <author>
            <name>jones268</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Welcome white hackers]]></title>
        <id>https://dev.to/jmau111/welcome-white-hackers-4m62</id>
        <link href="https://dev.to/jmau111/welcome-white-hackers-4m62"/>
        <updated>2021-05-29T14:37:44.000Z</updated>
        <summary type="html"><![CDATA[If hackers want to help you, don't reject them.
Here is a short explanation, but be aware these are generic names inspired by old western movies!
Hackers are of all kinds, genders, and ages. Forget about the hoodie, the darkroom, and the need for recognition. Not that the cliché never happens, but remember it's a stereotype.
Anyway, not all hackers are cybercriminals. White hats or "ethical hackers" use their skills to test and ultimately improve security for various organizations and people. For example, banks and medical services can be involved.
They use the same techniques as gray and black hats to infiltrate systems. Black hats are known for their dark intentions. I would describe gray hats as "not always ethical hackers." Sometimes, they do illegal stuff.
If you're a black hat, there…]]></summary>
        <author>
            <name>Julien Maury</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[vim vs. emacs]]></title>
        <id>https://dev.to/harvey/vim-vs-emacs-5e96</id>
        <link href="https://dev.to/harvey/vim-vs-emacs-5e96"/>
        <updated>2021-05-29T14:05:56.000Z</updated>
        <summary type="html"><![CDATA[Vim and emacs are two of the most popular text editors in the world. They are very different, with a different design philosophy.
Vim and Emacs are still used to this day and are both great choices 😁
Vim's main advantage is that it is very good at being a text editor and that you can do a lot without having to learn anything new.
You can install plugins, change key mappings, etc. either with the builtin scripting language or by sourcing scripts from your .vimrc .
Emacs is a text editor but more than that. It can be used for email, browsing the internet and a lot more.
Vim is a modal editor. It operates in either the insert mode (where keystrokes are entered and text is composed) or the command mode (where text can be moved and modified). 
It is not until you exit command mode and return t…]]></summary>
        <author>
            <name>Harvey</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[gpg command examples]]></title>
        <id>https://dev.to/jones268/gpg-command-examples-2dek</id>
        <link href="https://dev.to/jones268/gpg-command-examples-2dek"/>
        <updated>2021-05-29T13:39:07.000Z</updated>
        <summary type="html"><![CDATA[gpg is a program to encrypt and decrypt files. In other words, it is a program for privacy and security.
Your data is safe if you store it on gpg (i.e. encrypted).
So why would you expose your secret information to the threat of being stolen by leaking it to a computer disk?
The only reason is ignorance, because encryption is easy and saves you effort and money in the long run.
Tools like gpg make encryption as easy as saving a file, or even easier.
gpg linux will help you encrypt your e-mails or to encrypt files on your disk so that nobody else can read them without knowing the decryption password which you alone know.
If you are new to the linux command line, you can practice here
Encryption is a method for obscuring electronic data from those who should not see it. 
Encrypted data is un…]]></summary>
        <author>
            <name>jones268</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[gpg command examples]]></title>
        <id>https://dev.to/jones268/gpg-command-examples-2dek</id>
        <link href="https://dev.to/jones268/gpg-command-examples-2dek"/>
        <updated>2021-05-29T13:39:07.000Z</updated>
        <summary type="html"><![CDATA[gpg is a program to encrypt and decrypt files. In other words, it is a program for privacy and security.
Your data is safe if you store it on gpg (i.e. encrypted).
So why would you expose your secret information to the threat of being stolen by leaking it to a computer disk?
The only reason is ignorance, because encryption is easy and saves you effort and money in the long run.
Tools like gpg make encryption as easy as saving a file, or even easier.
gpg linux will help you encrypt your e-mails or to encrypt files on your disk so that nobody else can read them without knowing the decryption password which you alone know.
If you are new to the linux command line, you can practice here
Encryption is a method for obscuring electronic data from those who should not see it. 
Encrypted data is un…]]></summary>
        <author>
            <name>jones268</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Writing An Operating System - The Boot Process (Part 1)]]></title>
        <id>https://dev.to/arriqaaq/writing-an-operating-system-the-boot-process-part-1-48p0</id>
        <link href="https://dev.to/arriqaaq/writing-an-operating-system-the-boot-process-part-1-48p0"/>
        <updated>2021-05-29T13:04:46.000Z</updated>
        <summary type="html"><![CDATA[This post was originally published here
My journey on learning to build a simple OS
How many times have you read an OS book but not been able to code one?Operating System (OS) books are tedious, but only theory makes it hard to understand how an OS actually works. Here is my attempt to write a simple OS and document some of the concepts learned.
On a mac, install Homebrew and then brew install qemu nasm
For testing these low-level programs without continuously having to reboot a machine or risk scrubbing your important data off a disk, we will use a CPU emulator QEmu. 
docker run -it ubuntu bash.
NASM is an assembler and disassembler for the Intel x86 architecture. It can be used to write 16-bit, 32-bit (IA-32) and 64-bit (x86-64) programs. 
Booting an operating system consists of transfer…]]></summary>
        <author>
            <name>Farhan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Single Sign On (SSO) with subdomains using Caddy v2]]></title>
        <id>https://dev.to/shu8/single-sign-on-sso-with-subdomains-using-caddy-v2-l2i</id>
        <link href="https://dev.to/shu8/single-sign-on-sso-with-subdomains-using-caddy-v2-l2i"/>
        <updated>2021-05-29T11:30:43.000Z</updated>
        <summary type="html"><![CDATA[I've recently taken an interest in self-hosting simple open source applications — to have fun, take control of my privacy, and learn more about Linux, Docker and DevOps!
However, with this comes the need to add some form of authentication in front of all your services. For example, you probably don't want just anyone to be able to view all your RSS feeds, or use your markdown editor freely!
The most basic form is HTTP Basic Authentication, which is a pain as it must be configured and re-entered for each subdomain/service. You also need to type it out for each service, which can be challenging on mobile.
Single Sign On (SSO) on the other hand allows you to authenticate with different services with a single login. For example, if you have a Google account, you can go to youtube.com, gmail.co…]]></summary>
        <author>
            <name>Shubham</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Creating a Reddit Clone Using React and GraphQL - 19]]></title>
        <id>https://dev.to/rasikag/creating-a-reddit-clone-using-react-and-graphql-19-1md6</id>
        <link href="https://dev.to/rasikag/creating-a-reddit-clone-using-react-and-graphql-19-1md6"/>
        <updated>2021-05-29T10:51:22.000Z</updated>
        <summary type="html"><![CDATA[This blog post originally posted on my blog site and you can find it here.


From last post, we stopped with a bug that introduce to the system. If we check the console in API we can see there is an error.
error: bind message supplies 2 parameters, but prepared statement "" requires 1


The thing is, in the post resolver, we are providing 2 parameters in the replacement array. But in the query, we only have $1. Because if the user just scroll the home page without login to the system, there will not be an UserId . So we need to change the parameters dynamically according to the query.
So first change the replacement array.
const replacement: any[] = [realLimitPlusOne];

Then set the cursor index dynamically.
if (req.session.userId) {
  replacement.push(req.session.userId);
}
let cursorIdx …]]></summary>
        <author>
            <name>Rasika Gayan Gunarathna</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Setup CI/CD Pipeline using Gitlab-CI to Deploy to Azure Storage & Azure CDN.]]></title>
        <id>https://dev.to/chrisedrego/how-to-setup-ci-cd-pipeline-using-gitlab-ci-to-deploy-to-azure-storage-azure-cdn-15g5</id>
        <link href="https://dev.to/chrisedrego/how-to-setup-ci-cd-pipeline-using-gitlab-ci-to-deploy-to-azure-storage-azure-cdn-15g5"/>
        <updated>2021-05-29T07:56:58.000Z</updated>
        <summary type="html"><![CDATA[A Complete Zero-to-Hero guide in setting up a CI/CD Pipeline using Gitlab-CI to deploy with the help of Azure Storage



For the purpose of this demo, I have already created a simple Angular 7 application that is hosted on Gitlab, the application is a simple, digital clock that looks something like this.


The above diagram describes the whole process, right from a developer pushing the code, to the point where the CI/CD Pipeline builds & deploys the code to Azure Storage (Blob) which is linked to Azure CDN Endpoint.
Developer goes ahead and performs the development locally of the application after which he goes ahead and commits and pushes the code to the version control system in our case it’s Gitlab.


We would then have Gitlab perform the CI/CD in the form of the steps mentioned in git…]]></summary>
        <author>
            <name>chrisedrego</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[secretlint v3.0 support GitHub’s new authentication token detection]]></title>
        <id>https://dev.to/azu/secretlint-v3-0-support-github-token-detection-57eg</id>
        <link href="https://dev.to/azu/secretlint-v3-0-support-github-token-detection-57eg"/>
        <updated>2021-05-29T07:30:31.000Z</updated>
        <summary type="html"><![CDATA[secretlint is a pluggable linting tool to prevent committing credential.
secretlint/secretlint: Pluggable linting tool to prevent committing credential.
secretlint is similar tools to git-secrets, but it is more flexible and support more credentials.
secretlint v3.0 support new GitHub Token format.
Release v3.0.0 · secretlint/secretlint
Recently, GitHub introduce new authentication token format.
Behind GitHub's new authentication token formats | The GitHub Blog
Authentication token format updates are generally available | GitHub Changelog
The character set changed from [a-f0-9] to [A-Za-z0-9_]
secretlint support them!
You can prevent to commit GitHub Tokens!
github.com/secretlint/sec… 
    
You can use secretlint as Docker Container or Node.js CLI.
If you already have installed Docker:
docker run -v `pwd`:`pwd` -w `pwd` --rm -it secretlint/secretlint secretlint "**/*"

If you already have installed Node.js:
npx @secretlint/quick-start "**/*"

secretlint also support custom rules like ESLint.
secretlint documenataion.
You can setup pre-commit Hook per project or pre-commit Hook globally.
pre-commit prevent you to commit your credentials  like GitHub Token, SSH key, AWS crendentials.
If you want to know about secretlint, please visit secretlint/secretlint.]]></summary>
        <author>
            <name>azu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Install Visual Studio Code On CentOS 8]]></title>
        <id>https://dev.to/hitjethva/how-to-install-visual-studio-code-on-centos-8-69d</id>
        <link href="https://dev.to/hitjethva/how-to-install-visual-studio-code-on-centos-8-69d"/>
        <updated>2021-05-29T07:15:59.000Z</updated>
        <summary type="html"><![CDATA[Visual Studio Code is an open-source, lightweight and powerful code editor developed by Microsoft. It supports Linux, macOS and Windows, and runs on the Desktop operating system. It has a built-in support for Node.js, TypeScript and JavaScript. You can add other language support including, Python, Go, PHP, Java and C++ with the help of extensions. It has a lot of features including, debugging, Git control and GitHub, syntax highlighting, snippets, intelligent code completion and code refactoring.
In this tutorial, we will show you how to install Visual Studio Code On CentOS 8.
A fresh CentOS 8 Desktop.
A root password is configured on your server.
If you want to create a new VPS server, Login to your Atlantic.Net Cloud Server. Create a new server, choosing CentOS 8 as the operating system,…]]></summary>
        <author>
            <name>Hitesh Jethva</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Top 10 Tips to Secure your Smartphone in 2021]]></title>
        <id>https://dev.to/techbethink/top-10-tips-to-secure-your-smartphone-in-2021-579h</id>
        <link href="https://dev.to/techbethink/top-10-tips-to-secure-your-smartphone-in-2021-579h"/>
        <updated>2021-05-29T06:59:23.000Z</updated>
        <summary type="html"><![CDATA[As we all know very well that we can keep our body healthy by applying masks doing exercise and so many things but what can we do to keep our smartphone healthy.
Let me tell you how you can secure your phone if you are uncomfortable with the privacy of your smartphone, there are many tips to secure your smartphone with various types of malware but in this article, I will tell you the Top 10 Tips to Secure Your Smartphone in 2021.
Why your smartphone may hack?
Unknown source
Permissions
Keep Your OS and app updated
Different password
Backup 
Public charging 
No need for an antivirus app 
Passphrase 
Incognito mode
Ad Personalisation
To Know More Read The Full Article : https://techbethink.com/top-10-tips-to-secure-your-smartphone-in-2021/]]></summary>
        <author>
            <name>Ruler Of Dark</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to convert your website from HTTP to HTTPS]]></title>
        <id>https://dev.to/deepakfilth/how-to-convert-your-website-from-http-to-https-boj</id>
        <link href="https://dev.to/deepakfilth/how-to-convert-your-website-from-http-to-https-boj"/>
        <updated>2021-05-29T04:49:33.000Z</updated>
        <summary type="html"><![CDATA[Recently I developed a personal blog website, bought a domain and wanted to go-live, but had no idea on how to make my website secure. It wasn't easy to find the list of steps to achieve this, so I wrote an article so that it will be helpful for others.
If you want to protect communication between the client and the server from eavesdroppers then HTTPS is the way to go because if anyone tries to listen to your communication it will be just random characters to them as HTTPS makes all the calls encrypted. Also browsers nowadays enforce all the sites to be secured and you can notice a padlock icon beside the URL, whereas websites which doesn't have a padlock icon beside the URL are flagged as not secured and a warning is displayed before you can continue to browse.
Prepare a Certificate Sign…]]></summary>
        <author>
            <name>deepak pd</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A safer alternative to 'any' in TypeScript]]></title>
        <id>https://dev.to/saulodias/a-safer-alternative-to-any-in-typescript-2g67</id>
        <link href="https://dev.to/saulodias/a-safer-alternative-to-any-in-typescript-2g67"/>
        <updated>2021-05-29T04:28:45.000Z</updated>
        <summary type="html"><![CDATA[We've all been there. For some reason we are not really sure what type of object to expect from an API endpoint. Maybe the API has not been defined yet, or whatever. So what do we do?
You've probably seen code like this, because someone knew it was going to be a list of things.
getData(): Observable<any[]> {
  // return this.http.get<any[]>(API_URL); // TODO: Integrate with api
  return of([]);
}

But we can do better than that.
You might not know what type of object to expect, but you probably have a vague idea. Maybe it is going to be a list of objects with keys (strings) which you don't know yet.
In that case you want to do something like this:
getData(): Observable<Record<string, unknown>[]> {
  // return this.http.get<Record<string, unknown>[]>(API_URL); // TODO: Integrate with api
  …]]></summary>
        <author>
            <name>Dias</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Exploring [key:string]: any in TypeScript]]></title>
        <id>https://dev.to/tlylt/exploring-key-string-any-in-typescript-4ake</id>
        <link href="https://dev.to/tlylt/exploring-key-string-any-in-typescript-4ake"/>
        <updated>2021-05-29T02:31:41.000Z</updated>
        <summary type="html"><![CDATA[With this series I intend to note down some of the confusion and quirky stuff that I encountered out in the wild. So, today I am going to start with this snippet in TypeScript. 
interface CustomState {
  value: {
    [key:string]: any
  }
}

const defaultState : CustomState = {
  value: {}
}

const reducer = (state: CustomState, action: { type: string }): CustomState => {
  if (action.type === 'reset') {
    return {
      value: []
    }
  } else {
    return {
      ...state
    }
  }
}

The CustomState declared at the start includes a property called value, which is an object with key-value pairs of the form string - any. The defaultState variable contains an (empty) object conforming to the interface declared above, which is perfectly normal.
The thing that caught me off-guard is in th…]]></summary>
        <author>
            <name>Liu YongLiang</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Introduction to Chore-cli, easy to generate development infrastructure for typescript project.]]></title>
        <id>https://dev.to/iwfan/introduction-to-chore-cli-easy-to-generate-development-infrastructure-for-typescript-project-1co</id>
        <link href="https://dev.to/iwfan/introduction-to-chore-cli-easy-to-generate-development-infrastructure-for-typescript-project-1co"/>
        <updated>2021-05-29T01:50:01.000Z</updated>
        <summary type="html"><![CDATA[I made a library to generate development infrastructure for typescript project.
chore-cli is the super assistant for building a typescript library. It can generate development infrastructure for projects or libraries, such as prettier, eslint, husky etc, or even Github Actions Config files. It can save a lot of time every time you create new stuff.
As we know, These tools like eslint, prettier can make the codebase better. But it takes us a lot of time to configure them. If you don't want your enthusiasm for writing code to be consumed by these configurations, and if you don't like doing these annoying "chores" frequently, try chore-cli.
It's easy to use：
npx chore-cli <path-to-project>


Take a look at the README.md for examples and further documentation, and let me know if you find any bugs, or you have any idea for improving it.]]></summary>
        <author>
            <name>Zi莱卷</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Install SSL Certificate on XAMPP]]></title>
        <id>https://dev.to/hilmi/how-to-install-ssl-certificate-on-xampp-19lk</id>
        <link href="https://dev.to/hilmi/how-to-install-ssl-certificate-on-xampp-19lk"/>
        <updated>2021-05-29T00:53:45.000Z</updated>
        <summary type="html"><![CDATA[Install XAMPP SSL - In some cases, a developer requires the presence of an SSL certificate on his local server to build a system or program that does require an SSL certificate or the HTTPS protocol. How to install SSL or HTTPS on localhost XAMPP? Following are the steps;
Open your terminal


Type makecert as shown above.


Enter the PEM pass phrase or enter the password. Enter a password that is easy to remember because in the next step we are asked to enter a verification password.


Verify the password or type the password again as in step 3.


Type as shown above. If there is a command other than the picture above, you can just ENTER.



Enter the password again as was done in numbers 3 and 4.


Configure the file by going to C:\xampp\apache\conf\extra


Open the httpd-xampp.conf file
…]]></summary>
        <author>
            <name>Hilmi Hidayat</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[My Developer Journey – How I Went from Making $1,000 to $100,000 a Year]]></title>
        <id>60acf28e11ffb70827ef6dd9</id>
        <link href="https://www.freecodecamp.org/news/my-developer-journey-how-i-went-from-1000-a-year-to-100000-as-a-dev/"/>
        <updated>2021-05-28T22:58:18.000Z</updated>
        <summary type="html"><![CDATA[Hey everyone, my name is Santosh. In this article, I will tell you how I ramped up my career and ended up making $100,000 a year as a developer.  I'll share what I learned from each job along the way, how you can stand out, tips for negotiating salary,]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[p-MultiSelect - JAWS - Issue]]></title>
        <id>https://dev.to/goku2358/p-multiselect-jaws-issue-2a3f</id>
        <link href="https://dev.to/goku2358/p-multiselect-jaws-issue-2a3f"/>
        <updated>2021-05-28T21:02:17.000Z</updated>
        <summary type="html"><![CDATA[p-multiselect isnt getting read by JAWS screen reader for some reason. Can someone help please?]]></summary>
        <author>
            <name>Gokul Nath</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What are you Referrer-ing to?]]></title>
        <id>https://dev.to/jordanfinners/referrers-on-the-web-n2b</id>
        <link href="https://dev.to/jordanfinners/referrers-on-the-web-n2b"/>
        <updated>2021-05-28T20:25:16.000Z</updated>
        <summary type="html"><![CDATA[Contents



 Intro

 Referrer-Policy

 Linking

 Bonus: Server header

 Summary




  
  
  Intro 


Continuing on from my previous blog about website security week, we're going to talk about a Referrers on the web.
Referrers on the web allow sites you are visiting to see what site you have come from, as the Referer header (it is actually mispelled in the HTTP Specification) contains a absolute or partial url of the site you've come from if you have followed a link.
commonly used for tracking and analytics, but it can also be used to steal information for example that contained in the URL of a reset password page or where a token is part of the URL, which is why it comes under security headers.



This header indicates how much information can be shared in the Referer header on requests ma…]]></summary>
        <author>
            <name>Jordan Finneran</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Secure Your Android App – Four Security Best Practices Every Android Dev Should Know]]></title>
        <id>60b08d8811ffb70827ef8c7b</id>
        <link href="https://www.freecodecamp.org/news/how-to-secure-your-android-app/"/>
        <updated>2021-05-28T16:01:05.000Z</updated>
        <summary type="html"><![CDATA[If you've been following the news lately, you may have noticed a worrisome tech trend. The frequency and severity of cybersecurity attacks are exploding.  We've seen news of a sprawling hack involving the SolarWinds management platform. That attack may have compromised the systems of over 18,000 SolarWinds customers.  Then,]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dynamic Favicons for WordPress]]></title>
        <id>https://css-tricks.com/?p=341163</id>
        <link href="https://css-tricks.com/dynamic-favicons-for-wordpress/"/>
        <updated>2021-05-28T14:36:47.000Z</updated>
        <summary type="html"><![CDATA[Typically, a single favicon is used across a whole domain. But there are times you wanna step it up with different favicons depending on context. A website might change the favicon to match the content being viewed. Or a site …
The post Dynamic Favicons for WordPress appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Thomas Park</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Advanced Computer Vision with Python]]></title>
        <id>60b0de2211ffb70827ef8d7c</id>
        <link href="https://www.freecodecamp.org/news/advanced-computer-vision-with-python/"/>
        <updated>2021-05-28T12:26:38.000Z</updated>
        <summary type="html"><![CDATA[More and more applications are using computer vision these days. We just published a full course on the freeCodeCamp.org YouTube channel that will help you learn advanced computer vision using Python. You will learn state of the art computer vision techniques by building five projects with libraries such as]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Adding A Commenting System To A WYSIWYG Editor]]></title>
        <id>https://smashingmagazine.com/2021/05/commenting-system-wysiwyg-editor/</id>
        <link href="https://smashingmagazine.com/2021/05/commenting-system-wysiwyg-editor/"/>
        <updated>2021-05-28T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this article, we’ll be re-using the foundational WYSIWYG Editor built in the first article to build a commenting system for a WYSIWYG Editor that enables users to select text inside a document and share their comments on it. Let’s dig in!]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Shalabh Vyas)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Best Frontend Framework: The Battle Lines are Drawn]]></title>
        <id>https://dev.to/manav_jain/the-best-frontend-framework-the-battle-lines-are-drawn-3onm</id>
        <link href="https://dev.to/manav_jain/the-best-frontend-framework-the-battle-lines-are-drawn-3onm"/>
        <updated>2021-05-28T07:31:07.000Z</updated>
        <summary type="html"><![CDATA[Taking into thought the viewpoint of the product development life cycle, the correct decision among top front-end frameworks will be the major advance of your future achievement. 
The market has a wide variety because of the tremendous arrangement of difficulties that developers address each day. Along these lines the quantity of new front-end frameworks extensively increments. An ever increasing number of various frameworks show up, and in this article, we would examine top front-end frameworks in 2021. 
At the point when you settle on your decision, remember certain necessities that will help you incredibly. Choosing among top UI frameworks, consider both the clients' and development groups' points of view. Those features cover "planning, development, testing and upkeep stages**. 
The be…]]></summary>
        <author>
            <name>Manav Jain</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Your Angular code base is deprecated.]]></title>
        <id>https://dev.to/shivamd20/your-angular-code-base-is-deprecated-315e</id>
        <link href="https://dev.to/shivamd20/your-angular-code-base-is-deprecated-315e"/>
        <updated>2021-05-27T23:27:40.000Z</updated>
        <summary type="html"><![CDATA[No, upgrading to Angular 12.x.x will not help.
The Typescript experimental decorators were based on TC39 proposal-decorators.
We use the same Decorators in our Angular codebase to create services, components and other Angular constructs.
But the same TC39 proposal has evolved in a different direction which is semantically not compatible with the experimental Typescript decorators.   
The new spec for Decorators is easier to use and write.
You can find the detailed comparison between old and new decorators here. 
Just finished up the first draft of the new decorators spec, pretty excited about it 😄 https://t.co/ELhZbsiaiR
— The p is silent (@pzuraq
) May 27, 2021
 



Does this mean that Typescript experimental decorators will not be compatible with Javascript decorators 😨
— Shivam (@shivamd20
) May 27, 2021
 



Unfortunately no, the new proposal has differing semantics from previous proposals in a number of ways. TypeScript experimental decorators were also incompatible with the Define semantics class fields, which caused a decent amount of breakage in the ecosystem.
— The p is silent (@pzuraq
) May 27, 2021
 



When the proposal advances, figuring out a step-by-step incremental upgrade path for existing decorators users is definitely going to be a priority though! No user left behind 😄
— The p is silent (@pzuraq
) May 27, 2021
 

Let's just hope that this doesn’t result in fragmentation of JavaScript decorators. We have already faced a lot inconvenience due to commonsjs and ES6 imports.]]></summary>
        <author>
            <name>Shivam</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular- Delete item from array of object]]></title>
        <id>https://dev.to/mateuszto/angular-delete-item-from-array-of-object-3316</id>
        <link href="https://dev.to/mateuszto/angular-delete-item-from-array-of-object-3316"/>
        <updated>2021-05-27T21:06:32.000Z</updated>
        <summary type="html"><![CDATA[Here's my app: https://stackblitz.com/edit/angular-ivy-s6usrl?file=src%2Fapp%2Fnotes%2Fsingle-note%2Fsingle-note.component.ts
As you can see I try to delete item but it doesn't work, can sb look at that? Thanks alot!]]></summary>
        <author>
            <name>Mateusz Tomczyk</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Freehand Drawing in Angular]]></title>
        <id>https://dev.to/ngconf/freehand-drawing-in-angular-1h</id>
        <link href="https://dev.to/ngconf/freehand-drawing-in-angular-1h"/>
        <updated>2021-05-27T19:06:50.000Z</updated>
        <summary type="html"><![CDATA[Jim Armstrong | ng-conf | Dec 2019

I wanted to something fun for the holiday season, so I decided to port a variable-width stroke from the Flex Freehand Drawing Library I created back in the early 2010’s. This stroke actually has a venerable history, going back to about 1983, as an exercise I was assigned as a teaching assistant for a graduate course in computational geometry. The instructor’s company recently obtained a very expensive tablet. This system allowed users to scan or load drawings already in electronic form into a display and annotate them with hand-drawn notes using a fixed-width stroke. The instructor had an idea for a variable-width (speed-dependent) stroke that would be the basis for a number of lab exercises. My job was to get his idea working in Fortran (yes, now you ca…]]></summary>
        <author>
            <name>ng-conf</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[To $ or Not to $: Displaying Terminal Code Snippets]]></title>
        <id>https://css-tricks.com/?p=341298</id>
        <link href="https://css-tricks.com/to-or-not-to-displaying-terminal-code-snippets/"/>
        <updated>2021-05-27T18:22:11.000Z</updated>
        <summary type="html"><![CDATA[It’s very popular to put a $ on lines that are intended to be a command in code documentation that involves the terminal (i.e. the command line).
Like this:
$ brew install somepackage
The point of that is that it …
The post To $ or Not to $: Displaying Terminal Code Snippets appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Improve Machine Learning Model Performance by Combining Categorical Features]]></title>
        <id>60af931811ffb70827ef85d3</id>
        <link href="https://www.freecodecamp.org/news/improve-machine-learning-model-performance-by-combining-categorical-features/"/>
        <updated>2021-05-27T17:55:23.000Z</updated>
        <summary type="html"><![CDATA[When you're training a machine learning model, you can have some features in your dataset that represent categorical values. Categorical features are types of data that you can divide into groups. There are three common categorical data types: Ordinal – a set of values in ascending or descending order. Example: rating]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Make a Bouncing Basketball in Unity with Materials and Textures 🏀]]></title>
        <id>60a325c6906c5207e3a7da25</id>
        <link href="https://www.freecodecamp.org/news/how-to-make-a-basketball-in-unity-with-materials-and-textures/"/>
        <updated>2021-05-27T15:16:34.000Z</updated>
        <summary type="html"><![CDATA[In this article, I'll teach you how to make a basketball using materials and textures in Unity. You can extend this micro-concept to create any kind of ball like a football, tennis ball, or snooker balls.  That said, these techniques aren't just limited to creating round 3D objects like balls.]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[🖥 Get Better Angular UX Using 4 Animation Techniques]]></title>
        <id>https://dev.to/robertinoc_dev/get-better-angular-ux-using-4-animation-techniques-2gjk</id>
        <link href="https://dev.to/robertinoc_dev/get-better-angular-ux-using-4-animation-techniques-2gjk"/>
        <updated>2021-05-27T14:26:24.000Z</updated>
        <summary type="html"><![CDATA[⌨️ Improve the User Experience (UX) of an e-commerce application by implementing animations utilizing Angular animations, CSS animations, and Web Animation APIs.



  
  
  
Developers can use animations in meaningful and non-distracting ways to significantly improve their application's user experience (UX). This blog post discusses four effective techniques to animate your application's user interface, covering popular use cases. You'll learn how to transform bland experiences into memorable ones for your users.
I created a demo application to help you focus on adding animations to Angular. You'll add animations to a starter app as you progress through this tutorial. The starter application uses Tailwind to take care of its style and layout, but none of the animations discussed here are dependent on it.
Follow this tutorial without cloning any repo, right in the browser using Stackblitz or CodeSandbox.
If you prefer to work locally in your IDE, clone the demo app and check out its starter branch:
git clone -b starter git@github.com:auth0-blog/angular-animations-storefront.git

Once you clone the repo, make angular-animations-storefront your current directory:
cd angular-animations-storefront

Install the project's dependencies:
npm i

Run the project locally:
npm run start

Angular comes with a powerful animation module that lets you quickly add motion to your application: BrowserAnimationsModule. Under the hood, this module uses the Web Animations API (WAAPI) to create motion and interactivity. Whenever WAAPI isn't available, BrowserAnimationsModule falls back to using CSS keyframes. Angular animations give you the option to use their abstraction layer to animate any properties that the web considers animatable such as positions, sizes, colors, and many more.
Read more...]]></summary>
        <author>
            <name>Robertino</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Show Images on Click]]></title>
        <id>https://css-tricks.com/?p=341020</id>
        <link href="https://css-tricks.com/how-to-show-images-on-click/"/>
        <updated>2021-05-27T14:25:29.000Z</updated>
        <summary type="html"><![CDATA[Most images on the web are superfluous. If I might be a jerk for a bit, 99% of them aren’t even that helpful at all (although there are rare exceptions). That’s because images don’t often complement the text they’re …
The post How to Show Images on Click appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Robin Rendle</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Rethinking Postgres in a Post-Server World]]></title>
        <id>https://css-tricks.com/?p=340910</id>
        <link href="https://css-tricks.com/rethinking-postgres-in-a-post-server-world/"/>
        <updated>2021-05-27T14:23:23.000Z</updated>
        <summary type="html"><![CDATA[Serverless architectures have brought engineering teams a great number of benefits. We get simpler deployments, automatic and infinite scale, better concurrency, and a stateless API surface. It’s hard to imagine going back to the world of managed services, broken local …
The post Rethinking Postgres in a Post-Server World appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Michael Rispoli</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Useful VS Code Extensions For Front-End Developers]]></title>
        <id>https://smashingmagazine.com/2021/05/useful-vs-code-extensions-web-developers/</id>
        <link href="https://smashingmagazine.com/2021/05/useful-vs-code-extensions-web-developers/"/>
        <updated>2021-05-27T13:30:00.000Z</updated>
        <summary type="html"><![CDATA[Meet useful Visual Studio Code extensions for web developers: little helpers to minimize slow-downs and frustrations, and boost developer’s workflow along the way. With auto log messages, auto code formatting, file utils, file labels, code snippets, highlight brackets, tags, indents and workspaces, onboarding and remote SSH.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cosima Mielke)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Build And Launch Powerful Responsive Websites With Editor X]]></title>
        <id>https://smashingmagazine.com/2021/05/build-launch-responsive-websites-editorx/</id>
        <link href="https://smashingmagazine.com/2021/05/build-launch-responsive-websites-editorx/"/>
        <updated>2021-05-27T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[While web builders have been around for a long time, it wasn’t until recently that they became practical for professional use. Closing the gap between design and code has become the north star for many companies and we are seeing a wave of tools that deliver on this promise.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Miroslav Bekyarov)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The collection reference method *.valueChanges(...) visualized (and explained)!]]></title>
        <id>https://dev.to/kwhjvdkamp/the-collection-method-valuechanges-visualized-and-explained-5g13</id>
        <link href="https://dev.to/kwhjvdkamp/the-collection-method-valuechanges-visualized-and-explained-5g13"/>
        <updated>2021-05-27T09:15:29.000Z</updated>
        <summary type="html"><![CDATA[Context 
Building a web application with Angular and Firebase presented by Mark Thompson. 
| Angular 12.0.1 | firebase 9.11.0 | Node 14.17 |
Taking Mark's instruction a bit further; to achieve drag&drop in a bit more realistic situation, calling the store in a service asynchronously. To achieve this status, I stumbled on the .valueChanges(...) method.
The internal firestore documents explains the working of this .valueChanges(...) method as it listen to all documents in the retrieved collection and queries this list as an Observable. 
idField. When the idField option is provided like 
.valueChanges({idField: '<a-property-of-the-document'}) it means that the document ID (actually the document's name) will be mapped to the provided property being one of the properties within the document-object.
Know the construction of the document, in this case document (ITask) = { id?: string; title?:string; description?: string'; }. 

When calling the .valueChanges(...) method with a provided idField, which is set to one of the provided properties as stated, internally, the ID (actually the document's name) of that document is mapped to the 'provided'-property within the document object. 

The service
snapshotChanges() as stated elsewhere.]]></summary>
        <author>
            <name>Koen (K.W.H.J.) van der Kamp</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Giphy API Tutorial – How to Generate Animated Text GIFs with ReactJS]]></title>
        <id>60a44b9f906c5207e3a7e098</id>
        <link href="https://www.freecodecamp.org/news/giphy-api-tutorial/"/>
        <updated>2021-05-26T21:44:01.000Z</updated>
        <summary type="html"><![CDATA[In this tutorial you will create an app that generates dynamic animated text using Giphy's API with ReactJS. After that I'll go over some of the other API features Giphy provides that you can use to make other interesting projects. You can find the code for the tutorial here. Video]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Contribute to Open Source  Projects – A Beginner&#x27;s Guide]]></title>
        <id>60abe7fb11ffb70827ef63a6</id>
        <link href="https://www.freecodecamp.org/news/how-to-contribute-to-open-source-projects-beginners-guide/"/>
        <updated>2021-05-26T18:01:00.000Z</updated>
        <summary type="html"><![CDATA[If you're a developer, you've probably come across the term "open source." If you've ever wondered what it's all about and how to contribute, you are in exactly the right place.  I put aside all my fears about how and what to contribute during Hacktoberfest 2020, and made]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learn Basic Terraform Syntax in 20 minutes]]></title>
        <id>606f4f5fd5756f080ba96b65</id>
        <link href="https://www.freecodecamp.org/news/terraform-syntax-for-beginners/"/>
        <updated>2021-05-26T18:00:52.000Z</updated>
        <summary type="html"><![CDATA[In this article, I'll give you a brief overview of the configuration syntax of Terraform.  Terraform's docs provide the most comprehensive look at its syntax. But this article should serve as a condensed quick start introduction that'll give new users a simplified overview. We'll focus on the basic structures without]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Awesome Standalone (Web Components)]]></title>
        <id>https://css-tricks.com/?p=339759</id>
        <link href="https://css-tricks.com/awesome-standalone-web-components/"/>
        <updated>2021-05-26T17:56:34.000Z</updated>
        <summary type="html"><![CDATA[In his last An Event Apart talk, Dave made a point that it’s really only just about right now that Web Components are becoming a practical choice for production web development. For example, it has only been about a year …
The post Awesome Standalone (Web Components) appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Links on Web Components]]></title>
        <id>https://css-tricks.com/?p=340901</id>
        <link href="https://css-tricks.com/links-on-web-components/"/>
        <updated>2021-05-26T17:56:12.000Z</updated>
        <summary type="html"><![CDATA[How we use Web Components at GitHub — Kristján Oddsson talks about how GitHub is using web components. I remember they were very early adopters, and it says here they released a <relative-time> component in 2014! Now they’ve got a 
…
The post Links on Web Components appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[My Journey with Angular and SSR]]></title>
        <id>https://dev.to/danywalls/my-journey-with-angular-and-ssr-47l3</id>
        <link href="https://dev.to/danywalls/my-journey-with-angular-and-ssr-47l3"/>
        <updated>2021-05-26T17:15:07.000Z</updated>
        <summary type="html"><![CDATA[Last month I setup my blog with Angular Universal (Server Side Render) this is about my steps installing SSR in my blog, so keep in mind a simple blog with only text with http request to contentful, so is real scenario, but the simple case to get start with Angular and Server Side render.
First step install Angular universal.
ng add @nguniversal/express-engine@next

Next step was set up the build in netlify
npm run build:ssr

The page is ready with server side render, but my client application need to request the articles, The TransferState service help to send information from the server to the client.
  imports: [
    BlogHeaderModule,
    BrowserModule,
    InfrastructureModule,
    AppRoutingModule,
    BrowserModule.withServerTransition({ appId: 'dw' }),
    TransferHttpCacheModule
  ],

Install it as part of the App module and import into  ServerTransferStateModule in server module.
@NgModule({
  imports: [AppModule, ServerModule, ServerTransferStateModule],
  bootstrap: [AppComponent],
})

Done
Because my app is only text was easy to get more than 95% but keep in mind the following points.
Not all application are the same, my case is a simple blog, so not issues with images, or authentication.
Use https://contrastchecker.com/ and https://alex-page.github.io/sass-a11ycolor for accesibility issues.
If is your first time, try with an easy proyect like a blog or small app.
Take care about how to use or transfer data between components, I got an issue to send data using this.location.getState().
Done!]]></summary>
        <author>
            <name>Dany Paredes</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Build a GraphQL API Using Laravel]]></title>
        <id>60abc59d11ffb70827ef6304</id>
        <link href="https://www.freecodecamp.org/news/build-a-graphql-api-using-laravel/"/>
        <updated>2021-05-26T16:34:32.000Z</updated>
        <summary type="html"><![CDATA[In this article, I'll walk you through how to set up your own GraphQL API using PHP and Laravel. Two years ago, I started working professionally as a backend developer. And I was very intimidated by all the technology I didn't yet know. Words like Docker, Kubernetes, and GraphQL seemed]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Build Super Mario Bros, Zelda, and Space Invaders with Kaboom.js]]></title>
        <id>60aced0011ffb70827ef6d96</id>
        <link href="https://www.freecodecamp.org/news/how-to-build-mario-zelda-and-space-invaders-with-kaboom-js/"/>
        <updated>2021-05-26T14:12:27.000Z</updated>
        <summary type="html"><![CDATA[In this video course I show you how to build three popular games using the latest game development library for JavaScript called Kaboom.js. This course is exciting for two reasons: First of all, I am going to be introducing a new technology designed especially for game development in JavaScript.]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Thorough Analysis of CSS-in-JS]]></title>
        <id>https://css-tricks.com/?p=340705</id>
        <link href="https://css-tricks.com/a-thorough-analysis-of-css-in-js/"/>
        <updated>2021-05-26T14:08:49.000Z</updated>
        <summary type="html"><![CDATA[Wondering what’s even more challenging than choosing a JavaScript framework? You guessed it: choosing a CSS-in-JS solution. Why? Because there are more than 50 libraries out there, each of them offering a unique set of features.
We tested 10 different …
The post A Thorough Analysis of CSS-in-JS appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Andrei Pfeiffer</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular 11 - JWT Authentication Example & Tutorial With PHP]]></title>
        <id>https://dev.to/jumamiller/angular-11-jwt-authentication-example-tutorial-with-php-2d7d</id>
        <link href="https://dev.to/jumamiller/angular-11-jwt-authentication-example-tutorial-with-php-2d7d"/>
        <updated>2021-05-26T13:59:56.000Z</updated>
        <summary type="html"><![CDATA[A user is usually authenticated by entering a username, email address, and/or password and then being given access to various resources or services. By its very existence, authentication relies on maintaining the user's state. This seems to go against HTTP's fundamental property of being a stateless protocol.  
Your Angular app will communicate with a backend that generates tokens. The Angular app can then send the token to the backend as an Authorization header to show they're authenticated. The JWT should be checked by the backend, and access should be granted based on its validity.  
This tutorial will walk you through the process of developing and implementing JWT-based authentication in an Angular 11 application step by step. This tutorial takes you a step further by developing a back…]]></summary>
        <author>
            <name>Miller Juma</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Accessible SVGs: Perfect Patterns For Screen Reader Users]]></title>
        <id>https://smashingmagazine.com/2021/05/accessible-svg-patterns-comparison/</id>
        <link href="https://smashingmagazine.com/2021/05/accessible-svg-patterns-comparison/"/>
        <updated>2021-05-26T13:20:00.000Z</updated>
        <summary type="html"><![CDATA[Discover which SVG patterns we should avoid and which patterns are the most inclusive when comparing different combinations of OSs, browsers, and screen readers.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Carie Fisher)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.9.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.9.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.9.0"/>
        <updated>2021-05-26T06:02:55.000Z</updated>
        <summary type="html"><![CDATA[Added: experimental support for iTunes podcast feed: Demo | Source. With this new release, you can render an audio control to play the mp3 file and display iTunes episode duration. It is "experimental" due to these caveats:

This feature is currently only available through custom template.
iTunes has no strict format requirement for duration. The unit is most likely seconds but can be "hh:mm:ss" or "mm:ss" for some sources. A future version may expose a human readable string to the template.
No image support yet. Some shows might have disabled CORS or use a relative URL for image, which forces osmosfeed to download the image during build. A future version may support it.
You can't republish the podcast in the feed output. Supporting this goes beyond the scope of the project at the moment.
Fixed: the articles in template data were not sorted.
Thank you @Zenigata]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What I Learned Building a Word Game App With Nuxt on Google Play]]></title>
        <id>https://css-tricks.com/?p=340759</id>
        <link href="https://css-tricks.com/what-i-learned-building-a-word-game-app-with-nuxt-on-google-play/"/>
        <updated>2021-05-25T14:25:06.000Z</updated>
        <summary type="html"><![CDATA[I fell in love with coding the moment I created my first CSS :hover effect. Years later, that initial bite into interactivity on the web led me to a new goal: making a game.
Table of contents
What’s the game 
…
The post What I Learned Building a Word Game App With Nuxt on Google Play appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Josh Collinsworth</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Guide To Undoing Mistakes With Git (Part 2)]]></title>
        <id>https://smashingmagazine.com/2021/05/undoing-mistakes-git-part2/</id>
        <link href="https://smashingmagazine.com/2021/05/undoing-mistakes-git-part2/"/>
        <updated>2021-05-25T14:00:00.000Z</updated>
        <summary type="html"><![CDATA[Mistakes. These cruel villains do not even stop at the beautiful world of software development. But although we cannot avoid making mistakes, we can learn to undo them! This post will show the right tools for your daily work with Git.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Tobias Günther)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Creating Powerful Websites with Serverless-Driven CMS Development]]></title>
        <id>https://css-tricks.com/?p=341383</id>
        <link href="https://css-tricks.com/creating-powerful-websites-with-serverless-driven-cms-development/"/>
        <updated>2021-05-25T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[Choosing the right tools to build a website for your organization is essential, but it can be tough to find the right fit. Simple site builders like Wix and Squarespace are easy for marketers to use, but severely limit developers …
The post Creating Powerful Websites with Serverless-Driven CMS Development appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Ahmed Bouchefra</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A New Way To Reduce Font Loading Impact: CSS Font Descriptors]]></title>
        <id>https://smashingmagazine.com/2021/05/reduce-font-loading-impact-css-descriptors/</id>
        <link href="https://smashingmagazine.com/2021/05/reduce-font-loading-impact-css-descriptors/"/>
        <updated>2021-05-25T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[Web fonts are often terrible for web performance and none of the font loading strategies are particularly effective to address that. Upcoming font options may finally deliver on the promise of making it easier to align fallback fonts to the final fonts.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Barry Pollard)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Links on Performance]]></title>
        <id>https://css-tricks.com/?p=340808</id>
        <link href="https://css-tricks.com/links-on-performance/"/>
        <updated>2021-05-24T22:03:30.000Z</updated>
        <summary type="html"><![CDATA[Making GitHub’s new homepage fast and performant — Tobias Ahlin describes how the scrolling effects are done more performantly thanks to IntersectionObserver and the fact that it avoids the use of methods that trigger reflows, like getBoundingClientRect. Also, 
…
The post Links on Performance appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[proxy-www]]></title>
        <id>https://css-tricks.com/?p=341153</id>
        <link href="https://github.com/justjavac/proxy-www"/>
        <updated>2021-05-24T19:09:59.000Z</updated>
        <summary type="html"><![CDATA[I like a good trick. What if… a URL was…  a promise… that fetched said URL?
www.codepen.io.then((response) ={
  console.log(response);
});
That’s what @justjavac did with JavaScript Proxys. A clever trick, that. Don’t @ me about the practicality. Trick…
The post proxy-www appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Wrangling Control Over PDFs with the Adobe PDF Embed API]]></title>
        <id>https://css-tricks.com/?p=340626</id>
        <link href="https://css-tricks.com/wrangling-control-over-pdfs-with-the-adobe-pdf-embed-api/"/>
        <updated>2021-05-24T13:57:21.000Z</updated>
        <summary type="html"><![CDATA[By our last estimate, there are now more PDFs in the world than atoms in the universe (not verified by outside sources) so chances are, from time to time, you’re going to run into a PDF document or two. Browsers …
The post Wrangling Control Over PDFs with the Adobe PDF Embed API appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Raymond Camden</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS Container Queries: Use-Cases And Migration Strategies]]></title>
        <id>https://smashingmagazine.com/2021/05/css-container-queries-use-cases-migration-strategies/</id>
        <link href="https://smashingmagazine.com/2021/05/css-container-queries-use-cases-migration-strategies/"/>
        <updated>2021-05-24T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[CSS Container queries bring media queries closer to the target elements themselves and enables them to adapt to virtually any given container or layout. In this article, we’re going to cover CSS container query basics and how to use them today with progressive enhancement or polyfills.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Adrian Bece)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.8.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.1"/>
        <updated>2021-05-23T05:40:12.000Z</updated>
        <summary type="html"><![CDATA[Fixed: UnhandledPromiseRejectionWarning: Error: At least one option must be a string]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.8.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.0"/>
        <updated>2021-05-23T05:12:08.000Z</updated>
        <summary type="html"><![CDATA[Changed: Smart summary truncation. When there is no dedicated summary (only Atom feed has it, and many sites don't use it) from the source, we check if the content/description (Both Atom and RSS) field is long enough to be full text. If so, it will be truncated into a "pseudo" summary. If not, we assume the source used the content field as summary, and it will be displayed in full length.
Thank you: @LooperXX.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Should DevTools teach the CSS cascade?]]></title>
        <id>https://css-tricks.com/?p=340991</id>
        <link href="https://www.stefanjudis.com/blog/should-devtools-teach-the-css-cascade/"/>
        <updated>2021-05-21T23:22:54.000Z</updated>
        <summary type="html"><![CDATA[Stefan Judis, two days before I mouthed off about using (X, X, X, X) for talking about specificity, has a great blog post not only using that format, but advocating that browser DevTools should show us that value by …
The post Should DevTools teach the CSS cascade? appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Svelte for the Experienced React Dev]]></title>
        <id>https://css-tricks.com/?p=340825</id>
        <link href="https://css-tricks.com/svelte-for-the-experienced-react-dev/"/>
        <updated>2021-05-21T14:30:59.000Z</updated>
        <summary type="html"><![CDATA[This post is an accelerated introduction to Svelte from the point of view of someone with solid experience with React. I’ll provide a quick introduction, and then shift focus to things like state management and DOM interoperability, among other things. …
The post Svelte for the Experienced React Dev appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Adam Rackis</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS Hell]]></title>
        <id>https://css-tricks.com/?p=340919</id>
        <link href="https://csshell.dev/"/>
        <updated>2021-05-21T14:29:16.000Z</updated>
        <summary type="html"><![CDATA[Collection of common CSS mistakes, and how to fix them
From Stefánia Péter. 
Clever idea for a site! Some of them are little mind-twisters that could bite you, and some of them are honing in on best practices that …
The post CSS Hell appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building A Rich Text Editor (WYSIWYG)]]></title>
        <id>https://smashingmagazine.com/2021/05/building-wysiwyg-editor-javascript-slatejs/</id>
        <link href="https://smashingmagazine.com/2021/05/building-wysiwyg-editor-javascript-slatejs/"/>
        <updated>2021-05-21T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[Let’s build a rich text, WYSIWYG-editor that supports rich text, images, links and some nuanced features from word processing apps. We will use SlateJS to build the shell of the editor and then add a toolbar and custom configurations.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Shalabh Vyas)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Boost Your Skills Online: Smashing Workshops On Front-End And Design]]></title>
        <id>https://smashingmagazine.com/2021/05/new-online-workshops-front-end-ux/</id>
        <link href="https://smashingmagazine.com/2021/05/new-online-workshops-front-end-ux/"/>
        <updated>2021-05-20T14:20:00.000Z</updated>
        <summary type="html"><![CDATA[Front-end and design are remarkably complex these days. That’s why we invite kind, smart folks from the community to run online workshops for all of us to learn together. And we have new ones coming up, and we’d like to kindly welcome you to join in.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Iris Lješnjanin)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Implement Authentication In Next.js With Auth0]]></title>
        <id>https://smashingmagazine.com/2021/05/implement-authentication-nextjs-auth0/</id>
        <link href="https://smashingmagazine.com/2021/05/implement-authentication-nextjs-auth0/"/>
        <updated>2021-05-20T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[A step-by-step tutorial on adding authentication and authorization to your Next.js apps, with Auth0. We’ll be using a Next.js SDK to connect our application to the Auth0 API and will create the dynamic API route for React.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Facundo Giuliani)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Frustrating Design Patterns: Mega-Dropdown Hover Menus]]></title>
        <id>https://smashingmagazine.com/2021/05/frustrating-design-patterns-mega-dropdown-hover-menus/</id>
        <link href="https://smashingmagazine.com/2021/05/frustrating-design-patterns-mega-dropdown-hover-menus/"/>
        <updated>2021-05-19T11:40:00.000Z</updated>
        <summary type="html"><![CDATA[Everything to keep in mind when designing and building a mega-dropdown, common pitfalls, hover entry/exit delays, trajectory triangle technique and SVG path exit areas.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Vitaly Friedman)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Create, Edit And Animate SVGs All In One Place With SVGator 3.0]]></title>
        <id>https://smashingmagazine.com/2021/05/create-edit-animate-svg-svgator3/</id>
        <link href="https://smashingmagazine.com/2021/05/create-edit-animate-svg-svgator3/"/>
        <updated>2021-05-18T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[Today, we are taking a closer look at [SVGator 3.0](https://www.svgator.com/?utm_source=article&utm_medium=smashingmag&utm_campaign=svgator3_smashing), a new major release of the popular SVG application that lets you create, edit and animate SVG files and make the best out of what SVG has to offer — from start to finish.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Mikołaj Dobrucki)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 37 With Adam Argyle: What Is VisBug?]]></title>
        <id>https://smashingmagazine.com/2021/05/smashing-podcast-episode-37/</id>
        <link href="https://smashingmagazine.com/2021/05/smashing-podcast-episode-37/"/>
        <updated>2021-05-18T05:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode, we’re talking about VisBug. What is it, and how is it different from the array of options already found in Chrome DevTools? Drew McLellan talks to its creator Adam Argyle to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How We Improved Our Core Web Vitals (Case Study)]]></title>
        <id>https://smashingmagazine.com/2021/05/core-web-vitals-case-study/</id>
        <link href="https://smashingmagazine.com/2021/05/core-web-vitals-case-study/"/>
        <updated>2021-05-17T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[Google’s “Page Experience Update” will start rolling out in June. At first, sites that meet Core Web Vitals thresholds will have a minor ranking advantage in mobile search for all browsers. Search is important to any business, and this is the story of how Beau Hartshorne and his team at Instant Domain Search improved their Core Web Vitals scores.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Beau Hartshorne)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.2]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2"/>
        <updated>2021-05-17T05:32:19.000Z</updated>
        <summary type="html"><![CDATA[⚠ Deprecated: To accommodate the monorepo setup, the node version in all templates/demos/examples has changed from 14 to 16. This is not a breaking change as our compile target is still node 14, and node 16 is backward compatible. We still recommend you start using node-version: "16" in your .github/workflows/update-feed.yaml today to get the performance/security improvements from the newer node. See example
Chore: Reorganize to monorepo with npm workspace.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.1"/>
        <updated>2021-05-16T02:33:58.000Z</updated>
        <summary type="html"><![CDATA[Fixed: static files were unnecessarily copied for custom templates.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.0"/>
        <updated>2021-05-16T01:42:24.000Z</updated>
        <summary type="html"><![CDATA[Added: templating system. Demo | Source | Docs
Chore: rendering logic refactoring. Adopting functional paradigm.
Thank you @tianheg, @onnyyonn]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Tree-Shaking: A Reference Guide]]></title>
        <id>https://smashingmagazine.com/2021/05/tree-shaking-reference-guide/</id>
        <link href="https://smashingmagazine.com/2021/05/tree-shaking-reference-guide/"/>
        <updated>2021-05-14T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[“Tree-shaking” is a must-have performance optimization when bundling JavaScript. In this article, we dive deeper on how exactly it works and how specs and practice intertwine to make bundles leaner and more performant. Plus, you’ll get a tree-shaking checklist to use for your projects.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Átila Fassina)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Frustrating Design Patterns That Need Fixing: Birthday Picker]]></title>
        <id>https://smashingmagazine.com/2021/05/frustrating-design-patterns-birthday-picker/</id>
        <link href="https://smashingmagazine.com/2021/05/frustrating-design-patterns-birthday-picker/"/>
        <updated>2021-05-12T12:42:00.000Z</updated>
        <summary type="html"><![CDATA[In this new series of articles on UX, we take a closer look at some frustrating design patterns and explore better alternatives, along with plenty of examples to keep in mind when building or designing one. Let’s start with an infamous birthday picker.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Vitaly Friedman)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Little Smashing Stories]]></title>
        <id>https://smashingmagazine.com/2021/05/little-smashing-stories/</id>
        <link href="https://smashingmagazine.com/2021/05/little-smashing-stories/"/>
        <updated>2021-05-12T08:00:00.000Z</updated>
        <summary type="html"><![CDATA[Today marks the day we sent out our 300th edition of the Smashing Newsletter. This article is a little celebration in which we share little Smashing stories from people working behind the scenes.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Vitaly Friedman)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Primer On CSS Container Queries]]></title>
        <id>https://smashingmagazine.com/2021/05/complete-guide-css-container-queries/</id>
        <link href="https://smashingmagazine.com/2021/05/complete-guide-css-container-queries/"/>
        <updated>2021-05-11T13:30:00.000Z</updated>
        <summary type="html"><![CDATA[A prototype of the long-awaited CSS container queries has landed in Chrome Canary and is available for experimentation. Let’s look at what problem is being solved, learn how container queries work, and see how they compare with and complement existing CSS features for layout.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Stephanie Eckles)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Conference Platform We Use For Our Online Events: Hopin]]></title>
        <id>https://smashingmagazine.com/2021/05/smashingconf-conference-platform-hopin/</id>
        <link href="https://smashingmagazine.com/2021/05/smashingconf-conference-platform-hopin/"/>
        <updated>2021-05-11T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[At the beginning of 2020, the SmashingConf team was ready for a new year. We had so many things that excited us. New speakers, new workshops, new cities, new attendees, new experiences. And as we all know, 2020 had other ideas. With so many people working from home, we thought we would bring our [Smashing workshops](https://smashingconf.com/online-workshops/) from our home offices to yours — but how?]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Amanda Annandale)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Get Started With React By Building A Whac-A-Mole Game]]></title>
        <id>https://smashingmagazine.com/2021/05/get-started-whac-a-mole-react-game/</id>
        <link href="https://smashingmagazine.com/2021/05/get-started-whac-a-mole-react-game/"/>
        <updated>2021-05-10T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[Want to get started with React but struggling to find a good place to start? This article should have you covered. We’ll focus on some of the main concepts of React and then we’ll be building a game from scratch!]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Jhey Tompkins)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.4.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.4.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.4.0"/>
        <updated>2021-05-10T08:55:42.000Z</updated>
        <summary type="html"><![CDATA[Added: Basic theme customization: Demo | Source | Docs.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.6.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.6.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.6.0"/>
        <updated>2021-05-10T08:15:20.000Z</updated>
        <summary type="html"><![CDATA[Added: Link from the title of a subscription to its website.
Added: Store feedUrl and siteUrl for each source in cache.
Added: Semantic element (<time>) for timestamp on the UI.
Added: Semantic API for theming the default template. Demo | Source | Docs
Changed: Moved feed metadata from article level to feed level in cache.
Fixed: Any html-like text was stripped from title. Fixed with encoded text.
Removed: href for each source in cache. The value was never used so it's not a breaking change.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.5.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.5.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.5.0"/>
        <updated>2021-05-08T05:16:47.000Z</updated>
        <summary type="html"><![CDATA[Added: Atom feed generator
Added: Customizable site title
Added: Copy all files from static directory to the root of the site.
Changed: Favicon, css, and js assets now existing at site root level.
Chore: Excluded testing files from repo.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Organize Product-Related Assets And Collaborate Better]]></title>
        <id>https://smashingmagazine.com/2021/05/product-records-organization-collaboration-best-practices/</id>
        <link href="https://smashingmagazine.com/2021/05/product-records-organization-collaboration-best-practices/"/>
        <updated>2021-05-07T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[How do you organize your Google Drive assets? How do you name your Dropbox Paper documents? How do you deal with comments? Let’s get it right.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Valeriia Panina)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Improving The Performance Of Shopify Themes (Case Study)]]></title>
        <id>https://smashingmagazine.com/2021/05/improving-performance-shopify-themes-case-study/</id>
        <link href="https://smashingmagazine.com/2021/05/improving-performance-shopify-themes-case-study/"/>
        <updated>2021-05-06T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[When dealing with themes for large platforms and CMS, legacy issues often become a bottleneck. In this article, Carson Shold discusses how his team improved the performance and organization of their Shopify themes, and improved maintainability along the way.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Carson Shold)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Reducing HTML Payload With Next.js (Case Study)]]></title>
        <id>https://smashingmagazine.com/2021/05/reduce-data-sent-client-nextjs/</id>
        <link href="https://smashingmagazine.com/2021/05/reduce-data-sent-client-nextjs/"/>
        <updated>2021-05-05T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[This article showcases a case study of Bookaway’s landing page performance. We’ll see how taking care of the props we send to Next.js pages can make loading times and Web Vitals better.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Liran Cohen)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.3.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.3.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.3.1"/>
        <updated>2021-05-05T05:19:57.000Z</updated>
        <summary type="html"><![CDATA[Fixed: Avoid crwalers.
Fixed: Error logging from XML parser.
Fixed: Typo in docs.
Thank you: @dym-sh, @tabokie, @cheese1]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Guide To Undoing Mistakes With Git (Part 1)]]></title>
        <id>https://smashingmagazine.com/2021/05/undoing-mistakes-git-part1/</id>
        <link href="https://smashingmagazine.com/2021/05/undoing-mistakes-git-part1/"/>
        <updated>2021-05-04T14:30:00.000Z</updated>
        <summary type="html"><![CDATA[No matter how experienced you are, mistakes are an inevitable part of software development. But we can learn to repair them! And this is what we'll be looking at in this two-part series: how to undo mistakes using Git.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Tobias Günther)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 36 With Miriam Suzanne: What Is The Future Of CSS?]]></title>
        <id>https://smashingmagazine.com/2021/05/smashing-podcast-episode-36/</id>
        <link href="https://smashingmagazine.com/2021/05/smashing-podcast-episode-36/"/>
        <updated>2021-05-04T05:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode, we’re starting our new season of the Smashing Podcast with a look at the future of CSS. What new specs will be landing in browsers soon? Drew McLellan talks to expert Miriam Suzanne to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Evolution Of Jamstack]]></title>
        <id>https://smashingmagazine.com/2021/05/evolution-jamstack/</id>
        <link href="https://smashingmagazine.com/2021/05/evolution-jamstack/"/>
        <updated>2021-05-03T07:00:00.000Z</updated>
        <summary type="html"><![CDATA[Web-oriented databases, frameworks like Nuxt and Next.js, and even frameworkless approaches are evolving the Jamstack, but the core principles are more powerful than ever.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Mathias Biilmann)</name>
        </author>
    </entry>
</feed>
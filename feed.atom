<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2021-05-28T01:36:54.136Z</id>
    <title>osmos::feed</title>
    <updated>2021-05-28T01:36:54.136Z</updated>
    <generator>osmosfeed 1.9.0</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[Working with a non profit organization to build an internal monitoring system]]></title>
        <id>https://dev.to/tgrede/working-with-a-non-profit-organization-to-build-an-internal-monitoring-system-47e6</id>
        <link href="https://dev.to/tgrede/working-with-a-non-profit-organization-to-build-an-internal-monitoring-system-47e6"/>
        <updated>2021-05-28T01:34:31.000Z</updated>
        <summary type="html"><![CDATA[Developing a full stack application for Family Promise from the back end perspective


~     
I spent the entire month of May 2021 working on an internal monitoring and evaluation system for the non-profit organization Family Promise. Family Promise works with homeless and low income families to help them achieve sustainable independence. They provide various prevention programs to help keep low income families from becoming homeless, as well as sheltering programs for the homeless, and aftercare programs for those who get out of sheltering. These programs are great and I personally love what the organization is doing to help the communities who need it most. That is why I am excited that I had the opportunity to work all month with a team of skilled developers. We spent a lot of time coll…]]></summary>
        <author>
            <name>Trenten Grede</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using Environment Variables in Node.js for App Configuration and Secrets]]></title>
        <id>https://dev.to/ryanblunden/using-environment-variables-in-node-js-for-app-configuration-and-secrets-2260</id>
        <link href="https://dev.to/ryanblunden/using-environment-variables-in-node-js-for-app-configuration-and-secrets-2260"/>
        <updated>2021-05-28T00:49:59.000Z</updated>
        <summary type="html"><![CDATA[Many developers start with hard-coded config and secrets in either JSON or JavaScript files, and while this works, it poses a security risk as any developer with code access can potentially view secrets such as production database credentials and API keys.
If you're currently configuring your applications like this, don't worry, you're not alone! Most developers eventually realize that hard-coding credentials isn't the way to go, and begin looking for a more secure alternative in the form of a secrets manager.
This is exactly we created Doppler—giving developers an easy to use secrets manager for Node.js applications that centralizes secrets storage with an easy to use CLI for injecting secrets as environment variables.
Environment variables are considered the best way to configure applica…]]></summary>
        <author>
            <name>Ryan Blunden</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using Environment Variables in Node.js for App Configuration and Secrets]]></title>
        <id>https://dev.to/ryanblunden/using-environment-variables-in-node-js-for-app-configuration-and-secrets-2260</id>
        <link href="https://dev.to/ryanblunden/using-environment-variables-in-node-js-for-app-configuration-and-secrets-2260"/>
        <updated>2021-05-28T00:49:59.000Z</updated>
        <summary type="html"><![CDATA[Many developers start with hard-coded config and secrets in either JSON or JavaScript files, and while this works, it poses a security risk as any developer with code access can potentially view secrets such as production database credentials and API keys.
If you're currently configuring your applications like this, don't worry, you're not alone! Most developers eventually realize that hard-coding credentials isn't the way to go, and begin looking for a more secure alternative in the form of a secrets manager.
This is exactly we created Doppler—giving developers an easy to use secrets manager for Node.js applications that centralizes secrets storage with an easy to use CLI for injecting secrets as environment variables.
Environment variables are considered the best way to configure applica…]]></summary>
        <author>
            <name>Ryan Blunden</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[TypeScript - Check if an array contains only unique values]]></title>
        <id>https://dev.to/shane/typescript-check-if-an-array-contains-only-unique-values-3b3e</id>
        <link href="https://dev.to/shane/typescript-check-if-an-array-contains-only-unique-values-3b3e"/>
        <updated>2021-05-28T00:43:47.000Z</updated>
        <summary type="html"><![CDATA[Intro


A cool trick in TypeScript is that you can use a Set to remove nonunique values from an array. Combine this with Array.from and you get a quick one liner to remove none unique values
const unqiueValues = Array.from(new Set(YOUR_ARRAY_HERE))

// Our array of non unique values
const values = [0,0,1,'a','a','b','c'];

// Create a `Set` from our array
// Sets can only contain unique values so duplicate will be removed for us
const uniqueSet = new Set(values);

// Create a new array from our set so we can use the Array.length property
const unqiueValues = Array.from(uniqueSet);

// Compare the length of the original `values` array and the new `uniqueValues` array
// If the lengths differ then a non unique value was removed by the set
// This means that the original array contained non-unique values
const isUnique = (values.length === unqiueValues.length)

const values = [0,0,1,'a','a','b','c'];
const unique = (Array.from(new Set(values)).length === values.length);

onlyUnique(values: Array<any>): boolean {
  return (Array.from(new Set(values)).length === values.length);
}

Now follow me on twitter plz https://twitter.com/theshanemcgowan]]></summary>
        <author>
            <name>shane</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Simple GUI on Linux Using Zenity and Node.js]]></title>
        <id>https://dev.to/ferfox1981/simple-gui-on-linux-using-zenity-and-node-js-2kei</id>
        <link href="https://dev.to/ferfox1981/simple-gui-on-linux-using-zenity-and-node-js-2kei"/>
        <updated>2021-05-27T23:42:59.000Z</updated>
        <summary type="html"><![CDATA[It is incredible the amount of "secret" features on Linux that are not well known until today.
My goal is to do the following:
Use Node.js to access financial data related to Brazilian Treasury Bonds (Tesouro Direto in Brazil);
Create a mechanism to sistematically check instant treasury rates;
Use Zenity to pop-up a notification to user;
Tesouro Direto Rates can be found here. In addition, if you press F12 and check Network Tab, you'll see that the following json is received by the browser:  https://www.tesourodireto.com.br/json/br/com/b3/tesourodireto/service/api/treasurybondsinfo.json 
const axios = require('axios');
const { exec } = require("child_process");
const https = require('https');



const instance = axios.create({
  httpsAgent: new https.Agent({
    rejectUnauthorized: false
 …]]></summary>
        <author>
            <name>Fernando Raposo da Camara Silva</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Simple GUI on Linux Using Zenity and Node.js]]></title>
        <id>https://dev.to/ferfox1981/simple-gui-on-linux-using-zenity-and-node-js-2kei</id>
        <link href="https://dev.to/ferfox1981/simple-gui-on-linux-using-zenity-and-node-js-2kei"/>
        <updated>2021-05-27T23:42:59.000Z</updated>
        <summary type="html"><![CDATA[It is incredible the amount of "secret" features on Linux that are not well known until today.
My goal is to do the following:
Use Node.js to access financial data related to Brazilian Treasury Bonds (Tesouro Direto in Brazil);
Create a mechanism to sistematically check instant treasury rates;
Use Zenity to pop-up a notification to user;
Tesouro Direto Rates can be found here. In addition, if you press F12 and check Network Tab, you'll see that the following json is received by the browser:  https://www.tesourodireto.com.br/json/br/com/b3/tesourodireto/service/api/treasurybondsinfo.json 
const axios = require('axios');
const { exec } = require("child_process");
const https = require('https');



const instance = axios.create({
  httpsAgent: new https.Agent({
    rejectUnauthorized: false
 …]]></summary>
        <author>
            <name>Fernando Raposo da Camara Silva</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Your Angular code base is deprecated.]]></title>
        <id>https://dev.to/shivamd20/your-angular-code-base-is-deprecated-315e</id>
        <link href="https://dev.to/shivamd20/your-angular-code-base-is-deprecated-315e"/>
        <updated>2021-05-27T23:27:40.000Z</updated>
        <summary type="html"><![CDATA[No, upgrading to Angular 12.x.x will not help.
The Typescript experimental decorators were based on TC39 proposal-decorators.
We use the same Decorators in our Angular codebase to create services, components and other Angular constructs.
But the same TC39 proposal has evolved in a different direction which is semantically not compatible with the experimental Typescript decorators.   
The new spec for Decorators is easier to use and write.
You can find the detailed comparison between old and new decorators here. 
Just finished up the first draft of the new decorators spec, pretty excited about it 😄 https://t.co/ELhZbsiaiR
— The p is silent (@pzuraq
) May 27, 2021
 



Does this mean that Typescript experimental decorators will not be compatible with Javascript decorators 😨
— Shivam (@shivamd20
) May 27, 2021
 



Unfortunately no, the new proposal has differing semantics from previous proposals in a number of ways. TypeScript experimental decorators were also incompatible with the Define semantics class fields, which caused a decent amount of breakage in the ecosystem.
— The p is silent (@pzuraq
) May 27, 2021
 



When the proposal advances, figuring out a step-by-step incremental upgrade path for existing decorators users is definitely going to be a priority though! No user left behind 😄
— The p is silent (@pzuraq
) May 27, 2021
 

Let's just hope that this doesn’t result in fragmentation of JavaScript decorators. We have already faced a lot inconvenience due to commonsjs and ES6 imports.]]></summary>
        <author>
            <name>Shivam</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Your Angular code base is deprecated.]]></title>
        <id>https://dev.to/shivamd20/your-angular-code-base-is-deprecated-315e</id>
        <link href="https://dev.to/shivamd20/your-angular-code-base-is-deprecated-315e"/>
        <updated>2021-05-27T23:27:40.000Z</updated>
        <summary type="html"><![CDATA[No, upgrading to Angular 12.x.x will not help.
The Typescript experimental decorators were based on TC39 proposal-decorators.
We use the same Decorators in our Angular codebase to create services, components and other Angular constructs.
But the same TC39 proposal has evolved in a different direction which is semantically not compatible with the experimental Typescript decorators.   
The new spec for Decorators is easier to use and write.
You can find the detailed comparison between old and new decorators here. 
Just finished up the first draft of the new decorators spec, pretty excited about it 😄 https://t.co/ELhZbsiaiR
— The p is silent (@pzuraq
) May 27, 2021
 



Does this mean that Typescript experimental decorators will not be compatible with Javascript decorators 😨
— Shivam (@shivamd20
) May 27, 2021
 



Unfortunately no, the new proposal has differing semantics from previous proposals in a number of ways. TypeScript experimental decorators were also incompatible with the Define semantics class fields, which caused a decent amount of breakage in the ecosystem.
— The p is silent (@pzuraq
) May 27, 2021
 



When the proposal advances, figuring out a step-by-step incremental upgrade path for existing decorators users is definitely going to be a priority though! No user left behind 😄
— The p is silent (@pzuraq
) May 27, 2021
 

Let's just hope that this doesn’t result in fragmentation of JavaScript decorators. We have already faced a lot inconvenience due to commonsjs and ES6 imports.]]></summary>
        <author>
            <name>Shivam</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Upload videos on GitHub (now GA!)]]></title>
        <id>https://dev.to/n3wt0n/upload-videos-on-github-now-ga-2en0</id>
        <link href="https://dev.to/n3wt0n/upload-videos-on-github-now-ga-2en0"/>
        <updated>2021-05-27T23:08:49.000Z</updated>
        <summary type="html"><![CDATA[Today we talk about uploading and using videos in GitHub.
As developers, the ability to collaborate through videos (for example, pair programming, demos, etc.) is an extremely important part of a software workflow, especially for communities and teams that are distributed.
GitHub video support is now finally GA, so let's see how it works
Let's quickly see how to upload a video in GitHub, and then let's explore few scenarios where this can be very helpful:




Link to the video: https://youtu.be/h6fOErvWIGI
As you have seen, uploading a video in GitHub Issues, Pull Requests and Discussions is super straight forward. I wanna share 3 scenarios in which uploading a video can be helpful.
Bugs are something that every developer deals with, but sometimes words aren’t enough to help someone else r…]]></summary>
        <author>
            <name>Davide Benvegnù</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Listening to OS signals in Golang]]></title>
        <id>https://dev.to/lautarojayat/listening-to-os-signals-in-golang-nkh</id>
        <link href="https://dev.to/lautarojayat/listening-to-os-signals-in-golang-nkh"/>
        <updated>2021-05-27T22:07:13.000Z</updated>
        <summary type="html"><![CDATA[No server, application, script or binary stuff is something isolated from the rest of the computer. Being aware of what is happening behind the scenes is useful, because lot of things can happen.
For this reason, Golang offers a simple way to manage this, without any black magic.
Lets suppose we have just a simple main function that starts a simple http server.
package main

func main{
    StartServer()
}


Maybe this works fine, but this is not aware of anything about the underlying OS. This means that, if something signals the main process to stop, this will just stop or crash without the possibility of gracefully shut down the server and it’s child gorutines.
Imagine now that we could pass a a context with cancellation this function as an argument like StartServer(ctx).
Lets check out t…]]></summary>
        <author>
            <name>Lautaro Jayat</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Neat Linux CLI tools]]></title>
        <id>https://dev.to/jones268/neat-linux-cli-tools-1o48</id>
        <link href="https://dev.to/jones268/neat-linux-cli-tools-1o48"/>
        <updated>2021-05-27T21:41:31.000Z</updated>
        <summary type="html"><![CDATA[These are some command line tools for Linux. All these tools have one thing in common, they all use the Linux Command Line Interface (CLI).
These tools are mainly useful for developers and sysadmins who use the linux shell on a daily basis.
If you are new to the command line, I recommend this course
Ranger is a console file manager for the X Window System / Wayland. It lets you browse your file system using just the cursor keys. It's great for viewing images too, pressing the right arrow on an image shows it.

ncdu is a disk usage analyzer just like du. But ncdu has a unique approach to this problem of disk usage.
ncdu is a disk analyzer for the command line. It scans your home directory and shows you how much space each directory takes.
unlike du, it uses an ncurses interface.

Lynis is an open source security auditing tool that tests the security defenses of Unix-based systems. 
It scans the system locally or remotely and gives a detailed report on the system’s security, allowing you to well-informed decisions for system hardening.
Lynis is a security tool designed to test common system security. This includes controls, policies and procedures as well as the actual security mechanisms of the operating system itself. It helps you to answer those questions and gives you recommendations how to improve overall security of your systems.]]></summary>
        <author>
            <name>jones268</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Return Largest Numbers in Arrays]]></title>
        <id>https://dev.to/rthefounding/return-largest-numbers-in-arrays-3iib</id>
        <link href="https://dev.to/rthefounding/return-largest-numbers-in-arrays-3iib"/>
        <updated>2021-05-27T21:39:54.000Z</updated>
        <summary type="html"><![CDATA[Let's return an array consisting of the largest number from each provided sub-array. For simplicity, the provided array will contain exactly 4 sub-arrays.
Remember, you can iterate through an array with a simple for loop, and access each member with array syntax arr[i].




function largestOfFour(arr) {
  return arr;
}

largestOfFour([[4, 5, 1, 3], [13, 27, 18, 26], [32, 35, 37, 39], [1000, 1001, 857, 1]]);

*Hints:
Array[Index][SubIndex]
Answer:




function largestOfFour(arr) {
let largestArr = [];
for (let i = 0; i < arr.length; i ++) {
  let tempLarge = arr[i][0];
  for (let j = 0; j < arr[i].length; j++) {
    let num = arr[i][j];
    if (num >= tempLarge) {
      tempLarge = num
    }
  }
  largestArr.push(tempLarge)
}
  return largestArr;
}

console.log(largestOfFour([[4, 5, 1, 3], [13, 27, 18, 26], [32, 35, 37, 39], [1000, 1001, 857, 1]])); // will display [5, 27, 39, 1001]]]></summary>
        <author>
            <name>Randy Rivera</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to split Django settings for different environments?]]></title>
        <id>https://dev.to/vlntsolo/how-to-split-django-settings-for-different-environments-18ad</id>
        <link href="https://dev.to/vlntsolo/how-to-split-django-settings-for-different-environments-18ad"/>
        <updated>2021-05-27T21:17:17.000Z</updated>
        <summary type="html"><![CDATA[So it's time to put your code into production. That means you have to connect some third party stuff, probably some external database or SMTP server. At the same time it would be nice to keep an option to modify and test your codebase with your local database and double-check on some other staging or QA server. But how to achieve this with default settings.py file?
Searching for the solution I found several approaches of splitting the Django settings, but one that worked for me appeared to be a mixture. Here's how I've got it to work with AWS EC2, but it should work with any python environment where you can set your own env variables.
Django settings as a module.
Key environmental variables for production and/or staging servers.
__init__.py.
your_main_django_app
-settings
    --__init__.py…]]></summary>
        <author>
            <name>Valentine Solonechnyi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular- Delete item from array of object]]></title>
        <id>https://dev.to/mateuszto/angular-delete-item-from-array-of-object-3316</id>
        <link href="https://dev.to/mateuszto/angular-delete-item-from-array-of-object-3316"/>
        <updated>2021-05-27T21:06:32.000Z</updated>
        <summary type="html"><![CDATA[Here's my app: https://stackblitz.com/edit/angular-ivy-s6usrl?file=src%2Fapp%2Fnotes%2Fsingle-note%2Fsingle-note.component.ts
As you can see I try to delete item but it doesn't work, can sb look at that? Thanks alot!]]></summary>
        <author>
            <name>Mateusz Tomczyk</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular- Delete item from array of object]]></title>
        <id>https://dev.to/mateuszto/angular-delete-item-from-array-of-object-3316</id>
        <link href="https://dev.to/mateuszto/angular-delete-item-from-array-of-object-3316"/>
        <updated>2021-05-27T21:06:32.000Z</updated>
        <summary type="html"><![CDATA[Here's my app: https://stackblitz.com/edit/angular-ivy-s6usrl?file=src%2Fapp%2Fnotes%2Fsingle-note%2Fsingle-note.component.ts
As you can see I try to delete item but it doesn't work, can sb look at that? Thanks alot!]]></summary>
        <author>
            <name>Mateusz Tomczyk</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Finding the Longest Word in a String]]></title>
        <id>https://dev.to/rthefounding/finding-the-longest-word-in-a-string-35o7</id>
        <link href="https://dev.to/rthefounding/finding-the-longest-word-in-a-string-35o7"/>
        <updated>2021-05-27T21:03:16.000Z</updated>
        <summary type="html"><![CDATA[Let's return the length of the longest word in the provided sentence.
Also the response should be a number in this instance.




function findLongestWordLength(str) {
  return str.length;
}

findLongestWordLength("The quick brown fox jumped over the lazy dog");

Answer:




function findLongestWordLength(str) {
  let words = str.split(" ");
  let longest = "";
  for (let i = 0; i < words.length; i ++) {
    let tempLong = words[i];
    if (tempLong.length > longest.length) {
      longest = tempLong;
    }
  }
  return longest.length;
}

findLongestWordLength("The quick brown fox jumped over the lazy dog"); // will display 6

Take the string and convert it into an array of words. Declare a variable to keep track of the maximum length and loop from 0 to the length of the array of words.
Then check for the longest word by comparing the current word to the previous one and storing the new longest word. At the end of the loop just return the number value of the variable maxLength.
function findLongestWordLength(str) {
  let words = str.split(" ");
  let longest = "";
  for (let word of words) { // <-----
    if (word.length > longest.length) {
      longest = word;
    }
  }
  return longest.length;
}

findLongestWordLength("The quick brown fox jumped over the lazy dog");

Here instead of the for loop that loops through the indexes we loop through the elements themselves.]]></summary>
        <author>
            <name>Randy Rivera</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Billgist Permissions Explained]]></title>
        <id>https://dev.to/billgist/billgist-permissions-explained-3kin</id>
        <link href="https://dev.to/billgist/billgist-permissions-explained-3kin"/>
        <updated>2021-05-27T20:09:30.000Z</updated>
        <summary type="html"><![CDATA[If you are concerned about unwittingly giving access to your AWS account then hopefully this article will help clarify your doubts about what permissions are being granted to Billgist.
When you integrate your AWS account a CloudFormation stack is created with this Billgist template. Feel free to click on that Billgist template to go through it. 
If you inspected the template you would see that it creates an IAM role with only AWS Cost Explorer permissions (that's the "ce:*" reference in the template) to the Billgist application.
You can see the role created by the Billgist and the policy attached to the role in the AWS IAM roles in the AWS console.
Additionally, you can also see the created resources in the Resources tab of the CloudFormation console once you started integration process. 

By this time you must be wondering how can I validate all this by myself. AWS provides an interface to display the role, trusted relationships and the policies attached to the role. 
You can follow the steps below to see how. 
Navigate to AWS roles and search for the role start with "billgist*" or see the previous screenshot to get actual name of the role. Once you searched for the role click on it to see the details. 


"Permissions" tab will be selected by default and here you will be able to see the attached policies. Click on the policy and verify which service(s) access has been granted to the role.



In the "Trust relationship" tab you will be able to verify what are the trusted entities for the role. Make sure the trusted entity should be "825617374672" which is the Billgist AWS account




Conclusion
read only Cost Explorer API. We recommended that you do not modify this policy and role by yourself.
If you want to revoke these permissions, remove the integration from Billgist and delete policy and role respectively.]]></summary>
        <author>
            <name>Muhaddis</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[X-headers, what and why?]]></title>
        <id>https://dev.to/jordanfinners/x-headers-what-and-why-jd</id>
        <link href="https://dev.to/jordanfinners/x-headers-what-and-why-jd"/>
        <updated>2021-05-27T19:59:42.000Z</updated>
        <summary type="html"><![CDATA[Contents



 Intro

 X-Content-Type-Options

 X-XSS-Protection

 X-Frame-Options

 Summary




  
  
  Intro 


Continuing on from my previous blog about website security week, we're going to talk about a series of X- security headers.
These are set as headers on your site when it is served up, let's dive in!



This header indicates that the browser should not try and sniff the type of the file served up. Sniffing of the file type would mean the browser modifying the Content-Type header that is returned from the server.
Sniffing the file content type could lead to non executable files being made executable, this could lead to bad actors injecting executable code into normal files and could lead to vulnerabilities.
It's best not to let the browser sniff the code.
Recommended setting:
X-Content-Type-Options: nosniff

You can read about it more on Modzilla.



This header has mostly been superseeded by the Content Security Policy, however its still useful for old browsers.
Recommended setting:
X-XSS-Protection: 1; mode=block

You can read about it more on Modzilla.



This header has mostly been superseeded by the Content Security Policy, however its still useful for old browsers.
This indicates if the site can be loaded in a <frame>, <iframe>, <embed> or <object>.
Recommended setting:
X-Frame-Options: DENY

You can read about it more on Modzilla.



In summary, setting a few additional headers when serving up your site can really improve the security of your site. It reduces the amount of attack surface there is for attackers and prevent common attacks on websites.
Set those headers now!
Happy Building!]]></summary>
        <author>
            <name>Jordan Finneran</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Introduction to Micro Frontends with Module Federation, React and Typescript]]></title>
        <id>https://dev.to/ogzhanolguncu/introduction-to-micro-frontends-with-module-federation-react-and-typescript-nij</id>
        <link href="https://dev.to/ogzhanolguncu/introduction-to-micro-frontends-with-module-federation-react-and-typescript-nij"/>
        <updated>2021-05-27T19:12:44.000Z</updated>
        <summary type="html"><![CDATA[The Micro Frontend is one of the hottest topics on the internet right now. We hear it all the time, but what is micro Frontend? Imagine a website with lots of components such as Navbar, Footer, Main Container and Side Menu. What would happen, if they were being served from different domains? Yes, you guessed it right we would've ended up with a micro Frontend. Now, thanks to micro frontend technologies, we can deal with those apps separately. We can write their unit tests separately, e2e tests separately we can even use different frameworks like Angular, Vue and Svelte.
There are two major players to make those things happen right now, one of them is Module Federation and another one is Single SPA which I covered here: 🔗Migrating CRA to Micro Frontends with Single SPA.
Unlike Single SPA, …]]></summary>
        <author>
            <name>Oğuzhan Olguncu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How we updated our Content Security Policy using our own product]]></title>
        <id>https://dev.to/sentry/how-we-updated-our-content-security-policy-using-our-own-product-4mgh</id>
        <link href="https://dev.to/sentry/how-we-updated-our-content-security-policy-using-our-own-product-4mgh"/>
        <updated>2021-05-27T19:12:12.000Z</updated>
        <summary type="html"><![CDATA[By: Mark Story
Everyone talks about creating content. But what about controlling it? In this Dogfooding Chronicle, I’ll walk you through how we updated our Content Security Policy using Discover — and how we’re keeping watch with Dashboards.
As the Internet evolves, so must our security mechanisms. It’s why same-origin policies (a Netscape-era directive in which resources from one origin are unable to modify or read data from another origin) put your application at risk for clickjacking and cross-site scripting attacks. That’s because same-origin policies have a weakness that enables third-party entities to have the same access rights as trusted entities. Content Security Policies (CSPs) address this blind spot by approving specific content types — everything from JavaScript sources to CSS…]]></summary>
        <author>
            <name>Schaeffer</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Freehand Drawing in Angular]]></title>
        <id>https://dev.to/ngconf/freehand-drawing-in-angular-1h</id>
        <link href="https://dev.to/ngconf/freehand-drawing-in-angular-1h"/>
        <updated>2021-05-27T19:06:50.000Z</updated>
        <summary type="html"><![CDATA[Jim Armstrong | ng-conf | Dec 2019

I wanted to something fun for the holiday season, so I decided to port a variable-width stroke from the Flex Freehand Drawing Library I created back in the early 2010’s. This stroke actually has a venerable history, going back to about 1983, as an exercise I was assigned as a teaching assistant for a graduate course in computational geometry. The instructor’s company recently obtained a very expensive tablet. This system allowed users to scan or load drawings already in electronic form into a display and annotate them with hand-drawn notes using a fixed-width stroke. The instructor had an idea for a variable-width (speed-dependent) stroke that would be the basis for a number of lab exercises. My job was to get his idea working in Fortran (yes, now you ca…]]></summary>
        <author>
            <name>ng-conf</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Freehand Drawing in Angular]]></title>
        <id>https://dev.to/ngconf/freehand-drawing-in-angular-1h</id>
        <link href="https://dev.to/ngconf/freehand-drawing-in-angular-1h"/>
        <updated>2021-05-27T19:06:50.000Z</updated>
        <summary type="html"><![CDATA[Jim Armstrong | ng-conf | Dec 2019

I wanted to something fun for the holiday season, so I decided to port a variable-width stroke from the Flex Freehand Drawing Library I created back in the early 2010’s. This stroke actually has a venerable history, going back to about 1983, as an exercise I was assigned as a teaching assistant for a graduate course in computational geometry. The instructor’s company recently obtained a very expensive tablet. This system allowed users to scan or load drawings already in electronic form into a display and annotate them with hand-drawn notes using a fixed-width stroke. The instructor had an idea for a variable-width (speed-dependent) stroke that would be the basis for a number of lab exercises. My job was to get his idea working in Fortran (yes, now you ca…]]></summary>
        <author>
            <name>ng-conf</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[LVM PE Striping to maximize Hyper-Converged storage throughput]]></title>
        <id>https://dev.to/intersystems/lvm-pe-striping-to-maximize-hyper-converged-storage-throughput-3cog</id>
        <link href="https://dev.to/intersystems/lvm-pe-striping-to-maximize-hyper-converged-storage-throughput-3cog"/>
        <updated>2021-05-27T19:00:55.000Z</updated>
        <summary type="html"><![CDATA[This post provides useful links and an overview of best practice configuration for low latency storage IO by creating LVM Physical Extent (PE) stripes for database disks on InterSystems Data Platforms; InterSystems IRIS, Caché, and Ensemble. 
Consistent low latency storage is key to getting the best database application performance. For applications running on Linux, Logical Volume Manager (LVM) is often used for database disks, for example, because of the ability to grow volumes and filesystems or create snapshots for online backups. For database applications, the parallelism of writes using LVM PE striped logical volumes can also help increase performance for large sequential reads and writes by improving the efficiency of the data I/O.
This post has a focus on using LVM PE stripes with …]]></summary>
        <author>
            <name>InterSystems Developer</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Create your own Create React App template]]></title>
        <id>https://dev.to/codsworth/create-your-own-create-react-app-template-46ll</id>
        <link href="https://dev.to/codsworth/create-your-own-create-react-app-template-46ll"/>
        <updated>2021-05-27T18:49:56.000Z</updated>
        <summary type="html"><![CDATA[Create React App is a convienient way to start building a new single-page application in React. Your app only needs one build dependency react-scripts. Under the hood it uses webpack, Babel, ESLint, and other amazing projects to power your app.
If you don't like the default scaffold of create react app it really easy to adjust.
Start by creating a folder called cra-template.


Cd into the folder and run yarn init -y or npm init -y if your prefer npm. This will generate a basic package.json file for you.


Create a template.json with your specific template settings. Any dependencies you add here will be added to the final dependency list.




{
  "package": {
    "dependencies": {
      "@testing-library/jest-dom": "^5.11.4",
      "@testing-library/react": "^11.1.0",
      "@testing-librar…]]></summary>
        <author>
            <name>codsworth</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[To $ or Not to $: Displaying Terminal Code Snippets]]></title>
        <id>https://css-tricks.com/?p=341298</id>
        <link href="https://css-tricks.com/to-or-not-to-displaying-terminal-code-snippets/"/>
        <updated>2021-05-27T18:22:11.000Z</updated>
        <summary type="html"><![CDATA[It’s very popular to put a $ on lines that are intended to be a command in code documentation that involves the terminal (i.e. the command line).
Like this:
$ brew install somepackage
The point of that is that it …
The post To $ or Not to $: Displaying Terminal Code Snippets appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Improve Machine Learning Model Performance by Combining Categorical Features]]></title>
        <id>60af931811ffb70827ef85d3</id>
        <link href="https://www.freecodecamp.org/news/improve-machine-learning-model-performance-by-combining-categorical-features/"/>
        <updated>2021-05-27T17:55:23.000Z</updated>
        <summary type="html"><![CDATA[When you're training a machine learning model, you can have some features in your dataset that represent categorical values. Categorical features are types of data that you can divide into groups. There are three common categorical data types: Ordinal – a set of values in ascending or descending order. Example: rating]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vim Tips and Tricks]]></title>
        <id>https://dev.to/harvey/vim-tips-and-tricks-4hfd</id>
        <link href="https://dev.to/harvey/vim-tips-and-tricks-4hfd"/>
        <updated>2021-05-27T17:47:37.000Z</updated>
        <summary type="html"><![CDATA[The following are my favorite tips and tricks for working with Vim. I use Vim as my primary editor, and try to avoid the use of other IDEs and editors.
If you're new to vim, or looking to learn more about the features already available, here's a sample of my tips and tricks.
Vim is often used by Linux but it works on every system. It's included by default on Mac OS X.
If you type / then a search term, Vim will start searching forwards from the current cursor location for that word. 
To search for the next occurrence of that search term, press n (for next); to search backwards press N . After pressing n or N , Vim will highlight all matching words, which you can then press on to select.

One of the most powerful features of Vim is its ability to use ex commands. First, in order to run ex commands, you must be in insert mode: that is to say, not at the beginning of a line. 
It’s important to note that in order to enter insert mode, you must first exit normal mode. To do this, press “i” or “a” – these keys will start you off in insert mode at the beginning of a new line or at the end of your current line.
Now that you’re in insert mode, you can type “:” and then an ex command.
Some things you can do are:
:5p print the fifth line
:100p print line 100
:%s/hello/world/ search and replace
:!bash return to bash, type exit to open vim
This saves you quit a few keystrokes. Press the number of times you want to repeat, then press the key. To move 100 lines down, press 100j. To move up 50 lines, press 50k. To delete 5 lines press 5dd etc.

Vim supports keyboard macros. They let you record and replay your keystrokes. This is really great if you have some tedious typing to do.
To start recording press q followed by a. To stop recording press the ESC key. Then press @ followed by a to replay the keystrokes.
If you are new to vim, I recommend this course]]></summary>
        <author>
            <name>Harvey</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to set up a dynamic CI/CD pipeline with Github Actions]]></title>
        <id>https://dev.to/this-is-learning/how-to-set-up-a-dynamic-ci-cd-pipeline-with-github-actions-29ah</id>
        <link href="https://dev.to/this-is-learning/how-to-set-up-a-dynamic-ci-cd-pipeline-with-github-actions-29ah"/>
        <updated>2021-05-27T16:22:04.000Z</updated>
        <summary type="html"><![CDATA[Follow me on Twitter at @tim_deschryver | Subscribe to the Newsletter | Originally published on timdeschryver.dev.
Read the TLDR version on timdeschryver.dev
When Github released Github Actions I moved most of my CI/CD pipelines to use a Github workflow. Each project had two workflows, one workflow that ran on Pull Requests, and a second workflow that was triggered when someone pushed a commit to the main branch. These two workflows were almost identical copies, except for the part that the main branch workflow included a release step.
Now, after a big year, I noticed that several workflows of projects that I'm working on have conditionally configured some steps in their workflow. I'm not sure, but I think that this wasn't always the case... or I completely missed that this was a possibili…]]></summary>
        <author>
            <name>Tim Deschryver</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Unit Testing - Table Tests in Go]]></title>
        <id>https://dev.to/liamchampton/unit-testing-table-tests-in-go-2nmo</id>
        <link href="https://dev.to/liamchampton/unit-testing-table-tests-in-go-2nmo"/>
        <updated>2021-05-27T15:29:14.000Z</updated>
        <summary type="html"><![CDATA[There are many types of testing that takes place throughout the software development lift cycle (SDLC) but in this post I will concentrate on table testing within unit tests. 
First let’s look at WHAT test cases are, specifically unit testing. Unit testing is a granular level of testing within your project. It tests the individual parts of the puzzle for fitment and correctness - "Does this function behave how I expect it to behave?". 
WHY do we use unit testing? - The aim of unit testing is to get high code coverage and check each moving part of your program. You shouldn't need to run your program everytime you want to check one small piece of functionality. That is only a good way to test "the happy path", its manual and time consuming. So, what if things don’t go as expected? You should…]]></summary>
        <author>
            <name>Liam Conroy Hampton</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[eCommerce Platform API Integration Development]]></title>
        <id>https://dev.to/natalia27070051/ecommerce-platform-api-integration-development-2503</id>
        <link href="https://dev.to/natalia27070051/ecommerce-platform-api-integration-development-2503"/>
        <updated>2021-05-27T15:28:05.000Z</updated>
        <summary type="html"><![CDATA[If you are an eCommerce software vendor, how would you gain a competitive advantage? An easy way to do this is to expand your markets and increase the number of features in your software that give you an advantage over your competitors.
eCommerce platform API integration development is the way that can help you succeed and increase your potential customer number.
An application programming interface (API) is a bridge between two systems that ensure seamless data transfer from one system to another. eCommerce API integration is, therefore, a way to connect your systems to shopping platform APIs so you can access data from your customers' stores.
Read on to learn how eCommerce platform API integration plays an important role in conquering the software market.
As mentioned earlier, the main p…]]></summary>
        <author>
            <name>Natalia API2Cart</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Make a Bouncing Basketball in Unity with Materials and Textures 🏀]]></title>
        <id>60a325c6906c5207e3a7da25</id>
        <link href="https://www.freecodecamp.org/news/how-to-make-a-basketball-in-unity-with-materials-and-textures/"/>
        <updated>2021-05-27T15:16:34.000Z</updated>
        <summary type="html"><![CDATA[In this article, I'll teach you how to make a basketball using materials and textures in Unity. You can extend this micro-concept to create any kind of ball like a football, tennis ball, or snooker balls.  That said, these techniques aren't just limited to creating round 3D objects like balls.]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using Cookies with JWT in Node.js]]></title>
        <id>https://dev.to/franciscomendes10866/using-cookies-with-jwt-in-node-js-8fn</id>
        <link href="https://dev.to/franciscomendes10866/using-cookies-with-jwt-in-node-js-8fn"/>
        <updated>2021-05-27T15:04:35.000Z</updated>
        <summary type="html"><![CDATA[Although JWT is a very popular authentication method and is loved by many. Most people end up storing it at localstorage. I am not going to create an argument here about what is the best way to store the jwt in the frontend, that is not my intention.
If you have already read this article I created on how to create a simple authentication and authorization system with JWT, you must have noticed that I send the jwt in response when an http request is made from the login route. That is, the idea is to keep it in localstorage.
However, there are other ways to send the jwt to the frontend and today I will teach you how to store the jwt in a cookie.
Sometimes I'm a little lazy and because of that I don't feel like constantly sending the jwt in the headers whenever I make a request to the Api. Th…]]></summary>
        <author>
            <name>Francisco Mendes</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[🖥 Get Better Angular UX Using 4 Animation Techniques]]></title>
        <id>https://dev.to/robertinoc_dev/get-better-angular-ux-using-4-animation-techniques-2gjk</id>
        <link href="https://dev.to/robertinoc_dev/get-better-angular-ux-using-4-animation-techniques-2gjk"/>
        <updated>2021-05-27T14:26:24.000Z</updated>
        <summary type="html"><![CDATA[⌨️ Improve the User Experience (UX) of an e-commerce application by implementing animations utilizing Angular animations, CSS animations, and Web Animation APIs.



  
  
  
Developers can use animations in meaningful and non-distracting ways to significantly improve their application's user experience (UX). This blog post discusses four effective techniques to animate your application's user interface, covering popular use cases. You'll learn how to transform bland experiences into memorable ones for your users.
I created a demo application to help you focus on adding animations to Angular. You'll add animations to a starter app as you progress through this tutorial. The starter application uses Tailwind to take care of its style and layout, but none of the animations discussed here are dependent on it.
Follow this tutorial without cloning any repo, right in the browser using Stackblitz or CodeSandbox.
If you prefer to work locally in your IDE, clone the demo app and check out its starter branch:
git clone -b starter git@github.com:auth0-blog/angular-animations-storefront.git

Once you clone the repo, make angular-animations-storefront your current directory:
cd angular-animations-storefront

Install the project's dependencies:
npm i

Run the project locally:
npm run start

Angular comes with a powerful animation module that lets you quickly add motion to your application: BrowserAnimationsModule. Under the hood, this module uses the Web Animations API (WAAPI) to create motion and interactivity. Whenever WAAPI isn't available, BrowserAnimationsModule falls back to using CSS keyframes. Angular animations give you the option to use their abstraction layer to animate any properties that the web considers animatable such as positions, sizes, colors, and many more.
Read more...]]></summary>
        <author>
            <name>Robertino</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Show Images on Click]]></title>
        <id>https://css-tricks.com/?p=341020</id>
        <link href="https://css-tricks.com/how-to-show-images-on-click/"/>
        <updated>2021-05-27T14:25:29.000Z</updated>
        <summary type="html"><![CDATA[Most images on the web are superfluous. If I might be a jerk for a bit, 99% of them aren’t even that helpful at all (although there are rare exceptions). That’s because images don’t often complement the text they’re …
The post How to Show Images on Click appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Robin Rendle</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Rethinking Postgres in a Post-Server World]]></title>
        <id>https://css-tricks.com/?p=340910</id>
        <link href="https://css-tricks.com/rethinking-postgres-in-a-post-server-world/"/>
        <updated>2021-05-27T14:23:23.000Z</updated>
        <summary type="html"><![CDATA[Serverless architectures have brought engineering teams a great number of benefits. We get simpler deployments, automatic and infinite scale, better concurrency, and a stateless API surface. It’s hard to imagine going back to the world of managed services, broken local …
The post Rethinking Postgres in a Post-Server World appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Michael Rispoli</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ThankYouNext 🖤 - A Next.js starter template]]></title>
        <id>https://dev.to/nexum/thankyounext-a-next-js-starter-template-4k25</id>
        <link href="https://dev.to/nexum/thankyounext-a-next-js-starter-template-4k25"/>
        <updated>2021-05-27T14:19:48.000Z</updated>
        <summary type="html"><![CDATA[Website: https://thankyounext.vercel.app/
https://github.com/stevefrenzel/thankyounext
https://dev.to/stvfrnzl/thankyounext-next-js-starter-template-32fg
I first came into contact with Next.js about a year ago and have been a big fan ever since! I love features like routing, image optimization or the flexibility to choose between SSG and SSR (or use both). Especially the developer experience feels more pleasant than with React and the support from people like Lee Robinson and Cassidy Williams is just priceless! To me, Next.js feels like a superset of React, similar like TypeScript to Javascript. 🙂
For this reason, I decided to use Next.js for my personal projects. However, I didn't want to start from scratch every time and painstakingly put everything together until I have a base I feel c…]]></summary>
        <author>
            <name>Steve Frenzel</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Controlling global decorators via args in storybook]]></title>
        <id>https://dev.to/tmikeschu/controlling-global-decorators-via-args-in-storybook-41lf</id>
        <link href="https://dev.to/tmikeschu/controlling-global-decorators-via-args-in-storybook-41lf"/>
        <updated>2021-05-27T14:15:17.000Z</updated>
        <summary type="html"><![CDATA[Storybook decorators (in React) provide a powerful way to reuse component environments across multiple stories. However, there aren't any off-the-shelf levers to manipulate global decorators from individual stories.
At work (we're hiring!) I recently cleaned up our many context providers into one Base decorator. Here is a simplified example.
// .storybook/decorators/base.tsx
export const Base: DecoratorFn = (Story, options) => {
  return (
    <TestReactRoot {...options.args}>
      <Story {...options} />
    </TestReactRoot>
  );
};

// .storybook/preview.js
import { Base } from './decorators/base';

export const decorators = [Base];

TestReactRoot encapsulates a few providers, including the classic react-redux provider. So now we can easily write stories that have useSelector and other R…]]></summary>
        <author>
            <name>Mike Schutte</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hi, Advance exercises For JS and TS, Please and Thanks You <3]]></title>
        <id>https://dev.to/dilandevgod/hi-advance-exercises-for-js-and-ts-please-and-thanks-you-3-2mhd</id>
        <link href="https://dev.to/dilandevgod/hi-advance-exercises-for-js-and-ts-please-and-thanks-you-3-2mhd"/>
        <updated>2021-05-27T14:03:19.000Z</updated>
        <summary type="html"><![CDATA[<3]]></summary>
        <author>
            <name>Dilan Gonzalez</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hi, Advance exercises For JS and TS, Please and Thanks You <3]]></title>
        <id>https://dev.to/dilandevgod/hi-advance-exercises-for-js-and-ts-please-and-thanks-you-3-2mhd</id>
        <link href="https://dev.to/dilandevgod/hi-advance-exercises-for-js-and-ts-please-and-thanks-you-3-2mhd"/>
        <updated>2021-05-27T14:03:19.000Z</updated>
        <summary type="html"><![CDATA[<3]]></summary>
        <author>
            <name>Dilan Gonzalez</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Useful VS Code Extensions For Front-End Developers]]></title>
        <id>https://smashingmagazine.com/2021/05/useful-vs-code-extensions-web-developers/</id>
        <link href="https://smashingmagazine.com/2021/05/useful-vs-code-extensions-web-developers/"/>
        <updated>2021-05-27T13:30:00.000Z</updated>
        <summary type="html"><![CDATA[Meet useful Visual Studio Code extensions for web developers: little helpers to minimize slow-downs and frustrations, and boost developer’s workflow along the way. With auto log messages, auto code formatting, file utils, file labels, code snippets, highlight brackets, tags, indents and workspaces, onboarding and remote SSH.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cosima Mielke)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Web Scraping with Puppeteer 🎭]]></title>
        <id>https://dev.to/inkuantum/web-scraping-with-puppeteer-kj7</id>
        <link href="https://dev.to/inkuantum/web-scraping-with-puppeteer-kj7"/>
        <updated>2021-05-27T13:08:15.000Z</updated>
        <summary type="html"><![CDATA[Internet is a wide place full of information. Here you can find everything from cute kitten videos up to scientific researches. This information isn't only useful to us, but it could become vital for our websites and applications.
There are a few ways to access the necessary data, Rest APIs, public databases and web scraping. Puppeteer is an awesome tool for getting the last one done. In this post, I want to help you discover this tool for yourself and show you what it's capable of.
Let's get the first question out of the way.
Puppeteer is a Node library which provides a high-level API to control Chrome or Chromium over the DevTools Protocol.
That's what the official documentation says. Complicated isn't it? In simpler terms, we're dealing with an invisible browser which is controlled via …]]></summary>
        <author>
            <name>Kirill Inoz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[400 (!) EC2 instance types: the good, the bad, and the ugly]]></title>
        <id>https://dev.to/castai/400-ec2-instance-types-the-good-the-bad-and-the-ugly-25in</id>
        <link href="https://dev.to/castai/400-ec2-instance-types-the-good-the-bad-and-the-ugly-25in"/>
        <updated>2021-05-27T13:00:02.000Z</updated>
        <summary type="html"><![CDATA[A DevOps life isn’t a piece of cake in AWS. How are you supposed to make sense of EC2 instance types when you’re looking at almost 400 different ones? 
Picking the right VM type for the job that doesn’t burn a hole in your pocket is a challenge. But there are a few things you can do to make your life easier (and gain points with your financial department).
Careful choice of EC2 instances is definitely worth your time because compute is the biggest part of your cloud bill. If you manage to optimize it, you’ll open the doors to dramatic reductions of your cloud costs. 
What you’ll find inside:
Before we get started: 5 basic facts about Amazon EC2 instances
How to choose the EC2 instance types with cost optimization in mind
Identify your application’s requirements
Shop around for EC2 instance…]]></summary>
        <author>
            <name>CAST AI</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Docker & Docker-compose on Ubuntu 20.04 Server]]></title>
        <id>https://dev.to/semirteskeredzic/docker-docker-compose-on-ubuntu-20-04-server-4h3k</id>
        <link href="https://dev.to/semirteskeredzic/docker-docker-compose-on-ubuntu-20-04-server-4h3k"/>
        <updated>2021-05-27T12:14:15.000Z</updated>
        <summary type="html"><![CDATA[Docker is a powerful application that lets you run your applications in a contained environment so everything that happens is (more or less) isolated through the use of Containers. It is however different from Virtual machines, because it uses OS Kernel from the host machine while Virtual machines spin up their own. You can watch how Nana explains it in this video: Docker vs Virtual Machine | simply explained || Docker Tutorial 6
As a prerequisite for installing and using Docker & Docker-compose on Ubuntu server you will need it initially configured and set up. I've made a post about initial configuration for Ubuntu 20.04 server, so you can read it here: Configure new Ubuntu 20.04 server 
Before installing any new package, it is recommended to update the list of packages:
$ sudo apt update…]]></summary>
        <author>
            <name>Semir Teskeredzic</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[NodeJS] Simple Express Response Hijack/Interceptor Library]]></title>
        <id>https://dev.to/slaveofcode/nodejs-simple-express-response-hijack-interceptor-library-fb8</id>
        <link href="https://dev.to/slaveofcode/nodejs-simple-express-response-hijack-interceptor-library-fb8"/>
        <updated>2021-05-27T12:13:34.000Z</updated>
        <summary type="html"><![CDATA[So this is a short introduction about my express-multi-hijack library that I just published a few minutes ago. express-multi-hijack is a simple express middleware for hijacking or intercept Your HTTP or API responses. 
It's based on my experience when I want to intercept JSON Api response.  This library might be useful for your use-case with your NodeJS or Typescript project (yes, it is typescript friendly) when it needs an interception on response body
npm i express-multi-hijack
This library works by overriding res.end function, still maintaining the original one once all of the "hijack" functions are executed.
res.end implementation.
const Express = require('express');
const { Hijack } = require('express-multi-hijack');

const app = Express()

app.use(Hijack({
  json: true,
  handler: (b…]]></summary>
        <author>
            <name>Aditya Kresna</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Production-ready shell startup scripts: The Set Builtin]]></title>
        <id>https://dev.to/willianantunes/production-ready-shell-startup-scripts-the-set-builtin-48dm</id>
        <link href="https://dev.to/willianantunes/production-ready-shell-startup-scripts-the-set-builtin-48dm"/>
        <updated>2021-05-27T12:09:21.000Z</updated>
        <summary type="html"><![CDATA[When you build an application and make it available through container technology, either you have an ENTRYPOINT or CMD instructions at the end of its Dockerfile. Depending on which framework you're using and some requirements you have, sometimes it's better to have a bash script responsible for running your project. When it's available, generally, you'll see a bunch of commands that are executed, like the following script I created for the project Django Multiple Schemas:
#!/usr/bin/env bash

python manage.py makemigrations
python manage.py migrate
python manage.py seed --create-super-user

python manage.py runserver 0.0.0.0:8000

Let's suppose the command python manage.py migrate failed its execution. What would happen 🤔? The answer is counter-intuitive, but the script would run fine, ev…]]></summary>
        <author>
            <name>Willian Antunes</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Build And Launch Responsive Websites Faster With Editor X]]></title>
        <id>https://smashingmagazine.com/2021/05/build-launch-responsive-websites-editorx/</id>
        <link href="https://smashingmagazine.com/2021/05/build-launch-responsive-websites-editorx/"/>
        <updated>2021-05-27T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[While web builders have been around for a long time, it wasn’t until recently that they became practical for professional use. Closing the gap between design and code has become the north star for many companies and we are seeing a wave of tools that deliver on this promise.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Miroslav Bekyarov)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The collection reference method *.valueChanges(...) visualized (and explained)!]]></title>
        <id>https://dev.to/kwhjvdkamp/the-collection-method-valuechanges-visualized-and-explained-5g13</id>
        <link href="https://dev.to/kwhjvdkamp/the-collection-method-valuechanges-visualized-and-explained-5g13"/>
        <updated>2021-05-27T09:15:29.000Z</updated>
        <summary type="html"><![CDATA[Context 
Building a web application with Angular and Firebase presented by Mark Thompson. 
| Angular 12.0.1 | firebase 9.11.0 | Node 14.17 |
Taking Mark's instruction a bit further; to achieve drag&drop in a bit more realistic situation, calling the store in a service asynchronously. To achieve this status, I stumbled on the .valueChanges(...) method.
The internal firestore documents explains the working of this .valueChanges(...) method as it listen to all documents in the retrieved collection and queries this list as an Observable. 
idField. When the idField option is provided like 
.valueChanges({idField: '<a-property-of-the-document'}) it means that the document ID (actually the document's name) will be mapped to the provided property being one of the properties within the document-object.
Know the construction of the document, in this case document (ITask) = { id?: string; title?:string; description?: string'; }. 

When calling the .valueChanges(...) method with a provided idField, which is set to one of the provided properties as stated, internally, the ID (actually the document's name) of that document is mapped to the 'provided'-property within the document object. 

The service
snapshotChanges() as stated elsewhere.]]></summary>
        <author>
            <name>Koen (K.W.H.J.) van der Kamp</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The collection reference method *.valueChanges(...) visualized (and explained)!]]></title>
        <id>https://dev.to/kwhjvdkamp/the-collection-method-valuechanges-visualized-and-explained-5g13</id>
        <link href="https://dev.to/kwhjvdkamp/the-collection-method-valuechanges-visualized-and-explained-5g13"/>
        <updated>2021-05-27T09:15:29.000Z</updated>
        <summary type="html"><![CDATA[Context 
Building a web application with Angular and Firebase presented by Mark Thompson. 
| Angular 12.0.1 | firebase 9.11.0 | Node 14.17 |
Taking Mark's instruction a bit further; to achieve drag&drop in a bit more realistic situation, calling the store in a service asynchronously. To achieve this status, I stumbled on the .valueChanges(...) method.
The internal firestore documents explains the working of this .valueChanges(...) method as it listen to all documents in the retrieved collection and queries this list as an Observable. 
idField. When the idField option is provided like 
.valueChanges({idField: '<a-property-of-the-document'}) it means that the document ID (actually the document's name) will be mapped to the provided property being one of the properties within the document-object.
Know the construction of the document, in this case document (ITask) = { id?: string; title?:string; description?: string'; }. 

When calling the .valueChanges(...) method with a provided idField, which is set to one of the provided properties as stated, internally, the ID (actually the document's name) of that document is mapped to the 'provided'-property within the document object. 

The service
snapshotChanges() as stated elsewhere.]]></summary>
        <author>
            <name>Koen (K.W.H.J.) van der Kamp</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Food Recipe WEbsite]]></title>
        <id>https://dev.to/mkknight23/food-recipe-website-13m0</id>
        <link href="https://dev.to/mkknight23/food-recipe-website-13m0"/>
        <updated>2021-05-27T07:19:25.000Z</updated>
        <summary type="html"><![CDATA[Content Here]]></summary>
        <author>
            <name>KAZI MUSHARRAF</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Create Server using Express and TypeScript]]></title>
        <id>https://dev.to/achukka/create-server-using-express-and-typescript-2cf0</id>
        <link href="https://dev.to/achukka/create-server-using-express-and-typescript-2cf0"/>
        <updated>2021-05-27T04:46:09.000Z</updated>
        <summary type="html"><![CDATA[In this post, we will learn how to create a server using Express and TypeScript
If you are feeling lucky, refer to this commit for full code
Step 1: Setting up the project
Download and install the latest stable version of Node

At the time of writing this post, the recommended version is 14.17.0




$ node --version
v14.17.0

Create a new directory for the service




mkdir tdsvc

Initialize a node application




cd tdsvc
npm init

Fill out the necessary project details to generate a  package.json

Set main to dist/index.js

Add start script in the scripts section




"start": "tsc && node dist/index.js"

Add "type": "module" to enable ES5 modules
See this post for more information
Stitching all the above your package.json should look something similar to this
{
  "name": "tdsvc",
  "vers…]]></summary>
        <author>
            <name>Aditya Chukka</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Create Server using Express and TypeScript]]></title>
        <id>https://dev.to/achukka/create-server-using-express-and-typescript-2cf0</id>
        <link href="https://dev.to/achukka/create-server-using-express-and-typescript-2cf0"/>
        <updated>2021-05-27T04:46:09.000Z</updated>
        <summary type="html"><![CDATA[In this post, we will learn how to create a server using Express and TypeScript
If you are feeling lucky, refer to this commit for full code
Step 1: Setting up the project
Download and install the latest stable version of Node

At the time of writing this post, the recommended version is 14.17.0




$ node --version
v14.17.0

Create a new directory for the service




mkdir tdsvc

Initialize a node application




cd tdsvc
npm init

Fill out the necessary project details to generate a  package.json

Set main to dist/index.js

Add start script in the scripts section




"start": "tsc && node dist/index.js"

Add "type": "module" to enable ES5 modules
See this post for more information
Stitching all the above your package.json should look something similar to this
{
  "name": "tdsvc",
  "vers…]]></summary>
        <author>
            <name>Aditya Chukka</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[rsync continue a broken scp command]]></title>
        <id>https://dev.to/icy1900/rsync-continue-a-broken-scp-command-3efk</id>
        <link href="https://dev.to/icy1900/rsync-continue-a-broken-scp-command-3efk"/>
        <updated>2021-05-27T02:43:07.000Z</updated>
        <summary type="html"><![CDATA[https://stackoverflow.com/a/20860920/4016028
I think using -e ssh in rsync command is not necessary]]></summary>
        <author>
            <name>Roy</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Introducing Expressive Tea]]></title>
        <id>https://dev.to/expressive-tea/introducing-expressive-tea-26k7</id>
        <link href="https://dev.to/expressive-tea/introducing-expressive-tea-26k7"/>
        <updated>2021-05-26T22:52:46.000Z</updated>
        <summary type="html"><![CDATA[Introduction


When I started coding Expressive Tea almost two years ago, it was just a tool to increase my laziness (as most engineers) avoid setting up a project on ExpressJS. I was thinking about combining a language that I started to learn (Typescript) and making easier a configuration for ExpressJS; by that moment, I did not know about NestJS, a very mature and fantastic Framework. I did not have a chance to research, just because I got the idea to start working in this new (at that moment) personal library.
In September 2019, that personal library turned into a microframework to help build server-side applications in NodeJS and use modern Javascript powered by Typescript. Also, one of the main goals is to make this compatible with all the express middleware and plugins available when…]]></summary>
        <author>
            <name>Diego Resendez</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Introducing Expressive Tea]]></title>
        <id>https://dev.to/expressive-tea/introducing-expressive-tea-26k7</id>
        <link href="https://dev.to/expressive-tea/introducing-expressive-tea-26k7"/>
        <updated>2021-05-26T22:52:46.000Z</updated>
        <summary type="html"><![CDATA[Introduction


When I started coding Expressive Tea almost two years ago, it was just a tool to increase my laziness (as most engineers) avoid setting up a project on ExpressJS. I was thinking about combining a language that I started to learn (Typescript) and making easier a configuration for ExpressJS; by that moment, I did not know about NestJS, a very mature and fantastic Framework. I did not have a chance to research, just because I got the idea to start working in this new (at that moment) personal library.
In September 2019, that personal library turned into a microframework to help build server-side applications in NodeJS and use modern Javascript powered by Typescript. Also, one of the main goals is to make this compatible with all the express middleware and plugins available when…]]></summary>
        <author>
            <name>Diego Resendez</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Giphy API Tutorial – How to Generate Animated Text GIFs with ReactJS]]></title>
        <id>60a44b9f906c5207e3a7e098</id>
        <link href="https://www.freecodecamp.org/news/giphy-api-tutorial/"/>
        <updated>2021-05-26T21:44:01.000Z</updated>
        <summary type="html"><![CDATA[In this tutorial you will create an app that generates dynamic animated text using Giphy's API with ReactJS. After that I'll go over some of the other API features Giphy provides that you can use to make other interesting projects. You can find the code for the tutorial here. Video]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Zorin OS for learning Linux? Yes.]]></title>
        <id>https://dev.to/mabbaszade/zorin-os-for-learning-linux-yes-24ob</id>
        <link href="https://dev.to/mabbaszade/zorin-os-for-learning-linux-yes-24ob"/>
        <updated>2021-05-26T21:25:55.000Z</updated>
        <summary type="html"><![CDATA[If you are using Windows/macOS and want to learn Linux, Zorin OS can be a good starting point.
Some interesting features (esp. to Windows users):
Familiar desktop environment & user experience to Windows and macOS users.
Possible to run many Windows apps (by using WineHQ).
It's free and proudly open-source.
So if you are interested in Linux, I suggest trying Zorin OS alongside your current OS or in a virtual machine.
P.S. OnWorks lets you test various OSes online. It's slow and time-limited but worth trying once.]]></summary>
        <author>
            <name>Mostafa A.</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Sonnet about access a-woes... ha HA!]]></title>
        <id>https://dev.to/chadgauth/sonnet-about-access-a-woes-ha-ha-3f56</id>
        <link href="https://dev.to/chadgauth/sonnet-about-access-a-woes-ha-ha-3f56"/>
        <updated>2021-05-26T18:27:46.000Z</updated>
        <summary type="html"><![CDATA[Hello, the world, I am but meek and lean.
I seek to change the code within systems...
but LO! The access blocks me here! Oh DAMN!
To be but free to do what can be done!
Systems of checks and balances adhere
but they prevent the hard, the real, the work!
Design, construct, create a new system.
One that values o'er bronze the brain within.
Real work is near... No fear, no fight! It's here!
Adapt and change complex systems at work...
To be but simple... YES! No more matrix :P
Access granted. And now the change is here.
Today we start a new simple system.
One that values the brain o'er bronze. COMMIT]]></summary>
        <author>
            <name>Chad Gauthier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Contribute to Open Source  Projects – A Beginner&#x27;s Guide]]></title>
        <id>60abe7fb11ffb70827ef63a6</id>
        <link href="https://www.freecodecamp.org/news/how-to-contribute-to-open-source-projects-beginners-guide/"/>
        <updated>2021-05-26T18:01:00.000Z</updated>
        <summary type="html"><![CDATA[If you're a developer, you've probably come across the term "open source." If you've ever wondered what it's all about and how to contribute, you are in exactly the right place.  I put aside all my fears about how and what to contribute during Hacktoberfest 2020, and made]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learn Basic Terraform Syntax in 20 minutes]]></title>
        <id>606f4f5fd5756f080ba96b65</id>
        <link href="https://www.freecodecamp.org/news/terraform-syntax-for-beginners/"/>
        <updated>2021-05-26T18:00:52.000Z</updated>
        <summary type="html"><![CDATA[In this article, I'll give you a brief overview of the configuration syntax of Terraform.  Terraform's docs provide the most comprehensive look at its syntax. But this article should serve as a condensed quick start introduction that'll give new users a simplified overview. We'll focus on the basic structures without]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Awesome Standalone (Web Components)]]></title>
        <id>https://css-tricks.com/?p=339759</id>
        <link href="https://css-tricks.com/awesome-standalone-web-components/"/>
        <updated>2021-05-26T17:56:34.000Z</updated>
        <summary type="html"><![CDATA[In his last An Event Apart talk, Dave made a point that it’s really only just about right now that Web Components are becoming a practical choice for production web development. For example, it has only been about a year …
The post Awesome Standalone (Web Components) appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Links on Web Components]]></title>
        <id>https://css-tricks.com/?p=340901</id>
        <link href="https://css-tricks.com/links-on-web-components/"/>
        <updated>2021-05-26T17:56:12.000Z</updated>
        <summary type="html"><![CDATA[How we use Web Components at GitHub — Kristján Oddsson talks about how GitHub is using web components. I remember they were very early adopters, and it says here they released a <relative-time> component in 2014! Now they’ve got a 
…
The post Links on Web Components appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to implement a feature in Express (with Typescript)]]></title>
        <id>https://dev.to/joncodes/how-to-implement-a-feature-in-express-with-typescript-4k4g</id>
        <link href="https://dev.to/joncodes/how-to-implement-a-feature-in-express-with-typescript-4k4g"/>
        <updated>2021-05-26T17:15:09.000Z</updated>
        <summary type="html"><![CDATA[Source code: Github





  
  
  The baseline project


This post assumes you are following along with the baseline project tutorial, but the concepts apply to any Typescript project.
User service


We now have a solid foundation for building an express server. Next, we will create a simple User service that will illustrate one possible architecture for implementing features in express. We are going to create a directory located at src/user that will contain all of the User-specific logic for our application:
src/
├─ user/
│  ├─ controller.ts
│  ├─ service.ts
│  ├─ repo.ts
│  ├─ types.ts
├─ util/
│  ├─ error.ts
│  ├─ load-config.ts
│  ├─ logger.ts
├─ app.ts
├─ config.ts
├─ index.ts

Let's go ahead and create the src/usr directory and the files that we will be working with:
$ mkdir src/user…]]></summary>
        <author>
            <name>Jon Webb</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[My Journey with Angular and SSR]]></title>
        <id>https://dev.to/danywalls/my-journey-with-angular-and-ssr-47l3</id>
        <link href="https://dev.to/danywalls/my-journey-with-angular-and-ssr-47l3"/>
        <updated>2021-05-26T17:15:07.000Z</updated>
        <summary type="html"><![CDATA[Last month I setup my blog with Angular Universal (Server Side Render) this is about my steps installing SSR in my blog, so keep in mind a simple blog with only text with http request to contentful, so is real scenario, but the simple case to get start with Angular and Server Side render.
First step install Angular universal.
ng add @nguniversal/express-engine@next

Next step was set up the build in netlify
npm run build:ssr

The page is ready with server side render, but my client application need to request the articles, The TransferState service help to send information from the server to the client.
  imports: [
    BlogHeaderModule,
    BrowserModule,
    InfrastructureModule,
    AppRoutingModule,
    BrowserModule.withServerTransition({ appId: 'dw' }),
    TransferHttpCacheModule
  ],

Install it as part of the App module and import into  ServerTransferStateModule in server module.
@NgModule({
  imports: [AppModule, ServerModule, ServerTransferStateModule],
  bootstrap: [AppComponent],
})

Done
Because my app is only text was easy to get more than 95% but keep in mind the following points.
Not all application are the same, my case is a simple blog, so not issues with images, or authentication.
Use https://contrastchecker.com/ and https://alex-page.github.io/sass-a11ycolor for accesibility issues.
If is your first time, try with an easy proyect like a blog or small app.
Take care about how to use or transfer data between components, I got an issue to send data using this.location.getState().
Done!]]></summary>
        <author>
            <name>Dany Paredes</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Build a GraphQL API Using Laravel]]></title>
        <id>60abc59d11ffb70827ef6304</id>
        <link href="https://www.freecodecamp.org/news/build-a-graphql-api-using-laravel/"/>
        <updated>2021-05-26T16:34:32.000Z</updated>
        <summary type="html"><![CDATA[In this article, I'll walk you through how to set up your own GraphQL API using PHP and Laravel. Two years ago, I started working professionally as a backend developer. And I was very intimidated by all the technology I didn't yet know. Words like Docker, Kubernetes, and GraphQL seemed]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Extract Zip files recursively with NodeJS]]></title>
        <id>https://dev.to/saraogipraveen/extract-zip-files-recursively-with-nodejs-3n9p</id>
        <link href="https://dev.to/saraogipraveen/extract-zip-files-recursively-with-nodejs-3n9p"/>
        <updated>2021-05-26T16:25:59.000Z</updated>
        <summary type="html"><![CDATA[Hello Coders 👋
This is my first attempt at writing a technical post. Hope you find it helpful.
Recently, I encountered a requirement where I had to extract all the zip files present inside a main zip file which had a random folder structure and any of the folders can have a zip file present inside it at any level.
Find Library for extracting
Extract the main zip file i.e demo.zip

Figure out a way to traverse the whole folder structure recursively
Then extract the .zip file whenever it is found.
extract-zip library used to extract the zip files.
It takes two input arguments source and target. 
source should be absolute path of the zip file, 
target is where the folder will get extracted.




async function extractZip(source, target) {
  try {
    await extract(source, { dir: target });
  …]]></summary>
        <author>
            <name>Praveen Saraogi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[REST API with Lambda and Node.js on AWS]]></title>
        <id>https://dev.to/carlosvldz/rest-api-with-lambda-and-node-js-on-aws-3o2n</id>
        <link href="https://dev.to/carlosvldz/rest-api-with-lambda-and-node-js-on-aws-3o2n"/>
        <updated>2021-05-26T16:02:25.000Z</updated>
        <summary type="html"><![CDATA[Here Carlos, let's start!


Once logged into our account, in the services menu select the Lambda option.

It shows three different options, select "Crear desde cero" to create from scratch.

Inside the panel of the Lambda, go to the code section.
As we can see, the handler object is that returns the Lambda, so we must always export a handler.
exports.handler = async (event) => {
        // TODO implement
        const response = {
                statusCode: 200,
                body: JSON.stringify('Hello from Lambda!'),
        };
        return response;
};

Pass the function up, and down export the handler, in the end it's the same but a little easier to understand. (The function is now assigned to the export handler).
const toLowerCase = async (event) => {
        // TODO implement
  …]]></summary>
        <author>
            <name>Carlos Sánchez</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Yara for daily analysis]]></title>
        <id>https://dev.to/terceranexus6/yara-for-daily-analysis-1o8</id>
        <link href="https://dev.to/terceranexus6/yara-for-daily-analysis-1o8"/>
        <updated>2021-05-26T15:52:18.000Z</updated>
        <summary type="html"><![CDATA[It's been a while since I wrote for the last time, and partly it's because I've focusing on studying a new career path: Threat Hunting. Even though Yara is not an usual tool in my work routine I use it for my own researching, so I thought about breaking the ice with a simple tutorial on using Yara for looking for malware genes in binaries.
If you are slightly into malware analysis you probably know about Intezer. One of the things I like the most about that tool is the ability of analyzing genes, meaning it compares already known malware strings and Libraries in order to determine if a sample is similar enough (considering the percentage of similarities). Hash comparison lets you know if a binary is exactly the same as a malicious one, but genes comparison allows you to determine a probabl…]]></summary>
        <author>
            <name>Paula</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to handle server responses in ExpressJS - The easy way!]]></title>
        <id>https://dev.to/imranabdulmalik/how-to-handle-server-responses-in-expressjs-the-easy-way-3lpm</id>
        <link href="https://dev.to/imranabdulmalik/how-to-handle-server-responses-in-expressjs-the-easy-way-3lpm"/>
        <updated>2021-05-26T15:45:17.000Z</updated>
        <summary type="html"><![CDATA[Introduction


There are way too many HTTP status codes. If you're like me, you find it difficult to memorize these codes. Fortunately, we don't usually use every HTTP status code out there. There are the common ones that people use often and we can limit our knowledge to just the ones we need.
It would have been great if we had only codes to remember but these codes have meanings (as far HTTP is concerned). So remembering the code only is not enough, we also have to remember what they mean and when to use them. The meanings given to these codes are standard meanings, so if we aim to develop APIs that follows the HTTP standard, it is imperative we use these codes appropriately else we end up creating APIs that others can't understand or use.
Wouldn't it be nice if there was a way we can cr…]]></summary>
        <author>
            <name>Imran Abdulmalik</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What permissions does your website need?]]></title>
        <id>https://dev.to/jordanfinners/what-permissions-does-your-website-need-243f</id>
        <link href="https://dev.to/jordanfinners/what-permissions-does-your-website-need-243f"/>
        <updated>2021-05-26T14:33:04.000Z</updated>
        <summary type="html"><![CDATA[Contents



 Intro

 Feature Policy

 Permissions Policy

 Summary




  
  
  Intro 


Continuing on from my previous blog about website security week, we're going to talk about Features and Permissions for websites.
These are set as headers on your site when it is served up.



The feature policy was introduced several years ago and allows you to limit the web features that your website and anything embedded including iframes can use.
This helps protect your users from anything running that shouldn't be and accessing any web features that you didn't intend.
Here are some of the most important features to enable/disable:
accelerometer
camera
geolocation
gyroscope
magnetometer
microphone
payment
usb
The full list can be found on Modzilla.
Example Usage:
feature-policy: accelerometer 'none'…]]></summary>
        <author>
            <name>Jordan Finneran</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Build Super Mario Bros, Zelda, and Space Invaders with Kaboom.js]]></title>
        <id>60aced0011ffb70827ef6d96</id>
        <link href="https://www.freecodecamp.org/news/how-to-build-mario-zelda-and-space-invaders-with-kaboom-js/"/>
        <updated>2021-05-26T14:12:27.000Z</updated>
        <summary type="html"><![CDATA[In this video course I show you how to build three popular games using the latest game development library for JavaScript called Kaboom.js. This course is exciting for two reasons: First of all, I am going to be introducing a new technology designed especially for game development in JavaScript.]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Thorough Analysis of CSS-in-JS]]></title>
        <id>https://css-tricks.com/?p=340705</id>
        <link href="https://css-tricks.com/a-thorough-analysis-of-css-in-js/"/>
        <updated>2021-05-26T14:08:49.000Z</updated>
        <summary type="html"><![CDATA[Wondering what’s even more challenging than choosing a JavaScript framework? You guessed it: choosing a CSS-in-JS solution. Why? Because there are more than 50 libraries out there, each of them offering a unique set of features.
We tested 10 different …
The post A Thorough Analysis of CSS-in-JS appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Andrei Pfeiffer</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular 11 - JWT Authentication Example & Tutorial With PHP]]></title>
        <id>https://dev.to/jumamiller/angular-11-jwt-authentication-example-tutorial-with-php-2d7d</id>
        <link href="https://dev.to/jumamiller/angular-11-jwt-authentication-example-tutorial-with-php-2d7d"/>
        <updated>2021-05-26T13:59:56.000Z</updated>
        <summary type="html"><![CDATA[A user is usually authenticated by entering a username, email address, and/or password and then being given access to various resources or services. By its very existence, authentication relies on maintaining the user's state. This seems to go against HTTP's fundamental property of being a stateless protocol.  
Your Angular app will communicate with a backend that generates tokens. The Angular app can then send the token to the backend as an Authorization header to show they're authenticated. The JWT should be checked by the backend, and access should be granted based on its validity.  
This tutorial will walk you through the process of developing and implementing JWT-based authentication in an Angular 11 application step by step. This tutorial takes you a step further by developing a back…]]></summary>
        <author>
            <name>Miller Juma</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Scaffold Identity Pages with ASP.NET Core | Dear Coder]]></title>
        <id>https://dev.to/piaomu/scaffold-identity-pages-with-asp-net-core-dear-coder-1e88</id>
        <link href="https://dev.to/piaomu/scaffold-identity-pages-with-asp-net-core-dear-coder-1e88"/>
        <updated>2021-05-26T13:42:42.000Z</updated>
        <summary type="html"><![CDATA[Dear Coder,
Let’s talk about the person who matters the most in our field.
No, it’s not you (though you’re enduringly important to me, dear Coder).
I’m talking about the user.
I want the user to have a good user experience, so I build a model that inherits from AspNetCore’s IdentityUser. By doing this, I inherit a set of robust properties without having to write too much new code.
Let’s start with the User model:

In my ToonSpace project, I create a model named “ToonUser” and add some custom properties that IdentityUser doesn’t already cover, including:
FirstName
LastName
DisplayName
FullName
ImageData
ContentType

I also inherit the properties of IdentityUser by using the Microsoft.AspNetCore.Identity namespace and inheriting from Identity user when I name the class:

What properties does IdentityUser grant me access to? A lot.

With these properties appended to my ToonUser, I have the tools I need to allow users to register accounts and interact with my application.
In my data folder, I access my ApplicationDbContext file and inherit IdentityDbContext of type ToonUser.

Then I add the ToonUser to my Identity service, along with Default UI and DefaultTokenProviders.

Now I’m ready to scaffold Identity pages for user accounts. I add a Scaffolded Item in my Areas > Identity folder and select “Identity.” 

I override all files and select ApplicationDbContext as my data context class. Once I add the scaffolded Identity pages, my Identity folder will be filled with boilerplate razor pages.

I access the code behind for the “register” view and add properties for First Name and Last Name because those properties are not the default with Identity pages. I also add fields to the View for the user to enter this information.

Now that I have registration pages scaffolded and augmented to fit my ToonUser model, users can register an account on my application.
I hope these letters find you well, dearest Coder.
Until next time, godspeed in your keystrokes.
Clickity Clacks,
Kasey]]></summary>
        <author>
            <name>Kasey Wahl</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Accessible SVGs: Perfect Patterns For Screen Reader Users]]></title>
        <id>https://smashingmagazine.com/2021/05/accessible-svg-patterns-comparison/</id>
        <link href="https://smashingmagazine.com/2021/05/accessible-svg-patterns-comparison/"/>
        <updated>2021-05-26T13:20:00.000Z</updated>
        <summary type="html"><![CDATA[Discover which SVG patterns we should avoid and which patterns are the most inclusive when comparing different combinations of OSs, browsers, and screen readers.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Carie Fisher)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[5 Tips for an Effective Cybersecurity Program]]></title>
        <id>https://dev.to/nextlinklabs/5-tips-for-an-effective-cybersecurity-program-3pn7</id>
        <link href="https://dev.to/nextlinklabs/5-tips-for-an-effective-cybersecurity-program-3pn7"/>
        <updated>2021-05-26T13:18:45.000Z</updated>
        <summary type="html"><![CDATA[There’s a monumental cybersecurity shift happening in organizations across the country. Every day, companies are transforming their operations, adopting new technologies and pushing the boundaries of what’s possible with technology to keep up in a highly competitive digital landscape. 
And with that change comes risk. 
There’s danger involved in dealing with data and peril in opening systems to the world. Access is risky too and everyday seems to bring more news of some kind of cyberattack. Implementing a cybersecurity program in your organization is an important first step in not only staying competitive but also combating cybersecurity threats, securing your organization’s data, and protecting profits.
According to the 2020 IDG Security Priorities Study, 49% of participants indicated tha…]]></summary>
        <author>
            <name>Nextlink Labs</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[what is difference in angular use component or modals as element ref and what is it effect on performance in angular]]></title>
        <id>https://dev.to/ahmed1985/which-is-difference-in-angular-use-component-or-modals-as-element-ref-and-what-is-it-effect-on-performance-in-angular-4g3a</id>
        <link href="https://dev.to/ahmed1985/which-is-difference-in-angular-use-component-or-modals-as-element-ref-and-what-is-it-effect-on-performance-in-angular-4g3a"/>
        <updated>2021-05-26T12:13:21.000Z</updated>
        <summary type="html"><![CDATA[I need to create an angular component as alert "are you sure to do xyz?" one of my colleagues used element ref and another use component. what is the difference and use cases of each one and what the effect of the performace]]></summary>
        <author>
            <name>Attia</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What Are Biometrics? The Pros/Cons of Biometric Security]]></title>
        <id>https://dev.to/robertinoc_dev/what-are-biometrics-the-pros-cons-of-biometric-security-30gk</id>
        <link href="https://dev.to/robertinoc_dev/what-are-biometrics-the-pros-cons-of-biometric-security-30gk"/>
        <updated>2021-05-26T12:01:23.000Z</updated>
        <summary type="html"><![CDATA[🔑 Biometrics are measurable human traits or characteristics that are often used in biometric authentication to verify a user’s identity for cybersecurity purposes.



  
  
  
Biometrics are measurable human traits, characteristics, or behaviors that can be used to verify a person's identity. For example, a person's face or fingerprints are unique to them and can be measured. So they're often used to identify a person in law enforcement applications.
Biometrics have been used for identity verification since 1883 when French criminologist Alphonse Bertillon first used body measurements to identify repeat offenders. Today, biometric authentication is growing in popularity for enterprises because biometrics are an effective way to control access to sensitive information, devices, or physical locations.
However, biometrics aren't impenetrable and come with increased privacy risks. So any organization seeking to utilize biometrics to verify employees or end users should pay close attention to how they implement biometric identification systems.
Below is what executives need to know about using biometrics for their organization.

Read more...]]></summary>
        <author>
            <name>Robertino</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Exploring the Export Table [Windows PE Internals]]]></title>
        <id>https://dev.to/wireless90/exploring-the-export-table-windows-pe-internals-4l47</id>
        <link href="https://dev.to/wireless90/exploring-the-export-table-windows-pe-internals-4l47"/>
        <updated>2021-05-26T11:37:04.000Z</updated>
        <summary type="html"><![CDATA[Previous Windows PE Internals Writeups



Creating a Windows Project in Visual Studio
Getting a Handle to a Dynamically Linked Library 
Validating the MZ Signature
Validating the PE Signature
Dissecting the PE Header
In the previous article, we learnt about the contents of the PE Header. 
Let's now take a look at the Optional Header, more particularly, the Export Table. 
An export table contains functions that have been exported and could be used by other programs. We will be focusing on the exported functions of the library user32.dll.
In the previous article, we managed to retrieve the IMAGE_NT_HEADERS.

We can see that this structure contains the FileHeader, OptionalHeader and Signature. 
We are interested in the OptionalHeader.
PIMAGE_OPTIONAL_HEADER imageOptionalHeader = (PIMAGE_OPTIO…]]></summary>
        <author>
            <name>wireless90</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[4+1 ways] How to Unsubscribe from Observables in Angular like a 😎]]></title>
        <id>https://dev.to/nikosanif/4-1-ways-how-to-unsubscribe-from-observables-in-angular-like-a-21f5</id>
        <link href="https://dev.to/nikosanif/4-1-ways-how-to-unsubscribe-from-observables-in-angular-like-a-21f5"/>
        <updated>2021-05-26T10:41:33.000Z</updated>
        <summary type="html"><![CDATA[Introduction


In this article, we will see some of the best practices to unsubscribe from subscriptions (aka Observables) and how to keep our code clean and nicely architectured avoiding memory leaks.
In a nutshell, we will use:
the async Angular build-in pipe
RxJS operators (e.g takeUntil)
custom array of subscriptions
the SubSink npm package
the @ngneat/until-destroy npm package
If you have experience in Angular, you already know that RxJS is one of the most powerful packages. It uses the concept of Observables to handle and work with asynchronous and event-based code. More specifically, Observable is an entity that emits multiple data values over time and asynchronously.
It sounds cool, right? Yes, it is cool and powerful, but you already know that!
What's the problem with Observables …]]></summary>
        <author>
            <name>Nikos Anifantis</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why MEAN Stack is the Most Preferred Choice for Web & Mobile App Development?]]></title>
        <id>https://dev.to/william99659653/why-mean-stack-is-the-most-preferred-choice-for-web-mobile-app-development-1347</id>
        <link href="https://dev.to/william99659653/why-mean-stack-is-the-most-preferred-choice-for-web-mobile-app-development-1347"/>
        <updated>2021-05-26T10:15:43.000Z</updated>
        <summary type="html"><![CDATA[In this digital era, the importance of customized web and mobile apps has increased significantly. But as competition intensifies, it is necessary for companies to come up with feature-rich apps to match world-class standards and attract more people. Therefore, if you want to develop an app from scratch, the website development company
needs to use a consistent software stack. All you need to have the right set of tools, resources, and a standardized development process to build a customized and user-friendly application.
MEAN stack is such a stack that can meet your business needs effectively while offering the benefits of advancing technology in customized web and mobile apps. MEAN acronym stands for MongoDB (a database), Express (backend framework), AngularJS (Front-end framework), and …]]></summary>
        <author>
            <name>williamjohns</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[5 Things You Need to Know Before Switching to Linux]]></title>
        <id>https://dev.to/jones268/5-things-you-need-to-know-before-switching-to-linux-1fjc</id>
        <link href="https://dev.to/jones268/5-things-you-need-to-know-before-switching-to-linux-1fjc"/>
        <updated>2021-05-26T08:01:55.000Z</updated>
        <summary type="html"><![CDATA[Linux operating systems are powerful and can be used all around your home and office. Whether you switch to Linux full-time or use it alongside Windows and macOS, there are some things you should know.
1. Linux comes in distributions 😁
Linux and related software come in distribution. A Linux distribution is an operating system, while Linux is the code that makes the operating system work (the kernel).
These distributions have a different user experience and target. Some distributions are very beginner orientated while others are oriented towards the power user. There are many different Linux distributions 
Some of the more popular Linux distributions are Ubuntu, Mint, Fedora and Suse. Each Linux distribution has a different target audience, such as Kali which is very security orientated.
…]]></summary>
        <author>
            <name>jones268</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[I want to design a hardware based password manager(PM) that uses usb ports for communication with device.]]></title>
        <id>https://dev.to/khalidkhushal/i-want-t-design-a-hardware-based-password-manager-pm-that-uses-usb-ports-for-communication-with-device-59h8</id>
        <link href="https://dev.to/khalidkhushal/i-want-t-design-a-hardware-based-password-manager-pm-that-uses-usb-ports-for-communication-with-device-59h8"/>
        <updated>2021-05-26T07:00:26.000Z</updated>
        <summary type="html"><![CDATA[hello guys! I really need help being a final year student I want to design a hardware based password manager(PM) that uses usb ports for communication with device. I have been searching things since last 2 months like the basic components and the integration of PM with the browser.
can you plz suggest me something like from where should I start?]]></summary>
        <author>
            <name>khalidkhushal</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fun tech quiz questions directly in your terminal]]></title>
        <id>https://dev.to/bobbyiliev/fun-tech-quiz-questions-directly-in-your-terminal-19pk</id>
        <link href="https://dev.to/bobbyiliev/fun-tech-quiz-questions-directly-in-your-terminal-19pk"/>
        <updated>2021-05-26T06:55:11.000Z</updated>
        <summary type="html"><![CDATA[Quizzes are a great way to test your knowledge on a specific topic. So I decided to create a tool called the Quiz API! 
Quiz API is a simple HTTP REST API for technical quizzes including a wide variety of topics like: Linux, DevOps, Programming (PHP, JS, Python and etc.), Docker, 
It is free for developers and I've just released a beta version and started adding some cool questions!
As the Quiz API returns the output in a JSON format, I created a bash script that allows you to answer questions whenever you feel like directly via your terminal!

In order to be able to use the Quiz API bash script you need to have the following:
An API Key for the Quiz API, you can get it totally for free here


Access to a bash terminal



  
  
  Download the Quiz bash script


In order to download the bas…]]></summary>
        <author>
            <name>Bobby Iliev</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Serve Angular i18n with clean URL's using Apache's mod_rewrite]]></title>
        <id>https://dev.to/timetc/serve-angular-i18n-with-clean-url-s-using-apache-s-modrewrite-38a4</id>
        <link href="https://dev.to/timetc/serve-angular-i18n-with-clean-url-s-using-apache-s-modrewrite-38a4"/>
        <updated>2021-05-26T06:12:25.000Z</updated>
        <summary type="html"><![CDATA[In Angular you have some great internationalisation (i18n) out of the box, which builds the nice compiled and minified bundle your used to. You have a compiled version per language. If you work with another framework which does the same thing (export a language per directory), this approach will work for you as well.
My problem: the separate directories give you nasty URL's, something like whatwhat.app/en/. Okay, so that's just looks but it can also be a problem with sharing links. For example when user A shares a link with user B, but they have different native languages it will be annoying that the opened link does not have the language correct language for the receiver.
In my case I wanted to make it a setting that the user can adjust, with a default language as a fallback. Easy to make…]]></summary>
        <author>
            <name>Tim etc.</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.9.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.9.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.9.0"/>
        <updated>2021-05-26T06:02:55.000Z</updated>
        <summary type="html"><![CDATA[Added: experimental support for iTunes podcast feed: Demo | Source. With this new release, you can render an audio control to play the mp3 file and display iTunes episode duration. It is "experimental" due to these caveats:

This feature is currently only available through custom template.
iTunes has no strict format requirement for duration. The unit is most likely seconds but can be "hh:mm:ss" or "mm:ss" for some sources. A future version may expose a human readable string to the template.
No image support yet. Some shows might have disabled CORS or use a relative URL for image, which forces osmosfeed to download the image during build. A future version may support it.
You can't republish the podcast in the feed output. Supporting this goes beyond the scope of the project at the moment.
Fixed: the articles in template data were not sorted.
Thank you @Zenigata]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why Angular Development company is the ideal choice for web development?]]></title>
        <id>https://dev.to/alexisdevs/why-angularjs-development-company-is-the-ideal-choice-for-web-development-5d39</id>
        <link href="https://dev.to/alexisdevs/why-angularjs-development-company-is-the-ideal-choice-for-web-development-5d39"/>
        <updated>2021-05-26T03:56:42.000Z</updated>
        <summary type="html"><![CDATA[Angularjs has proven one of the best frontend open-source typescript technology so far now. Every young entrepreneur who has just started working on their dream project at least for once has considered this technology for the frontend works of their project.
The Angular Development community has constantly shifting its paradigms on how things work to develop a project through Angular latest stable version.
And we all know Angularjs is widely known to provide its contestability, Maintainability, and productibility through the projects.
From time to time the option to hire Angularjs Development company is getting popular when it comes to developing the project. Entrepreneurs consider various things to come to that conclusion.
In this blog, we are going to look forward to why the option of hi…]]></summary>
        <author>
            <name>Alexis Gilbert</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fix Drupal's "Failed to get available update data" error on Available updates]]></title>
        <id>https://dev.to/nabbisen/fix-drupal-s-failed-to-get-available-update-data-error-on-available-updates-53f</id>
        <link href="https://dev.to/nabbisen/fix-drupal-s-failed-to-get-available-update-data-error-on-available-updates-53f"/>
        <updated>2021-05-26T03:50:27.000Z</updated>
        <summary type="html"><![CDATA[Summary


That short made me really troubled meanwhile😅
OS: OpenBSD 6.9
Web: OpenBSD httpd

App: PHP + PHP-FPM 
CMS: Drupal 9
I have installed Drupal 8/9 on OpenBSD several times.
Drupal admin panel has the function to look up "Available update" in "Report" pages.

Fig.1 Failed

  
  
  Solution


I found it was because of TLS connection failure, after struggling and being empowered by the official documentation:
Drupal - PHP OpenSSL requirements 
To fix it, place cacert.pem under chroot's root and configure PHP aka php.ini.
First, get the certificate.
$ # /etc in `chroot` is `/var/www/etc` in actual
$ cd /var/www/etc

$ doas mkdir ssl
$ cd ssl

$ # get the cacert.pem
$ doas ftp https://curl.haxx.se/ca/cacert.pem
$ doas chmod a-w cacert.pem

It looks like:
$ pwd
/var/www/etc/ssl
$ ls -l
total 448
-r--r--r--  1 root  daemon  206919 Apr 13 12:12 cacert.pem

Then, edit php.ini.
$ doas nvim /etc/php-7.4.ini

to add the line:
  [curl]
  ; A default value for the CURLOPT_CAINFO option. This is required to be an
  ; absolute path.   
  ;curl.cainfo =
+ curl.cainfo = "/etc/ssl/cacert.pem"

Finally, restart the PHP-FPM daemon.
$ doas rcctl restart php74_fpm

Happily, my site got the update information🙂

Fig.2 Successful]]></summary>
        <author>
            <name>Heddi Nabbisen</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Keep Calm and Hack The Box – Valentine]]></title>
        <id>60ac3a2711ffb70827ef6aec</id>
        <link href="https://www.freecodecamp.org/news/keep-calm-and-hack-the-box-valentine/"/>
        <updated>2021-05-25T22:43:11.000Z</updated>
        <summary type="html"><![CDATA[Walkthrough for Hack The Box Valentine machine]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Chakra UI and React-Hook-Form –How to Build Beautiful Forms]]></title>
        <id>60a93b0011ffb70827ef5b0d</id>
        <link href="https://www.freecodecamp.org/news/how-to-use-react-hook-form-with-chakra-ui/"/>
        <updated>2021-05-25T20:26:38.000Z</updated>
        <summary type="html"><![CDATA[In HTML, it’s the default behavior for forms to redirect to a new page whenever they're submitted. So in order to provide dynamic functionality, React uses a strategy called controlled components. If you have recently gone through a React course, you probably didn't like this part, because there are]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Create Portfolio-Worthy Work – Web Design Best Practices for New Developers]]></title>
        <id>608706aedd38b9088c2c012c</id>
        <link href="https://www.freecodecamp.org/news/web-design-best-practices-for-new-developers/"/>
        <updated>2021-05-25T16:51:37.000Z</updated>
        <summary type="html"><![CDATA[If you're a beginner developer, it can be difficult to find ways to use your limited knowledge to support yourself. And at the same time, you won't be able to hone your skills if you aren't using them full time.  It's a precarious spot that I remember being in when]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Edit remote files with Vim]]></title>
        <id>https://dev.to/jones268/edit-remote-files-with-vim-24k9</id>
        <link href="https://dev.to/jones268/edit-remote-files-with-vim-24k9"/>
        <updated>2021-05-25T15:39:59.000Z</updated>
        <summary type="html"><![CDATA[Vim is a text editor with a huge following. It's installed by  default on every Linux system and even on Mac OS X.
Vim is a tool that wants you to succeed. if you want something to happen, you can make it happen. It works completely by keyboard shortcuts. 

It gives you the power to manipulate text at a fundamental level. you can operate on individual characters, words or lines of text this gives vim a really powerful interactive feel.
If you are new to vim, I recommend these exercises
I am often connecting to remote machines and editing config files. 
This was cumbersome, as I would have to use SFTP to copy files, manually updating the buffer when the file was modified on the remote machine. 
It was too easy to get distracted and lose track of what I was doing.
If you want to edit files on a remote server, try this command:
vim scp://you@remote_ip//path/file.txt

and change username to your username, your remote ip, the path and the filename.
vim scp://frank@192.168.2.7//home/frank/hello.txt

If you have vim open, you can also do :e scp://you@remote_ip//path/file.txt
You can use sftp too:
vim sftp://user@remote_ip//path/file

Change it with your username, remote ip and path to the file.
vim sftp://frank@192.168.2.7//home/frank/hello.txt

If you want to use the old unencrypted ftp protocol
:e ftp://[user@]machine/path/

Vim is relentlessly awesome. It does everything an editor should do and nothing it shouldn't. There are no gimmicks, no silly settings, no bloat. It just works. all the time. no exceptions.]]></summary>
        <author>
            <name>jones268</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Want to compress your pdf files ?]]></title>
        <id>https://dev.to/burakcank/want-to-compress-your-pdf-files-5ff9</id>
        <link href="https://dev.to/burakcank/want-to-compress-your-pdf-files-5ff9"/>
        <updated>2021-05-25T14:41:23.000Z</updated>
        <summary type="html"><![CDATA[Are you tired of scanning images and trying to shrink them under 25 mbs just so you can send them via email ? Look no further, I am here to save you from this trouble. (that kinda rhymed.)
This basic shell script uses ghostscript to compress your scanned pdfs significantly. Just yesterday I scanned 100 pages of documents and it was over 90 mbs. I searched for a way to compress them under 25 mbs and voila. Here I was with only 6 mbs of pdfs. Much wow. Such compression.
Why we need it,
Fast.
Ez.
No need to go online. Especially no need to upload company top-secret documents to any website you see on the Internet.
Possible huge compression without notable loss.
Command usage:
./shrinkpdf.sh in.pdf out.pdf
ghostscript.





If you are in a situation exactly like me where there are 100 pdf files under one folder that you want to compress altogether, a simple for loop will suffice.
import os
import subprocess
import sys

infolder = sys.argv[1]
outfolder = "compressed_" + infolder
os.mkdir(outfolder)

for f in os.listdir(infolder):
    subprocess.run(["./shrinkpdf.sh", os.path.join(infolder, f), os.path.join(outfolder, f)])

Run this python script,
python shrink.py pdfs/
and all of your pdfs will be put under compressed_pdfs/.
http://www.alfredklomp.com/programming/shrinkpdf/
All the relevant details and more, inside. I humbly wanted to let you know such a useful tool exists.]]></summary>
        <author>
            <name>Burak Can Kahraman</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What I Learned Building a Word Game App With Nuxt on Google Play]]></title>
        <id>https://css-tricks.com/?p=340759</id>
        <link href="https://css-tricks.com/what-i-learned-building-a-word-game-app-with-nuxt-on-google-play/"/>
        <updated>2021-05-25T14:25:06.000Z</updated>
        <summary type="html"><![CDATA[I fell in love with coding the moment I created my first CSS :hover effect. Years later, that initial bite into interactivity on the web led me to a new goal: making a game.
Table of contents
What’s the game 
…
The post What I Learned Building a Word Game App With Nuxt on Google Play appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Josh Collinsworth</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Guide To Undoing Mistakes With Git (Part 2)]]></title>
        <id>https://smashingmagazine.com/2021/05/undoing-mistakes-git-part2/</id>
        <link href="https://smashingmagazine.com/2021/05/undoing-mistakes-git-part2/"/>
        <updated>2021-05-25T14:00:00.000Z</updated>
        <summary type="html"><![CDATA[Mistakes. These cruel villains do not even stop at the beautiful world of software development. But although we cannot avoid making mistakes, we can learn to undo them! This post will show the right tools for your daily work with Git.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Tobias Günther)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Creating Powerful Websites with Serverless-Driven CMS Development]]></title>
        <id>https://css-tricks.com/?p=341383</id>
        <link href="https://css-tricks.com/creating-powerful-websites-with-serverless-driven-cms-development/"/>
        <updated>2021-05-25T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[Choosing the right tools to build a website for your organization is essential, but it can be tough to find the right fit. Simple site builders like Wix and Squarespace are easy for marketers to use, but severely limit developers …
The post Creating Powerful Websites with Serverless-Driven CMS Development appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Ahmed Bouchefra</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A New Way To Reduce Font Loading Impact: CSS Font Descriptors]]></title>
        <id>https://smashingmagazine.com/2021/05/reduce-font-loading-impact-css-descriptors/</id>
        <link href="https://smashingmagazine.com/2021/05/reduce-font-loading-impact-css-descriptors/"/>
        <updated>2021-05-25T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[Web fonts are often terrible for web performance and none of the font loading strategies are particularly effective to address that. Upcoming font options may finally deliver on the promise of making it easier to align fallback fonts to the final fonts.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Barry Pollard)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Links on Performance]]></title>
        <id>https://css-tricks.com/?p=340808</id>
        <link href="https://css-tricks.com/links-on-performance/"/>
        <updated>2021-05-24T22:03:30.000Z</updated>
        <summary type="html"><![CDATA[Making GitHub’s new homepage fast and performant — Tobias Ahlin describes how the scrolling effects are done more performantly thanks to IntersectionObserver and the fact that it avoids the use of methods that trigger reflows, like getBoundingClientRect. Also, 
…
The post Links on Performance appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[proxy-www]]></title>
        <id>https://css-tricks.com/?p=341153</id>
        <link href="https://github.com/justjavac/proxy-www"/>
        <updated>2021-05-24T19:09:59.000Z</updated>
        <summary type="html"><![CDATA[I like a good trick. What if… a URL was…  a promise… that fetched said URL?
www.codepen.io.then((response) ={
  console.log(response);
});
That’s what @justjavac did with JavaScript Proxys. A clever trick, that. Don’t @ me about the practicality. Trick…
The post proxy-www appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Wrangling Control Over PDFs with the Adobe PDF Embed API]]></title>
        <id>https://css-tricks.com/?p=340626</id>
        <link href="https://css-tricks.com/wrangling-control-over-pdfs-with-the-adobe-pdf-embed-api/"/>
        <updated>2021-05-24T13:57:21.000Z</updated>
        <summary type="html"><![CDATA[By our last estimate, there are now more PDFs in the world than atoms in the universe (not verified by outside sources) so chances are, from time to time, you’re going to run into a PDF document or two. Browsers …
The post Wrangling Control Over PDFs with the Adobe PDF Embed API appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Raymond Camden</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS Container Queries: Use-Cases And Migration Strategies]]></title>
        <id>https://smashingmagazine.com/2021/05/css-container-queries-use-cases-migration-strategies/</id>
        <link href="https://smashingmagazine.com/2021/05/css-container-queries-use-cases-migration-strategies/"/>
        <updated>2021-05-24T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[CSS Container queries bring media queries closer to the target elements themselves and enables them to adapt to virtually any given container or layout. In this article, we’re going to cover CSS container query basics and how to use them today with progressive enhancement or polyfills.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Adrian Bece)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.8.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.1"/>
        <updated>2021-05-23T05:40:12.000Z</updated>
        <summary type="html"><![CDATA[Fixed: UnhandledPromiseRejectionWarning: Error: At least one option must be a string]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.8.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.0"/>
        <updated>2021-05-23T05:12:08.000Z</updated>
        <summary type="html"><![CDATA[Changed: Smart summary truncation. When there is no dedicated summary (only Atom feed has it, and many sites don't use it) from the source, we check if the content/description (Both Atom and RSS) field is long enough to be full text. If so, it will be truncated into a "pseudo" summary. If not, we assume the source used the content field as summary, and it will be displayed in full length.
Thank you: @LooperXX.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Should DevTools teach the CSS cascade?]]></title>
        <id>https://css-tricks.com/?p=340991</id>
        <link href="https://www.stefanjudis.com/blog/should-devtools-teach-the-css-cascade/"/>
        <updated>2021-05-21T23:22:54.000Z</updated>
        <summary type="html"><![CDATA[Stefan Judis, two days before I mouthed off about using (X, X, X, X) for talking about specificity, has a great blog post not only using that format, but advocating that browser DevTools should show us that value by …
The post Should DevTools teach the CSS cascade? appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Svelte for the Experienced React Dev]]></title>
        <id>https://css-tricks.com/?p=340825</id>
        <link href="https://css-tricks.com/svelte-for-the-experienced-react-dev/"/>
        <updated>2021-05-21T14:30:59.000Z</updated>
        <summary type="html"><![CDATA[This post is an accelerated introduction to Svelte from the point of view of someone with solid experience with React. I’ll provide a quick introduction, and then shift focus to things like state management and DOM interoperability, among other things. …
The post Svelte for the Experienced React Dev appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Adam Rackis</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS Hell]]></title>
        <id>https://css-tricks.com/?p=340919</id>
        <link href="https://csshell.dev/"/>
        <updated>2021-05-21T14:29:16.000Z</updated>
        <summary type="html"><![CDATA[Collection of common CSS mistakes, and how to fix them
From Stefánia Péter. 
Clever idea for a site! Some of them are little mind-twisters that could bite you, and some of them are honing in on best practices that …
The post CSS Hell appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building A Rich Text Editor (WYSIWYG) From Scratch]]></title>
        <id>https://smashingmagazine.com/2021/05/building-wysiwyg-editor-javascript-slatejs/</id>
        <link href="https://smashingmagazine.com/2021/05/building-wysiwyg-editor-javascript-slatejs/"/>
        <updated>2021-05-21T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[Let’s build a rich text, WYSIWYG-editor that supports rich text, images, links and some nuanced features from word processing apps. We will use SlateJS to build the shell of the editor and then add a toolbar and custom configurations.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Shalabh Vyas)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[JSON in CSS]]></title>
        <id>https://css-tricks.com/?p=340599</id>
        <link href="https://css-tricks.com/json-in-css/"/>
        <updated>2021-05-20T22:29:53.000Z</updated>
        <summary type="html"><![CDATA[Jonathan Neal tweeted a heck of a little CSS trick the other day, putting JSON inside CSS and plucking it out with JavaScript. Valid values for custom properties are quite liberal! So this looks for a CSS rule (e.g. a …
The post JSON in CSS appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Boost Your Skills Online: Smashing Workshops On Front-End And Design]]></title>
        <id>https://smashingmagazine.com/2021/05/new-online-workshops-front-end-ux/</id>
        <link href="https://smashingmagazine.com/2021/05/new-online-workshops-front-end-ux/"/>
        <updated>2021-05-20T14:20:00.000Z</updated>
        <summary type="html"><![CDATA[Front-end and design are remarkably complex these days. That’s why we invite kind, smart folks from the community to run online workshops for all of us to learn together. And we have new ones coming up, and we’d like to kindly welcome you to join in.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Iris Lješnjanin)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Implement Authentication In Next.js With Auth0]]></title>
        <id>https://smashingmagazine.com/2021/05/implement-authentication-nextjs-auth0/</id>
        <link href="https://smashingmagazine.com/2021/05/implement-authentication-nextjs-auth0/"/>
        <updated>2021-05-20T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[A step-by-step tutorial on adding authentication and authorization to your Next.js apps, with Auth0. We’ll be using a Next.js SDK to connect our application to the Auth0 API and will create the dynamic API route for React.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Facundo Giuliani)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Frustrating Design Patterns: Mega-Dropdown Hover Menus]]></title>
        <id>https://smashingmagazine.com/2021/05/frustrating-design-patterns-mega-dropdown-hover-menus/</id>
        <link href="https://smashingmagazine.com/2021/05/frustrating-design-patterns-mega-dropdown-hover-menus/"/>
        <updated>2021-05-19T11:40:00.000Z</updated>
        <summary type="html"><![CDATA[Everything to keep in mind when designing and building a mega-dropdown, common pitfalls, hover entry/exit delays, trajectory triangle technique and SVG path exit areas.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Vitaly Friedman)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Create, Edit And Animate SVGs All In One Place With SVGator 3.0]]></title>
        <id>https://smashingmagazine.com/2021/05/create-edit-animate-svg-svgator3/</id>
        <link href="https://smashingmagazine.com/2021/05/create-edit-animate-svg-svgator3/"/>
        <updated>2021-05-18T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[Today, we are taking a closer look at [SVGator 3.0](https://www.svgator.com/?utm_source=article&utm_medium=smashingmag&utm_campaign=svgator3_smashing), a new major release of the popular SVG application that lets you create, edit and animate SVG files and make the best out of what SVG has to offer — from start to finish.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Mikołaj Dobrucki)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 37 With Adam Argyle: What Is VisBug?]]></title>
        <id>https://smashingmagazine.com/2021/05/smashing-podcast-episode-37/</id>
        <link href="https://smashingmagazine.com/2021/05/smashing-podcast-episode-37/"/>
        <updated>2021-05-18T05:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode, we’re talking about VisBug. What is it, and how is it different from the array of options already found in Chrome DevTools? Drew McLellan talks to its creator Adam Argyle to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How We Improved Our Core Web Vitals (Case Study)]]></title>
        <id>https://smashingmagazine.com/2021/05/core-web-vitals-case-study/</id>
        <link href="https://smashingmagazine.com/2021/05/core-web-vitals-case-study/"/>
        <updated>2021-05-17T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[Google’s “Page Experience Update” will start rolling out in June. At first, sites that meet Core Web Vitals thresholds will have a minor ranking advantage in mobile search for all browsers. Search is important to any business, and this is the story of how Beau Hartshorne and his team at Instant Domain Search improved their Core Web Vitals scores.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Beau Hartshorne)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.2]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2"/>
        <updated>2021-05-17T05:32:19.000Z</updated>
        <summary type="html"><![CDATA[⚠ Deprecated: To accommodate the monorepo setup, the node version in all templates/demos/examples has changed from 14 to 16. This is not a breaking change as our compile target is still node 14, and node 16 is backward compatible. We still recommend you start using node-version: "16" in your .github/workflows/update-feed.yaml today to get the performance/security improvements from the newer node. See example
Chore: Reorganize to monorepo with npm workspace.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.1"/>
        <updated>2021-05-16T02:33:58.000Z</updated>
        <summary type="html"><![CDATA[Fixed: static files were unnecessarily copied for custom templates.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.0"/>
        <updated>2021-05-16T01:42:24.000Z</updated>
        <summary type="html"><![CDATA[Added: templating system. Demo | Source | Docs
Chore: rendering logic refactoring. Adopting functional paradigm.
Thank you @tianheg, @onnyyonn]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Tree-Shaking: A Reference Guide]]></title>
        <id>https://smashingmagazine.com/2021/05/tree-shaking-reference-guide/</id>
        <link href="https://smashingmagazine.com/2021/05/tree-shaking-reference-guide/"/>
        <updated>2021-05-14T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[“Tree-shaking” is a must-have performance optimization when bundling JavaScript. In this article, we dive deeper on how exactly it works and how specs and practice intertwine to make bundles leaner and more performant. Plus, you’ll get a tree-shaking checklist to use for your projects.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Átila Fassina)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Frustrating Design Patterns That Need Fixing: Birthday Picker]]></title>
        <id>https://smashingmagazine.com/2021/05/frustrating-design-patterns-birthday-picker/</id>
        <link href="https://smashingmagazine.com/2021/05/frustrating-design-patterns-birthday-picker/"/>
        <updated>2021-05-12T12:42:00.000Z</updated>
        <summary type="html"><![CDATA[In this new series of articles on UX, we take a closer look at some frustrating design patterns and explore better alternatives, along with plenty of examples to keep in mind when building or designing one. Let’s start with an infamous birthday picker.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Vitaly Friedman)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Little Smashing Stories]]></title>
        <id>https://smashingmagazine.com/2021/05/little-smashing-stories/</id>
        <link href="https://smashingmagazine.com/2021/05/little-smashing-stories/"/>
        <updated>2021-05-12T08:00:00.000Z</updated>
        <summary type="html"><![CDATA[Today marks the day we sent out our 300th edition of the Smashing Newsletter. This article is a little celebration in which we share little Smashing stories from people working behind the scenes.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Vitaly Friedman)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Primer On CSS Container Queries]]></title>
        <id>https://smashingmagazine.com/2021/05/complete-guide-css-container-queries/</id>
        <link href="https://smashingmagazine.com/2021/05/complete-guide-css-container-queries/"/>
        <updated>2021-05-11T13:30:00.000Z</updated>
        <summary type="html"><![CDATA[A prototype of the long-awaited CSS container queries has landed in Chrome Canary and is available for experimentation. Let’s look at what problem is being solved, learn how container queries work, and see how they compare with and complement existing CSS features for layout.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Stephanie Eckles)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Conference Platform We Use For Our Online Events: Hopin]]></title>
        <id>https://smashingmagazine.com/2021/05/smashingconf-conference-platform-hopin/</id>
        <link href="https://smashingmagazine.com/2021/05/smashingconf-conference-platform-hopin/"/>
        <updated>2021-05-11T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[At the beginning of 2020, the SmashingConf team was ready for a new year. We had so many things that excited us. New speakers, new workshops, new cities, new attendees, new experiences. And as we all know, 2020 had other ideas. With so many people working from home, we thought we would bring our [Smashing workshops](https://smashingconf.com/online-workshops/) from our home offices to yours — but how?]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Amanda Annandale)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Get Started With React By Building A Whac-A-Mole Game]]></title>
        <id>https://smashingmagazine.com/2021/05/get-started-whac-a-mole-react-game/</id>
        <link href="https://smashingmagazine.com/2021/05/get-started-whac-a-mole-react-game/"/>
        <updated>2021-05-10T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[Want to get started with React but struggling to find a good place to start? This article should have you covered. We’ll focus on some of the main concepts of React and then we’ll be building a game from scratch!]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Jhey Tompkins)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.4.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.4.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.4.0"/>
        <updated>2021-05-10T08:55:42.000Z</updated>
        <summary type="html"><![CDATA[Added: Basic theme customization: Demo | Source | Docs.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.6.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.6.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.6.0"/>
        <updated>2021-05-10T08:15:20.000Z</updated>
        <summary type="html"><![CDATA[Added: Link from the title of a subscription to its website.
Added: Store feedUrl and siteUrl for each source in cache.
Added: Semantic element (<time>) for timestamp on the UI.
Added: Semantic API for theming the default template. Demo | Source | Docs
Changed: Moved feed metadata from article level to feed level in cache.
Fixed: Any html-like text was stripped from title. Fixed with encoded text.
Removed: href for each source in cache. The value was never used so it's not a breaking change.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.5.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.5.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.5.0"/>
        <updated>2021-05-08T05:16:47.000Z</updated>
        <summary type="html"><![CDATA[Added: Atom feed generator
Added: Customizable site title
Added: Copy all files from static directory to the root of the site.
Changed: Favicon, css, and js assets now existing at site root level.
Chore: Excluded testing files from repo.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Organize Product-Related Assets And Collaborate Better]]></title>
        <id>https://smashingmagazine.com/2021/05/product-records-organization-collaboration-best-practices/</id>
        <link href="https://smashingmagazine.com/2021/05/product-records-organization-collaboration-best-practices/"/>
        <updated>2021-05-07T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[How do you organize your Google Drive assets? How do you name your Dropbox Paper documents? How do you deal with comments? Let’s get it right.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Valeriia Panina)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Improving The Performance Of Shopify Themes (Case Study)]]></title>
        <id>https://smashingmagazine.com/2021/05/improving-performance-shopify-themes-case-study/</id>
        <link href="https://smashingmagazine.com/2021/05/improving-performance-shopify-themes-case-study/"/>
        <updated>2021-05-06T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[When dealing with themes for large platforms and CMS, legacy issues often become a bottleneck. In this article, Carson Shold discusses how his team improved the performance and organization of their Shopify themes, and improved maintainability along the way.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Carson Shold)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Reducing HTML Payload With Next.js (Case Study)]]></title>
        <id>https://smashingmagazine.com/2021/05/reduce-data-sent-client-nextjs/</id>
        <link href="https://smashingmagazine.com/2021/05/reduce-data-sent-client-nextjs/"/>
        <updated>2021-05-05T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[This article showcases a case study of Bookaway’s landing page performance. We’ll see how taking care of the props we send to Next.js pages can make loading times and Web Vitals better.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Liran Cohen)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.3.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.3.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.3.1"/>
        <updated>2021-05-05T05:19:57.000Z</updated>
        <summary type="html"><![CDATA[Fixed: Avoid crwalers.
Fixed: Error logging from XML parser.
Fixed: Typo in docs.
Thank you: @dym-sh, @tabokie, @cheese1]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Guide To Undoing Mistakes With Git (Part 1)]]></title>
        <id>https://smashingmagazine.com/2021/05/undoing-mistakes-git-part1/</id>
        <link href="https://smashingmagazine.com/2021/05/undoing-mistakes-git-part1/"/>
        <updated>2021-05-04T14:30:00.000Z</updated>
        <summary type="html"><![CDATA[No matter how experienced you are, mistakes are an inevitable part of software development. But we can learn to repair them! And this is what we'll be looking at in this two-part series: how to undo mistakes using Git.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Tobias Günther)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 36 With Miriam Suzanne: What Is The Future Of CSS?]]></title>
        <id>https://smashingmagazine.com/2021/05/smashing-podcast-episode-36/</id>
        <link href="https://smashingmagazine.com/2021/05/smashing-podcast-episode-36/"/>
        <updated>2021-05-04T05:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode, we’re starting our new season of the Smashing Podcast with a look at the future of CSS. What new specs will be landing in browsers soon? Drew McLellan talks to expert Miriam Suzanne to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Evolution Of Jamstack]]></title>
        <id>https://smashingmagazine.com/2021/05/evolution-jamstack/</id>
        <link href="https://smashingmagazine.com/2021/05/evolution-jamstack/"/>
        <updated>2021-05-03T07:00:00.000Z</updated>
        <summary type="html"><![CDATA[Web-oriented databases, frameworks like Nuxt and Next.js, and even frameworkless approaches are evolving the Jamstack, but the core principles are more powerful than ever.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Mathias Biilmann)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[May Is In The Air (2021 Wallpapers Edition)]]></title>
        <id>https://smashingmagazine.com/2021/04/desktop-wallpaper-calendars-may-2021/</id>
        <link href="https://smashingmagazine.com/2021/04/desktop-wallpaper-calendars-may-2021/"/>
        <updated>2021-04-30T09:00:00.000Z</updated>
        <summary type="html"><![CDATA[Do you need a little inspiration boost? Well, then our new collection of wallpapers is for you. Designed with love by the community for the community, the wallpapers are available with and without a calendar for May 2021.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cosima Mielke)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Humble `<img>` Element And Core Web Vitals]]></title>
        <id>https://smashingmagazine.com/2021/04/humble-img-element-core-web-vitals/</id>
        <link href="https://smashingmagazine.com/2021/04/humble-img-element-core-web-vitals/"/>
        <updated>2021-04-29T12:15:00.000Z</updated>
        <summary type="html"><![CDATA[Images have also been a key part of the web. They communicate ideas instantly, but they are also a lot heavier than text to load. This means that it’s essential to get loading and displaying them right, if you want to give your users a fantastic first impression. An excerpt from [Addy's new book](https://www.smashingmagazine.com/2021/04/image-optimization-pre-release/) (also, check a [free PDF preview](http://provide.smashingmagazine.com/eBooks/image-optimization-sample-chapter.pdf)).]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Addy Osmani)</name>
        </author>
    </entry>
</feed>
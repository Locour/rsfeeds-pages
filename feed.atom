<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2021-09-29T01:00:29.729Z</id>
    <title>osmos::feed</title>
    <updated>2021-09-29T01:00:29.729Z</updated>
    <generator>osmosfeed 1.11.2</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[Google No Longer Values Our Privacy and Security]]></title>
        <id>https://dev.to/mosbat/google-no-longer-values-our-privacy-and-security-23a7</id>
        <link href="https://dev.to/mosbat/google-no-longer-values-our-privacy-and-security-23a7"/>
        <updated>2021-09-29T00:27:50.000Z</updated>
        <summary type="html"><![CDATA[As a tech person, I've always been observing small details, such as what personal information those services force us users to input and what not. I remember in the past when it was possible to create an email address within a few minutes, and you did not have to worry about your personal or private information being compromised because many services at that time didn't actually require you to disclose personal information, same as today.
Frankly speaking, I have nothing to hide as a person; but since I'm a liberal person, I take those things very seriously.
The way how Google contradict themselves makes me laugh sometimes.
When you go Incognito mode (because why not), Google will keep harassing you with the captcha sometimes till you give up or go back to your regular browser session with…]]></summary>
        <author>
            <name>mosbat</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[All deployments regardless of retention period?]]></title>
        <id>https://dev.to/lornasw93/all-deployments-regardless-of-retention-period-hf</id>
        <link href="https://dev.to/lornasw93/all-deployments-regardless-of-retention-period-hf"/>
        <updated>2021-09-28T21:42:05.000Z</updated>
        <summary type="html"><![CDATA[I've asked in various places including Stackoverflow and at work this question but not getting anything back: how to get a list of all project deployments regardless of retention period (specifically using Octopus Deploy REST API)?
What I'm currently getting: a list of all project deployments as per retention period set.
I believe (might be wrong) it's retention period is set per environment as, for example, for project X I'm getting 2 Live deployments back and in the same project all (by default) of Branch Tests.
I'm wanting to get a list of all project deployments but, to me at least, seems odd I can't get just a list regardless of retention period.
This gets me a list of all deployments but still only get 2 for Live for instance.
HTTP GET: https://<base-url>/api/deployments
Does anyone have idea how to get around this? Or have I missed something? There is documentation online in general but not enough tbh and not this specific.]]></summary>
        <author>
            <name>Lorna Watson</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS Flexbox Tutorial – How to Build a Fixed Side and Bottom Navbar]]></title>
        <id>614e7e50ccc97307eb2bc3e5</id>
        <link href="https://www.freecodecamp.org/news/fixed-side-and-bottom-navbar-with-css-flexbox/"/>
        <updated>2021-09-28T21:41:48.000Z</updated>
        <summary type="html"><![CDATA[Flexbox can help you simplify the process of creating both basic and advanced layouts. And it's pretty straightforward to create side and bottom navigation menus with CSS flexbox or Grid. These layouts are so popular that they appear almost everywhere on the web. For example, check out Twitter's sidebar, which]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Serverless file storage with AWS Lambda]]></title>
        <id>https://dev.to/kompotkot/serverless-file-storage-with-aws-lambda-1ghi</id>
        <link href="https://dev.to/kompotkot/serverless-file-storage-with-aws-lambda-1ghi"/>
        <updated>2021-09-28T21:30:57.000Z</updated>
        <summary type="html"><![CDATA[Hello! Today we will deploy a serverless infrastructure based on AWS Lambda for uploading images (or any other files) with private storage in an AWS S3 bucket. We will be using terraform scripts that are uploaded and available at my kompotkot/hatchery GitHub repository.
This approach has the following advantages:
lambda is called on request and therefore allows to save on server maintenance costs if this functionality is not key for your application
lambda functions have an isolated runtime environment, which is ideal for processing uploaded files. Should malicious code be uploaded, the attacker will not be able to leave the sandbox, and the sandbox session will be forcibly terminated after some time
storing files in an S3 bucket is very cheap
As an example, we'll be using an abstract app …]]></summary>
        <author>
            <name>Sergei Sumarokov</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Toxic optionals - TypeScript]]></title>
        <id>https://dev.to/latobibor/toxic-optionals-typescript-55bj</id>
        <link href="https://dev.to/latobibor/toxic-optionals-typescript-55bj"/>
        <updated>2021-09-28T21:03:44.000Z</updated>
        <summary type="html"><![CDATA[In my previous blog post I was talking about the inherent Toxic flexibility of the JavaScript language itself.
I made a case for cutting down the number of options a piece of code can have so our tool chain including your IDE of choice can help you serving with just the right thing you need at the right moment, or help you "remember" every place a given object was used without having to guess it by use a "Find in all files" type dialog.
However toxic flexibility can sprout up in TypeScript as well.
Let's start with a real life product example!
In our company we have to deal with surveys aka questionnaires. Overly simplified each survey will have a number of questions of different types.
Let's say our product manager says: "I want people to have the ability to add an integer or a string que…]]></summary>
        <author>
            <name>András Tóth</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[So many little design helper sites!]]></title>
        <id>https://css-tricks.com/?p=352669</id>
        <link href="https://css-tricks.com/__trashed/"/>
        <updated>2021-09-28T21:00:04.000Z</updated>
        <summary type="html"><![CDATA[I had one of those little single-serving designer helper sites bookmarked the other day: getwaves.io. Randomized SVG waves! Lots of cool options! Easy to customize! Easy to copy and paste! Well played, z creative labs. 

But then I …
The post So many little design helper sites! appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Create a backend in Javascript: Introduction to Node.js]]></title>
        <id>https://dev.to/ericchapman/create-a-backend-in-javascript-introduction-to-node-js-215a</id>
        <link href="https://dev.to/ericchapman/create-a-backend-in-javascript-introduction-to-node-js-215a"/>
        <updated>2021-09-28T20:59:49.000Z</updated>
        <summary type="html"><![CDATA[Here is a series of articles to help you create backend applications in Javascript.
Node.js is now a must, so it is essential for a developer to master it.
I will publish a new article every two days and little by little you will learn everything there is to know about Node.js
To not miss anything follow me on twitter: https://twitter.com/EricTheCoder_
NodeJS allows you to run JavaScript code outside of a browser.
Node.js is a free, open source, server environment that uses JavaScript language to create server-side web applications. (backend)
Node.js works on different platforms (Windows, Linux, Unix, Mac OS X, etc.) With Node.js we can build a fast and highly scalable web application.
Using Node.js also means that we can use JavaScript across the stack, i.e. the same language for the fron…]]></summary>
        <author>
            <name>Eric The Coder</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Display Angular 12 App Version]]></title>
        <id>https://dev.to/jfbloom22/display-angular-12-app-version-52bn</id>
        <link href="https://dev.to/jfbloom22/display-angular-12-app-version-52bn"/>
        <updated>2021-09-28T20:52:32.000Z</updated>
        <summary type="html"><![CDATA[Displaying the app version automatically pulled from package.json is a great way to ask clients and users to verify what version they are using.  It is also helpful to include it in error logging.  In previous versions of Angular it was as easy as doing this inside your environment.ts files:
import { version } from '../../package.json';

However in Angular 12 you get an error:
Error: Should not import the named export 'version' (imported as 'version') from default-exporting module (only default export is available soon)
export const environment = {
  ...
  VERSION: require('../../package.json').version,
};

And there is a good chance you will need to add this to your tsconfig.app.json:
"types": [ "node" ]

ref: https://stackoverflow.com/a/68653103/2686911]]></summary>
        <author>
            <name>Jonathan Flower</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[HTML / CSS Tutorial - Build a Recipe Website]]></title>
        <id>6153616d64aefe07d3fa049a</id>
        <link href="https://www.freecodecamp.org/news/html-css-tutorial-build-a-recipe-website/"/>
        <updated>2021-09-28T18:56:03.000Z</updated>
        <summary type="html"><![CDATA[Building projects is a great way to build your skills, especially when it comes to web development. We just published an HTML & CSS course on the freeCodeCamp.org YouTube channel teach you how to build a recipe website. John Smilga developed this course. He is one of the most]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Protect Your components with React Router]]></title>
        <id>https://dev.to/medaminefh/protect-your-components-with-react-router-4hf7</id>
        <link href="https://dev.to/medaminefh/protect-your-components-with-react-router-4hf7"/>
        <updated>2021-09-28T18:09:26.000Z</updated>
        <summary type="html"><![CDATA[If you're using react router in your App, then you probably wanted to protect some routes from specific users, or to Redirect some users to their own page or component.
In this blog we'll see How to handle that with some simple checks

So at the beginning this is how our App looks like

At this point every user can access those two components (Admin, Home)
But that's not what i want, I want just the admin to have access to the "/admin" route.
And those who don't have access to that route, I need to redirect them to the Home Page ("/" route)
So the 1st Step is to create the ProtectedRoute Component.
You can create it in the same file, but for a cleaner code we'll create it on a new file
protectedRoute.js.





  
  
  2- Paste this code in that file



So basically we check if there is a token stored in our LocalStorage or not.
If The check is Truthy then he Have access to that route.
<Redirect /> Component).
You need to change that check to suit your case.
Don't forget to export your Component.
App


Import The ProtectedRoute Component from where you created it
default

So here we need to change The 

<Route exact path="/admin" component={Admin}  /> 
with
<ProtectedRoute exact path="/admin" component={Admin}  />


  
  
  And that's it 🎉, Go Try it out.]]></summary>
        <author>
            <name>Med Amine Fh</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Replacing ZEN - Part 1 - Introduction]]></title>
        <id>https://dev.to/intersystems/replacing-zen-part-1-introduction-3cie</id>
        <link href="https://dev.to/intersystems/replacing-zen-part-1-introduction-3cie"/>
        <updated>2021-09-28T18:01:50.000Z</updated>
        <summary type="html"><![CDATA[Index to Articles


Hi All
I am an avid user of ZEN for over 10 years now and it works for me.

But it seems that Intersystems are no longer actively developing it (or ZEN Mojo), the only published reference to this  is here
As an aside, Intersystems makes fine products (I have been using the technology for 35 years) and has great support BUT they are not good at being open with their product road map/retirement plans.  This is very embarrassing  to me when talking with my end user clients.


So I am looking at how to replace ZEN - this is not a short term project, at one client I have over 800 ZEN pages.

And it's such a shame as ZEN works and, most importantly, I and the team know how to make it "sing and dance".
I work in back office business apps so do not need some of the fancy stuff …]]></summary>
        <author>
            <name>InterSystems Developer</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dubai]]></title>
        <id>https://dev.to/chubby_girl_2f5f0298ce5bd/sunny-leone-call-girls-in-dubai-0569341582-4elj</id>
        <link href="https://dev.to/chubby_girl_2f5f0298ce5bd/sunny-leone-call-girls-in-dubai-0569341582-4elj"/>
        <updated>2021-09-28T17:43:21.000Z</updated>
        <summary type="html"><![CDATA[Dubai To find out more about accessibility features and ebook readers with a disability, BookNet Canada surveyed adult readers who bought and read ebooks. 17% of ebook readers said they "had been medically diagnosed with a vision impairment or print disability." 
Approximately half of all digital readers use accessibility features of some kind. Many readers commented that reading ebooks hurt their eyes and to compensate they would adjust the screen resolution or lighting, increase the font size, or change the background colour. 
Some stats from that survey:
45% adjust font size or spacing, 42% use the night display, and 48% read on the vertical screen.
Almost a quarter (26%) adjust the colour for the text or background, 25% magnify the screen, and 13% use a screen reader.
When asked how readers look for information within a book while reading, 67% use the table of contents, 45% use search, 43% use the index, and 38% use their own bookmarks.
How can I make my accessible ebook discoverable?
Library staff need to know if your books have enhanced accessibility; retailers should display this information (and should be able to display it in advance of receiving the EPUB file); and readers and consumers should know if accessibility features are disabled as well as what is built in.
While you can supply metadata directly with the EPUB file, and it can carry information about accessibility, it's no help for anyone deciding if this ISBN represents a product that's usable for their needs. So, where do you go to provide accessibility metadata?]]></summary>
        <author>
            <name>Dubai  call  girls 0564419067</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Publish an HTML Website on Netlify or GitHub Pages]]></title>
        <id>613c75b1852f4307d372b9ab</id>
        <link href="https://www.freecodecamp.org/news/publish-your-website-netlify-github/"/>
        <updated>2021-09-28T17:36:52.000Z</updated>
        <summary type="html"><![CDATA[You have finished creating your HTML website and you're feeling proud of your hard work. But there is one thing that is still missing: you have no idea how to publish your website. In this tutorial, you will learn how to publish an HTML website using two popular platforms – Netlify]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Get Started with React Native, Redux and TypeScript]]></title>
        <id>https://dev.to/tobilastik/get-started-with-react-native-redux-and-typescript-4gpi</id>
        <link href="https://dev.to/tobilastik/get-started-with-react-native-redux-and-typescript-4gpi"/>
        <updated>2021-09-28T16:40:40.000Z</updated>
        <summary type="html"><![CDATA[One of the popular state management tools out there is Redux. 
Setting up a Typescript React Native Project with Redux can be tricky for beginners, in this article, I will teach you how you can easily get started.
I am assuming, you have a React Native Typescript Project setup, if you don't, you can run this command:
npx react-native init ProjectName --template react-native-template-typescript
Your project will automatically be bootstrapped with typescript template.
I like using yarn, but you can also use npm
yarn add redux react-redux redux-thunk
Afterwards, let's install redux type definitions 
yarn add @types/react-redux -D
Create a new folder call "Store".
actions
reducers
types
and lastly, create an index.tsx file.
In your index.tsx file, paste the following code
The next action is to…]]></summary>
        <author>
            <name>Raji Oluwatobiloba</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Add Sentry to Your Node.js Project with TypeScript]]></title>
        <id>615233ec64aefe07d3f9fdb4</id>
        <link href="https://www.freecodecamp.org/news/how-to-add-sentry-to-your-node-js-project-with-typescript/"/>
        <updated>2021-09-28T16:24:26.000Z</updated>
        <summary type="html"><![CDATA[Sentry.io is an external monitoring and logging service which can help you identify and triage errors in your code.  These logs provide information such as a trace stack, breadcrumbs, and (assuming this is a web application) browser data. This can help you triage issues and resolve bugs faster, with]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[3 Must-Install NPM Packages to Write High-Quality React Code]]></title>
        <id>https://dev.to/ixartz/3-must-install-npm-packages-to-write-high-quality-react-code-4jm</id>
        <link href="https://dev.to/ixartz/3-must-install-npm-packages-to-write-high-quality-react-code-4jm"/>
        <updated>2021-09-28T16:20:19.000Z</updated>
        <summary type="html"><![CDATA[As a React developer, you spend your time writing JavaScript code. Programming isn't an easy task. Indeed, you're requested to write high-quality code and at the same time writing code without any bugs. For all my projects, I always install these NPM packages to make my React code better.
I've started programming with PHP, a very permissive programming language like JavaScript. It was an easy language to start with but a nightmare to maintain or program when your applications start growing.
I discover a new world with strongly typed languages like C/C++ or Java. One major advantage of strongly typed language is to catch errors earlier in the development process. In the end, you write better code with fewer bugs in your application.

Unfortunately, C/C++, Java or even PHP you cannot run in …]]></summary>
        <author>
            <name>Remi W.</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Semantic HTML Guide – 10 Alternatives to Using divs]]></title>
        <id>614e05eeccc97307eb2bc165</id>
        <link href="https://www.freecodecamp.org/news/semantic-html-alternatives-to-using-divs/"/>
        <updated>2021-09-28T16:00:39.000Z</updated>
        <summary type="html"><![CDATA[Raise your hand if your typical HTML layout looks like this: <body> 	<div class="header" id="site-header"> 		<div class="site-nav"> 			<ul> 				<li><a href="/">Home</a></li> 				<li><a href="/">]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[My first post]]></title>
        <id>https://dev.to/mvineza/my-first-post-2pmj</id>
        <link href="https://dev.to/mvineza/my-first-post-2pmj"/>
        <updated>2021-09-28T15:59:50.000Z</updated>
        <summary type="html"><![CDATA[This is a sample post.
# scans for port 22
for i in {1..25}; do ./nc -v -n -z -w 1 172.18.0.$i 22; done

# threader3000
# - for fast port scan
# - prompts for nmap scan also at the end, cool!
# https://github.com/dievus/threader3000
threader3000

# massscan
https://github.com/robertdavidgraham/masscan]]></summary>
        <author>
            <name>Merrell Vineza</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Window into Docker, minikube, and containerd]]></title>
        <id>https://dev.to/leading-edje/a-window-into-docker-minikube-and-containerd-16bi</id>
        <link href="https://dev.to/leading-edje/a-window-into-docker-minikube-and-containerd-16bi"/>
        <updated>2021-09-28T15:23:03.000Z</updated>
        <summary type="html"><![CDATA[This link from 2018 seemed to suggest containerd could run on Windows.
Spoiler Alert/TL;DR: This is not a post about getting containerd running on Windows.  I was able to get a Windows nanoserver image running in containerd.  I could not get that image connecting to any network.  This post is a survey of the source code, GitHub issues, and dead links chased.  All documented to show how close and far away we are to something useful.
In my research and frustration, I wanted to try running something else.  I enabled Hyper-V on my machine.  Followed the instructions at minikube quickstart.  Things worked!  Thank you to the maintainers of minikube!  Great Job!  I definitely will be using this more in the future.
The only place I deviated was in starting the minikube cluster.  I used the command…]]></summary>
        <author>
            <name>wmchurchill3</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to install OpenGL in Ubuntu in C++?]]></title>
        <id>https://dev.to/iamsahebgiri/how-to-install-opengl-in-ubuntu-in-c-6eb</id>
        <link href="https://dev.to/iamsahebgiri/how-to-install-opengl-in-ubuntu-in-c-6eb"/>
        <updated>2021-09-28T15:05:29.000Z</updated>
        <summary type="html"><![CDATA[What Is OpenGL?


OpenGL is a Graphics rendering API which is operating system independent, window system independent and has high-quality color images composed of geometric and image primitives. OpenGL APIs can use following - 
GL


OpenGL API implementation (http://www.opengl.org)
GLU


OpenGL Utility
Glut


GLUT (OpenGL Utility Toolkit) – Glut is portable windowing API and it is not officially part of OpenGL.
OpenGL Utility Toolkit (http://www.opengl.org/resources/libraries/glut/)
FLTK


FlashLight ToolKit (http://www.fltk.org/)
GLEW
Now lets see how to install OpenGL in Ubuntu.
Now because GLUT (OpenGL Utility Toolkit) depends upon OpenGL and a number of other related libraries, if we install GLUT then OpenGL will be automatically be installed.
First update the repository using the given command
$ sudo apt-get update

Run the following command to install OpenGL.
$ sudo apt-get install libglu1-mesa-dev freeglut3-dev mesa-common-dev

Now to test if OpenGL libraries are working fine on our Linux machine, we will create a C++ program and test it.
So create a following C++ Program.
#include <GL/glut.h>

void displayMe(void)
{
    glClear(GL_COLOR_BUFFER_BIT);
    glBegin(GL_POLYGON);
        glVertex3f(0.5, 0.0, 0.5);
        glVertex3f(0.5, 0.0, 0.0);
        glVertex3f(0.0, 0.5, 0.0);
        glVertex3f(0.0, 0.0, 0.5);
    glEnd();
    glFlush();
}

int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE);
    glutInitWindowSize(400, 300);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("Hello world!");
    glutDisplayFunc(displayMe);
    glutMainLoop();
    return 0;
}

Now give the command below to compile your code.
$ g++ main.cpp -o firstOpenGlApp -lglut -lGLU -lGL

Now run your OpenGl program with following command
$ ./firstOpenGlApp

You will see something like this on your screen if everythings went well.]]></summary>
        <author>
            <name>Saheb Giri</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to unit test Vuex modules defined with the vuex-module-decorators syntax in Nuxt,  using vue-test-utils and Jest?]]></title>
        <id>https://dev.to/ispoljari/how-to-unit-test-vuex-modules-defined-with-the-vuex-module-decorators-syntax-in-nuxt-using-vue-test-utils-and-jest-3n7p</id>
        <link href="https://dev.to/ispoljari/how-to-unit-test-vuex-modules-defined-with-the-vuex-module-decorators-syntax-in-nuxt-using-vue-test-utils-and-jest-3n7p"/>
        <updated>2021-09-28T14:48:34.000Z</updated>
        <summary type="html"><![CDATA[Cover photo by Tien Vu Ngoc on Unsplash
To find the answer to my question I went through the official Nuxt documentation and through the existing Stack Overflow and Github issue discussions.
But with no luck. 
My AuthModule looks something like this:
@Module({
  stateFactory: true,
  namespaced: true,
})
export default class AuthModule extends VuexModule {
  userData?: UserData | undefined = undefined;
  prevRouteList: Routes[] = [];
  error?: services.ICognitoError | undefined = undefined;
  isLoading = false;
  ...

  @VuexMutation
  setIsLoading(isLoading: boolean) {
    this.isLoading = isLoading;
  }

  ...

   @VuexAction({ rawError: true })
  async register(registerData: { email: string; password: string }): Promise<any> {
    this.context.commit('setIsLoading', true);
    this.cont…]]></summary>
        <author>
            <name>Ivan Spoljaric</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[iOS Browser Choice]]></title>
        <id>https://css-tricks.com/?p=352681</id>
        <link href="https://css-tricks.com/ios-browser-choice/"/>
        <updated>2021-09-28T14:26:23.000Z</updated>
        <summary type="html"><![CDATA[Just last week I got one of those really?! 🤨 faces when this fact came up in conversation amongst smart and engaged fellow web developers: there is no browser choice on iOS. It’s all Safari. You can download apps that …
The post iOS Browser Choice appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Web Unleashed is Back! (Use Coupon Code “CSS-Tricks” for 50% Off)]]></title>
        <id>https://css-tricks.com/?p=352073</id>
        <link href="https://fitc.ca/event/webu21/"/>
        <updated>2021-09-28T14:24:34.000Z</updated>
        <summary type="html"><![CDATA[(This is a sponsored post.)
Now in its tenth year (!!!), Web Unleashed is one of the top events for web devs. It’s coming up quick: October 20-22, 2021. 
The lineup is amazing. You’ll hear from leaders in …
The post Web Unleashed is Back! (Use Coupon Code “CSS-Tricks” for 50% Off) appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Update an object in nested array in MongoDB]]></title>
        <id>https://dev.to/rajeshroyal/update-an-object-in-nested-array-in-mongodb-o5a</id>
        <link href="https://dev.to/rajeshroyal/update-an-object-in-nested-array-in-mongodb-o5a"/>
        <updated>2021-09-28T14:06:46.000Z</updated>
        <summary type="html"><![CDATA[Hello Reader 👋
To update an object inside a nested array in MongoDB you can use this approach, Its well tested and working.
Update nested array objects. See below picture for a better Idea what we are going to do. We will update the object which is nested by 3 levels of array.
{
 discussionList[
  discussionList [
   {
     object-value-to-be-updated.
   }
  ]
 ]
} 


public courseCategoryPostCommentReplyUpdate(operation: CommentReplyUpdateMutation): Promise<IDocumentUpdateType> {
    return this.courseCategoryPostCommentsModel.updateOne(
      {
        "postId" : operation.postId,
        'discussionList': {
          '$elemMatch': {
            '_id': operation.commentId,
            "discussionList._id": operation.replyId
          }
        }
      },
      {
        $set: {
          "discussionList.$[outer].discussionList.$[inner].payload": operation.payload,
          "discussionList.$[outer].discussionList.$[inner].isUpdated": true,
          "discussionList.$[outer].discussionList.$[inner].commentUpdateTime": new Date()
        }
      },
      {
        arrayFilters: [
          { "outer._id": operation.commentId},
          {"inner._id": operation.replyId}

      ]
      }
    );
  }

FootNotes - this code is to update the reply of a comment.
That's how you can perform operations on an object in nested array in mongoDB document. You can also update/delete the objects which are having the more level of nesting by just modifying the query.
Please let me know if the code needs an explanation. Thanks 🙂]]></summary>
        <author>
            <name>Rajesh Royal</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[🚀 The Missing SQL Basics Crash Course]]></title>
        <id>https://dev.to/bobbyiliev/the-missing-sql-basics-crash-course-323l</id>
        <link href="https://dev.to/bobbyiliev/the-missing-sql-basics-crash-course-323l"/>
        <updated>2021-09-28T14:00:20.000Z</updated>
        <summary type="html"><![CDATA[Introduction


No matter if you are a DevOps/SysOps engineer, developer, or just a Linux enthusiast, you will most likely have to use SQL at some point in your career.
The guide is suitable for anyone working as a developer, system administrator, or a DevOps engineer and wants to learn the basics of SQL.
Before we dive deep into SQL, let's quickly define what a database is.
The definition of databases from Wikipedia is:
A database is an organized collection of data, generally stored and accessed electronically from a computer system.
In other words, a database is a collection of data stored and structured in different database tables.
You've most likely worked with spreadsheet systems like Excel or Google Sheets. At the very basic, database tables are quite similar to spreadsheets.
Each ta…]]></summary>
        <author>
            <name>Bobby Iliev</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Splunk - Rex command]]></title>
        <id>https://dev.to/adaendra/splunk-rex-command-2c02</id>
        <link href="https://dev.to/adaendra/splunk-rex-command-2c02"/>
        <updated>2021-09-28T13:27:47.000Z</updated>
        <summary type="html"><![CDATA[When you are debugging an application, you may need to extract some data from logs (like an id in an URI...).
To help you to do that, Splunk has the rex command.
The simpliest way to use it is 
| rex regex
With this command, you will search for an element in the whole log.
If you want to search in a specific field, add field= and the name of your field.
| rex field= regex
example
| rex field=uri *regex*

About how to write the regex, you have to follow the next pattern
[Regex about the text before the desired value][Regex about the desired value][Regex about the text after the desired value]
The first and the last part are really look like a classic regex.
(?\w+)
Wrote like this, you will declare the field where you want insert your new data and you have the regex corresponding to your value.
Also you can retrieve multiple datas from a single rex command.
Retrieve a username
| rex "user\s(?<username>\w+)\s"

Retrieve the email sender and the destination of a mail
| rex field=_raw "From: <(?<from>.*)> To: <(?<to>.*)>"

Splunk - Rex command
Splunk - Rex examples
Karunsubramanian.com - Post about Splunk rex command
I hope it will help you! 🍺]]></summary>
        <author>
            <name>Maxime Guilbert</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Introducing ngx-react : 🅰️Angular  + ⚛️React interoperability without pain.]]></title>
        <id>https://dev.to/oguimbal/introducing-ngx-react-angular-react-interoperability-without-pain-23k</id>
        <link href="https://dev.to/oguimbal/introducing-ngx-react-angular-react-interoperability-without-pain-23k"/>
        <updated>2021-09-28T13:16:45.000Z</updated>
        <summary type="html"><![CDATA[Have you ever wanted to use React components in an Angular application ? Or to start migrating an Angular app to React component-by-component ? Or simply use both at the same time ?
I developped ngx-react which allows you to do just that with ease.
It enables you to use your Angular components in React, and vice versa, quite transparently, and without boilerplate.
Just declare a bridge, somewhere in your application:
import { NgxReactBridge } from 'ngx-react';

export const bridge = new NgxReactBridge()
    // bridge options:
    .addProvider(/** Add a global react provider here */);

Then, to use an Angular component in React, just import it like that:
const AsReact = bridge.toReact(MyAngularCommonent);

// use it 👉  <AsReact prop={whatever} />

The generated ⚛️ component will take as props all the @Input()s of your 🅰️ component, and all the @Output()s, mapped to functions. (i.e. @Output() onThing: EventEmitter<string> will be mapped to prop onThing: (event: string) => void.
To use a React component in Angular, you'll have to do a tiny bit more work... for instance if you have a React component:
function MyReactComponent(props: {
  data: string;
  dataChange: (evt: string) => void;
}) {
    // [...]
}


Then magically convert it to its Angular counterpart like that:
@Directive({ selector: "my-react-component" })
export class MyReactComponent_Angular extends reactBridge.toAngular(
  MyReactComponent
) {

  // a bit of extra work: You will have to map the properties yourself 
  @Input()
  data!: string;
  @Output()
  dataChange = new EventEmitter();
}

(the Angular compiler doesnt allow to build dynamic components... so we have to declare them statically)
Just inject Angular services in React like that:
const service = useService(MyAngularService);

I'll write more about this when I have more time 👉 But please share your thought if you have some :) 
More details on  the ngx-react repository]]></summary>
        <author>
            <name>Olivier Guimbal</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Introducing ngx-react : 🅰️Angular  + ⚛️React interoperability without pain.]]></title>
        <id>https://dev.to/oguimbal/introducing-ngx-react-angular-react-interoperability-without-pain-23k</id>
        <link href="https://dev.to/oguimbal/introducing-ngx-react-angular-react-interoperability-without-pain-23k"/>
        <updated>2021-09-28T13:16:45.000Z</updated>
        <summary type="html"><![CDATA[Have you ever wanted to use React components in an Angular application ? Or to start migrating an Angular app to React component-by-component ? Or simply use both at the same time ?
I developped ngx-react which allows you to do just that with ease.
It enables you to use your Angular components in React, and vice versa, quite transparently, and without boilerplate.
Just declare a bridge, somewhere in your application:
import { NgxReactBridge } from 'ngx-react';

export const bridge = new NgxReactBridge()
    // bridge options:
    .addProvider(/** Add a global react provider here */);

Then, to use an Angular component in React, just import it like that:
const AsReact = bridge.toReact(MyAngularCommonent);

// use it 👉  <AsReact prop={whatever} />

The generated ⚛️ component will take as props all the @Input()s of your 🅰️ component, and all the @Output()s, mapped to functions. (i.e. @Output() onThing: EventEmitter<string> will be mapped to prop onThing: (event: string) => void.
To use a React component in Angular, you'll have to do a tiny bit more work... for instance if you have a React component:
function MyReactComponent(props: {
  data: string;
  dataChange: (evt: string) => void;
}) {
    // [...]
}


Then magically convert it to its Angular counterpart like that:
@Directive({ selector: "my-react-component" })
export class MyReactComponent_Angular extends reactBridge.toAngular(
  MyReactComponent
) {

  // a bit of extra work: You will have to map the properties yourself 
  @Input()
  data!: string;
  @Output()
  dataChange = new EventEmitter();
}

(the Angular compiler doesnt allow to build dynamic components... so we have to declare them statically)
Just inject Angular services in React like that:
const service = useService(MyAngularService);

I'll write more about this when I have more time 👉 But please share your thought if you have some :) 
More details on  the ngx-react repository]]></summary>
        <author>
            <name>Olivier Guimbal</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using Jaeger for your microservices]]></title>
        <id>https://dev.to/signoz/using-jaeger-for-your-microservices-4goi</id>
        <link href="https://dev.to/signoz/using-jaeger-for-your-microservices-4goi"/>
        <updated>2021-09-28T13:02:08.000Z</updated>
        <summary type="html"><![CDATA[Jaeger is a popular open-source tool used for distributed tracing in a microservice architecture. In a microservice architecture, a user request or transaction can travel across hundreds of services before serving what a user wants. Distributed tracing helps to track the performance of a transaction across multiple services.
Jaeger is a fantastic open-source tool for distributed tracing. But for effective resolution of production issues, engineering teams need both metrics and traces. SigNoz, a full-stack open-source tool, provides a unified UI for both metrics and traces.

Before we deep dive into how Jaeger accomplishes distributed tracing for microservices-based architecture, let's take a short detour to understand distributed tracing.
In the world of microservices, a user request trave…]]></summary>
        <author>
            <name>Ankit Anand ✨</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Persistent routes]]></title>
        <id>https://dev.to/qodunpob/persistent-routes-1ga5</id>
        <link href="https://dev.to/qodunpob/persistent-routes-1ga5"/>
        <updated>2021-09-28T12:56:16.000Z</updated>
        <summary type="html"><![CDATA[Hi, everyone. I'm sure you know, route management in an enterprise project is a tricky task. Enum (typescript data structure) is often used to keep them persistent. But enum itself doesn't solve all problems while we handle the route concatenation. Let's take a look at an example.
Suppose we have three levels of nesting routes:
enum ROOT_ROUTES {
  CATALOG = 'catalog',
  ABOUT = 'about',
  SUPPORT = 'support',
}

enum CATALOG_ROUTES {
  CATEGORY = 'category',
  ITEM = 'item',
  CART = 'cart'
}

enum CATEGORY_ROUTES {
  TOP = 'top',
  SALES = 'sales',
  ALL = 'all'
}

Then, in order to assemble the full route, we have to correctly concatenate all the intermediate values:
const topCategoryRoute = `/${ROOT_ROUTES.CATALOG}/${CATALOG_ROUTES.CATEGORY}/${CATEGORY_ROUTES.TOP}`;

It's a very bad id…]]></summary>
        <author>
            <name>Konstantin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[DevSecOps notes!]]></title>
        <id>https://dev.to/bscript/devsecops-notes-490j</id>
        <link href="https://dev.to/bscript/devsecops-notes-490j"/>
        <updated>2021-09-28T12:31:20.000Z</updated>
        <summary type="html"><![CDATA[DevSecOps notes!


I spent the last three months reading the Agile Application Security book, book, which helped to learn more about how to:
Add security practices to each stage of the existing SDLC.
Integrate security with planning, requirements, design, and at the code level.
Implement regulatory compliance in an agile or DevOps environment.
Build an effective security program through a culture of empathy, openness, transparency, and collaboration.
The software development area is changing every day, and it keeps accelerating. Therefore, The security pioneers should also change the way how to operate.
Integrating security in each stage of your existing development lifecycle requires a good plan and a well-documented study on your current environment setup.
Most organizations face a slowd…]]></summary>
        <author>
            <name>Bour Abdelhadi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[DRY Way to Manage Subscriptions in Angular Components]]></title>
        <id>https://dev.to/this-is-angular/dry-way-to-manage-subscriptions-in-angular-components-256j</id>
        <link href="https://dev.to/this-is-angular/dry-way-to-manage-subscriptions-in-angular-components-256j"/>
        <updated>2021-09-28T12:10:26.000Z</updated>
        <summary type="html"><![CDATA[Cover photo by Tim Swaan on Unsplash.
This article explains how to manage subscriptions in Angular components without repeating the same teardown logic in each component.
There are two common ways to manage RxJS subscriptions in Angular components to prevent memory leaks:
@Component({
  selector: 'interval',
  templateUrl: './interval.component.html',
})
export class IntervalComponent implements OnInit, OnDestroy {
  // initialize `Subscription` object
  private readonly subscriptions = new Subscription();

  ngOnInit(): void {
    // add all subscriptions to it
    this.subscriptions.add(
      interval(1000)
        .pipe(map(i => `== ${i} ==`))
        .subscribe(console.log)
    );

    this.subscriptions.add(
      interval(2000)
        .pipe(map(i => `=== ${i} ===`))
        .subscr…]]></summary>
        <author>
            <name>Marko Stanimirović</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[DRY Way to Manage Subscriptions in Angular Components]]></title>
        <id>https://dev.to/this-is-angular/dry-way-to-manage-subscriptions-in-angular-components-256j</id>
        <link href="https://dev.to/this-is-angular/dry-way-to-manage-subscriptions-in-angular-components-256j"/>
        <updated>2021-09-28T12:10:26.000Z</updated>
        <summary type="html"><![CDATA[Cover photo by Tim Swaan on Unsplash.
This article explains how to manage subscriptions in Angular components without repeating the same teardown logic in each component.
There are two common ways to manage RxJS subscriptions in Angular components to prevent memory leaks:
@Component({
  selector: 'interval',
  templateUrl: './interval.component.html',
})
export class IntervalComponent implements OnInit, OnDestroy {
  // initialize `Subscription` object
  private readonly subscriptions = new Subscription();

  ngOnInit(): void {
    // add all subscriptions to it
    this.subscriptions.add(
      interval(1000)
        .pipe(map(i => `== ${i} ==`))
        .subscribe(console.log)
    );

    this.subscriptions.add(
      interval(2000)
        .pipe(map(i => `=== ${i} ===`))
        .subscr…]]></summary>
        <author>
            <name>Marko Stanimirović</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What Do You Actually Need To Know For SRE and DevOps]]></title>
        <id>https://dev.to/thenjdevopsguy/what-do-you-actually-need-to-know-for-sre-and-devops-4g6p</id>
        <link href="https://dev.to/thenjdevopsguy/what-do-you-actually-need-to-know-for-sre-and-devops-4g6p"/>
        <updated>2021-09-28T11:39:10.000Z</updated>
        <summary type="html"><![CDATA[There is a huge need for engineers in the SRE and DevOps spectrum right now. Anywhere you look, whether it's LinkedIn, Indeed, or another job site, you'll see thousands of job postings. The interesting thing is there are now other titles popping up, including:
Platform engineer
Reliability engineer
Performance engineer
When you look at these job postings, including the job postings for DevOps engineer or Site Reliability Engineer, you'll notice something; they all sort of look the same.
Why?
Simply put, because the industry doesn't truly know where to place these engineers due to the fact that they have to know a little bit of everything
So what are they? Developers? Architects? Infrastructure engineers? The answer is yes.
Think about what you would do, or what you hear that you need to do…]]></summary>
        <author>
            <name>Mike Levan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[TryHackMe - Classic Passwd]]></title>
        <id>https://dev.to/l0wk3y/tryhackme-classic-passwd-3c8f</id>
        <link href="https://dev.to/l0wk3y/tryhackme-classic-passwd-3c8f"/>
        <updated>2021-09-28T10:37:02.000Z</updated>
        <summary type="html"><![CDATA["I forgot my password, can you give me access to the program?"
In this TryHackMe room you will be tasked with cracking the password to a binary by bypassing the authentication sequence. There are multiple ways to solve this CTF, but I will go over a few of the ways I solved it.
Practice your skills in reversing and get the flag bypassing the login.
To start things off, I pull the strings to find what catches my eye, scrolling through the strings I find THM{ %d%d }. After doing countless CTFs I already know that flags are typically formatted this way (e.g flag{}, THM{}, htb{}), %d is a string format that takes an argument and prints it as an integer we will see that later on in Ghidra. You can read more about %d here.

After importing the file into Ghidra and head over to the main function …]]></summary>
        <author>
            <name>L0WK3Y | I.A.A.N</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Just 7 lines of node.js - that turns any Database into Airtable-like Spreadsheet!]]></title>
        <id>https://dev.to/o1lab/in-7-lines-of-code-you-can-turn-any-database-into-airtable-like-spreadsheet-using-nocodb-51ah</id>
        <link href="https://dev.to/o1lab/in-7-lines-of-code-you-can-turn-any-database-into-airtable-like-spreadsheet-using-nocodb-51ah"/>
        <updated>2021-09-28T10:31:37.000Z</updated>
        <summary type="html"><![CDATA[So what is Airtable ?


Airtable is a low-code platform for building collaborative apps. It works like a part spreadsheet & part database.
Using NocoDB
NocoDB is a free & open source Airtable alternative - that  turns your existing MySQL/Postgres databases into a smart and beautiful spreadsheets. 

(async () => {
    const server = require('express')();
    const {Noco} = require("nocodb");
    server.use(await Noco.init({}));
    console.log(`Visit : localhost:${process.env.PORT}/dashboard`)    
    server.listen(process.env.PORT);
})()


(async () => {
    // require express 
    const server = require('express')();

    // require nocodb
    const {Noco} = require("nocodb");

    // mount nocodb as a middleware
    server.use(await Noco.init({}));

    // print 
    console.log(`Visit :…]]></summary>
        <author>
            <name>o1lab</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What (if any) anti-bot techniques are you putting in place? How effective are they?]]></title>
        <id>https://dev.to/botmenot/what-if-any-anti-bot-techniques-are-you-putting-in-place-how-effective-are-they-2l25</id>
        <link href="https://dev.to/botmenot/what-if-any-anti-bot-techniques-are-you-putting-in-place-how-effective-are-they-2l25"/>
        <updated>2021-09-28T09:01:44.000Z</updated>
        <summary type="html"><![CDATA[Bot protection heavily relies on the infrastructure your website/web app uses. For example, the anti-bot solution will look very difficult on NGinx Web server, as opposed to Microsoft IIS. Further, you might find yourself with tied hands if you’re using a kind of SaaS solution (for example, a Shopify store will be able to use only anti-bot protection offered by Shopify itself).
I would list 3 main types of bot protection: 
Do you use any of those solutions? How effectively did they prove to be?]]></summary>
        <author>
            <name>BotMeNot</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Improving The Accessibility Of Your Markdown]]></title>
        <id>https://smashingmagazine.com/2021/09/improving-accessibility-of-markdown/</id>
        <link href="https://smashingmagazine.com/2021/09/improving-accessibility-of-markdown/"/>
        <updated>2021-09-28T09:00:00.000Z</updated>
        <summary type="html"><![CDATA[You can find Markdown in many places on the Internet. This article covers different aspects of Markdown and how it interacts with other technology.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Eric Bailey)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[HTTPS for Developers]]></title>
        <id>https://dev.to/tiangolo/https-for-developers-1774</id>
        <link href="https://dev.to/tiangolo/https-for-developers-1774"/>
        <updated>2021-09-28T08:27:34.000Z</updated>
        <summary type="html"><![CDATA[This article lives in:
Dev.to
Medium
GitHub
The FastAPI docs
Here's a brief introduction to HTTPS for developers. 🔒
This article is extracted from the FastAPI docs about HTTPS.
I just upgraded those docs with several explanations and diagrams, and I thought the end result is generic and useful enough for many other developers (even in other languages and frameworks) to also publish it as a post, so here it is. 🤓
If you are a user, your only interaction with HTTPS is with the browser opening URLs, then you are better off just reading How HTTPS Works.
If you are a cryptography researcher, you are better off studying the cryptographic primitives and then reading the standards (RFCs).
But if you are a developer (programmer, coder) and want to know enough technical details to understand how i…]]></summary>
        <author>
            <name>Sebastián Ramírez</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Facebook and Google Authentication with Node.js and Doppler]]></title>
        <id>https://dev.to/zion/facebook-and-google-authentication-with-node-js-and-doppler-maf</id>
        <link href="https://dev.to/zion/facebook-and-google-authentication-with-node-js-and-doppler-maf"/>
        <updated>2021-09-28T07:53:41.000Z</updated>
        <summary type="html"><![CDATA[Summary


Facebook and Google login is widely used as an authentication module in our modern web application. There are API keys assigned to every application created using these platforms.
In this tutorial, we will authenticate users using Facebook, and Google authentication. We will manage and secure our API secrets with Doppler.
Doppler has significantly changed and increased the productivity of our applications since its release. No need to subject our secrets to vulnerabilities by storing them in a .env file located in our project directory. Over time, I have had to make the mistake of hosting my applications alongside my .env  on Github. But thanks to Doppler, all that is a thing of the past. 
To manage your secrets using Doppler, you need to create a Doppler account. To get started,…]]></summary>
        <author>
            <name>Ekekenta Odioyenfe .C</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Writing Deno/Node Cross-Compatible Javascript]]></title>
        <id>https://dev.to/ndesmic/writing-deno-node-cross-compatible-javascript-32gk</id>
        <link href="https://dev.to/ndesmic/writing-deno-node-cross-compatible-javascript-32gk"/>
        <updated>2021-09-28T04:58:54.000Z</updated>
        <summary type="html"><![CDATA[Being a fan of Deno I've been trying to see how I can move more of my node workflows and code over to use it.  This is fine for private code but it's likely to make people who use Node a bit uncomfortable.  Node is nice a stable, it's well known, it doesn't rock the boat.  When developing new libraries I figured it might be an interesting idea to make them compatible so when the time comes I don't have to re-implement them to change runtimes.  Sadly this turns out to be harder than expected.  The problem isn't too unlike sharing code between node and the browser.  Node made many early decisions pre-standardization that have rendered important parts of it incompatible.  We don't have east access to fetch for example, we have much more low level http.  For more algorithmic code this isn't mu…]]></summary>
        <author>
            <name>ndesmic</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[String Patterns in TypeScript]]></title>
        <id>https://dev.to/saulodias/string-patterns-in-typescript-5b6k</id>
        <link href="https://dev.to/saulodias/string-patterns-in-typescript-5b6k"/>
        <updated>2021-09-28T04:23:36.000Z</updated>
        <summary type="html"><![CDATA[While we wait for a regex type in TypeScript, starting on TypeScript 4.1 we can make use of a very neat trick to create string patterns validations which can come in handy for some simple use cases.
I'm using Leonardo Victor's approach to query endpoints in multiple APIs using the Angular HttpClient.
By making use of string patterns I'm able to validate the urls to some extent.
type ApiAlias = 'my-api' | 'third-party-api' | 'another-api';

type ApiUrl = `@${ApiAlias}/${string}`;

const MY_ENDPOINT: ApiUrl = '@my-api/myendpoint';

const ANOTHER_ENDPOINT: ApiUrl = '@thirdparty-api/anotherendpoint';

TypeScript Playground
ANOTHER_ENDPOINT will throw an error because thirdparty-api has a typo. It's missing a hyphen, and should be third-party-api.
Go check out Leonardo Victor's post if you're interested in this implementation!
Angular: Consuming multiple APIS with Angular HTTPClient in a beautiful way using interceptors
Leonardo Victor ・ Sep 26 '20 ・ 3 min read
#angular
        #http
        #codequality
        #architecture
      
This post was inspired by this Stack Overflow thread. Let me know if things have changed by the time you're reading this, so I can keep this up to date.]]></summary>
        <author>
            <name>Saulo Dias</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[String Patterns in TypeScript]]></title>
        <id>https://dev.to/saulodias/string-patterns-in-typescript-5b6k</id>
        <link href="https://dev.to/saulodias/string-patterns-in-typescript-5b6k"/>
        <updated>2021-09-28T04:23:36.000Z</updated>
        <summary type="html"><![CDATA[While we wait for a regex type in TypeScript, starting on TypeScript 4.1 we can make use of a very neat trick to create string patterns validations which can come in handy for some simple use cases.
I'm using Leonardo Victor's approach to query endpoints in multiple APIs using the Angular HttpClient.
By making use of string patterns I'm able to validate the urls to some extent.
type ApiAlias = 'my-api' | 'third-party-api' | 'another-api';

type ApiUrl = `@${ApiAlias}/${string}`;

const MY_ENDPOINT: ApiUrl = '@my-api/myendpoint';

const ANOTHER_ENDPOINT: ApiUrl = '@thirdparty-api/anotherendpoint';

TypeScript Playground
ANOTHER_ENDPOINT will throw an error because thirdparty-api has a typo. It's missing a hyphen, and should be third-party-api.
Go check out Leonardo Victor's post if you're interested in this implementation!
Angular: Consuming multiple APIS with Angular HTTPClient in a beautiful way using interceptors
Leonardo Victor ・ Sep 26 '20 ・ 3 min read
#angular
        #http
        #codequality
        #architecture
      
This post was inspired by this Stack Overflow thread. Let me know if things have changed by the time you're reading this, so I can keep this up to date.]]></summary>
        <author>
            <name>Saulo Dias</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What are some Linux distros you spent significant time on?]]></title>
        <id>https://dev.to/patarapolw/what-are-some-linux-distros-you-spent-significant-time-on-1g40</id>
        <link href="https://dev.to/patarapolw/what-are-some-linux-distros-you-spent-significant-time-on-1g40"/>
        <updated>2021-09-28T01:41:47.000Z</updated>
        <summary type="html"><![CDATA[Not counting distros you only tried off curiosity.
Only the distro you used long enough that you see real problems.
And what are the problems?]]></summary>
        <author>
            <name>Pacharapol Withayasakpunt</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why was Angular introduced as a client-side framework?]]></title>
        <id>https://dev.to/thanhtr99270163/til-why-was-angular-introduced-as-a-client-side-framework-5e5</id>
        <link href="https://dev.to/thanhtr99270163/til-why-was-angular-introduced-as-a-client-side-framework-5e5"/>
        <updated>2021-09-28T01:13:39.000Z</updated>
        <summary type="html"><![CDATA[Everything created was created to solve a problem. So why was Angular created in the first place? What problems was it created to solve?
Angular is a TypeScript-based open-source web application framework, developed and maintained by Google. It offers an easy and powerful way of building frontend web-based applications.
When Google released Gmail in 2004, it showed the world that web apps really could replace complex desktop applications. Google even open-sourced the Closure toolkit - a set of libraries and an optimized compiler that it used to build Gmail.
However, the problem was that Google's Closure tools weren't very developer-friendly. They relied heavily on Java, which alienated web developers at the time who were used to working with JavaScript, PHP, Ruby, and Python.
Therefore, Va…]]></summary>
        <author>
            <name>Thanh Truong</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Global Status Modal HOC]]></title>
        <id>https://dev.to/brunofrigeri/global-status-modal-hoc-24of</id>
        <link href="https://dev.to/brunofrigeri/global-status-modal-hoc-24of"/>
        <updated>2021-09-28T00:53:08.000Z</updated>
        <summary type="html"><![CDATA[Last week, I was having a problem in my current job, that basically we were refactoring stuffs in our code, and one of them was the Status Screen.
How to have a global Status for our API responses, without to have it as a Screen?
The response takes a bit to come for me, but, at evening the light came, why not use a High Order Component to get around this problem?!
So, let's start doing it, first and formals, we are going to use React Native (Expo Bare-Workflow), to be able to get our results more quickly, but the same can be achieved using React Native CLI.
First, we're going to init our project, as I'm using Expo, I'll do:
expo init

After that, I'm going to select my workflow, based on expo. So I'll select:
minimal (TypeScript)  same as minimal but with TypeScript configuration 

Okay, w…]]></summary>
        <author>
            <name>Bruno Frigeri</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GitHub Repo Guide – How to Increase Engagement on your Public GitHub Repositories]]></title>
        <id>6149e65e9456b407b870fdc5</id>
        <link href="https://www.freecodecamp.org/news/increase-engagement-on-your-public-github-repositories/"/>
        <updated>2021-09-28T00:05:11.000Z</updated>
        <summary type="html"><![CDATA[GitHub is a collection of web-based tools that helps you work with version control and Git methodologies.  With the help of GitHub, you can create, manage, and collaborate on projects with multiple other team members. You keep the project folders and files in a store (file system) on GitHub. This]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Advertising's Performance Tradeoffs]]></title>
        <id>https://dev.to/requestmetrics/advertising-s-performance-tradeoffs-5p0</id>
        <link href="https://dev.to/requestmetrics/advertising-s-performance-tradeoffs-5p0"/>
        <updated>2021-09-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Advertising is everywhere on the web and users have noticed. More than 40% of internet users block ads. Are these users sticking it to the man or just tired of slow site performance? To find out, we measure advertising’s performance impact on a few popular sites.
We picked Yahoo, Reddit, BBC, CNN, and The New York Times because they have ads and are popular according to Alexa Top Sites. Measurements were captured out of Chrome after loading each site in a fresh incognito window. Closing Chrome between runs to ensures there are no cached assets. We then reran the tests with uBlock Origin enabled.
Users expect pages to show something quickly, finish loading fast and not to change under them once loaded.
The user’s perception of page performance is influenced by many aspects of the page load,…]]></summary>
        <author>
            <name>Todd H. Gardner</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Sneaky painful frontend burnout]]></title>
        <id>https://dev.to/codechips/sneaky-painful-frontend-burnout-51f7</id>
        <link href="https://dev.to/codechips/sneaky-painful-frontend-burnout-51f7"/>
        <updated>2021-09-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I've recently noticed an alarming trend. There is a high churn of frontend developers due to the burnout. It's a shame, but it totally makes sense if you take a deeper look at the problem. It's not something you normally notice. All burnouts are sneaky, but this one is special. It comes creeping very slowly and before you notice it's too late. This article is a personal reflection from the interviews conducted with people who decided to leave the frontend field due to the burnout.
Originally published on codechips.me
Things were simpler back in the days. jQuery was king and we relied on it to get things done. And we did get things done too. Browser wars made the frontend world accelerate at incredible speed. There were many new cool APIs we could use, but they were often browser specific. …]]></summary>
        <author>
            <name>Ilia Mikhailov</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building ToDo in Real-Time]]></title>
        <id>https://dev.to/ivanz123/building-todo-in-real-time-3pbl</id>
        <link href="https://dev.to/ivanz123/building-todo-in-real-time-3pbl"/>
        <updated>2021-09-27T22:48:12.000Z</updated>
        <summary type="html"><![CDATA[I want to start with a question Have you ever wondered how applications such as Messenger, WhatsApp can update new messages without the need to refresh the page? Well, in this article we are developing a ToDo with real-time communication so that you can better understand how it works.
The end of this tutorial you will have the following result.

Have Node.js installed.
Have a code editor installed (in my case VSCode)
Create a project on my desktop with the name we want to assign it.
mkdir todo-realtime
cd todo-realtime
code .
Execute the following commands.
npm init -y
tsc --init
npm init -y: This command generate a file named package.json in the root of the project, this file contains all the necessary settings for your application to work properly. For more information https://docs.npmjs…]]></summary>
        <author>
            <name>Ivan Zadivar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building ToDo in Real-Time]]></title>
        <id>https://dev.to/ivanz123/building-todo-in-real-time-3pbl</id>
        <link href="https://dev.to/ivanz123/building-todo-in-real-time-3pbl"/>
        <updated>2021-09-27T22:48:12.000Z</updated>
        <summary type="html"><![CDATA[I want to start with a question Have you ever wondered how applications such as Messenger, WhatsApp can update new messages without the need to refresh the page? Well, in this article we are developing a ToDo with real-time communication so that you can better understand how it works.
The end of this tutorial you will have the following result.

Have Node.js installed.
Have a code editor installed (in my case VSCode)
Create a project on my desktop with the name we want to assign it.
mkdir todo-realtime
cd todo-realtime
code .
Execute the following commands.
npm init -y
tsc --init
npm init -y: This command generate a file named package.json in the root of the project, this file contains all the necessary settings for your application to work properly. For more information https://docs.npmjs…]]></summary>
        <author>
            <name>Ivan Zadivar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[All Emojis – Emoji List for Copy and Paste]]></title>
        <id>613b2c1a852f4307d372b02f</id>
        <link href="https://www.freecodecamp.org/news/all-emojis-emoji-list-for-copy-and-paste/"/>
        <updated>2021-09-27T21:04:00.000Z</updated>
        <summary type="html"><![CDATA[Emoji help you express feelings and emotions beyond texts. They also bring liveliness into conversations in a fun and concise way.  But sometimes it's hard to find the right emoji to use, so I decided to prepare a giant table of them that you can simply copy and paste into]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Favicon for Next.js and TypeScript]]></title>
        <id>https://dev.to/jcubic/favicon-for-next-js-and-typescript-9gk</id>
        <link href="https://dev.to/jcubic/favicon-for-next-js-and-typescript-9gk"/>
        <updated>2021-09-27T20:36:19.000Z</updated>
        <summary type="html"><![CDATA[I'm still learning Next.js and after having hard time to find out of the box solution to create favicon that will work everywhere, after done this myself, I've decided to create quick article about this.
Favicon is small icon that is usually shown in browser tab text to title of the site. Some Operating System display it differently, like Android or MacOS.
The best way to get favicon that will work on every device is to use generator that will do that for you.
I personally use Real Favicon Generator I trust that It create favicon for every possible use case.
To generate favicon you just upload an image. If you want best possible favicon you can generate one for MacOS and Windows that often need different background (those are 
I personally always create favicon (that is just based on logo)…]]></summary>
        <author>
            <name>Jakub T. Jankiewicz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Open-Closed Principle – The Software Development Concept Explained in Plain English]]></title>
        <id>6148802f9456b407b870f041</id>
        <link href="https://www.freecodecamp.org/news/open-closed-principle/"/>
        <updated>2021-09-27T19:43:06.000Z</updated>
        <summary type="html"><![CDATA[There are many articles about the Open-Closed Principle, but I can never find one that explains it in a way that really works for me.  So here, hopefully, is a good one – with a non trivial and real life example, what changes to support, and a description of the trade]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Tonic (Component Framework)]]></title>
        <id>https://css-tricks.com/?p=352621</id>
        <link href="https://css-tricks.com/tonic-component-framework/"/>
        <updated>2021-09-27T18:52:46.000Z</updated>
        <summary type="html"><![CDATA[I enjoy little frameworks like Tonic. It’s essentially syntactic sugar over <web-components /> to make them feel easier to use. Define a Class, template literal an HTML template, probably some other fancy helpers, and you’ve got a component …
The post Tonic (Component Framework) appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Complete Automation Integrating Docker, Github with Jenkins Multibranch CI/CD Pipeline on AWS EC2]]></title>
        <id>https://dev.to/amsal/complete-automation-integrating-docker-github-with-jenkins-multibranch-ci-cd-pipeline-on-aws-ec2-3l0o</id>
        <link href="https://dev.to/amsal/complete-automation-integrating-docker-github-with-jenkins-multibranch-ci-cd-pipeline-on-aws-ec2-3l0o"/>
        <updated>2021-09-27T18:45:35.000Z</updated>
        <summary type="html"><![CDATA[What is CI/CD?



CI stands for Continous Integration
CD stands for Continous Delivery or Continous Deployment
Let me explain through a example: 
When you make a commit and push sources to Git SCM(Source Code Management like Github, GitLab etc), then automatic builds and tests are run with the latest changes, this is knows as Continous Integration
With Continous Delivery, code changes are automatically built, tested, and prepared for a release to production. Continuous delivery expands upon continuous integration by deploying all code changes to a testing environment and put on a manual approval for adding them in production envirment.
Continous Deployment expands upon continuous delivery and pushed to production environment automatically without any approval.

A DevOps pipeline is a set o…]]></summary>
        <author>
            <name>Amsal Khan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Beginner's guide to Docker and Docker CLI commands]]></title>
        <id>https://dev.to/paru429/beginner-s-guide-to-docker-and-docker-cli-commands-1p75</id>
        <link href="https://dev.to/paru429/beginner-s-guide-to-docker-and-docker-cli-commands-1p75"/>
        <updated>2021-09-27T18:21:35.000Z</updated>
        <summary type="html"><![CDATA[What is Docker? - "build once and run anywhere."


Docker is a software development tool and a virtualisation technology that makes it easy to develop, deploy, and manage applications by using containers. Container refers to a lightweight, stand-alone, executable package of a piece of software that contains all the libraries, configuration files, dependencies, and other necessary parts to operate the application.
In other words, applications run in the same way, irrespective of where they are and what machine they are running on because the container provides the environment throughout the software development lifecycle of the application. Since containers are isolated, they provide security, thus allowing multiple containers to run simultaneously on the given host. Also, containers are li…]]></summary>
        <author>
            <name>Parvathi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why You Should Share Your Knowledge as a Developer]]></title>
        <id>61508279ccc97307eb2bca3f</id>
        <link href="https://www.freecodecamp.org/news/why-you-should-share-your-knowledge-as-a-developer/"/>
        <updated>2021-09-27T17:41:26.000Z</updated>
        <summary type="html"><![CDATA[Sharing your knowledge can help you improve your skills and level up your career as a developer. Many developers are already doing it, and if you aren't, this article is for you. In it, I will show you why you should share your coding expertise by looking at five extraordinary]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Reactive Forms in Angular The basics]]></title>
        <id>https://dev.to/mcube25/reactive-forms-in-angular-the-basics-3jol</id>
        <link href="https://dev.to/mcube25/reactive-forms-in-angular-the-basics-3jol"/>
        <updated>2021-09-27T17:35:07.000Z</updated>
        <summary type="html"><![CDATA[Introduction


Angular uses reactive methods to process and manage form. It is easy to use reactive forms to capture user inputs events, validate the inputs and create form models in large angular applications. This enables the tracking of data and changes in the form model in all parts of the application.
Reactive forms provide a model-driven approach to handling form inputs whose values change over time. It uses an explicit and immutable approach to manage the form at a given point in time and it is built around observable streams.
Register the reactive form module in the app module declaration of an angular app. This module declares a reactive form directives needed to use the reactive form
 Generate a new form control instance and save in the component class
Register the form control i…]]></summary>
        <author>
            <name>Muhammad Muhktar Musa</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Checklist to Quickly Evaluate SaaS Security]]></title>
        <id>https://dev.to/zmre/a-checklist-to-quickly-evaluate-saas-security-3hj3</id>
        <link href="https://dev.to/zmre/a-checklist-to-quickly-evaluate-saas-security-3hj3"/>
        <updated>2021-09-27T17:31:08.000Z</updated>
        <summary type="html"><![CDATA[Large companies have security teams that scrutinize every partner and vendor they use. They put the vendor through the wringer with security reviews that usually involve long and tedious spreadsheets. 
The result of those painful security reviews is generally an analysis on the relative level of risk that comes with the solution. Then the business stakeholder can choose to take the advice of security or overrule it (spending political capital in the process) to say that the benefits outweigh the risks.
The review process is painful for everyone and, frankly, despite the intentions of various startups and others, it seems to be getting worse, not better.
And we have another problem: only the biggest companies even get to evaluate the security of their vendors. The rest of us aren't privvy t…]]></summary>
        <author>
            <name>Patrick Walsh</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Application-Layer Encryption Defined]]></title>
        <id>https://dev.to/zmre/application-layer-encryption-defined-4pnk</id>
        <link href="https://dev.to/zmre/application-layer-encryption-defined-4pnk"/>
        <updated>2021-09-27T17:27:03.000Z</updated>
        <summary type="html"><![CDATA[Let's Not Overcomplicate It


Definition: Application-layer Encryption (ALE) is when you encrypt data before sending it to a data store. There are many variations, but at its core, that's it.
There are three main ways in which implementations may differ:
Code vs. Service: In some implementations, the encryption/decryption truly happens inside the application, which calls encrypt() or decrypt() routines. In others, an intermediate service or proxy essentially does that for you.
Client vs. Server: Some systems are strict about only encrypting and decrypting data in the client, which brings zero-trust data systems using end-to-end encryption (E2EE). E2EE is a subset of application-layer encryption. But encryption/decryption may alternately happen on the server. For server-side application-lay…]]></summary>
        <author>
            <name>Patrick Walsh</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is the DOM? Document Object Model Meaning in JavaScript]]></title>
        <id>613f3cd3852f4307d372c7e8</id>
        <link href="https://www.freecodecamp.org/news/what-is-the-dom-document-object-model-meaning-in-javascript/"/>
        <updated>2021-09-27T16:23:19.000Z</updated>
        <summary type="html"><![CDATA[If you have just started learning JavaScript, you might have heard of the DOM. But what is it exactly? In this article, I will explain what the DOM is and provide some JavaScript code examples.  We will take a look at how to select elements from an HTML document, how]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why OpenSSH 8.8 cannot find a host key type if ssh-rsa is provided]]></title>
        <id>https://dev.to/cloudx/why-openssh-8-8-cannot-find-a-host-key-type-if-ssh-rsa-is-provided-49i</id>
        <link href="https://dev.to/cloudx/why-openssh-8-8-cannot-find-a-host-key-type-if-ssh-rsa-is-provided-49i"/>
        <updated>2021-09-27T16:09:52.000Z</updated>
        <summary type="html"><![CDATA[The OpenSSH 8.8 is now in the stable channel of Arch Linux and could reach other distributions any time soon.
In the release 8.7, the OpenSSH team announced that the ssh-rsa signature scheme will be disabled by default in the next version: 8.8.
The ssh-rsa signature scheme uses SHA-1 and it's sensible to chosen-prefix attacks.
This should not be a problem unless you are connecting to a server using the weak ssh-rsa public key algorithm for host authentication.
💡 If you're using the version 8.7 or a previous one, you can test your remote hosts like a GitLab or a cloud server using:
ssh -oHostKeyAlgorithms=-ssh-rsa user@host

If the connection fails, that means that the signature algorithm is not compatible with the default configuration of OpenSSH 8.8.
If you can't upgrade the signature algorithm on your remote servers but you still need to use them, you can use the following command:
ssh -oHostKeyAlgorithms=+ssh-rsa user@host

Right now, Bitbucket uses this weak signature algorithm, I guess you need to use your Git repositories hosted there. 🥺 You can check your connection with the following command:
ssh -oHostKeyAlgorithms=+ssh-rsa git@bitbucket.org

How can we enable this flag for all the Git commands? An easy solution is coming... You can create an SSH configuration file with the following content:
Host bitbucket.org
     HostKeyAlgorithms +ssh-rsa
     IdentitiesOnly yes

The default location of this file is under ~/.ssh/config, maybe you already have one. Once you add this configuration value you can use any git command without restrictions.
I hope this will help you to still SSHing the world 🗺️]]></summary>
        <author>
            <name>Axel Navarro</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Top 5 command line tools you should try]]></title>
        <id>https://dev.to/nspired/top-5-command-line-tools-you-should-try-1c95</id>
        <link href="https://dev.to/nspired/top-5-command-line-tools-you-should-try-1c95"/>
        <updated>2021-09-27T16:08:07.000Z</updated>
        <summary type="html"><![CDATA[ripgrep


You've probably used grep before. ripgrep is like grep, just better. Faster, with nicer defaults, and more powerful! https://github.com/BurntSushi/ripgrep
fzf


I probably use fzf more than any other tool in this list. If you have a hard time remembering where you put this very important module in your codebase, just type fzf and it'll bring up a list of files that you can easily sift through https://github.com/junegunn/fzf
jq


If you're working with JSON, you need to try jq. It allows you to parse, filter and transform any JSON file with an a simple query language. https://github.com/stedolan/jq
less +F


You might have used less before. But did you know you could use it like tail --follow? less +F logfile will stream any new lines added to your log file! You can also filter the stream with & or pause it with Ctrl+C
entr


If you're tired of having to run your test suite manually any time you update a file, try this: git ls-files | entr -c <command to run your tests>. It will run your command every time you update a file in your project.
https://github.com/eradman/entr
Thanks for reading this far! Do you have any other cool command line tools that you think should have made this list?
For more tech content like this, follow us @nspiredTech
Visit https://nspired.tech]]></summary>
        <author>
            <name>Byte Sized</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Collecting Email Signups With the Notion API]]></title>
        <id>https://css-tricks.com/?p=352211</id>
        <link href="https://css-tricks.com/collecting-email-signups-with-the-notion-api/"/>
        <updated>2021-09-27T15:26:01.000Z</updated>
        <summary type="html"><![CDATA[A lot of people these days are setting up their own newsletters. You’ve got the current big names like Substack and MailChimp, companies like Twitter are getting into it with Revue, and even Facebook is getting into the …
The post Collecting Email Signups With the Notion API appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Ravgeet Dhillon</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to use Angular content projection to prepare a burger]]></title>
        <id>https://dev.to/danywalls/use-angular-content-projection-for-prepare-a-burger-46pj</id>
        <link href="https://dev.to/danywalls/use-angular-content-projection-for-prepare-a-burger-46pj"/>
        <updated>2021-09-27T15:13:40.000Z</updated>
        <summary type="html"><![CDATA[One of the easiest things is eating a burger, the burger has the same base but changes its content, so let's build our burger component.
Today’s we explain how to use ng content to provide an area flexible and multiple slot.
Use ng content for content projection.
Use multiple slot for content projection.
If you want to play with the https://burger-angular-content-projection-demo.stackblitz.io
We have a list of ingredients components to be use to prepare our burger component.
<top-bun></top-bun>
<cheese></cheese>
<bottom-bun></bottom-bun>
<tomato></tomato>
<onion></onion>
<meat></meat>

The main idea is create a burger component and put our ingredients inside of him, like a normal burger using two great angular feature content projection.
Angular allows us to make our component reusable usi…]]></summary>
        <author>
            <name>Dany Paredes</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Docker DNS: The Odyssey]]></title>
        <id>https://dev.to/joojscript/docker-dns-the-odyssey-39dc</id>
        <link href="https://dev.to/joojscript/docker-dns-the-odyssey-39dc"/>
        <updated>2021-09-27T14:51:00.000Z</updated>
        <summary type="html"><![CDATA[Well, well, well...How could I imagine that configuring a VPN would not be so easy? Hahahaha, ok, I'll explain.
Recently I changed my workstation, I used to code on a Macbook Air before, but now I moved to a desktop, and because of it, I needed to configure my VPN all again, no big deal.
I'm currently using Deepin as my distro, and I did not have much problems until today.
If you have skipped the last part, just to let you know, I need to configure a VPN.
"Ok, but what does this have with docker?" - you may ask.
Well, the VPN setup came up alright, I use OpenVPN and it works just fine.
But the problem came when I tried to access a private address, visible only to the ones with VPN access, and I could not, even though I was connected, but why?
Digging in, I realized that the IP of this spec…]]></summary>
        <author>
            <name>João Augusto Perin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Reduce AWS EC2 Development Instances Cost by 60%]]></title>
        <id>https://dev.to/nilanth/reduce-aws-ec2-development-instances-cost-by-60-2li8</id>
        <link href="https://dev.to/nilanth/reduce-aws-ec2-development-instances-cost-by-60-2li8"/>
        <updated>2021-09-27T14:38:46.000Z</updated>
        <summary type="html"><![CDATA[Steps to reduce EC2 development instances cost using scheduled scaling.
We are all aware that Amazon Web Services is one of the most popular and used Cloud platforms. Most of us use AWS for hosting. When building apps, we might have different environments for development, staging, UAT, and production.
So if our app uses a web machine and a worker, then we have these same machines in all environments. For example, if we use a development and production environment, we will have 4 instances. But when compared to production instances, Our development environment will have low-end instances. But the low-end instance also adds cost to our billing.
We can reduce the development instance cost up to 60%. We can save this cost and use it in any other way. We will see how to cut down the cost.
The d…]]></summary>
        <author>
            <name>Nilanth</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[TypeScript Features Every Angular Developer Needs to Know]]></title>
        <id>https://dev.to/bitovi/typescript-features-every-angular-developer-needs-to-know-4b82</id>
        <link href="https://dev.to/bitovi/typescript-features-every-angular-developer-needs-to-know-4b82"/>
        <updated>2021-09-27T14:33:57.000Z</updated>
        <summary type="html"><![CDATA[If you’re an Angular developer, you’re missing out if you’re not using advanced TypeScript features to help you build better code.
And it’s well worth the effort: TypeScript has some great features that can make you a stronger Angular developer. 💪
BigInt lets you represent numbers bigger than 253. This is useful when you need to perform mathematical operations on very large integers. And you can work directly with large integer IDs and high resolution timestamps.
You can create a bigint primitive in two ways:
const n0 = 1n;
const n1 = new BigInt(1);

There is no interoperability between bigint and number primitives, but they can be compared.
NOTE: BigInt support is only available for the esnext target.
Numeric separators are great for readability. They don't change how the actual numeric …]]></summary>
        <author>
            <name>Fábio Englert Moutinho</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[與 SSH 同行]]></title>
        <id>https://dev.to/ben66yueh/ssh-3o6o</id>
        <link href="https://dev.to/ben66yueh/ssh-3o6o"/>
        <updated>2021-09-27T14:24:40.000Z</updated>
        <summary type="html"><![CDATA[學習緣由
在開始做 Side Project 的時候，因為我使用 create-next-app 時，
沒有用成 typescript 版，我的 mentor 幫我處理的時候，
發現現在好像需要用 ssh 才能 push 到 github 上，
然後中間過程半聽半懂的 XD，想說趁機來了解一下～

 


  
  
  SSH 是什麼？


一個協定(protocol)，為 Secure Shell 的縮寫，
因為在網路上傳輸時，資料都以明文(plain text) 的方式遊走，很容易被竊聽(overhearing)或篡改(tampering)
在還未有 SSL 的古早年代，就常常有人利用嗅探攻擊(sniffing attack)來截取使用者密碼和資料並篡改，後續在 1995 年，塔圖·于勒寧(Tatu Ylonen)就開發了 ssh 協定，讓電腦資料傳輸可以更安全的進行
 


  
  
  SSH 資料傳輸方式


在此協定下，資料傳輸的方式可以用把包裹寄給朋友來說明

今天我想寄一個很機密包裹給朋友，要確保不能被別人拿走


我先加一個鎖在自己的包裹上，再傳給朋友


傳給朋友後，他看到我的鎖後，也加了自己的鎖


我看到朋友的鎖後，將自己的鎖解除，再回傳給朋友


朋友將鎖解除後，成功拿到包裹



 
這樣一來，我們可以增加傳送過程中的安全性，
但在這之前，我們需要將兩台電腦達成 SSH 連結，
 


  
  
  如何建立 SSH 連結呢？


SSH 連結採用 Client-Server 模型
 


 



在本機利用 RSA 的加密方式，產生一組公鑰(Public Key)和私鑰(Private Key)，為一對 SSH keys


將公鑰放在 Server 上


Client 利用終端機等產生一組 ID，範例格式如下：
ssh username@my_ip_address


Server 會用公鑰加密(encrypt)，產生一組隨機的挑戰訊息 (random challenge message)回傳給 Client


Client 會用私鑰將挑戰訊息解密(decrypt)後，回傳給 Server


如果解密後的挑戰訊息回傳 Server 後相符，則 SSH 連結就成立了



 
以上就是 SSH 的介紹，如果有其他想法也請大家不吝指教～
 
 
GitKraken
jumpcloud
School Of Basics
Level Up
Larry Lu Medium]]></summary>
        <author>
            <name>YuehBen66</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular Development mocking External Calls]]></title>
        <id>https://dev.to/rfornal/angular-development-mocking-external-calls-504j</id>
        <link href="https://dev.to/rfornal/angular-development-mocking-external-calls-504j"/>
        <updated>2021-09-27T14:14:39.000Z</updated>
        <summary type="html"><![CDATA[On a previous client project, I saw a use of local JSON for quick development that was horrible in that particular definition. I've refined the definition into something I can use more efficiently.
First, in the tsconfig.json file at the root of the project, I clean up the imports and allow JSON files to be resolved on import, as shown ...
{
  "compilerOptions": {
    ...
    "allowSyntheticDefaultImports": true,
    "resolveJsonModule": true
   ...
  }
} 

In the assets folder, I define the mock-data in the following path ...
assets/mock-data/api/

For this article, assume there is a users.json file in the api folder.
Within the project, I create a config.json file that can be imported.
{
  "features": {
    ...
    "useLocalJSON": false,
    ...
  }
} 

This file is imported as such.
imp…]]></summary>
        <author>
            <name>bob.js</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[FULL CALENDER]]></title>
        <id>https://dev.to/pratikdungarani/full-calender-237k</id>
        <link href="https://dev.to/pratikdungarani/full-calender-237k"/>
        <updated>2021-09-27T13:12:35.000Z</updated>
        <summary type="html"><![CDATA[=> HOW To Design Parent title and sub-title Design in Full calendar]]></summary>
        <author>
            <name>pratikdungarani</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Understanding Dev, Peer, and Regular Dependencies]]></title>
        <id>https://dev.to/thawkin3/understanding-dev-peer-and-regular-dependencies-gmi</id>
        <link href="https://dev.to/thawkin3/understanding-dev-peer-and-regular-dependencies-gmi"/>
        <updated>2021-09-27T12:38:56.000Z</updated>
        <summary type="html"><![CDATA[When building a modern JavaScript app, you will likely rely on many other packages and third-party dependencies. For example, you might use react and react-dom for your UI, lodash for utility helper methods, webpack or rollup as your bundler, and jest with @testing-library/react for unit tests.
All of these packages are stored as dependencies in your package.json file. Understanding whether to include them as dependencies, devDependencies, or peerDependencies can sometimes be a struggle for newer developers.
In this article we'll look at the three types of dependencies found in the package.json file and what each does.
dependencies are packages used in your app's production bundle. If you're building a React app, then react and react-dom would be dependencies. If you're using react-router …]]></summary>
        <author>
            <name>Tyler Hawkins</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Créer un backend en Javascript : Introduction à Node.js]]></title>
        <id>https://dev.to/ericlecodeur/creer-un-backend-en-javascript-introduction-a-node-js-3014</id>
        <link href="https://dev.to/ericlecodeur/creer-un-backend-en-javascript-introduction-a-node-js-3014"/>
        <updated>2021-09-27T12:11:33.000Z</updated>
        <summary type="html"><![CDATA[Voici une série d'articles qui vous permettra créer des applications backend en Javascript.
Node.js est aujourd'hui un incontournable, il est donc essentiel pour un développeur de le maitriser.
Je vais donc publier un nouvel article environ au deux jours et petit à petit vous apprendrez tout ce qu'il y a à savoir sur Node.js
Pour ne rien manquer suivez moi sur twitter : https://twitter.com/EricLeCodeur
NodeJS permet d’exécuter du code Javascript en dehors d’un navigateur.
Node.js est un environnement serveur, open source, gratuit, et qui utilise le language Javascript pour créer des applications Web côté serveur. (backend)
Node.js fonctionne sur différentes plateformes (Windows, Linux, Unix, Mac OS X, etc.) Avec Node.js, nous pouvons créer une application Web rapide et hautement évolutive.…]]></summary>
        <author>
            <name>Eric Le Codeur</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Let’s Dive Into Cypress For End-to-End Testing]]></title>
        <id>https://smashingmagazine.com/2021/09/cypress-end-to-end-testing/</id>
        <link href="https://smashingmagazine.com/2021/09/cypress-end-to-end-testing/"/>
        <updated>2021-09-27T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[Is end-to-end testing a painful topic for you? In this article, Ramona Schwering explains how to handle end-to-end testing with Cypress and make it make it not so tedious and expensive for yourself, but fun instead.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Ramona Schwering)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cypress Basic Learning]]></title>
        <id>https://dev.to/twitvital/about-cypress-26on</id>
        <link href="https://dev.to/twitvital/about-cypress-26on"/>
        <updated>2021-09-27T11:17:38.000Z</updated>
        <summary type="html"><![CDATA[What is Cypress
Cypress Features
Pros & Cons
Tech Stack
Installation of Cypress
https://nodejs.org/en/download/ as per your operating 
https://docs.cypress.io/guides/getting-started/installing-cypress#npm-install
Understanding folder structure
Thanks,
Linkedin]]></summary>
        <author>
            <name>Vital</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[BangaJS - Nodejs Framework for Bootstraping Your Project]]></title>
        <id>https://dev.to/ebereplenty/bangajs-nodejs-framework-for-bootstraping-your-project-4ee3</id>
        <link href="https://dev.to/ebereplenty/bangajs-nodejs-framework-for-bootstraping-your-project-4ee3"/>
        <updated>2021-09-27T10:35:54.000Z</updated>
        <summary type="html"><![CDATA[Introduction


Nodejs is now one of the most popular tool for backend purpose. This is so especially because of how easy it is to understand the language. It is built on JavaScript.
However, it doesn't have so much frameworks out there that gives you all the basics (boring) stuff off the box. Basics includes things like setting up server, folder structure, authentication, mailers and so on.
Just incase you are new to Nodejs, I have a few courses you might want to checkout:
Setting Up a Simple, Secure and Robust Node JS Server
CRUD APP with Nodejs, Cloudinary, PostgreSQL and Heroku
Docker - An introduction with Nodejs
Full-Stack Authentication and Hosting (Nodejs, Reactjs, Heroku, Netlify)
These basics can be so tiring and consumes a lot of time. Where is the fun in doing same thing over an…]]></summary>
        <author>
            <name>NJOKU SAMSON EBERE</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Better Types using Discriminated Unions in TypeScript]]></title>
        <id>https://dev.to/this-is-learning/better-types-using-discriminated-unions-in-typescript-4i3g</id>
        <link href="https://dev.to/this-is-learning/better-types-using-discriminated-unions-in-typescript-4i3g"/>
        <updated>2021-09-27T08:03:07.000Z</updated>
        <summary type="html"><![CDATA[How we define our types in Typescript impacts how effective typescript is at warning us when we make mistakes. If we take a broad approach i.e. to cover many types in a single type, we end up handicapping typescript and it becomes less effective. 
The more specific we are, the more effective typescript can be at catching possible errors. In this article, we are going to look at how we can use discriminative unions to write better and more specific types and help typescript to be more helpful to us.
Let's take the simplest example I can think of - Shapes. In shapes, we can have Circles, Rectangles, Squares, etc; you get the idea. There is no way you can have a single type alias that can cover all shapes without compromising on something.
If we were to define a Shape type alias for just the …]]></summary>
        <author>
            <name>Maina Wycliffe</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Would you use NodeJS in your next project?]]></title>
        <id>https://dev.to/davidcam/would-you-use-nodejs-in-your-next-project-2kf0</id>
        <link href="https://dev.to/davidcam/would-you-use-nodejs-in-your-next-project-2kf0"/>
        <updated>2021-09-27T07:59:47.000Z</updated>
        <summary type="html"><![CDATA[A post by David Camarena]]></summary>
        <author>
            <name>David Camarena</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Starting in Ethical Hacking]]></title>
        <id>https://dev.to/paosa20/starting-in-ethical-hacking-egk</id>
        <link href="https://dev.to/paosa20/starting-in-ethical-hacking-egk"/>
        <updated>2021-09-27T06:42:57.000Z</updated>
        <summary type="html"><![CDATA[When starting in the world of cybersecurity/hacking, we always want to run and hack anything but it's important to know the basics. 
The reason why you lock your house when you go out so no bad guy comes inside and steal your belongings is similar to why companies are so serious about information security, Spoiler alert: no one wants their personal belongings get stolen.
Information security means securing or protecting sensitive and important information as well as the systems that store this information from any unauthorized handling.
Information security consists of various important elements, we will first start with the CIA triad and later with the rest of elements. 
The CIA triad consists of three important elements:



1. Confidentiality(C)
2. Integrity(I)
3. Availability(A)


Now, what do they mean?
Confidentiality: Only those with authorized access will be able to access the information. Example: Encryption

Integrity: The assurance that the information/data haven't suffered any unauthorized modification. Example: Hashing

Availability: Data always been accessible for authorized users when required. Example: Backups, clustered machines

Non-repudiation: Senders of a message can't deny having sent a message and the receivers can't deny having received it. Example: Digital Signatures

Authenticity: Guarantee of something being genuine. Example: Digital certificates,bio-metrics



  
  
  Why Information Security attacks happen?



Attacks occur for a variety of reasons like attackers wanting to steal sensitive information, data disclosure, ransomware and many others. 
It's important to understand the threats that a system may face to implement required preventive measures. 
You can start learning and understanding the different hacking phases:
1. Reconnaissance(Footprinting)
2. Scanning
3. Gaining access
4. Maintaining access
5. Clearing logs

Thanks for reading my first post! it may not be much but you start with something.]]></summary>
        <author>
            <name>Paola Sánchez</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[📊 Calculating DORA Metrics - Deployment Frequency]]></title>
        <id>https://dev.to/lornasw93/calculating-dora-metrics-deployment-frequency-38ib</id>
        <link href="https://dev.to/lornasw93/calculating-dora-metrics-deployment-frequency-38ib"/>
        <updated>2021-09-27T00:23:25.000Z</updated>
        <summary type="html"><![CDATA[The easiest metric to calculate - get a list of project deployments by environment and then group by date format(s) i.e. by day, by month and by year; and finally to calculate the throughput % score which is essentially:
throughput % = (count of deployments by environment * count of all deployments) * 100
I've parsed the data into a specific format for my charts in the frontend. Check out my repo here.
Result:
{
    "score": 4.16,
    "result": [
        {
            "title": "By Day", 
            "content": [
                {
                    "name": "29 Aug 21",
                    "value": 2
                },
                {
                    "name": "10 Sep 21",
                    "value": 2
                }
            ],
            "average": 2
        },
        {
            "title": "By Month", 
            "content": [
                {
                    "name": "Aug 21",
                    "value": 2
                },
                {
                    "name": "Sep 21",
                    "value": 2
                }
            ],
            "average": 2
        },
        {
            "title": "By Year", 
            "content": [
                {
                    "name": "21",
                    "value": 4
                }
            ],
            "average": null
        }
    ]
}

Thanks for reading!]]></summary>
        <author>
            <name>Lorna Watson</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.11.2]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.11.2</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.11.2"/>
        <updated>2021-09-26T18:45:39.000Z</updated>
        <summary type="html"><![CDATA[Fixed: unicode characters in URL caused download error
Fixed: project root npm install error
Added: unit test library
Chore: Dependency updates
Thank you: @CaptNo1]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using Cron keep your eyes in check]]></title>
        <id>https://dev.to/has12zen/using-cron-keep-your-eyes-in-check-k83</id>
        <link href="https://dev.to/has12zen/using-cron-keep-your-eyes-in-check-k83"/>
        <updated>2021-09-26T16:42:57.000Z</updated>
        <summary type="html"><![CDATA[basic syntax for cron


a typical cron job looks like this
# m h  dom mon dow   command
  * *   *   *   *   /usr/bin/sh ls

stand for wildcard
this is not a cron tutorial this is just how i use it. 
the bash script looks like
#!/bin/sh
export DISPLAY=:0
notify-send "EYES CHECK" "Look away for 15 seconds"

without line no 2 it wont work as it sets the display for notify-send. I am using notify-send as my notification daemon. 
make sure that your display is :0 
echo $DISPLAY

first you will need to make sure cron is running you can do this  by:
systemctl status cronie

p.s. this is specific to arch based system.
once cron is running you can create/edit cron job with crontab -e
then paste the code present below into the window.
*/15 * * * * /usr/bin/sh  /home/elnovo/.noti/eyes.sh

it runs every 15 min and eyes.sh is the bash script we discussed above. save it. 
crontab -l
notify-send doesn't work from crontab]]></summary>
        <author>
            <name>has12zen</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to ensure the highest quality of Software code]]></title>
        <id>https://dev.to/someshthakur/how-to-ensures-highest-quality-of-software-4917</id>
        <link href="https://dev.to/someshthakur/how-to-ensures-highest-quality-of-software-4917"/>
        <updated>2021-09-26T09:20:36.000Z</updated>
        <summary type="html"><![CDATA[TL;DR: By following best industry practices like linting, unit testing, static code analysis and continuous monitoring of the software.
The software development process has changed a lot in last few years. Many of the modern tools & frameworks has built-in support to ensure that the code is clean, maintainable and readable. But any developer can make mistakes while coding a feature on mind and that's totally fine. We all have gone through that stage & we learnt through making mistakes.
In this article I am going to share some of the basic to advanced levels of checks which I learnt through working on Enterprise software applications. These are some of the best practices that you can follow or explore.
One of the basic setup that gives many advantages in long run is code linting. It leaves …]]></summary>
        <author>
            <name>Somesh Thakur</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux, Should you use it? Can you use it?]]></title>
        <id>https://dev.to/dilutewater/linux-should-you-use-it-can-you-use-it-4aeo</id>
        <link href="https://dev.to/dilutewater/linux-should-you-use-it-can-you-use-it-4aeo"/>
        <updated>2021-09-26T08:30:43.000Z</updated>
        <summary type="html"><![CDATA[Some context:


I'm just a student and I have been using windows from my childhood, but I switched  to linux about a month ago. I install ubuntu on my main PC as windows was lagging a lot. My PC is a very low end PC so I taught to give linux a try. I then installed kde plasma environment on my ubuntu. And I am so happy with it that I would never switch to windows again.
Linux has a lot of awesome features. Lemme list few of the notable ones. 
Completely Free :


Customisation :


Flexibility :


Runs better on low end hardware :



and many other features...
If you are a developer, there is a high chance you are already using linux, but if you are not, then you can give it a try. 
I haven't tried many distros but according to me , you can try Ubuntu for basic users. Or you can try Kubuntu, it has KDE environment & has a lot of customisation features while is still very user friendly. 
After all linux is used everywhere from the high end servers to your android smartphones, so why not give it a try on your desktop computer as well. 
TL;DR - Give Linux a try, especially KDE plasma environment (Kubuntu)]]></summary>
        <author>
            <name>Rachit Khurana</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What's the most beginner-friendly Linux distro?]]></title>
        <id>https://dev.to/madza/what-s-the-most-beginner-friendly-linux-distro-2bb5</id>
        <link href="https://dev.to/madza/what-s-the-most-beginner-friendly-linux-distro-2bb5"/>
        <updated>2021-09-26T06:50:08.000Z</updated>
        <summary type="html"><![CDATA[There are hundreds of Linux distributions out there each varying in their purpose of use and the level of expertise the user needs. 
There are tools like DitroWatch to help users narrow down their options, but, still, choosing the right one could be quite a challenge. 
What are some of the Linux distros you would recommend to users switching from other OS with no prior knowledge?]]></summary>
        <author>
            <name>Madza</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Setting Up a DSLR Camera Webcam on Linux]]></title>
        <id>https://dev.to/austingil/setting-up-a-dslr-camera-webcam-on-linux-2dbc</id>
        <link href="https://dev.to/austingil/setting-up-a-dslr-camera-webcam-on-linux-2dbc"/>
        <updated>2021-09-26T03:50:11.000Z</updated>
        <summary type="html"><![CDATA[I finally set up my DSLR camera as a webcam, and it’s pretty cool. I wanted to share this post because I couldn’t find good, complete resources about it and I thought it might be useful for folks out there (and because future me will probably want it). Here’s everything I learned.
Here’s what I’m working with. Your setup may be different:
Camera: Canon EOS 60D
Operating System: Ubuntu 20.10
Before we get started, this may be a non-issue for a lot of folks as it’s common for camera manufacturers to create software for this. Canon, for example, make their EOS Webcam Utility that makes it easy for Windows or OSX users. But I use Linux (cue sad trombone).
If you’re like me and a handy webcam utility is not an option, let’s continue.
Firstly, make sure your camera is supported by checking this …]]></summary>
        <author>
            <name>Austin Gil</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Install Interface Loopback (TAP) on Ubuntu]]></title>
        <id>https://dev.to/danielcristho/how-to-install-interface-loopback-tap-on-ubuntu-57dh</id>
        <link href="https://dev.to/danielcristho/how-to-install-interface-loopback-tap-on-ubuntu-57dh"/>
        <updated>2021-09-25T02:59:01.000Z</updated>
        <summary type="html"><![CDATA[The loopback interface is a virtual interface on Linux, which allows us to connect to the GNS3 network simulator.
In the following I will explain how to install and configure the TAP Interface on the Linux operating system.
First you should install uml-utilities by typing the command sudo apt install uml-utilities.
Next step create a virtual interface by typing the command sudo tunctl -t tap10, then assign an IP Address to the interface by typing the command sudo ifconfig tap10 192.168.0.1 netmask 255.255.255.0 up.
The last check whether the IP address has been successfully added using the ifconfig tap10 command.]]></summary>
        <author>
            <name>danielpepuho</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Systems for z-index]]></title>
        <id>https://css-tricks.com/?p=352287</id>
        <link href="https://css-tricks.com/systems-for-z-index/"/>
        <updated>2021-09-24T21:19:49.000Z</updated>
        <summary type="html"><![CDATA[Say you have a z-index bug. Something is being covered up by something else. In my experience, a typical solution is to put position: relative on the thing so z-index works in the first place, and maybe rejigger the z-index…
The post Systems for z-index appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Self Provisioning Runtime]]></title>
        <id>https://css-tricks.com/?p=352533</id>
        <link href="https://www.swyx.io/self-provisioning-runtime/"/>
        <updated>2021-09-24T18:56:43.000Z</updated>
        <summary type="html"><![CDATA[Big thoughts on where the industry is headed from Shawn Wang:
Advancements in two fields — programming languages and cloud infrastructure — will converge in a single paradigm: where all resources required by a program will be automatically provisioned, and 
…
The post The Self Provisioning Runtime appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Switching to Pipewire-Opensuse[GUIDE]]]></title>
        <id>https://dev.to/drunckj/switching-to-pipewire-opensuse-guide-1cop</id>
        <link href="https://dev.to/drunckj/switching-to-pipewire-opensuse-guide-1cop"/>
        <updated>2021-09-24T15:22:59.000Z</updated>
        <summary type="html"><![CDATA[I recently switched to pipewire on my Opensuse build and I'm loving it so far. I switched over to pipewire because it fixes a lot of pulseaudio issues which I've faced in the past. Pipewire is really new and still in the works and its more upto date for recent hardwares and bluetooth peripherals.
I've made a script which has does other stuff but has an option for switching to pipewire without much hassle. Clone it and run it and enter the correct option.
git clone https://github.com/drunckj/Asus-ESS
cd Asus-ESS/
./setupscript.sh

First we need to install all the necessary files
sudo zypper install pipewire pipewire-pulseaudio pipewire-alsa

It will show and errors about conflicts you should select option 1 to fix the issue which reads de-installation.
systemctl --user enable --now pipewire.{service,socket}
systemctl --user enable --now pipewire-pulse.{service,socket}

After running the above commands, you should reboot.
pactl info

Look for server name in output. If it shows 
Server Name: PulseAudio (on PipeWire)
Sometimes pipewire doesn't generate config files so we have to move them to the right location. This can cause the bluetooth to not work too. Follow the below steps for fixing it.
If your having errors check if the below directory exists
/etc/pipewire
~/.config/pipewire

If they don't exist, do the following and reboot and check again by running pactl info again.
sudo cp -r /usr/share/pipewire /etc/

The above command will move the config files to their default locations.]]></summary>
        <author>
            <name>Swastik Dwivedi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Comparing Methods for Appending and Inserting With JavaScript]]></title>
        <id>https://css-tricks.com/?p=352342</id>
        <link href="https://css-tricks.com/comparing-methods-for-appending-and-inserting-with-javascript/"/>
        <updated>2021-09-24T14:34:59.000Z</updated>
        <summary type="html"><![CDATA[Let’s say we want to add something to a webpage after the initial load. JavaScript gives us a variety of tools. Perhaps you’ve used some of them, like append, appendChild, insertAdjacentHTML, or innerHTML.
The difficult thing …
The post Comparing Methods for Appending and Inserting With JavaScript appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Eric Markfield</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Our Learning Partner: Frontend Masters]]></title>
        <id>https://css-tricks.com/?p=351975</id>
        <link href="https://css-tricks.com/our-learning-partner-frontend-masters-2/"/>
        <updated>2021-09-24T14:34:05.000Z</updated>
        <summary type="html"><![CDATA[Frontend Masters has been our learning partner for a couple of years now. I love it. If you need structured learning to up your web development skills, Frontend Masters is the place. It works so well because we don’t offer …
The post Our Learning Partner: Frontend Masters appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Image Creation, Management, and Registry(Part 2)]]></title>
        <id>https://dev.to/dporwal/image-creation-management-and-registry-part-2-514n</id>
        <link href="https://dev.to/dporwal/image-creation-management-and-registry-part-2-514n"/>
        <updated>2021-09-24T12:20:03.000Z</updated>
        <summary type="html"><![CDATA[Tagging Docker Images


Docker tags convey useful information about a specific image version/variant.
They are aliases to the ID of your image which often look like this: 8f5487c8b942
Assigning tag while building image
docker build -t demo:v1 .


Assigning tag if no tag default
Lets build a image without tag.
docker build .


Now lets assign tag to the existing image without tag.
docker tag adc07a47930e demo:v2


tag for existing tag of the image
This will create another image with the same IMAGE ID.
docker tag demo:v2 demo2:v3


Whenever you make changes inside the container, it can be useful to commit a container’s file changes or settings into a new image.
By default, the container being committed and its processes will be paused while the image is committed.
Syntax:
docker container co…]]></summary>
        <author>
            <name>Deepak Porwal</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Rebuilding A Large E-Commerce Website With Next.js (Case Study)]]></title>
        <id>https://smashingmagazine.com/2021/09/lessons-learned-ecommerce-nextjs-case-study/</id>
        <link href="https://smashingmagazine.com/2021/09/lessons-learned-ecommerce-nextjs-case-study/"/>
        <updated>2021-09-24T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[We made the switch from a more traditional integrated e-commerce platform to a headless platform with Next.js. Here are the most important lessons learned while rebuilding a large e-commerce site with Next.js.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Jonne Kats)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Free Online Workshop: Frustrating Design Patterns And How To Fix Them]]></title>
        <id>https://smashingmagazine.com/2021/09/smashing-workshop-frustrating-design-patterns/</id>
        <link href="https://smashingmagazine.com/2021/09/smashing-workshop-frustrating-design-patterns/"/>
        <updated>2021-09-24T06:50:00.000Z</updated>
        <summary type="html"><![CDATA[You’ve seen them before. Confusing and frustrating design patterns that seem to be chasing you everywhere you go, from one website to another. It’s time to fix them for good in a [free Smashing online workshop](https://smashingconf.com/online-workshops/workshops/vitaly-friedman-frustrating-patterns/) next week.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Vitaly Friedman)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is Your Page Title on a Google Search Engine Results Page?]]></title>
        <id>https://css-tricks.com/?p=352279</id>
        <link href="https://css-tricks.com/what-is-your-page-title-on-a-google-search-engine-results-page/"/>
        <updated>2021-09-23T18:11:15.000Z</updated>
        <summary type="html"><![CDATA[Whatever Google wants it to be. I always thought it was exactly what your <title> element was. Perhaps in lieu of that, what the first <h1> on the page is. But recently I noticed some pages on this site that …
The post What is Your Page Title on a Google Search Engine Results Page? appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Working With GraphQL Caching]]></title>
        <id>https://css-tricks.com/?p=352381</id>
        <link href="https://css-tricks.com/working-with-graphql-caching/"/>
        <updated>2021-09-23T14:32:01.000Z</updated>
        <summary type="html"><![CDATA[If you’ve recently started working with GraphQL, or reviewed its pros and cons, you’ve no doubt heard things like “GraphQL doesn’t support caching” or “GraphQL doesn’t care about caching.” And for most, that is a big deal.
The official …
The post Working With GraphQL Caching appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Jamie Barton</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learn How to Build True Edge Apps With Cloudflare Workers and Fauna]]></title>
        <id>https://css-tricks.com/?p=352487</id>
        <link href="https://css-tricks.com/learn-how-to-build-true-edge-apps-with-cloudflare-workers-and-fauna/"/>
        <updated>2021-09-23T14:31:12.000Z</updated>
        <summary type="html"><![CDATA[(This is a sponsored post.)
There is a lot of buzz around apps running on the edge instead of on a centralized server in web development. Running your app on the edge allows your code to be closer to …
The post Learn How to Build True Edge Apps With Cloudflare Workers and Fauna appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Jacob Jackson</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Simplifying Form Styles With `accent-color`]]></title>
        <id>https://smashingmagazine.com/2021/09/simplifying-form-styles-accent-color/</id>
        <link href="https://smashingmagazine.com/2021/09/simplifying-form-styles-accent-color/"/>
        <updated>2021-09-23T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[The new CSS `accent-color` property makes it quick and easy to roll out our brand colors to certain form inputs by leveraging user agent styles. In this article we’ll take a look at what it does and how to use it alongside `color-scheme` for simple, accessible checkboxes and radio buttons — and imagine how we might use it in the future.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Michelle Barker)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Container Units Should Be Pretty Handy]]></title>
        <id>https://css-tricks.com/?p=352210</id>
        <link href="https://css-tricks.com/container-units-should-be-pretty-handy/"/>
        <updated>2021-09-22T23:09:44.000Z</updated>
        <summary type="html"><![CDATA[Container queries are going to solve this long-standing issue in web design where we want to make design choices based on the size of an element (the container) rather than the size of the entire page. So, if a container …
The post Container Units Should Be Pretty Handy appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Twitter’s div Soup and Uglyfied CSS, Explained]]></title>
        <id>https://css-tricks.com/?p=352388</id>
        <link href="https://giuseppegurgone.com/twitter-html/"/>
        <updated>2021-09-22T21:09:12.000Z</updated>
        <summary type="html"><![CDATA[When I came up in web development (2005-2010 were formative years for me), one of the first lessons I learned was to have a clean foundation of HTML. “What Beautiful HTML Code Looks Like” is actually one of the most …
The post Twitter’s div Soup and Uglyfied CSS, Explained appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Getting Your `head` Straight: A New CSS Performance Diagnostics Snippet]]></title>
        <id>https://smashingmagazine.com/2021/09/css-head-tag/</id>
        <link href="https://smashingmagazine.com/2021/09/css-head-tag/"/>
        <updated>2021-09-22T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[We love little useful tools and techniques to help folks get their work done better and faster. Today, we’d love to shine the spotlights on a little helper that helps spot common performance bottlenecks easily: [ct.css](https://csswizardry.com/ct/).]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Vitaly Friedman)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Implement Logging in a Node.js Application With Pino-logger]]></title>
        <id>https://css-tricks.com/?p=352074</id>
        <link href="https://css-tricks.com/how-to-implement-logging-in-a-node-js-application-with-pino-logger/"/>
        <updated>2021-09-22T14:33:10.000Z</updated>
        <summary type="html"><![CDATA[Logging, on its own, is a key aspect of any application. Logging helps developers comprehend what it is that their code is doing. It also helps save developers hours of debugging work. This tutorial is about implementing logging in a …
The post How to Implement Logging in a Node.js Application With Pino-logger appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Sarthak Duggal</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Build Your Own Mouseless Development Environment]]></title>
        <id>https://smashingmagazine.com/2021/09/mouseless-development-environment/</id>
        <link href="https://smashingmagazine.com/2021/09/mouseless-development-environment/"/>
        <updated>2021-09-21T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[Building a development environment with the shell as a keystone offers multiple benefits. You can customize everything depending on your own needs, and the biggest of all, you can control your entire development environment with your keyboard.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Matthieu Cneude)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How Web Development Tools Are Helping Users Keep Pace With Rapid Change]]></title>
        <id>https://smashingmagazine.com/2021/09/web-development-tools-users-keep-pace-rapid-change/</id>
        <link href="https://smashingmagazine.com/2021/09/web-development-tools-users-keep-pace-rapid-change/"/>
        <updated>2021-09-21T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[The last 18 months have been a time of unprecedented turbulence. As the people of the world have flooded online, businesses have joined them, using web development tools to adapt in real-time.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Frederick O’Brien)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Are Imposter Domains Re-Publishing Your Website?]]></title>
        <id>https://smashingmagazine.com/2021/09/imposter-domains-republishing-website/</id>
        <link href="https://smashingmagazine.com/2021/09/imposter-domains-republishing-website/"/>
        <updated>2021-09-20T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[Content scraping is a fact of life on the Internet. When you think of web scraping, you probably do not think about the scrapers turning around and immediately serving your entire, whole page content on another website. But what if your site content is being re-published?  It might be already happening.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Ken Harker)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Monetize Open-Source Software With Gatsby Functions And Stripe]]></title>
        <id>https://smashingmagazine.com/2021/09/monetize-open-source-software-gatsby-functions-stripe/</id>
        <link href="https://smashingmagazine.com/2021/09/monetize-open-source-software-gatsby-functions-stripe/"/>
        <updated>2021-09-17T09:00:00.000Z</updated>
        <summary type="html"><![CDATA[Gatsby Functions provide front-end developers a way to write and use server-side code without the hassle of maintaining a server. If making money from open-source is of interest to you and your site isn’t built using Gatsby, this approach may well be the answer you were looking for.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Paul Scanlon)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Web Quality Assurance: From User Requirements To Web Risk Management]]></title>
        <id>https://smashingmagazine.com/2021/09/journey-into-web-quality-assurance/</id>
        <link href="https://smashingmagazine.com/2021/09/journey-into-web-quality-assurance/"/>
        <updated>2021-09-16T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[Twenty years ago, Elie Sloïm chose to dedicate his professional life to web quality assurance. He started asking, ”What does quality mean for a web user?” Well, this article explains everything he has learned along the way.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Elie Sloïm)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Reasons To Build A CRM-Powered Website For Your Business]]></title>
        <id>https://smashingmagazine.com/2021/09/reasons-build-crm-powered-website-business/</id>
        <link href="https://smashingmagazine.com/2021/09/reasons-build-crm-powered-website-business/"/>
        <updated>2021-09-16T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[Integrating a CRM with your business website has numerous benefits. In this article, Zara Cooper explains what these benefits are and why websites should be integrated with a CRM platform.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Zara Cooper)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.11.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.11.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.11.1"/>
        <updated>2021-09-16T06:39:32.000Z</updated>
        <summary type="html"><![CDATA[Fixed: Unexpected nested element in author field crashes the parser
Thank you @ad-m]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Reducing The Need For Pseudo-Elements]]></title>
        <id>https://smashingmagazine.com/2021/09/reducing-need-pseudo-elements/</id>
        <link href="https://smashingmagazine.com/2021/09/reducing-need-pseudo-elements/"/>
        <updated>2021-09-15T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[For years, pseudo-elements have faithfully helped front-end developers implement creative designs. While they still have an important place, we can now leave pseudo-elements behind in some scenarios, thanks to newer CSS properties.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Marcel Moreau)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Power Of Pen And Paper Sketching]]></title>
        <id>https://smashingmagazine.com/2021/09/power-pen-paper-sketching/</id>
        <link href="https://smashingmagazine.com/2021/09/power-pen-paper-sketching/"/>
        <updated>2021-09-14T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[When designing for digital spaces, it’s natural to default to digital mockup tools, but doing so cuts out a world of possibilities. Analog drawing can unleash your imagination and allow you to focus on what’s most important at the start: the ideas.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Tracy Osborn)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Orchestrating Complexity With Web Animations API]]></title>
        <id>https://smashingmagazine.com/2021/09/orchestrating-complexity-web-animations-api/</id>
        <link href="https://smashingmagazine.com/2021/09/orchestrating-complexity-web-animations-api/"/>
        <updated>2021-09-13T09:00:00.000Z</updated>
        <summary type="html"><![CDATA[There are way too many options in Web Animations API to pick them up that easily. Learning how timing works and how to control the playback of several animations at once makes for a solid foundation on which to base your projects on.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Kirill Myshkin)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Web Design Done Well: Excellent Editorial]]></title>
        <id>https://smashingmagazine.com/2021/09/web-design-done-well-excellent-editorial/</id>
        <link href="https://smashingmagazine.com/2021/09/web-design-done-well-excellent-editorial/"/>
        <updated>2021-09-10T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[They say content is king, and they’re right. The web has unlocked untold possibilities for storytellers — provided the story is right, of course. Here are some of our favorite examples of editorial content thriving in the digital realm.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Frederick O’Brien)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using SWR React Hooks With Next.js’ Incremental Static Regeneration (ISR)]]></title>
        <id>https://smashingmagazine.com/2021/09/useswr-react-hook-library-incremental-static-regeneration-nextjs/</id>
        <link href="https://smashingmagazine.com/2021/09/useswr-react-hook-library-incremental-static-regeneration-nextjs/"/>
        <updated>2021-09-09T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[When paired with ISR and Next.js’ API routes, SWR can be used to create a responsive user experience. In this article, Sam Poder explains what SWR is, where to use it (and where not), and how to build a website by using Incremental Static Regeneration.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Sam Poder)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Developer Decisions For Building Flexible Components]]></title>
        <id>https://smashingmagazine.com/2021/09/developer-decisions-building-flexible-components/</id>
        <link href="https://smashingmagazine.com/2021/09/developer-decisions-building-flexible-components/"/>
        <updated>2021-09-08T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[In this article, we’ll walk through the process of taking a seemingly simple design for a text-and-media component and deciding how best to translate it into code, keeping in mind the needs of both users and content authors.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Michelle Barker)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[New Smashing Online Workshops on Front-End & UX]]></title>
        <id>https://smashingmagazine.com/2021/09/new-smashing-online-workshops-sep-2021/</id>
        <link href="https://smashingmagazine.com/2021/09/new-smashing-online-workshops-sep-2021/"/>
        <updated>2021-09-08T08:00:00.000Z</updated>
        <summary type="html"><![CDATA[What’s the state of HTML Email, Vue.js and Next.js? What are new, smart interface design patterns we could use? Let’s figure it out. With our brand new online workshops on front-end & design. Now with **free workshops** for you to test the waters.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Iris Lješnjanin)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What’s New With DevTools: Cross-Browser Edition]]></title>
        <id>https://smashingmagazine.com/2021/09/devtools-cross-browser-edition/</id>
        <link href="https://smashingmagazine.com/2021/09/devtools-cross-browser-edition/"/>
        <updated>2021-09-07T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[Learn what’s new with developer tools in Firefox, Edge, Chrome and Safari. Discover new and powerful features that will help you be more comfortable and productive when testing and debugging across browsers.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Patrick Brosset)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[HTTP/3: Practical Deployment Options (Part 3)]]></title>
        <id>https://smashingmagazine.com/2021/09/http3-practical-deployment-options-part3/</id>
        <link href="https://smashingmagazine.com/2021/09/http3-practical-deployment-options-part3/"/>
        <updated>2021-09-06T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[After almost five years in development, the new HTTP/3 protocol is nearing its final form. Let’s take a close look at the challenges involved in deploying and testing HTTP/3, and how and if you should change your websites and resources as well.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Robin Marx)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Reducing Carbon Emissions On The Web]]></title>
        <id>https://smashingmagazine.com/2021/09/reducing-carbon-emissions-on-web/</id>
        <link href="https://smashingmagazine.com/2021/09/reducing-carbon-emissions-on-web/"/>
        <updated>2021-09-03T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[Websites, unfortunately, aren’t as environmentally friendly as we might like them to be. This article contains some thoughts and experiences from trying to clean them up.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Berwyn Powell)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Interactive Learning Tools For Front-End Developers]]></title>
        <id>https://smashingmagazine.com/2021/09/interactive-learning-tools-front-end-developers/</id>
        <link href="https://smashingmagazine.com/2021/09/interactive-learning-tools-front-end-developers/"/>
        <updated>2021-09-02T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[Interactive coding tools to help you learn CSS, JavaScript, SQL, React, Vim, regular expressions and Jamstack.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Louis Lazaris)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Deep Dive Into The Wonderful World Of SVG Displacement Filtering]]></title>
        <id>https://smashingmagazine.com/2021/09/deep-dive-wonderful-world-svg-displacement-filtering/</id>
        <link href="https://smashingmagazine.com/2021/09/deep-dive-wonderful-world-svg-displacement-filtering/"/>
        <updated>2021-09-01T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[What exactly is a displacement filter? In this article, Dirk Weber explains the SVG `feDisplacementMap` filter primitive with a good number of examples to demonstrate the concept of animated displacement maps.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Dirk Weber)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[State Management In Next.js]]></title>
        <id>https://smashingmagazine.com/2021/08/state-management-nextjs/</id>
        <link href="https://smashingmagazine.com/2021/08/state-management-nextjs/"/>
        <updated>2021-08-31T14:00:00.000Z</updated>
        <summary type="html"><![CDATA[By combining some React APIs, we can accurately manage “simple” states. With Next.js though, we can quickly find situations where we need to accommodate many other requirements. Let’s have a look at some patterns to accomplish all that.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Átila Fassina)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Stories Of September (2021 Desktop Wallpapers Edition)]]></title>
        <id>https://smashingmagazine.com/2021/08/desktop-wallpaper-calendars-september-2021/</id>
        <link href="https://smashingmagazine.com/2021/08/desktop-wallpaper-calendars-september-2021/"/>
        <updated>2021-08-31T08:00:00.000Z</updated>
        <summary type="html"><![CDATA[New month, new wallpapers! In this post, you’ll find inspiring wallpaper designs for September 2021. They were created with love by artists and designers from across the globe and are available with and without a calendar. Enjoy!]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cosima Mielke)</name>
        </author>
    </entry>
</feed>
<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2021-06-02T02:42:30.810Z</id>
    <title>osmos::feed</title>
    <updated>2021-06-02T02:42:30.810Z</updated>
    <generator>osmosfeed 1.10.2</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[How do I deploy to Netlify?]]></title>
        <id>https://dev.to/guscarpim/how-do-i-deploy-to-netlify-45pc</id>
        <link href="https://dev.to/guscarpim/how-do-i-deploy-to-netlify-45pc"/>
        <updated>2021-06-02T02:12:26.000Z</updated>
        <summary type="html"><![CDATA[Heeeeey guys, quick tip for those of you who need to deploy your app, there are several ways to deploy your app for free, but what I like the most is Netlify because it's so simple and fast:
1- Once logged in, click on
New site from Git

2- Choose where your code is stored:

3- Choose your repository (GitHub):

4- He will ask to set up your build information inBase directory you must put the path to your main page,, Build command this is where you put the command that will generate your project build, I always put it CI= npm run build
CI = <b>CI</b> means continuous integration

5- If everything is ok, it will show this page saying that your application was successfully uploaded.

6- Click Add custom domain to place a domain you have purchased or click Edit site name to change only the Netlify domain name:

And voila, your application is already online and 100% free.

Thanks for reading.]]></summary>
        <author>
            <name>Gustavo Scarpim</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[LUXARG another keyboard frirendly editor in PURE PYTHON]]></title>
        <id>https://dev.to/amzy0/luxarg-another-keyboard-frirendly-editor-for-linux-freebsd-538f</id>
        <link href="https://dev.to/amzy0/luxarg-another-keyboard-frirendly-editor-for-linux-freebsd-538f"/>
        <updated>2021-06-02T00:39:38.000Z</updated>
        <summary type="html"><![CDATA[LINK]]></summary>
        <author>
            <name>Amzy 0 |  محمد امین عظیمی</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Build a Discord AI Chatbot that Talks Like Your Favorite Character]]></title>
        <id>60b5025111ffb70827ef9ebe</id>
        <link href="https://www.freecodecamp.org/news/discord-ai-chatbot/"/>
        <updated>2021-06-01T23:47:33.000Z</updated>
        <summary type="html"><![CDATA[Let's build an AI model that speaks just like your favorite character and deploy that model as a Discord chatbot. All the coding and deployment happen in the cloud (for free!), so you don't even need a local IDE to follow along.]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Adding Some Sweetness to your Infra-as-Code with Confectionery]]></title>
        <id>https://dev.to/prince_of_pasta/adding-some-sweetness-to-your-infra-as-code-with-confectionery-27c2</id>
        <link href="https://dev.to/prince_of_pasta/adding-some-sweetness-to-your-infra-as-code-with-confectionery-27c2"/>
        <updated>2021-06-01T22:40:05.000Z</updated>
        <summary type="html"><![CDATA[Recently the Confectionery tool was open-sourced after some internal iterations within Cigna. The project was a combined effort from multiple teams and we're excited to see the wider community be able to leverage it.
So what is Confectionery anyways?  It is a rule library for the Conftest tool. By leveraging Conftest, teams can validate various configuration files via static scanning and policies written in the Rego language. The Confectionery ruleset as of the writing of this article is focused on Terraform. We plan to expand to other formats in the near future (Dockerfiles and Kubernetes manifests). I've previously written about how Conftest can be used to scan Terraform files, please see my article from last year on the topic.
As noted in our Getting Started Guide Conftest is a pre-requ…]]></summary>
        <author>
            <name>Anthony Barbieri</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Merge multiple CSV files and remove duplikats (e.g. Keepass)]]></title>
        <id>https://dev.to/skorotkiewicz/merge-multiple-csv-files-and-remove-dublikats-e-g-keepass-1ic1</id>
        <link href="https://dev.to/skorotkiewicz/merge-multiple-csv-files-and-remove-dublikats-e-g-keepass-1ic1"/>
        <updated>2021-06-01T22:30:23.000Z</updated>
        <summary type="html"><![CDATA[I would like to present you a simple script which I wrote when I needed to merge the passwords database from LastPass to my current KeepassXC database.

Let's start with my example, you want to migrate from LastPass but you already have existing passwords in Keepass.
That's why I wrote this script which will merge multiple databases exported in CSV and remove duplikats automatically.
ProHint: If you are esporting a database from LastPass (or other services), add the exported CSV first to the new Keepass database and set the columns you have on your other Keepass database and export as new CSV file. This will make sure you have the same columns in the current database and the new one.
My columns look like this: 
Group | Title | Username | Password | URL | Notes
To install and start the CSV database merge you can easily install from npmjs.com
$ npm install merge-csv-keepass -g
or
$ yarn global add merge-csv-keepass

It is very easy to use, after installation you have access to a new command merge-csv-keepass where you just need to add few arguments and you are done!
Example, we have a database db1.csv and db2.csv we want to merge them into a file merged_db.csv to do this we run the command:
merge-csv-keepass -source db1.csv db2.csv -output merged_db.csv

Done! Simple, isn't it?
Keep in mind that the script does not check if the output file exists! If it exists it will overwrite it!
Of course you can add more databases than just two to merge, or even just one database to only remove duplikats from it.
The whole project is open source and available on Github.  
 / 
        merge-csv-keepass
      
    
Enjoy your merging! :)]]></summary>
        <author>
            <name>Sebastian Korotkiewicz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Merge multiple CSV files and remove duplikats (e.g. Keepass)]]></title>
        <id>https://dev.to/skorotkiewicz/merge-multiple-csv-files-and-remove-dublikats-e-g-keepass-1ic1</id>
        <link href="https://dev.to/skorotkiewicz/merge-multiple-csv-files-and-remove-dublikats-e-g-keepass-1ic1"/>
        <updated>2021-06-01T22:30:23.000Z</updated>
        <summary type="html"><![CDATA[I would like to present you a simple script which I wrote when I needed to merge the passwords database from LastPass to my current KeepassXC database.

Let's start with my example, you want to migrate from LastPass but you already have existing passwords in Keepass.
That's why I wrote this script which will merge multiple databases exported in CSV and remove duplikats automatically.
ProHint: If you are esporting a database from LastPass (or other services), add the exported CSV first to the new Keepass database and set the columns you have on your other Keepass database and export as new CSV file. This will make sure you have the same columns in the current database and the new one.
My columns look like this: 
Group | Title | Username | Password | URL | Notes
To install and start the CSV database merge you can easily install from npmjs.com
$ npm install merge-csv-keepass -g
or
$ yarn global add merge-csv-keepass

It is very easy to use, after installation you have access to a new command merge-csv-keepass where you just need to add few arguments and you are done!
Example, we have a database db1.csv and db2.csv we want to merge them into a file merged_db.csv to do this we run the command:
merge-csv-keepass -source db1.csv db2.csv -output merged_db.csv

Done! Simple, isn't it?
Keep in mind that the script does not check if the output file exists! If it exists it will overwrite it!
Of course you can add more databases than just two to merge, or even just one database to only remove duplikats from it.
The whole project is open source and available on Github.  
 / 
        merge-csv-keepass
      
    
Enjoy your merging! :)]]></summary>
        <author>
            <name>Sebastian Korotkiewicz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Code blocks, but better]]></title>
        <id>https://css-tricks.com/?p=341720</id>
        <link href="https://ped.ro/blog/code-blocks-but-better"/>
        <updated>2021-06-01T22:08:48.000Z</updated>
        <summary type="html"><![CDATA[Pedro Duarte made a wishlist for styled code blocks in blog posts and documentation, then hand-rolls a perfect solution for that wishlist. For example, a feature to be able to highlight certain lines or words within the code block. The …
The post Code blocks, but better appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How I implemented search engine for my static blog generator]]></title>
        <id>https://dev.to/juliancwirko/how-i-implemented-search-engine-for-my-static-blog-generator-2dbh</id>
        <link href="https://dev.to/juliancwirko/how-i-implemented-search-engine-for-my-static-blog-generator-2dbh"/>
        <updated>2021-06-01T21:02:09.000Z</updated>
        <summary type="html"><![CDATA[Lately, I worked on my static site generator, and one of the must-haves was that it should provide a search system. It should be pre-configured and ready to use after every new project initialization. 
Two fundamental problems here:
Source data
Solid and performant indexing solution
As for source data, I had two choices, read the blog posts from already generated HTML files or prepare JSON data with all blog posts at the build time. I chose the second one because the first one seems a little bit clunky and problematic. There could be many different edge cases when collecting the data. When building, I generate HTML files from markdown source files, so I had this step anyway. 
As for the indexing solution, I chose Lunr. They describe themselves as "A bit like Solr, but much smaller and not …]]></summary>
        <author>
            <name>Julian Ćwirko</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[I built a link shortener app with NextJS]]></title>
        <id>https://dev.to/saj96n/i-built-a-link-shortener-app-with-nextjs-cnh</id>
        <link href="https://dev.to/saj96n/i-built-a-link-shortener-app-with-nextjs-cnh"/>
        <updated>2021-06-01T21:00:13.000Z</updated>
        <summary type="html"><![CDATA[Live demo: l.jkrzeptowski.pl
NextAuth.js - authentication for Next.js
Prisma 2 - Next-generation ORM for Node.js and TypeScript


React query - used for fetching data and state management



React Hook Form - used for URL input state management and validation



Tailwind CSS - A CSS framework used for styling






I'd love to hear your feedback about this app. You can also introduce your ideas to this project by contributing to it.
Here's a link for the GitHub repo:
 / 
        surl
      
    
ShortURL is a modern link shortener based on Next.js
Demo: http://l.jkrzeptowski.pl/
git clone https://github.com/saj96n/surl.git
cd surl

npm install
# or
yarn install
DATABASE_URL: MySQL database connection URL
(https://www.prisma.io/docs/concepts/database-connectors/mysql/#connection-details)
NEXTAUTH_URL: URL of the app
NEXT_PUBLIC_ORIGIN: URL of the app
NEXT_PUBLIC_MATOMO_URL: URL of the Matomo instance (optional)
NEXT_PUBLIC_MATOMO_SITE_ID: Matomo site id (optional)
https://next-auth.js.org/configuration/providers
npm run dev
# or
npm run build
npm start
View on GitHub]]></summary>
        <author>
            <name>Jan Krzeptowski</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[6 Hidden AWS Charges and How to Monitor Them]]></title>
        <id>https://dev.to/microtica/6-hidden-aws-charges-and-how-to-monitor-them-3d0n</id>
        <link href="https://dev.to/microtica/6-hidden-aws-charges-and-how-to-monitor-them-3d0n"/>
        <updated>2021-06-01T20:55:58.000Z</updated>
        <summary type="html"><![CDATA[Cloud adoption has many benefits, the most notable of which being the wide range of options and price models available. Your cloud charge, on the other hand, can get confusing. If you don’t keep track of it and review it on a daily basis, the expenses can easily escalate out of control. Fast scalability, pay-as-you-go pricing, and a vast array of options and updates can make things very complicated. 
Every company should actively monitor its cloud costs, which can drive up the overall cloud bill. However, if you handle them properly, this can be avoided. Here are some AWS charges you should keep an eye on. 
AWS Free Tier offers a limited number of AWS services to use for free, up to a defined monthly consumption cap. It’s divided into three pricing models: a 12-month Free Tier, an Always F…]]></summary>
        <author>
            <name>Marija N.</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Data Analytics with Pandas – How to Drop a List of Rows from a Pandas Dataframe]]></title>
        <id>60b1eed311ffb70827ef9504</id>
        <link href="https://www.freecodecamp.org/news/drop-list-of-rows-from-pandas-dataframe/"/>
        <updated>2021-06-01T20:47:43.000Z</updated>
        <summary type="html"><![CDATA[A Pandas dataframe is a two dimensional data structure which allows you to store data in rows and columns. It's very useful when you're analyzing data.  When you have a list of data records in a dataframe, you may need to drop a specific list of rows depending on the]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Basic git commands every developer should know]]></title>
        <id>https://dev.to/princekr700/basic-git-commands-every-developer-should-know-1854</id>
        <link href="https://dev.to/princekr700/basic-git-commands-every-developer-should-know-1854"/>
        <updated>2021-06-01T20:15:07.000Z</updated>
        <summary type="html"><![CDATA[Hi everyone,
Mastering git takes time and trust me, I've switched from SVN to git. So, I know the hurdles a beginner would face. I've seen many people who are not comfortable using git or doesn't use git properly.
There are so many commands we can use, but some commands are used more frequently(some daily). So in this post, I will share and explain the commands which every developer should know.
Git clone is a command for downloading existing source code from a remote repository (like GitHub, for example). In other words, Git clone basically makes an identical copy of the latest version of a project in a repository and saves it to our computer.
There are a couple of ways to download the source code, but mostly I prefer the clone with https way:
git clone <https://name-of-the-repository-lin…]]></summary>
        <author>
            <name>Kumar Prince</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Journey through DevOps - Part 1: World without DevOps]]></title>
        <id>https://dev.to/thundersparkf/journey-through-devops-part-1-world-without-devops-3g92</id>
        <link href="https://dev.to/thundersparkf/journey-through-devops-part-1-world-without-devops-3g92"/>
        <updated>2021-06-01T19:20:26.000Z</updated>
        <summary type="html"><![CDATA[April 2020. I'd just begun coding regularly in Python. Built a toxic tweet classifier using LSTM models. Model wasn't spectacular by any standard, but during the whole process, I was introduced to something that would change the way I look at software development completely. It was, the Cloud.
I need to run the model faster so I used Virtual Machine in Google Cloud Platform to run the training on a higher configuration. And that was about it.
Fast forward a few months. August 2020. I was experimenting with random tools of NLP and tested out a chatbot using Rasa. Because of this minor experience, I was connected by a friend to an NGO, Weunlearn which had proposed to build a chatbot for providing Gender, Sex-ed and Mental health content. Needless to say, I signed up to help. Because for me, …]]></summary>
        <author>
            <name>Dev</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Loading Audio in Node JS]]></title>
        <id>https://dev.to/hughrawlinson/loading-audio-in-node-js-1l7e</id>
        <link href="https://dev.to/hughrawlinson/loading-audio-in-node-js-1l7e"/>
        <updated>2021-06-01T18:49:27.000Z</updated>
        <summary type="html"><![CDATA[Working with audio as a developer can unlock many awesome features, and a lot of fun. You can generate music, analyze audio using machine learning, build audio visualizers, music information retrieval systems, and much more. It's an extremely fun field. But working with audio can be tricky - how is sound represented on a computer? How can we manipulate that sound? And how do we serialize sound data to disk?
This post won't be a deep dive into audio encoding - it's a practical guide for how to load audio in Node JS, into a state that you can work with it. Generally, digital signal processing (which means "working with audio data using code") operates on a kind of audio data called Pulse Code Modulation. There's a lot of fancy theory and maths behind PCM encoding - but until you're ready to …]]></summary>
        <author>
            <name>Hugh Rawlinson</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[React class components in the World of Hooks]]></title>
        <id>https://dev.to/merri/react-class-components-in-the-world-of-hooks-5982</id>
        <link href="https://dev.to/merri/react-class-components-in-the-world-of-hooks-5982"/>
        <updated>2021-06-01T18:45:30.000Z</updated>
        <summary type="html"><![CDATA[Hooks have landed the React world pretty hard. It isn't a full-on victory everywhere, I know places where people have more of a "they're kids toys" mentality and stay in 100% class + hookless function components, but in general I guess we can agree hooks have been a success.
There are a lot of posts on why hooks are great already, but I want to focus a bit more on nuances that might help you decide when to use classes, and when hooks are the better fit.
You can add context to class components, but the syntax can be a bit awkward especially if you're also using TypeScript and want to get the goodies:
class YourComponent extends React.PureComponent {
  static contextType = YourContext;
  context: React.ContextType<typeof YourContext>;

  render() {
    const { stuffFromContext } = this.conte…]]></summary>
        <author>
            <name>Vesa Piittinen</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Writing A Function That Splits An Array Into Groups The Length Of Size And Returns Them As A two-Dimensional Array.]]></title>
        <id>https://dev.to/rthefounding/writing-a-function-that-splits-an-array-into-groups-the-length-of-size-and-returns-them-as-a-two-dimensional-array-lfp</id>
        <link href="https://dev.to/rthefounding/writing-a-function-that-splits-an-array-into-groups-the-length-of-size-and-returns-them-as-a-two-dimensional-array-lfp"/>
        <updated>2021-06-01T18:37:31.000Z</updated>
        <summary type="html"><![CDATA[function chunkArrayInGroups(arr, size) {
  return arr;
}

chunkArrayInGroups(["a", "b", "c", "d"], 2);

Answer:




function chunkArrayInGroups(arr, size) {
  let newArr = [];

  while (arr.length) {
    newArr.push(arr.splice(0, size));
  }

  return newArr;
}

console.log(chunkArrayInGroups(["a", "b", "c", "d"], 2)); // will display [["a", "b"], ["c", "d"]]

Firstly, we create a variable. newArr is an empty array which we will push to.
Our while loop loops until we dont have a length of the array.
Inside our loop, we push to the newArr array using arr.splice(0, size).
For each iteration of while loop, size tells the array how many we want to either add or remove .
Finally, we return the value of newArr.]]></summary>
        <author>
            <name>Randy Rivera</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Return True If The String In The First Element Of The Array Contains All Of The Letters Of The String In The Second Element]]></title>
        <id>https://dev.to/rthefounding/return-true-if-the-string-in-the-first-element-of-the-array-contains-all-of-the-letters-of-the-string-in-the-second-element-5cde</id>
        <link href="https://dev.to/rthefounding/return-true-if-the-string-in-the-first-element-of-the-array-contains-all-of-the-letters-of-the-string-in-the-second-element-5cde"/>
        <updated>2021-06-01T18:28:54.000Z</updated>
        <summary type="html"><![CDATA[function mutation(arr) {
  return arr;
}

mutation(["hello", "hey"]);

For example, ["hello", "Hello"], should return true because all of the letters in the second string are present in the first, ignoring case.
The arguments ["hello", "hey"] should return false because the string hello does not contain a y.
If everything is lowercase it will be easier to compare.
Our strings might be easier to work with if they were arrays of characters.
A loop might help. Use indexOf() to check if the letter of the second word is on the first.


Answer:




function mutation(arr) {
   let firstWord = arr[0].toLowerCase();
   let secondWord = arr[1].toLowerCase();

   for (let i = 0; i < secondWord.length; i++) {
    let letters = secondWord[i];
    if (firstWord.indexOf(letters) === -1) return false;
   }
      return true;
 }

mutation(["hello", "hey"]); // will display false]]></summary>
        <author>
            <name>Randy Rivera</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Clarifying CORS - Cross-origin Resource Sharing]]></title>
        <id>https://dev.to/jordanfinners/clarifying-cors-cross-origin-resource-sharing-4dk9</id>
        <link href="https://dev.to/jordanfinners/clarifying-cors-cross-origin-resource-sharing-4dk9"/>
        <updated>2021-06-01T17:56:55.000Z</updated>
        <summary type="html"><![CDATA[Contents



 Intro

 Access-Control Headers

 Rate Limiting

 Summary




  
  
  Intro 


Continuing on from my previous blog about website security week, we're going to talk about a CORS on the web.
CORS is Cross-origin Resource Sharing this is often used when your website is hosted separately from your API. e.g. your website is at website.com and calls your API at api.com.



To allow CORS requests your API will need to response with certain headers, which allow certain behaviors from your website/frontend.
This header can be set with either the origin which will be calling the API, it can only be a single origin.
* however this doesn't allow credentials to be passed, which we will talk about later.
If at all possible prefer setting a specific origin to a *.
Example Usage:
Access-Contro…]]></summary>
        <author>
            <name>Jordan Finneran</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Xcode matters - These are the CICD services where you'll find it first]]></title>
        <id>https://dev.to/hhaandr/xcode-matters-these-are-the-cicd-services-where-you-ll-find-it-first-2fbf</id>
        <link href="https://dev.to/hhaandr/xcode-matters-these-are-the-cicd-services-where-you-ll-find-it-first-2fbf"/>
        <updated>2021-06-01T17:54:12.000Z</updated>
        <summary type="html"><![CDATA[Xcode versions are the drumbeat that iOS teams all around the world march to. Rapid access to Xcode versions ensure that apps are submitted, and updated on time, while Xcode betas help prepare for new features, functionality, and – dreaded – deprecations.
With WWDC 2021 around the corner, enticing teams with the shiny new things the Apple folks thought up for us, this topic is more relevant than ever.
Over a 12 month period, a sample of Xcode GMs, RCs and betas was generated based on data aggregated by https://xcodereleases.com/ - For this sample of 15 Xcode releases, we pulled in publicly available information on Xcode releases on Bitrise, GitHub Actions, CircleCI, and Travis.
Whenever a particular Xcode version was skipped by a CI provider, the next version was used instead to determine …]]></summary>
        <author>
            <name>Hendrik Haandrikman 🚀</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learn Next.js and Make React Development Simpler]]></title>
        <id>60b668c0acb62507dd1d710b</id>
        <link href="https://www.freecodecamp.org/news/learn-next-js/"/>
        <updated>2021-06-01T17:43:56.000Z</updated>
        <summary type="html"><![CDATA[Next.js makes developing React applications simpler. It provides a common structure that allows you to build frontend React applications, and transparently handles server-side rendering for you. We just released a full course on the freeCodeCamp.org YouTube channel that will teach you the basics of Next.js.  Kapehe developed]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Where In The Array A Number should Be Inserted By Order]]></title>
        <id>https://dev.to/rthefounding/where-in-the-array-a-number-should-be-inserted-by-order-2p7h</id>
        <link href="https://dev.to/rthefounding/where-in-the-array-a-number-should-be-inserted-by-order-2p7h"/>
        <updated>2021-06-01T17:42:33.000Z</updated>
        <summary type="html"><![CDATA[function getIndexToIns(arr, num) {
  return num;
}

getIndexToIns([40, 60], 50);

Return the lowest index at which a value (second argument) should be inserted into an array (first argument) once it has been sorted. The returned value should be a number.
For example, getIndexToIns([1,2,3,4], 1.5) should return 1 because it is greater than 1 (index 0), but less than 2 (index 1).


Answer:




function getIndexToIns(arr, num) {
  arr.sort(function(a, b) {
    return a - b;
  });

  for (let i = 0; i < arr.length; i++) {
    if (arr[i] >= num) return i;
  }

  return arr.length;
}

getIndexToIns([40, 60], 50); // will display [40, 50, 60]

First I sort the array using .sort(callbackFunction) to sort it by lowest to highest, from left to right.
Then I use a for loop to compare the items in the array starting from the smallest one. When an item on the array is greater than the number we are comparing against, then we return the index as an integer.]]></summary>
        <author>
            <name>Randy Rivera</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Removing An array With a Falsy Value]]></title>
        <id>https://dev.to/rthefounding/removing-an-array-with-a-falsy-value-2361</id>
        <link href="https://dev.to/rthefounding/removing-an-array-with-a-falsy-value-2361"/>
        <updated>2021-06-01T17:26:27.000Z</updated>
        <summary type="html"><![CDATA[function bouncer(arr) {
  return arr;
}

bouncer([7, "ate", "", false, 9]);

We should remove all falsy values from an array.
Falsy values in JavaScript are false, null, 0, "", undefined, and NaN.
// regular for loop that I use which is 
for (let i = 0; i < arr.length: i++) { // which reads indexes.
// This new method while watching videos which is 
 for (let elem of arr {
 console.log(elem); 
 }
// basically its a loop that goes through all the elements themselves instead of going through the indexes.
 if (false) {
 console.log("hello") 
; // it wont call out hello because false is a falsey value

Answer:




function bouncer(arr) {
  let result = [];
  for (let elem of arr) {
    if (elem) result.push(elem);
  }
  return result;
}

bouncer([7, "ate", "", false, 9]); // will display [7, "ate", 9]]]></summary>
        <author>
            <name>Randy Rivera</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using slice() and splice()]]></title>
        <id>https://dev.to/rthefounding/using-slice-and-splice-p98</id>
        <link href="https://dev.to/rthefounding/using-slice-and-splice-p98"/>
        <updated>2021-06-01T17:18:38.000Z</updated>
        <summary type="html"><![CDATA[function frankenSplice(arr1, arr2, n) {
  return arr2;
}

frankenSplice([1, 2, 3], [4, 5, 6], 1);

Here You are given two arrays and an index.
Let's Copy each element of the first array into the second array, in order.
We begin inserting elements at index n of the second array.
Then you should return the resulting array. The input arrays should remain the same after the function runs.
####Hint:
The slice() method returns a shallow copy of a portion of an array into a new array object selected from start to end (end not included) where start and end represent the index of items in that array. The original array will not be modified.
The splice() method changes the contents of an array by removing or replacing existing elements and/or adding new elements in place


Answer:




function frankenSplice(arr1, arr2, n) {
  let copiedArr = arr2.slice();
  copiedArr.splice(n, 0, ...arr1);
  return copiedArr;
}

console.log(frankenSplice([1, 2, 3], [4, 5, 6], 1)); // will display [4, 1, 2, 3, 5, 6];]]></summary>
        <author>
            <name>Randy Rivera</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[My Developer Journey – How I Got a Remote Job and Increased My Salary While Contributing to Open Source]]></title>
        <id>60acf28e11ffb70827ef6dd9</id>
        <link href="https://www.freecodecamp.org/news/my-developer-journey-how-i-increased-my-salary-and-got-a-remote-job/"/>
        <updated>2021-06-01T16:35:00.000Z</updated>
        <summary type="html"><![CDATA[Hey everyone, my name is Santosh. In this article, I will tell you how I ramped up my career and ended up increasing my salary as a developer.  I'll share what I learned from each job along the way, how you can stand out, tips for negotiating salary, and how]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Get a Cybersecurity Job in 2021]]></title>
        <id>60aff2d711ffb70827ef8829</id>
        <link href="https://www.freecodecamp.org/news/how-to-get-a-cybersecurity-job/"/>
        <updated>2021-06-01T16:34:00.000Z</updated>
        <summary type="html"><![CDATA[This informative tutorial goes deep into how to get a cybersecurity job, with insights from senior leaders and hiring managers in the field.]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Running GUI Applications inside Docker Container]]></title>
        <id>https://dev.to/msamik/running-gui-applications-inside-docker-container-14ch</id>
        <link href="https://dev.to/msamik/running-gui-applications-inside-docker-container-14ch"/>
        <updated>2021-06-01T16:05:01.000Z</updated>
        <summary type="html"><![CDATA[What is DOCKER?
Docker is a set of platform as a service products that use OS-level virtualization to deliver software in packages called containers. Containers are isolated from one another and bundle their own software, libraries and configuration files; they can communicate with each other through well-defined channels.
What is GUI ?
The graphical user interface is a form of user interface that allows users to interact with electronic devices through graphical icons and audio indicator such as primary notation, instead of text-based user interfaces, typed command labels or text navigation.
Lets Directly Jump to Practicles : 
Docker Engine Must be Installed in the Base OS / Host .
To confirm whether docker is installed or not we can use :
Docker Engine must be in running state .
[root@os]~# systemctl status docker

We must have a docker image to execute our task .
[root@os]~# docker pull centos:latest
We will now create a Dockerfile in which we will specify our Requirements for our own custom Image
[root@os]~# vim Dockerfile 
FROM centos:latest

[root@os]~# docker build -t firefox:v1 .

docker build will help us to make our own customized image with tag firefox:v1

[root@os]~# docker run -it --name task2 -e DISPLAY=$DISPLAY --net=host firefox:v1

$DISPLAY == Enivornment Variable for our Display :0 is the main display.
[root@os]~# firefox

[root@os]~# jupyter notebook

In Addition to firefox i used jupyter notebook as a GUI APP.
Thanks for Visiting my Article]]></summary>
        <author>
            <name>Muhammad Sami Khanday</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Running GUI Applications inside Docker Container]]></title>
        <id>https://dev.to/msamik/running-gui-applications-inside-docker-container-14ch</id>
        <link href="https://dev.to/msamik/running-gui-applications-inside-docker-container-14ch"/>
        <updated>2021-06-01T16:05:01.000Z</updated>
        <summary type="html"><![CDATA[What is DOCKER?
Docker is a set of platform as a service products that use OS-level virtualization to deliver software in packages called containers. Containers are isolated from one another and bundle their own software, libraries and configuration files; they can communicate with each other through well-defined channels.
What is GUI ?
The graphical user interface is a form of user interface that allows users to interact with electronic devices through graphical icons and audio indicator such as primary notation, instead of text-based user interfaces, typed command labels or text navigation.
Lets Directly Jump to Practicles : 
Docker Engine Must be Installed in the Base OS / Host .
To confirm whether docker is installed or not we can use :
Docker Engine must be in running state .
[root@os]~# systemctl status docker

We must have a docker image to execute our task .
[root@os]~# docker pull centos:latest
We will now create a Dockerfile in which we will specify our Requirements for our own custom Image
[root@os]~# vim Dockerfile 
FROM centos:latest

[root@os]~# docker build -t firefox:v1 .

docker build will help us to make our own customized image with tag firefox:v1

[root@os]~# docker run -it --name task2 -e DISPLAY=$DISPLAY --net=host firefox:v1

$DISPLAY == Enivornment Variable for our Display :0 is the main display.
[root@os]~# firefox

[root@os]~# jupyter notebook

In Addition to firefox i used jupyter notebook as a GUI APP.
Thanks for Visiting my Article]]></summary>
        <author>
            <name>Muhammad Sami Khanday</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The best Incident Commanders might not be where you think]]></title>
        <id>https://dev.to/colmdoyle/the-best-incident-commanders-might-not-be-where-you-think-fac</id>
        <link href="https://dev.to/colmdoyle/the-best-incident-commanders-might-not-be-where-you-think-fac"/>
        <updated>2021-06-01T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[The Incident Commander is a powerful role in the world of Incident Management. Like Flight Directors in NASA missions, they have responsibility for the decisions made and actions taken during an incident. Depending on your company’s process, they may have powers like stopping deployments, commandeering staff or even shutting down the service. Whatever they deem necessary for resolving the incident.
In many software organizations, the Incident Commander is an on-call rotation, shared amongst senior members of the engineering team. And this seems logical right? Engineering managers and senior engineers will be close to the technology involved, so are best placed to solve the issues that may arise. But have you ever considered that maybe you should be casting your net a bit wider when it come…]]></summary>
        <author>
            <name>Colm Doyle</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Understand Polymorphism once for all]]></title>
        <id>https://dev.to/mateocerquetella/understand-polymorphism-once-for-all-4po</id>
        <link href="https://dev.to/mateocerquetella/understand-polymorphism-once-for-all-4po"/>
        <updated>2021-06-01T15:44:49.000Z</updated>
        <summary type="html"><![CDATA[The main reason for using interfaces is to achieve polymorphism and to provide developers with the ability to implement interface methods in their own way in the future.
In this example I will use TypeScript and I will put the repository at the end of the note
Suppose we have an interface and three classes:

This is the connector interface.
Now we are going to implement the Wifi communication.

Here we have developed our concrete class called WifiConnector which has its own implementation of type Connector.
Now we are creating our System which has a Connector component. This is called dependency injection.


Connector is an interface and must have the method doConnect().
Now, since Connector is an interface, the System class has much more flexibility.
We can pass any type that has implemented the Connector interface.
For example, now the developer wants to add a Bluetooth  connection module:

We see that WifiConnector and BluetoothConnector have their own implementation.
So we can pass any of them to the System class as a constructor parameter. This is called polymorphism.
The System class is now not aware of whether it is Bluetooth or Wifi. We can even add another communication module such as Infrared, Bluetooth5 and whatever, simply by implementing the Connector interface.
This is called Duck Typing. The connector type is now dynamic since doConnect() is just a placeholder and the developer implements it as their own.
Here is the repository in case you need it and thanks for reading!]]></summary>
        <author>
            <name>Mateo Cerquetella</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Front-End Testing is For Everyone]]></title>
        <id>https://css-tricks.com/?p=341342</id>
        <link href="https://css-tricks.com/front-end-testing-is-for-everyone/"/>
        <updated>2021-06-01T14:17:43.000Z</updated>
        <summary type="html"><![CDATA[Testing is one of those things that you either get super excited about or kinda close your eyes and walk away. Whichever camp you fall into, I’m here to tell you that front-end testing is for everyone. In fact, …
The post Front-End Testing is For Everyone appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Evgeny Klimenchenko</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A beginners guide to infosec]]></title>
        <id>https://dev.to/cossacklabs/a-beginners-guide-to-infosec-3o22</id>
        <link href="https://dev.to/cossacklabs/a-beginners-guide-to-infosec-3o22"/>
        <updated>2021-06-01T14:17:25.000Z</updated>
        <summary type="html"><![CDATA[In this first-remote 2021, infosec career rollercoaster thrills and charms like it was never before. However, to move in this direction as a junior specialist, you need to gain some new skills and a brand new line of thought. Cossack Labs’ senior security engineers are sharing advice about this path.
These basic principles and rules will help you drive through your infosec career safe and sound right from the start. Ready, steady, go! 🚀
Table of contents:
Hard skills: 4️⃣ points to consider
Soft skills: run smarter
Shortcuts for career racers
Hard skills 📚


Learning security can be as hard as doing it. “Eat the elephant one bite at a time, play the long game and move steadily and constantly”, they say. This universal principle works in infosec as well. 
You need a lot of small steps and…]]></summary>
        <author>
            <name>Cossack Labs</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Jetpack Boost Handles Critical CSS For You]]></title>
        <id>https://css-tricks.com/?p=341296</id>
        <link href="https://css-tricks.com/jetpack-boost-handles-critical-css-for-you/"/>
        <updated>2021-06-01T14:16:55.000Z</updated>
        <summary type="html"><![CDATA[Critical CSS is one of those things I see in my performance reports but always seem to ignore. I know what it means. It means to put only the CSS required to render things immediately visible in a <style>…
The post Jetpack Boost Handles Critical CSS For You appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Geoff Graham</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hashing vs Encryption]]></title>
        <id>https://dev.to/therockstorm/hashing-vs-encryption-33aj</id>
        <link href="https://dev.to/therockstorm/hashing-vs-encryption-33aj"/>
        <updated>2021-06-01T14:11:53.000Z</updated>
        <summary type="html"><![CDATA[Encryption is a two-way function. You can encrypt data, like a file, and then later decrypt it provided you have the proper encryption key. This is useful when you need to retrieve the original data.
Hashing, on the other hand, is a one-way function. It scrambles the input data into a unique output and you cannot reverse this process to reveal the original data.
How is a non-reversible operation useful? It's more secure for things like passwords. With encryption, the website server needs to have the encryption key to decrypt it. If the server gets hacked, the attackers could get this key and decrypt every user's password immediately.
With hashing, there is no key. Websites don't actually need to know a user's password, they just need to know that what the user enters in the password field matches what is stored in the database. They can do this by taking the password the user enters, hashing it in the same way they hashed it when the user first set it, and making sure both match. If they do, you get to log in.
If an attacker gets a list of hashed passwords, they'd have to generate a bunch of guesses, hash each one using the same algorithm, and compare the result to the hashed values one-by-one.]]></summary>
        <author>
            <name>Rocky Warren</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 38 With Ivan Akulov: Why Is My React App Slow?]]></title>
        <id>https://smashingmagazine.com/2021/06/smashing-podcast-episode-38/</id>
        <link href="https://smashingmagazine.com/2021/06/smashing-podcast-episode-38/"/>
        <updated>2021-06-01T14:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode, we’re talking about React performance. What factors slow our React apps down, and how can we fix it? Drew McLellan talks to expert Ivan Akulov to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[OWASP, Vulnerabilities, and Taint Analysis in PVS\-Studio for C#. Stir, but Don't Shake]]></title>
        <id>https://dev.to/vasilievserg/owasp-vulnerabilities-and-taint-analysis-in-pvs-studio-for-c-stir-but-don-t-shake-16i9</id>
        <link href="https://dev.to/vasilievserg/owasp-vulnerabilities-and-taint-analysis-in-pvs-studio-for-c-stir-but-don-t-shake-16i9"/>
        <updated>2021-06-01T13:31:47.000Z</updated>
        <summary type="html"><![CDATA[We continue to develop PVS-Studio as a SAST solution. Thus, one of our major goals is expanding OWASP coverage. You might ask, what's the use when there's no taint analysis? That's exactly what we thought - and decided to implement taint analysis in the C# analyzer. Curious about what we accomplished? Read on!

Note. This article briefly touches upon the topics of SQL injections and working with SQL in C#. This theory serves as context. For in-depth information on these topics, do additional research.
Taint analysis helps track data that a program receives from an external source (taint source). Though such data is considered tainted, it does not necessarily cause damage when spreading. However, programs may have key points (taint sinks). When tainted data hits them, this interaction may r…]]></summary>
        <author>
            <name>Sergey Vasiliev</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[TypeScript Generic Function Reported As JSX Error]]></title>
        <id>https://dev.to/tlylt/typescript-generic-function-reported-as-jsx-error-57nf</id>
        <link href="https://dev.to/tlylt/typescript-generic-function-reported-as-jsx-error-57nf"/>
        <updated>2021-06-01T11:59:52.000Z</updated>
        <summary type="html"><![CDATA[Motivation





const genericFn = <T>() => {
    return "This is a poorly written example generic function"
}

Above is an example of a function with a generic parameter T that could potentially be used within the function body. However, if the above code is saved in a .tsx file (In my context, within a React application, while trying to create a generic custom hook), you will receive with the following error when hover over  <T>:
JSX element 'T' has no corresponding closing tag.ts(17008)
Cannot find name 'T'.ts(2304)

To resolve the issue, I started with researching on how to properly define a generic function in TypeScript. Perhaps I made a mistake somewhere in the above syntax. I landed on two articles here and here. Both of  them talked about how to create a custom React hook that uses…]]></summary>
        <author>
            <name>Liu YongLiang</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Under-the-hood of NPM]]></title>
        <id>https://dev.to/craigtaub/under-the-hood-of-npm-7ec</id>
        <link href="https://dev.to/craigtaub/under-the-hood-of-npm-7ec"/>
        <updated>2021-06-01T11:53:53.000Z</updated>
        <summary type="html"><![CDATA[NPM is the official package manager for the NodeJS ecosystem. Since the first release of NodeJS it has come with NPM built-in. The initial release date for NPM was 12 January 2010 and since then has grown into the Worlds largest software registry.
I would expect most engineers in the JavaScript ecosystem to know all about either NPM or Yarn, as they are critical to most local, CI and CD flows. However in the overview section I am going to cover the core functionality, as this is what we will focus on building later.
This is part of my "under-the-hood of" series:
Git
GraphQL
Web bundlers (e.g. Webpack)
Type systems (e.g. TypeScript)
Test runners (e.g. Mocha)
Source maps
React hooks
Apollo
Auto formatters (e.g. Prettier)
The article today will be broken down into:
Overview


Module vs Packag…]]></summary>
        <author>
            <name>Craig Taub</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Figuring out “Hello World” in Java as a Javascript/Python Developer]]></title>
        <id>https://dev.to/ethancarlsson/figuring-out-hello-world-in-java-as-a-javascript-python-developer-h0d</id>
        <link href="https://dev.to/ethancarlsson/figuring-out-hello-world-in-java-as-a-javascript-python-developer-h0d"/>
        <updated>2021-06-01T11:26:09.000Z</updated>
        <summary type="html"><![CDATA[I’m coming into Java having already learned Python and JavaScript. I’m hoping that this can make it easier for me to understand a lot of Java and help others in a similar situation.
Like this:
public class HelloWorld {
    public static void main(String[] args) {
        System.out.println("Hello World");
    }
}

This is almost a joke when compared to Python, which does the same thing in less than half the lines and far fewer words.
def hello_world():
    print('Hello World')

However, the difference between the two is not as dramatic as it looks at first blush. Really, java is just asking for more things that a language like Python will leave as optional.
class HelloWorld:
    def hello_world(self):
        print('Hello World')

or in JavaScript:
class HelloWorld {
    main() {
        c…]]></summary>
        <author>
            <name>Ethan Carlsson</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[mxGraph usage in TypeScript projects]]></title>
        <id>https://dev.to/tbouffard/mxgraph-usage-in-typescript-projects-4obn</id>
        <link href="https://dev.to/tbouffard/mxgraph-usage-in-typescript-projects-4obn"/>
        <updated>2021-06-01T10:19:05.000Z</updated>
        <summary type="html"><![CDATA[This article is the first one of a series about mxGraph, the Javascript diagramming library.
Over the last few months, my team has used it on a day-to-day basis as the rendering foundation of bpmn-visualization, an open source TypeScript  library for visualizing process execution data on BPMN diagrams.
In this series, I will share integration challenges and solutions when using mxGraph in TypeScript projects, tooling developed to simplify mxGraph based developments, rendering extensions, usage tips and much more.
Most aspects described in the articles will also apply to JavaScript projects using mxGraph.
A few years ago, the mxGraph core development team stated that it would never port mxGraph to TypeScript, nor support it, and this was still applicable in 2020. (See issue #81 and related …]]></summary>
        <author>
            <name>Thomas Bouffard</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Keycloak on Distroless into Kubernetes]]></title>
        <id>https://dev.to/stack-labs/keycloak-on-distroless-into-kubernetes-f5g</id>
        <link href="https://dev.to/stack-labs/keycloak-on-distroless-into-kubernetes-f5g"/>
        <updated>2021-06-01T09:14:27.000Z</updated>
        <summary type="html"><![CDATA[In the previous article, we've seen how to build and run a Keycloak application based on Distroless base image. However, this article only used Docker to launch containers, and you mostly use an orchestrator to do that. In this article, we will see how to run our previously created image in a Kubernetes cluster. 

Using a Keycloak image based on Distroless requires some adaptation:
Launching the application require a specific command
Stopping the application require a specific command
Probes should be defined 
Database connection should be provided via env variables
Configuration file should be mounted by the orchestrator
Before doing some configuration, we will "install" a PostgreSQL instance inside our cluster. This will be done with this manifest:
# database.yaml
apiVersion: v1
kind: Se…]]></summary>
        <author>
            <name>Λ\: Davin Kevin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Setting Up A Currency Convertor With ExchangeRatesApi.io]]></title>
        <id>https://smashingmagazine.com/2021/06/currency-convertor-exchangeratesapi/</id>
        <link href="https://smashingmagazine.com/2021/06/currency-convertor-exchangeratesapi/"/>
        <updated>2021-06-01T09:00:00.000Z</updated>
        <summary type="html"><![CDATA[Amazon allows visitors to display prices in their own currency. Thanks to *ExchangeRatesApi.io*, we can do the same for our online shops, providing a better experience to our customers. Let’s find out how.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Leonardo Losoviz)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to receive images with the node.js API | fetch , React]]></title>
        <id>https://dev.to/off_tokyo_/how-to-receive-images-with-the-node-js-api-fetch-react-3o2f</id>
        <link href="https://dev.to/off_tokyo_/how-to-receive-images-with-the-node-js-api-fetch-react-3o2f"/>
        <updated>2021-06-01T08:18:41.000Z</updated>
        <summary type="html"><![CDATA[How to receive images with the node.js API | fetch , React - off.tokyo, the web site for high-tech enthusiasts
The front side is built with React, and the form data is sent to the api by post using JavaScript fetch.
Then, the api receives the form data and saves the data to the server.
To edit the user's information, imagine that the user has to register his name and driver's license (back and front) with the service, and look at the code.
In the following log, the form data created on the front side is received by post to get the data contained in the request.
At first, I couldn't get the image in the body of the request, so I looked at the log of various requests, and found that the files contained image data.
console.log("use_info")
console.log(JSON.parse(req.body.use_info))

console.lo…]]></summary>
        <author>
            <name>off.tokyo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[NestJS:  Could be amazing someday]]></title>
        <id>https://dev.to/jjhiggz/nestjs-could-be-amazing-someday-3in7</id>
        <link href="https://dev.to/jjhiggz/nestjs-could-be-amazing-someday-3in7"/>
        <updated>2021-06-01T05:20:33.000Z</updated>
        <summary type="html"><![CDATA[Introduction


NestJS is a nice little framework for using typescript with node. It enforces opinionated design patterns that are supposed to be familiar to Java Programmers who have worked with Spring. It's built off of Node-TS and can be configured a whole shit-ton of ways. I'm personally making a postgres database using TypeORM and I'm not hating the process. 
In this article we'll get into 
Who nest might be good for
What I like about Nest so far
What I don't like about Nest so far
Why I may or may not stick with nest
The name's Jon! I've been programming for about 2 years, I started with Rails for the backend, have done a few node build and burns (admittedly not a whole lot) and then found out I had the opportunity to work on and design a big project.  Because I'm a Masochistic idiot,…]]></summary>
        <author>
            <name>Jonathan Higger</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Highlight text in paragraphs with a simple directive in Angular]]></title>
        <id>https://dev.to/angular/highlight-text-in-paragraphs-with-a-simple-directive-in-angular-2da</id>
        <link href="https://dev.to/angular/highlight-text-in-paragraphs-with-a-simple-directive-in-angular-2da"/>
        <updated>2021-06-01T04:44:44.000Z</updated>
        <summary type="html"><![CDATA[How to highlight text in a paragraph with the help of directives in Angular. Especially helpful in highlighting text matching the search term. You could have come across this in your browser or IDE when you search for something, the matching items will be highlighted to point you to the exact place of occurrence.
Here is what we are going to build in this post. A very simple and straightforward highlight directive in Angular. We see something similar in chrome dev tools.
The idea is pretty simple. We just have to match the searched term and somehow wrap the matched text in a span or mark (ref) tag so that we can style them later according to our needs.
We are going to use Regex to find matches in our paragraph. Regex makes it very simple to do operations like this on strings. The directive…]]></summary>
        <author>
            <name>Adithya Sreyaj</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Highlight text in paragraphs with a simple directive in Angular]]></title>
        <id>https://dev.to/angular/highlight-text-in-paragraphs-with-a-simple-directive-in-angular-2da</id>
        <link href="https://dev.to/angular/highlight-text-in-paragraphs-with-a-simple-directive-in-angular-2da"/>
        <updated>2021-06-01T04:44:44.000Z</updated>
        <summary type="html"><![CDATA[How to highlight text in a paragraph with the help of directives in Angular. Especially helpful in highlighting text matching the search term. You could have come across this in your browser or IDE when you search for something, the matching items will be highlighted to point you to the exact place of occurrence.
Here is what we are going to build in this post. A very simple and straightforward highlight directive in Angular. We see something similar in chrome dev tools.
The idea is pretty simple. We just have to match the searched term and somehow wrap the matched text in a span or mark (ref) tag so that we can style them later according to our needs.
We are going to use Regex to find matches in our paragraph. Regex makes it very simple to do operations like this on strings. The directive…]]></summary>
        <author>
            <name>Adithya Sreyaj</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.10.2]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.10.2</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.10.2"/>
        <updated>2021-06-01T04:39:30.000Z</updated>
        <summary type="html"><![CDATA[Added: testing and CI/CD workflows]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Logical Fallacies – Definition and Fallacy Examples]]></title>
        <id>607f5fafdd38b9088c2bd0c9</id>
        <link href="https://www.freecodecamp.org/news/logical-fallacies-definition-fallacy-examples/"/>
        <updated>2021-06-01T04:19:48.000Z</updated>
        <summary type="html"><![CDATA[When you're debating someone, you want to use all the resources at your disposal to convince them you're right. But you should be careful that you don't end up using a logical fallacy to help you make your point. What is a Logical Fallacy?A logical fallacy is an error]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular : How to automate angular deployment for AWS S3 Angular Website??]]></title>
        <id>https://dev.to/rajeshkumaryadavdotcom/angular-how-to-automate-angular-deployment-for-aws-s3-angular-website-4g2d</id>
        <link href="https://dev.to/rajeshkumaryadavdotcom/angular-how-to-automate-angular-deployment-for-aws-s3-angular-website-4g2d"/>
        <updated>2021-06-01T03:31:38.000Z</updated>
        <summary type="html"><![CDATA[If you have hosted your angular app to AWS S3 then you can automate your ng build -prod and drag and drop to S3 bucket by simply following below steps -  
Step 1 - Add @jefiozie
/ngx-aws-deploy to your project and for this run below command (your angular CLI should be up-to-date)
ng add @jefiozie/ngx-aws-deploy

Step 2 - Provide necessary details to the terminal while step 1 is in progress.

You will be prompted for a couple of questions:

Your AWS Region

The bucket you would like the files to be uploaded.

The Secret Access Key

The Access key Id

The folder where the files should be uploaded (optional)  
Step 3 - Verify the details you have provided is correct, open angular.json and search for deploy and should be able to see below code -
angular.json is update with a new builder:

"dep…]]></summary>
        <author>
            <name>Rajesh Kumar Yadav</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular : How to automate angular deployment for AWS S3 Angular Website??]]></title>
        <id>https://dev.to/rajeshkumaryadavdotcom/angular-how-to-automate-angular-deployment-for-aws-s3-angular-website-4g2d</id>
        <link href="https://dev.to/rajeshkumaryadavdotcom/angular-how-to-automate-angular-deployment-for-aws-s3-angular-website-4g2d"/>
        <updated>2021-06-01T03:31:38.000Z</updated>
        <summary type="html"><![CDATA[If you have hosted your angular app to AWS S3 then you can automate your ng build -prod and drag and drop to S3 bucket by simply following below steps -  
Step 1 - Add @jefiozie
/ngx-aws-deploy to your project and for this run below command (your angular CLI should be up-to-date)
ng add @jefiozie/ngx-aws-deploy

Step 2 - Provide necessary details to the terminal while step 1 is in progress.

You will be prompted for a couple of questions:

Your AWS Region

The bucket you would like the files to be uploaded.

The Secret Access Key

The Access key Id

The folder where the files should be uploaded (optional)  
Step 3 - Verify the details you have provided is correct, open angular.json and search for deploy and should be able to see below code -
angular.json is update with a new builder:

"dep…]]></summary>
        <author>
            <name>Rajesh Kumar Yadav</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GUI Simples no Linux Utilizando Node.js e Zenity]]></title>
        <id>https://dev.to/ferfox1981/gui-simples-no-linux-utilizando-node-js-e-zenity-1haf</id>
        <link href="https://dev.to/ferfox1981/gui-simples-no-linux-utilizando-node-js-e-zenity-1haf"/>
        <updated>2021-06-01T02:12:53.000Z</updated>
        <summary type="html"><![CDATA[(Este post é uma tradução deste original em inglês)
Meus objetivos serão os seguintes:
Usar o Node.js para acessar dados financeiros relacionados a preços de títulos do Tesouro Direto;
Criar um mecanismo para de forma sistemática checar o preço dos títulos (minuto a minuto, ou hora por hora...);
Usar o Zenity para exibir uma notificação com o preço corrente do título.
As informações do Tesouro Direto podem ser achadas aqui. Além disso, se apertarmos o F12 e checarmos a aba Network, veremos o seguinte json sendo recebido pelo browser:
https://www.tesourodireto.com.br/json/br/com/b3/tesourodireto/service/api/treasurybondsinfo.json
const axios = require('axios');
const { exec } = require("child_process");
const https = require('https');



const instance = axios.create({
  httpsAgent: new htt…]]></summary>
        <author>
            <name>Fernando Raposo da Camara Silva</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GUI Simples no Linux Utilizando Node.js e Zenity]]></title>
        <id>https://dev.to/ferfox1981/gui-simples-no-linux-utilizando-node-js-e-zenity-1haf</id>
        <link href="https://dev.to/ferfox1981/gui-simples-no-linux-utilizando-node-js-e-zenity-1haf"/>
        <updated>2021-06-01T02:12:53.000Z</updated>
        <summary type="html"><![CDATA[(Este post é uma tradução deste original em inglês)
Meus objetivos serão os seguintes:
Usar o Node.js para acessar dados financeiros relacionados a preços de títulos do Tesouro Direto;
Criar um mecanismo para de forma sistemática checar o preço dos títulos (minuto a minuto, ou hora por hora...);
Usar o Zenity para exibir uma notificação com o preço corrente do título.
As informações do Tesouro Direto podem ser achadas aqui. Além disso, se apertarmos o F12 e checarmos a aba Network, veremos o seguinte json sendo recebido pelo browser:
https://www.tesourodireto.com.br/json/br/com/b3/tesourodireto/service/api/treasurybondsinfo.json
const axios = require('axios');
const { exec } = require("child_process");
const https = require('https');



const instance = axios.create({
  httpsAgent: new htt…]]></summary>
        <author>
            <name>Fernando Raposo da Camara Silva</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular meetup videos from April, 2021]]></title>
        <id>https://dev.to/meetupfeedio/angular-meetup-videos-from-april-2021-odl</id>
        <link href="https://dev.to/meetupfeedio/angular-meetup-videos-from-april-2021-odl"/>
        <updated>2021-06-01T00:08:11.000Z</updated>
        <summary type="html"><![CDATA[MeetupFeed is back with a summary of all the exciting Angular meetup videos from April, 2021. Below you’ll find great meetup videos about different aspects of Angular, useful tips and some great tricks as well.
Systemizing Router Animations | Zack DeRose
NgRx Data and Websockets | Jay Bell
Debugging an Angular app | David Müllerchen
Token security and ESLint in Angular | Philippe De Ryck & James Henry
Can an Angular application store tokens in localStorage?
– Yes, of course! LocalStorage is persistent storage, so the token is available to all tabs and windows. It even survives a browser restart.
– No, absolutely not! LocalStorage is insecure, and an attacker will be able to steal the token.
Believe it or not, but both answers are correct. As simple as this question is, the answer is far fr…]]></summary>
        <author>
            <name>MeetupFeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Publishing a TypeScript library in 2021]]></title>
        <id>https://dev.to/dominiksumer/publishing-a-typescript-library-in-2021-2hpd</id>
        <link href="https://dev.to/dominiksumer/publishing-a-typescript-library-in-2021-2hpd"/>
        <updated>2021-05-31T22:16:59.000Z</updated>
        <summary type="html"><![CDATA[This article was originally posted on my personal website.
The last time I wanted to publish a npm package was in 2018. It was a React library which provided Components for creating Forms. It wasn’t straight forward to publish such a library back then. There were so many things to handle on your own, especially when it came to TypeScript.
Assuming you were already familiar with webpack you thought: ha that should be easy, I can leverage my knowledge and just bundle my library with webpack, exactly like my webapps. But then you suddenly heard of that new kid on the block: Rollup, which seems to do a better job at bundling libraries. So a new bundler you had to learn and still soo many things to take care of on your own.
Great that we’re now fast forwarded to 2021. There’s a new player in th…]]></summary>
        <author>
            <name>Dominik Sumer</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[JS monorepos in prod 1: project initialization]]></title>
        <id>https://dev.to/adaltas/js-monorepos-in-prod-1-project-initialization-129c</id>
        <link href="https://dev.to/adaltas/js-monorepos-in-prod-1-project-initialization-129c"/>
        <updated>2021-05-31T21:01:28.000Z</updated>
        <summary type="html"><![CDATA[Every project journey begins with the step of initialization. When your overall project is composed of multiple projects, it is tempting to create one Git repository per project. In Node.js, a project translates to a package. However, managing too many closely related repositories is confusing and time-consuming.
Placing multiple projects inside a single Git repository and using a tool like Lerna to facilitate their management worth the effort. This architecture is called a monorepo. It simplifies the versioning and publishing of the components as well as their manipulation and development.
At Adaltas, we have been developing and maintaining several monorepos for a couple of years. This article is the first one from a serie of five in which we share our best practices. It covers the projec…]]></summary>
        <author>
            <name>Worms David</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learning from React - part 3]]></title>
        <id>https://dev.to/costinmanda/learning-from-react-part-3-3dc4</id>
        <link href="https://dev.to/costinmanda/learning-from-react-part-3-3dc4"/>
        <updated>2021-05-31T20:32:49.000Z</updated>
        <summary type="html"><![CDATA[Original post at: https://siderite.dev/blog/learning-from-react---part-3/
Learning from React series:

Part 1 - why examining React is useful even if you won't end up using it
Part 2 - what Facebook wanted to do with React and how to get a grasp on it
Part 3 (this one) - what is Reactive Programming all about?
The name React is already declaring that it is used in reactive programming, but what is that? Wikipedia is defining it as "a declarative programming paradigm concerned with data streams and the propagation of change". It expands on that to say that it declares the relationship between elements and updates them when either change. You can easily imagine a graph of elements magically updating as any of them changes. However, the implementation details of that magic matter.
In 2011 Mic…]]></summary>
        <author>
            <name>Costin Manda</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How a calculation of previous month in golang can break production]]></title>
        <id>https://dev.to/nordcloud/how-a-calculation-of-previous-month-in-golang-can-break-production-1ppi</id>
        <link href="https://dev.to/nordcloud/how-a-calculation-of-previous-month-in-golang-can-break-production-1ppi"/>
        <updated>2021-05-31T20:21:56.000Z</updated>
        <summary type="html"><![CDATA[Illustration from “A Journey With Go”, created by Renee French.
In one of the applications that I'm working on, I have to calculate what is a previous month of a given date. It seems easy, isn't it? Golang provides the time package which has a method: AddDate.  
I'm quite fresh in Go, previously I was working with C#, Python and (for some time) TypeScript. Every one of these languages has also some methods to calculate time. Let's see how they work.
Let's use System.DateTime.AddMonths:
using System;

public class Program
{
    public static void Main()
    {
        var endOfMay = new DateTime(2021, 05, 31, 12, 00, 00);
        var endOfApril = endOfMay.AddMonths(-1);
        var enfOfJune = endOfMay.AddMonths(1);
        Console.WriteLine("End of May: {0}", endOfMay);
        Console.Writ…]]></summary>
        <author>
            <name>pochmurnyGrzech</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to rate limit a login route in Express using node-rate-limiter-flexible and Redis]]></title>
        <id>https://dev.to/mattdclarke/how-to-rate-limit-a-login-route-in-express-using-node-rate-limiter-flexible-and-redis-1i1k</id>
        <link href="https://dev.to/mattdclarke/how-to-rate-limit-a-login-route-in-express-using-node-rate-limiter-flexible-and-redis-1i1k"/>
        <updated>2021-05-31T20:09:37.000Z</updated>
        <summary type="html"><![CDATA[Introduction


Rate limiting is a method used for controlling network traffic. It limits the number of actions a user can make per unit of time 1. In this tutorial, we will rate limit a login route to help protect it from brute force attacks. This limits the number of password guesses that can be made by an attacker. We'll use the npm package node-rate-limiter-flexible to count and limit the number of login attempts by key. Each key will have a points value that will count the number of failed login attempts. The keys will expire after a set amount of time. The key-value pairs will be stored in Redis, which is an open-source in-memory data structure store. It has many different use cases. We will use it as a simple database. Redis is simple to use and very fast. We'll create an online inst…]]></summary>
        <author>
            <name>Matt</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to rate limit a login route in Express using node-rate-limiter-flexible and Redis]]></title>
        <id>https://dev.to/mattdclarke/how-to-rate-limit-a-login-route-in-express-using-node-rate-limiter-flexible-and-redis-1i1k</id>
        <link href="https://dev.to/mattdclarke/how-to-rate-limit-a-login-route-in-express-using-node-rate-limiter-flexible-and-redis-1i1k"/>
        <updated>2021-05-31T20:09:37.000Z</updated>
        <summary type="html"><![CDATA[Introduction


Rate limiting is a method used for controlling network traffic. It limits the number of actions a user can make per unit of time 1. In this tutorial, we will rate limit a login route to help protect it from brute force attacks. This limits the number of password guesses that can be made by an attacker. We'll use the npm package node-rate-limiter-flexible to count and limit the number of login attempts by key. Each key will have a points value that will count the number of failed login attempts. The keys will expire after a set amount of time. The key-value pairs will be stored in Redis, which is an open-source in-memory data structure store. It has many different use cases. We will use it as a simple database. Redis is simple to use and very fast. We'll create an online inst…]]></summary>
        <author>
            <name>Matt</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Humble Book Bundle: Web Development & Design by O'Reilly]]></title>
        <id>https://dev.to/haze/humble-book-bundle-web-development-design-by-o-reilly-3c20</id>
        <link href="https://dev.to/haze/humble-book-bundle-web-development-design-by-o-reilly-3c20"/>
        <updated>2021-05-31T18:28:08.000Z</updated>
        <summary type="html"><![CDATA[Humble Book Bundle: Web Development & Design by O’Reilly
We spend hours of our lives on countless websites that help us connect with each other, catch up on the latest news, buy stuff, and much more. Isn’t it about time we started making websites of our own? O’Reilly thinks so, which is why they’ve teamed up with Humble Bundle for the newest eBooks bundle!
Enjoy learning the ins and outs of web development and web design with eBooks like Learning JavaScript, Laws of UX, and Learning PHP, MySQL & JavaScript.
Your purchase of this bundle helps support Code For America, who use the principles and practices of the digital age to improve how the government serves the American public, and how the public improves government.
This bundle launched on May 31 at 11:00 am PST and lasts through June 21, 2021. Pay what you want and support charity!]]></summary>
        <author>
            <name>Haze</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular State Management With BehaviorSubject]]></title>
        <id>https://dev.to/ngconf/angular-state-management-with-behaviorsubject-22b0</id>
        <link href="https://dev.to/ngconf/angular-state-management-with-behaviorsubject-22b0"/>
        <updated>2021-05-31T17:39:10.000Z</updated>
        <summary type="html"><![CDATA[Jim Armstrong | ng-conf | Dec 2019

This article is targeted to beginning-to-intermediate-level Angular developers wishing to obtain insight into methods for state management in front-end applications. A simple, but highly customizable, reactive state-management service is constructed on top of the RxJs BehaviorSubject. This approach can be used for both management of a global store or as model manager for a lazy-loaded route. Both use cases are illustrated through an Angular version 8 application.
While the code in this application may be extended for practical use in your own applications, there is another motivation for studying the internals of state management. Doing so provides a better understanding of the underlying details of such management, which makes you a better consumer of t…]]></summary>
        <author>
            <name>ng-conf</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Serverless Functions: The Secret to Ultra-Productive Front-End Teams]]></title>
        <id>https://css-tricks.com/?p=340465</id>
        <link href="https://css-tricks.com/serverless-functions-the-secret-to-ultra-productive-front-end-teams/"/>
        <updated>2021-05-31T17:16:22.000Z</updated>
        <summary type="html"><![CDATA[Modern apps place high demands on front-end developers. Web apps require complex functionality, and the lion’s share of that work is falling to front-end devs:
building modern, accessible user interfaces
creating interactive elements and complex animations
managing complex application state
…
The post Serverless Functions: The Secret to Ultra-Productive Front-End Teams appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Jason Lengstorf</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Local: Always Getting Better]]></title>
        <id>https://css-tricks.com/?p=341482</id>
        <link href="https://css-tricks.com/local-always-getting-better/"/>
        <updated>2021-05-31T17:13:02.000Z</updated>
        <summary type="html"><![CDATA[I’ve been using Local for ages. Four years ago, I wrote about how I got all my WordPress sites running locally on it. I just wanted to give it another high five because it’s still here and still great. In …
The post Local: Always Getting Better appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Send a File With Axios in Node.js]]></title>
        <id>https://dev.to/maximization/send-a-file-with-axios-in-node-js-18g2</id>
        <link href="https://dev.to/maximization/send-a-file-with-axios-in-node-js-18g2"/>
        <updated>2021-05-31T16:46:27.000Z</updated>
        <summary type="html"><![CDATA[This article was originally published a day earlier at https://maximorlov.com/send-a-file-with-axios-in-nodejs/
Programatically sending requests in Node.js can be a frustrating experience. First, you have to choose one out of many request libraries in the ecosystem. Second, they each have a slightly different API which is confusing when you're switching.
You also have to make sure the request is formatted in a specific way for the 3rd party on the receiving end to accept it.
Just as you're starting to get the hand of axios, you soon find out there are (subtle) usage differences depending on whether you're in the browser or Node.js.
What a pain.
Only if sending files with axios in Node.js would be as easy as taking a walk in the park.
Well, it can be.
In this article, you'll learn how to se…]]></summary>
        <author>
            <name>Maxim Orlov</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular Composition API]]></title>
        <id>https://dev.to/mmuscat/angular-composition-api-93m</id>
        <link href="https://dev.to/mmuscat/angular-composition-api-93m"/>
        <updated>2021-05-31T16:10:06.000Z</updated>
        <summary type="html"><![CDATA[Angular Composition API is a lightweight (3kb), experimental library for writing functional Angular applications.
function State(props: Props) {
  Subscribe(() => {
    console.log("Hello World!")
  })
}

This library introduces an execution context that removes a lot of the ceremony needed to wire and orchestrate Angular components. It provides a layer of abstraction on top of existing Angular constructs, such as lifecycle hooks, change detection, queries, host bindings and host listeners. It embraces the power of RxJS with composable subscriptions. Angular Composition API is designed to feel native to the Angular developer.
There are two core APIs: View and Service.
The View API is a mixin that extends an Angular component or directive. It takes a State factory function and optional Prop…]]></summary>
        <author>
            <name>Michael Muscat</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Toggle your VPN connection with a shortcut, in Manjaro]]></title>
        <id>https://dev.to/shekari_ah/toggle-your-vpn-connection-with-a-shortcut-in-manjaro-10ie</id>
        <link href="https://dev.to/shekari_ah/toggle-your-vpn-connection-with-a-shortcut-in-manjaro-10ie"/>
        <updated>2021-05-31T15:55:55.000Z</updated>
        <summary type="html"><![CDATA[This is a little script that allows you to toggle your VPN connection by running a bash script. 
I mostly use it by assigning it to a shortcut (meta + v).]]></summary>
        <author>
            <name>Amir Hossein Shekari</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Error: Cannot find module 'mongodb/node_modules/bson']]></title>
        <id>https://dev.to/lexycodestudio/error-cannot-find-module-mongodb-nodemodules-bson-2ll7</id>
        <link href="https://dev.to/lexycodestudio/error-cannot-find-module-mongodb-nodemodules-bson-2ll7"/>
        <updated>2021-05-31T15:21:14.000Z</updated>
        <summary type="html"><![CDATA[1 Add "mongodb": "1.4.9" to package.json and run "npm i"



  
  
  2 Add "mongoose": "^4.4.12" to package.json and run "npm i"



  
  
  3 run npm install inside mongodb folder


In your terminal, navigate into mongodb folder like this cd node_modules\mongodb  and run "npm i"
if all these steps still failed
Reference: [github issues ]https://github.com/Automattic/mongoose/issues/2718
Volia!!!]]></summary>
        <author>
            <name>AKINRO OLAWALE</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript Modules: A walkthrough.]]></title>
        <id>https://dev.to/debojyotichatterjee9/modules-4hj</id>
        <link href="https://dev.to/debojyotichatterjee9/modules-4hj"/>
        <updated>2021-05-31T15:18:13.000Z</updated>
        <summary type="html"><![CDATA[In JavaScript, modules are pieces of encapsulated code that can reused in different parts of your application or program whenever you need it.
Basically you can write your JavaScript code without modules but breaking down your code into multiple reusable modules helps you to keep your code clean, readable, reusable and mode manageable when you have dependencies.
The syntax for modules was officially introduced in ES6. Let's have a look at the various ways we can achieve this:
This method is used for the browser environments. Large web applications require many external modules. Now, the traditional way of loading them is using the <script> element. When using <script> the browser loads them in a synchronous(sequential) fashion. Now it would be much better if we can load those external modu…]]></summary>
        <author>
            <name>Debojyoti Chatterjee</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why should we use Dark Mode?]]></title>
        <id>https://dev.to/rezaulkarim014/why-should-we-use-dark-mode-2el</id>
        <link href="https://dev.to/rezaulkarim014/why-should-we-use-dark-mode-2el"/>
        <updated>2021-05-31T14:09:16.000Z</updated>
        <summary type="html"><![CDATA[Often times it isn’t obvious whether an app or program features a dark mode. And it’s often an unassuming option buried in a menu somewhere.
But for those of you who are night owls, you’ll know that it works by reversing the usual color scheme of your windows putting light colored text on a dark background.
But it isn’t as simple as just Inverting the colors on a web page and calling it a day and you can see this if you have a browser extension that applies a dark mode as some elements on the page often. Don’t look as nice while other ones such as images won’t invert or dim properly.
So coding a good-looking dark mode that is specific to a certain website often requires a fair. A bit of finesse.
However, this often ends up being worth it as dark mode ends up delivering quite a few benefits…]]></summary>
        <author>
            <name>Rezaul karim🇧🇩</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Could Aleph.js be the next big React Framework?]]></title>
        <id>https://dev.to/codesphere/could-aleph-js-be-the-next-big-react-framework-2cgb</id>
        <link href="https://dev.to/codesphere/could-aleph-js-be-the-next-big-react-framework-2cgb"/>
        <updated>2021-05-31T14:03:13.000Z</updated>
        <summary type="html"><![CDATA[A couple of months ago we covered Deno, a new JavaScript runtime that is attempting to dethrone Node.js as the de facto runtime for executing JavaScript. Ironically, Deno is being developed by Ryan Dahl, the same developer who made Node.js back in 2009. 
Here’s that article if you're looking to learn more about our take on Deno:
https://codesphere.com/articles/say-yes-to-deno-23fa587e3877
While Deno has a lot to offer, such as built-in TypeScript support and a simpler dependency system, the biggest hurdle to its adoption is the plethora of dev tools and frameworks that are dependent on Node.js. As Deno gains traction, however, developers have begun creating new frameworks that rely on Deno instead of Node.js.
This is where Aleph.js comes in. The two most popular React frameworks for creati…]]></summary>
        <author>
            <name>Saji Wang</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why do I think Haskell is a good choice in regards to Software Security?]]></title>
        <id>https://dev.to/typeable/why-do-i-think-haskell-is-a-good-choice-in-regards-to-software-security-3do</id>
        <link href="https://dev.to/typeable/why-do-i-think-haskell-is-a-good-choice-in-regards-to-software-security-3do"/>
        <updated>2021-05-31T13:46:38.000Z</updated>
        <summary type="html"><![CDATA[Author: Ville Tirronen

The Typeable Team appreciates security! We love Haskell, but is Haskell a good choice when secure software is the goal? We would love to say yes, but like most empirical questions about software development, there is simply no hard evidence that Haskell, or any general programming language, is more secure than any other. That is not to say that the Typeable's language choice doesn't matter in regards to security, but how it does may need to be elaborated.
After teaching introductory Software Security for half a decade I can attest that Software Security has no universal theory on which to rely.  Security is most often taught by enumerating different security issues, mitigations and security models and hoping that students can build from them to gain general understa…]]></summary>
        <author>
            <name>Catherine Galkina</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using route tables to implement multiple-network-interface scenario]]></title>
        <id>https://dev.to/sagar027/using-route-tables-to-implement-multiple-network-interface-scenario-k1d</id>
        <link href="https://dev.to/sagar027/using-route-tables-to-implement-multiple-network-interface-scenario-k1d"/>
        <updated>2021-05-31T13:39:14.000Z</updated>
        <summary type="html"><![CDATA[There could scenarios where you would want to isolate traffic on network interfaces for specific layers of applications. Example, one interface attached to an application machine can act as a receiving endpoint for application-bound traffic and another network interface can act as a communication interface with the database / data layer. This scenario can be visualised as :

Now, lets see how this can be implemented. I am going to use Azure for demonstration.
In Azure, private networks are referred to as 'Virtual Networks' and sub-networks as 'Subnets’
Our virtual network's address space is : 10.0.16.0/22.
Here, as you can see we have our application linux machine (also referred to as Virtual Machine aka VM) in a virtual network. The VM has two network interfaces. One is in first subnet (l…]]></summary>
        <author>
            <name>sagar027</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Install Nginx on Ubuntu 20.04 Server]]></title>
        <id>https://dev.to/semirteskeredzic/install-nginx-on-ubuntu-20-04-server-12ni</id>
        <link href="https://dev.to/semirteskeredzic/install-nginx-on-ubuntu-20-04-server-12ni"/>
        <updated>2021-05-31T13:28:12.000Z</updated>
        <summary type="html"><![CDATA[Welcome to the short guide on how to install Nginx on your server running Ubuntu 20.04.
So what is Nginx? As per nginx.com: 
Nginx is open source software for web serving, reverse proxying, caching, load balancing, media streaming, and more. It started out as a web server designed for maximum performance and stability. In addition to its HTTP server capabilities, NGINX can also function as a proxy server for email (IMAP, POP3, and SMTP) and a reverse proxy and load balancer for HTTP, TCP, and UDP servers.
So in short, Nginx is a web server that has many capabilities in serving the content on server to the users.
You have to check that the server you want to install Nginx on is properly configured before proceeding so you can install and configure Nginx without any future issues. You can re…]]></summary>
        <author>
            <name>Semir Teskeredzic</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[O Paciente Terminal #2]]></title>
        <id>https://dev.to/kennyalves/o-paciente-terminal-2-115h</id>
        <link href="https://dev.to/kennyalves/o-paciente-terminal-2-115h"/>
        <updated>2021-05-31T13:05:55.000Z</updated>
        <summary type="html"><![CDATA[Em busca de um mestre Yoda


Como ficou decidido que o objetivo era se tornar um dev front-end, agora precisava desvendar o caminho das pedras para conseguir chegar a terra sonhada. 
Pra isso, precisava responder algumas perguntas como:
- Certo, mas por onde eu começo?
- Tem algum curso bom?
- Quais são as melhores escolas?
Saí em busca das respostas, na maravilhosa rede internética mundial de computadores e como nada é simples, muito menos na vida de um newbie, todos os lugares respondiam coisas diferentes.
Mas tinha um consenso. Quer ser Front-End? Aprenda HTML5, CSS e JavaScript. É isso, simples assim, agora voa assombração, se vira.
Mas onde, caral@#%, vou iniciar essa jornada? 🤯
Entre os óbvios, e pagos, que seriam a Alura e a Udemy, encontrei num fórum que não lembro qual (obrigado …]]></summary>
        <author>
            <name>Kenny Alves</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Basic HTTP authentication in Traefik]]></title>
        <id>https://dev.to/limal/basic-http-authentication-in-traefik-15l6</id>
        <link href="https://dev.to/limal/basic-http-authentication-in-traefik-15l6"/>
        <updated>2021-05-31T12:21:38.000Z</updated>
        <summary type="html"><![CDATA[In order to secure your website with Basic HTTP authentication in Traefik do the following.
apache2-utils





sudo apt install apache2-utils

htpasswd -nB adam

The n option will display the hash in stdout and the B option will use more secure encryption.
devto password's hash is shown below:
adam:$2y$05$h9OxLeY20/5uiXjfPgdRxuFlrfqBf2QifYDgrwsR6rAEgX3/dpOGq

adam:$$2y$$05$$h9OxLeY20/5uiXjfPgdRxuFlrfqBf2QifYDgrwsR6rAEgX3/dpOGq

- "traefik.http.middlewares.yourservice-basicauth.basicauth.users=adam:$$2y$$05$$h9OxLeY20/5uiXjfPgdRxuFlrfqBf2QifYDgrwsR6rAEgX3/dpOGq"

Remember to use the escaped double $.
You may have existing rules for your HTTPS route, e.g. compressing, etc.
So create a new chain where you'll combine your existing middlewars and the newly created yoursite-basicauth.
In your docker-compose.yml file:
  labels:
    - "traefik.http.middlewares.yourservice-https-chain.chain.middlewares=yourservice-basicauth,yourservice-other-middleware-remove-or-replace-with-yours"
    - "traefik.http.routers.yourservice-https.middlewares=yourservice-https-chain"


Restart your service and your website will now prompt browsers for username and password.]]></summary>
        <author>
            <name>Łukasz Wolnik</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Happy June Vibes For Your Screen (2021 Desktop Wallpapers Edition)]]></title>
        <id>https://smashingmagazine.com/2021/05/desktop-wallpaper-calendars-june-2021/</id>
        <link href="https://smashingmagazine.com/2021/05/desktop-wallpaper-calendars-june-2021/"/>
        <updated>2021-05-31T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[What could be a better way to welcome June than with some colorful inspiration? Well, we might have something for you: wallpapers created with love by artists and designers from across the globe.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cosima Mielke)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why I Switched to vi/vim]]></title>
        <id>https://dev.to/harvey/why-i-switched-to-vi-vim-4hd1</id>
        <link href="https://dev.to/harvey/why-i-switched-to-vi-vim-4hd1"/>
        <updated>2021-05-31T10:58:53.000Z</updated>
        <summary type="html"><![CDATA[When I started writing code, I used Notepad and Notepad++. When I switched to OS X. In my first computer science class in high school we used Visual Studio.
When I finally migrated to Linux, I started using vi/vim after using nano for a while. Unlike nano, vim is a lot more powerful but is harder to learn.
How did I go from never using vim to using it all the time? How does one make a complete switch? I'll walk you through how I got here and share some tips along the way.
If you are trying to learn Vim, or you are on the fence about it, here are my top 5 reasons why I love this keyboard-centered editor:
The more I used it, the faster I became, and the faster I became the more productive I was.


It's everywhere. Linux, OpenBSD, FreeBSD, Mac OS X and every other operating system supports Vi/Vim. 


I don't like to use my mouse. I never did anything in Sublime Text without the help of my mouse. This is a annoying, easier to keep hands on the keyboard


It can be used over the network using ssh. Login to any box and use it.


I use it for almost everything: programming, writing, blogging, etc.




Switching is up to you, but here are my reasons.
Why would somebody use ancient tools like vi/vim when there are so many modern ones out there? 
One day I had to answer this question for my friend. He asked, “Why don’t you use Sublime Text like me?” I explain to him that sometimes it’s better to use older/simpler tools than more complex ones.
Here are my reasons:
Learn how to use the best editor ever made.
Never get lost in a sea of menus and toolbars that you never use (just like vim does not have any).
Have an excuse to use powerful, built-in commands that are available in no other editor (and are faster than anything you can do with a GUI).
Work fast using commands
To practice vim, you can use this site]]></summary>
        <author>
            <name>Harvey</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[tmux terminal multiplexer]]></title>
        <id>https://dev.to/jones268/tmux-terminal-multiplexer-484</id>
        <link href="https://dev.to/jones268/tmux-terminal-multiplexer-484"/>
        <updated>2021-05-31T09:31:24.000Z</updated>
        <summary type="html"><![CDATA[tmux is a terminal multiplexer: it enables a number of terminals (or windows), each running a separate program, to be created, accessed, and controlled from a single screen. 
tmux may be detached from a screen and continue running in the background, then later reattached. 
It allows you to easily manage separate terminal sessions inside a single terminal window. 
tmux can connect to a server, and multiple clients can be connected to the same session, simultaneously exchanging their input and display.

You can use these commands and shortcuts to work with tmux in Linux. From the command line:



Session Control





tmux
Start a new session


tmux new -s 
Start a new session with the name chosen


tmux ls
List all sessions






Pane Control





Ctrl b, "
Split pane horizontally


Ctrl b, %
Split pane vertically


Ctrl b, o
Next pane



I've used tmux for years, and it has become an essential part of my work flow. I couldn't imagine editing code without it. If you want to practice Linux commands, you can use these exercises 
tmux is a terminal multiplexer: it enables a number of terminals to be created, accessed, and controlled from a single screen.
Features include:
• Splitting a terminal window into horizontal or vertical panes.

tmux is very useful for people who commonly work on remote machines via ssh.
Why did I pick tmux over screen and a terminal multiplexer? Three reasons.
First, tmux is written is responsive and light.
Second, tmux is much more expressive than screen. I can split my terminal into six panes and change the size of each pane with the same ease as resizing a terminal in GNU Screen.
Third, tmux has integrated support for a status bar. This means I can read from one pane and keep an eye on other panes at the same time.]]></summary>
        <author>
            <name>jones268</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Encrypt your S3 Object]]></title>
        <id>https://dev.to/aws-builders/encrypt-your-s3-object-1al</id>
        <link href="https://dev.to/aws-builders/encrypt-your-s3-object-1al"/>
        <updated>2021-05-31T08:28:00.000Z</updated>
        <summary type="html"><![CDATA[The idea behind Encrypting your S3 object is that you upload objects onto Amazon S3 and these are servers of AWS so you may want to make sure that these objects are not accessible for example, if someone gets into the Amazon servers or you wanna make sure you get adhere to some security standards set up by your company. As such, Amazon gives you four methods to encrypt objects in Amazon S3. 
The first one is called SSE S3. This is to encrypt S3 objects, using keys handled and managed by AWS. 
The second one is SSE-KMS. It leverages AWS key management service to manage your encryption keys. 
The third one is SSE-C. It is used when you manage your own encryption keys.
Finally Client-side encryption.
Now we're going to do a deep dive on all of those so don't worry. 

This is an encryption whe…]]></summary>
        <author>
            <name>Sujithra</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Install MODX Revolution on Ubuntu 20.04]]></title>
        <id>https://dev.to/hostnextra/how-to-install-modx-revolution-on-ubuntu-20-04-20ob</id>
        <link href="https://dev.to/hostnextra/how-to-install-modx-revolution-on-ubuntu-20-04-20ob"/>
        <updated>2021-05-31T04:14:18.000Z</updated>
        <summary type="html"><![CDATA[In this article, we'll explain how to install MODX Revolution on Ubuntu 20.04 with LAMP.
MODX offers the best qualities of content management systems, web development frameworks, and cloud hosting with less complexity, limitations, and bloat. It’s the Content Management Framework built to help you deliver any digital experience faster, your way, and with improved SEO, security, and speed.
Prerequisites
An Ubuntu 20.04 installed dedicated server or KVM VPS.
A root user access or normal user with administrative privileges.
Install MODX Revolution on Ubuntu 20.04 with LAMP
1. Keep the server updated
Update the package repository index, and upgrade the installed packages.
# apt update && sudo apt -y upgrade
2. Install Apache webserver
# apt install apache2 -y
In case, you enabled firewall and …]]></summary>
        <author>
            <name>HostnExtra Technologies</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Sample Dtrace in Linux]]></title>
        <id>https://dev.to/sbalasa/sample-dtrace-in-linux-2pp3</id>
        <link href="https://dev.to/sbalasa/sample-dtrace-in-linux-2pp3"/>
        <updated>2021-05-31T03:49:56.000Z</updated>
        <summary type="html"><![CDATA[#!/usr/sbin/dtrace -s
#pragma D option quiet

BEGIN
{
        printf("Starting vxdisk resize analysis at %lu", timestamp);
        printf("\n");
}

END
{
        printf("Ending vxdisk resize analysis at %lu", timestamp);
        printf("\n");
}


#!/usr/sbin/dtrace -s
#pragma D option quiet

fbt:vxio:volsp_strategy:entry
{
        printf("%Y vm issued IO buf %p\n", walltimestamp, arg0);
        self->buf=arg0;
}

fbt::ldi_strategy:entry
/self->buf == arg0/
{
        printf(" %Y ldi_strategy received vm buf %p\n", walltimestamp, arg0);
}

fbt::ldi_strategy:return
/self->buf == arg1/
{
        printf(" %Y ldi_strategy returned vm buf %p\n", walltimestamp, arg1);
}]]></summary>
        <author>
            <name>Santhosh Balasa</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Famous Misconceptions in Angular]]></title>
        <id>https://dev.to/angular/the-famous-misconceptions-in-angular-3dl1</id>
        <link href="https://dev.to/angular/the-famous-misconceptions-in-angular-3dl1"/>
        <updated>2021-05-31T01:38:27.000Z</updated>
        <summary type="html"><![CDATA[As Front End developer who worked in Forune 500 companies such as Raymond James financial advisory company and SwissRe leading insurance broker, in this blog we gonna discuss some famous misconceptions among non- Angular developers. This blog should be unbiased and focused on facts only.
Myth #1: Steep Learning Curve in Angular

One of the famous misleading opinions we observe among people especially on Twitter and youtube gurus is ‘Angular has a steep learning curve’. The short answer is yes, Angular has not a small road to learning and master. But let’s first analyze the definition of this concept. A steep learning curve refers to: ‘The amount of time required to learn is big’. Interesting but what makes it BIG? First, let’s point out Angular is a fully-featured framework. It has built-i…]]></summary>
        <author>
            <name>Vugar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why your website needs validation]]></title>
        <id>https://dev.to/jordanfinners/why-your-website-needs-validation-44jm</id>
        <link href="https://dev.to/jordanfinners/why-your-website-needs-validation-44jm"/>
        <updated>2021-05-30T21:19:39.000Z</updated>
        <summary type="html"><![CDATA[Contents



 Intro

 Forms

 Custom Validation

 Summary




  
  
  Intro 


Continuing on from my previous blog about website security week, we're going to talk about a validation.
If accept user input, you are going to need to validate the input. Non validated user inputs can lead to security vulnerabilities for example SQL injection attacks, where user input escapes your database and starts modifying it. It can also lead to exceptions from your code if a user inputs text rather than a number for example.
Please Please Please ensure you do the same validation server side as you do on the frontend (client) side.



You user inputs should be contained in HTML forms which comes with lots of powerful validation tools built in.
First thing to check on your inputs is, are you using the correc…]]></summary>
        <author>
            <name>Jordan Finneran</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to add editable post angular]]></title>
        <id>https://dev.to/mateuszto/how-to-add-editable-post-angular-44el</id>
        <link href="https://dev.to/mateuszto/how-to-add-editable-post-angular-44el"/>
        <updated>2021-05-29T15:21:54.000Z</updated>
        <summary type="html"><![CDATA[Hi, i got my app and now I try to make edit feature but I can't do you got any tutorials or tips?
https://stackblitz.com/edit/angular-ivy-qkhrjx?file=src%2Fapp%2Fnotes%2Fnotes.component.ts]]></summary>
        <author>
            <name>Mateusz Tomczyk</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Setup CI/CD Pipeline using Gitlab-CI to Deploy to Azure Storage & Azure CDN.]]></title>
        <id>https://dev.to/chrisedrego/how-to-setup-ci-cd-pipeline-using-gitlab-ci-to-deploy-to-azure-storage-azure-cdn-15g5</id>
        <link href="https://dev.to/chrisedrego/how-to-setup-ci-cd-pipeline-using-gitlab-ci-to-deploy-to-azure-storage-azure-cdn-15g5"/>
        <updated>2021-05-29T07:56:58.000Z</updated>
        <summary type="html"><![CDATA[A Complete Zero-to-Hero guide in setting up a CI/CD Pipeline using Gitlab-CI to deploy with the help of Azure Storage



For the purpose of this demo, I have already created a simple Angular 7 application that is hosted on Gitlab, the application is a simple, digital clock that looks something like this.


The above diagram describes the whole process, right from a developer pushing the code, to the point where the CI/CD Pipeline builds & deploys the code to Azure Storage (Blob) which is linked to Azure CDN Endpoint.
Developer goes ahead and performs the development locally of the application after which he goes ahead and commits and pushes the code to the version control system in our case it’s Gitlab.


We would then have Gitlab perform the CI/CD in the form of the steps mentioned in git…]]></summary>
        <author>
            <name>chrisedrego</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[p-MultiSelect - JAWS - Issue]]></title>
        <id>https://dev.to/goku2358/p-multiselect-jaws-issue-2a3f</id>
        <link href="https://dev.to/goku2358/p-multiselect-jaws-issue-2a3f"/>
        <updated>2021-05-28T21:02:17.000Z</updated>
        <summary type="html"><![CDATA[p-multiselect isnt getting read by JAWS screen reader for some reason. Can someone help please?]]></summary>
        <author>
            <name>Gokul Nath</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Secure Your Android App – Four Security Best Practices Every Android Dev Should Know]]></title>
        <id>60b08d8811ffb70827ef8c7b</id>
        <link href="https://www.freecodecamp.org/news/how-to-secure-your-android-app/"/>
        <updated>2021-05-28T16:01:05.000Z</updated>
        <summary type="html"><![CDATA[If you've been following the news lately, you may have noticed a worrisome tech trend. The frequency and severity of cybersecurity attacks are exploding.  We've seen news of a sprawling hack involving the SolarWinds management platform. That attack may have compromised the systems of over 18,000 SolarWinds customers.  Then,]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dynamic Favicons for WordPress]]></title>
        <id>https://css-tricks.com/?p=341163</id>
        <link href="https://css-tricks.com/dynamic-favicons-for-wordpress/"/>
        <updated>2021-05-28T14:36:47.000Z</updated>
        <summary type="html"><![CDATA[Typically, a single favicon is used across a whole domain. But there are times you wanna step it up with different favicons depending on context. A website might change the favicon to match the content being viewed. Or a site …
The post Dynamic Favicons for WordPress appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Thomas Park</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Advanced Computer Vision with Python]]></title>
        <id>60b0de2211ffb70827ef8d7c</id>
        <link href="https://www.freecodecamp.org/news/advanced-computer-vision-with-python/"/>
        <updated>2021-05-28T12:26:38.000Z</updated>
        <summary type="html"><![CDATA[More and more applications are using computer vision these days. We just published a full course on the freeCodeCamp.org YouTube channel that will help you learn advanced computer vision using Python. You will learn state of the art computer vision techniques by building five projects with libraries such as]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Adding A Commenting System To A WYSIWYG Editor]]></title>
        <id>https://smashingmagazine.com/2021/05/commenting-system-wysiwyg-editor/</id>
        <link href="https://smashingmagazine.com/2021/05/commenting-system-wysiwyg-editor/"/>
        <updated>2021-05-28T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this article, we’ll be re-using the foundational WYSIWYG Editor built in the first article to build a commenting system for a WYSIWYG Editor that enables users to select text inside a document and share their comments on it. Let’s dig in!]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Shalabh Vyas)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Best Frontend Framework: The Battle Lines are Drawn]]></title>
        <id>https://dev.to/manav_jain/the-best-frontend-framework-the-battle-lines-are-drawn-3onm</id>
        <link href="https://dev.to/manav_jain/the-best-frontend-framework-the-battle-lines-are-drawn-3onm"/>
        <updated>2021-05-28T07:31:07.000Z</updated>
        <summary type="html"><![CDATA[Taking into thought the viewpoint of the product development life cycle, the correct decision among top front-end frameworks will be the major advance of your future achievement. 
The market has a wide variety because of the tremendous arrangement of difficulties that developers address each day. Along these lines the quantity of new front-end frameworks extensively increments. An ever increasing number of various frameworks show up, and in this article, we would examine top front-end frameworks in 2021. 
At the point when you settle on your decision, remember certain necessities that will help you incredibly. Choosing among top UI frameworks, consider both the clients' and development groups' points of view. Those features cover "planning, development, testing and upkeep stages**. 
The be…]]></summary>
        <author>
            <name>Manav Jain</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Your Angular code base is deprecated.]]></title>
        <id>https://dev.to/shivamd20/your-angular-code-base-is-deprecated-315e</id>
        <link href="https://dev.to/shivamd20/your-angular-code-base-is-deprecated-315e"/>
        <updated>2021-05-27T23:27:40.000Z</updated>
        <summary type="html"><![CDATA[No, upgrading to Angular 12.x.x will not help.
The Typescript experimental decorators were based on TC39 proposal-decorators.
We use the same Decorators in our Angular codebase to create services, components and other Angular constructs.
But the same TC39 proposal has evolved in a different direction which is semantically not compatible with the experimental Typescript decorators.   
The new spec for Decorators is easier to use and write.
You can find the detailed comparison between old and new decorators here. 
Just finished up the first draft of the new decorators spec, pretty excited about it 😄 https://t.co/ELhZbsiaiR
— The p is silent (@pzuraq
) May 27, 2021
 



Does this mean that Typescript experimental decorators will not be compatible with Javascript decorators 😨
— Shivam (@shivamd20
) May 27, 2021
 



Unfortunately no, the new proposal has differing semantics from previous proposals in a number of ways. TypeScript experimental decorators were also incompatible with the Define semantics class fields, which caused a decent amount of breakage in the ecosystem.
— The p is silent (@pzuraq
) May 27, 2021
 



When the proposal advances, figuring out a step-by-step incremental upgrade path for existing decorators users is definitely going to be a priority though! No user left behind 😄
— The p is silent (@pzuraq
) May 27, 2021
 

Let's just hope that this doesn’t result in fragmentation of JavaScript decorators. We have already faced a lot inconvenience due to commonsjs and ES6 imports.]]></summary>
        <author>
            <name>Shivam</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[To $ or Not to $: Displaying Terminal Code Snippets]]></title>
        <id>https://css-tricks.com/?p=341298</id>
        <link href="https://css-tricks.com/to-or-not-to-displaying-terminal-code-snippets/"/>
        <updated>2021-05-27T18:22:11.000Z</updated>
        <summary type="html"><![CDATA[It’s very popular to put a $ on lines that are intended to be a command in code documentation that involves the terminal (i.e. the command line).
Like this:
$ brew install somepackage
The point of that is that it …
The post To $ or Not to $: Displaying Terminal Code Snippets appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Improve Machine Learning Model Performance by Combining Categorical Features]]></title>
        <id>60af931811ffb70827ef85d3</id>
        <link href="https://www.freecodecamp.org/news/improve-machine-learning-model-performance-by-combining-categorical-features/"/>
        <updated>2021-05-27T17:55:23.000Z</updated>
        <summary type="html"><![CDATA[When you're training a machine learning model, you can have some features in your dataset that represent categorical values. Categorical features are types of data that you can divide into groups. There are three common categorical data types: Ordinal – a set of values in ascending or descending order. Example: rating]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Make a Bouncing Basketball in Unity with Materials and Textures 🏀]]></title>
        <id>60a325c6906c5207e3a7da25</id>
        <link href="https://www.freecodecamp.org/news/how-to-make-a-basketball-in-unity-with-materials-and-textures/"/>
        <updated>2021-05-27T15:16:34.000Z</updated>
        <summary type="html"><![CDATA[In this article, I'll teach you how to make a basketball using materials and textures in Unity. You can extend this micro-concept to create any kind of ball like a football, tennis ball, or snooker balls.  That said, these techniques aren't just limited to creating round 3D objects like balls.]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Show Images on Click]]></title>
        <id>https://css-tricks.com/?p=341020</id>
        <link href="https://css-tricks.com/how-to-show-images-on-click/"/>
        <updated>2021-05-27T14:25:29.000Z</updated>
        <summary type="html"><![CDATA[Most images on the web are superfluous. If I might be a jerk for a bit, 99% of them aren’t even that helpful at all (although there are rare exceptions). That’s because images don’t often complement the text they’re …
The post How to Show Images on Click appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Robin Rendle</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Rethinking Postgres in a Post-Server World]]></title>
        <id>https://css-tricks.com/?p=340910</id>
        <link href="https://css-tricks.com/rethinking-postgres-in-a-post-server-world/"/>
        <updated>2021-05-27T14:23:23.000Z</updated>
        <summary type="html"><![CDATA[Serverless architectures have brought engineering teams a great number of benefits. We get simpler deployments, automatic and infinite scale, better concurrency, and a stateless API surface. It’s hard to imagine going back to the world of managed services, broken local …
The post Rethinking Postgres in a Post-Server World appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Michael Rispoli</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Useful VS Code Extensions For Front-End Developers]]></title>
        <id>https://smashingmagazine.com/2021/05/useful-vs-code-extensions-web-developers/</id>
        <link href="https://smashingmagazine.com/2021/05/useful-vs-code-extensions-web-developers/"/>
        <updated>2021-05-27T13:30:00.000Z</updated>
        <summary type="html"><![CDATA[Meet useful Visual Studio Code extensions for web developers: little helpers to minimize slow-downs and frustrations, and boost developer’s workflow along the way. With auto log messages, auto code formatting, file utils, file labels, code snippets, highlight brackets, tags, indents and workspaces, onboarding and remote SSH.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cosima Mielke)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Build And Launch Powerful Responsive Websites With Editor X]]></title>
        <id>https://smashingmagazine.com/2021/05/build-launch-responsive-websites-editorx/</id>
        <link href="https://smashingmagazine.com/2021/05/build-launch-responsive-websites-editorx/"/>
        <updated>2021-05-27T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[While web builders have been around for a long time, it wasn’t until recently that they became practical for professional use. Closing the gap between design and code has become the north star for many companies and we are seeing a wave of tools that deliver on this promise.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Miroslav Bekyarov)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Awesome Standalone (Web Components)]]></title>
        <id>https://css-tricks.com/?p=339759</id>
        <link href="https://css-tricks.com/awesome-standalone-web-components/"/>
        <updated>2021-05-26T17:56:34.000Z</updated>
        <summary type="html"><![CDATA[In his last An Event Apart talk, Dave made a point that it’s really only just about right now that Web Components are becoming a practical choice for production web development. For example, it has only been about a year …
The post Awesome Standalone (Web Components) appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Links on Web Components]]></title>
        <id>https://css-tricks.com/?p=340901</id>
        <link href="https://css-tricks.com/links-on-web-components/"/>
        <updated>2021-05-26T17:56:12.000Z</updated>
        <summary type="html"><![CDATA[How we use Web Components at GitHub — Kristján Oddsson talks about how GitHub is using web components. I remember they were very early adopters, and it says here they released a <relative-time> component in 2014! Now they’ve got a 
…
The post Links on Web Components appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Thorough Analysis of CSS-in-JS]]></title>
        <id>https://css-tricks.com/?p=340705</id>
        <link href="https://css-tricks.com/a-thorough-analysis-of-css-in-js/"/>
        <updated>2021-05-26T14:08:49.000Z</updated>
        <summary type="html"><![CDATA[Wondering what’s even more challenging than choosing a JavaScript framework? You guessed it: choosing a CSS-in-JS solution. Why? Because there are more than 50 libraries out there, each of them offering a unique set of features.
We tested 10 different …
The post A Thorough Analysis of CSS-in-JS appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Andrei Pfeiffer</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Accessible SVGs: Perfect Patterns For Screen Reader Users]]></title>
        <id>https://smashingmagazine.com/2021/05/accessible-svg-patterns-comparison/</id>
        <link href="https://smashingmagazine.com/2021/05/accessible-svg-patterns-comparison/"/>
        <updated>2021-05-26T13:20:00.000Z</updated>
        <summary type="html"><![CDATA[Discover which SVG patterns we should avoid and which patterns are the most inclusive when comparing different combinations of OSs, browsers, and screen readers.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Carie Fisher)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.9.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.9.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.9.0"/>
        <updated>2021-05-26T06:02:55.000Z</updated>
        <summary type="html"><![CDATA[Added: experimental support for iTunes podcast feed: Demo | Source. With this new release, you can render an audio control to play the mp3 file and display iTunes episode duration. It is "experimental" due to these caveats:

This feature is currently only available through custom template.
iTunes has no strict format requirement for duration. The unit is most likely seconds but can be "hh:mm:ss" or "mm:ss" for some sources. A future version may expose a human readable string to the template.
No image support yet. Some shows might have disabled CORS or use a relative URL for image, which forces osmosfeed to download the image during build. A future version may support it.
You can't republish the podcast in the feed output. Supporting this goes beyond the scope of the project at the moment.
Fixed: the articles in template data were not sorted.
Thank you @Zenigata]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What I Learned Building a Word Game App With Nuxt on Google Play]]></title>
        <id>https://css-tricks.com/?p=340759</id>
        <link href="https://css-tricks.com/what-i-learned-building-a-word-game-app-with-nuxt-on-google-play/"/>
        <updated>2021-05-25T14:25:06.000Z</updated>
        <summary type="html"><![CDATA[I fell in love with coding the moment I created my first CSS :hover effect. Years later, that initial bite into interactivity on the web led me to a new goal: making a game.
Table of contents
What’s the game 
…
The post What I Learned Building a Word Game App With Nuxt on Google Play appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Josh Collinsworth</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Guide To Undoing Mistakes With Git (Part 2)]]></title>
        <id>https://smashingmagazine.com/2021/05/undoing-mistakes-git-part2/</id>
        <link href="https://smashingmagazine.com/2021/05/undoing-mistakes-git-part2/"/>
        <updated>2021-05-25T14:00:00.000Z</updated>
        <summary type="html"><![CDATA[Mistakes. These cruel villains do not even stop at the beautiful world of software development. But although we cannot avoid making mistakes, we can learn to undo them! This post will show the right tools for your daily work with Git.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Tobias Günther)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Creating Powerful Websites with Serverless-Driven CMS Development]]></title>
        <id>https://css-tricks.com/?p=341383</id>
        <link href="https://css-tricks.com/creating-powerful-websites-with-serverless-driven-cms-development/"/>
        <updated>2021-05-25T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[Choosing the right tools to build a website for your organization is essential, but it can be tough to find the right fit. Simple site builders like Wix and Squarespace are easy for marketers to use, but severely limit developers …
The post Creating Powerful Websites with Serverless-Driven CMS Development appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Ahmed Bouchefra</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A New Way To Reduce Font Loading Impact: CSS Font Descriptors]]></title>
        <id>https://smashingmagazine.com/2021/05/reduce-font-loading-impact-css-descriptors/</id>
        <link href="https://smashingmagazine.com/2021/05/reduce-font-loading-impact-css-descriptors/"/>
        <updated>2021-05-25T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[Web fonts are often terrible for web performance and none of the font loading strategies are particularly effective to address that. Upcoming font options may finally deliver on the promise of making it easier to align fallback fonts to the final fonts.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Barry Pollard)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Links on Performance]]></title>
        <id>https://css-tricks.com/?p=340808</id>
        <link href="https://css-tricks.com/links-on-performance/"/>
        <updated>2021-05-24T22:03:30.000Z</updated>
        <summary type="html"><![CDATA[Making GitHub’s new homepage fast and performant — Tobias Ahlin describes how the scrolling effects are done more performantly thanks to IntersectionObserver and the fact that it avoids the use of methods that trigger reflows, like getBoundingClientRect. Also, 
…
The post Links on Performance appeared first on CSS-Tricks.
You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS Container Queries: Use-Cases And Migration Strategies]]></title>
        <id>https://smashingmagazine.com/2021/05/css-container-queries-use-cases-migration-strategies/</id>
        <link href="https://smashingmagazine.com/2021/05/css-container-queries-use-cases-migration-strategies/"/>
        <updated>2021-05-24T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[CSS Container queries bring media queries closer to the target elements themselves and enables them to adapt to virtually any given container or layout. In this article, we’re going to cover CSS container query basics and how to use them today with progressive enhancement or polyfills.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Adrian Bece)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.8.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.1"/>
        <updated>2021-05-23T05:40:12.000Z</updated>
        <summary type="html"><![CDATA[Fixed: UnhandledPromiseRejectionWarning: Error: At least one option must be a string]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.8.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.0"/>
        <updated>2021-05-23T05:12:08.000Z</updated>
        <summary type="html"><![CDATA[Changed: Smart summary truncation. When there is no dedicated summary (only Atom feed has it, and many sites don't use it) from the source, we check if the content/description (Both Atom and RSS) field is long enough to be full text. If so, it will be truncated into a "pseudo" summary. If not, we assume the source used the content field as summary, and it will be displayed in full length.
Thank you: @LooperXX.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building A Rich Text Editor (WYSIWYG)]]></title>
        <id>https://smashingmagazine.com/2021/05/building-wysiwyg-editor-javascript-slatejs/</id>
        <link href="https://smashingmagazine.com/2021/05/building-wysiwyg-editor-javascript-slatejs/"/>
        <updated>2021-05-21T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[Let’s build a rich text, WYSIWYG-editor that supports rich text, images, links and some nuanced features from word processing apps. We will use SlateJS to build the shell of the editor and then add a toolbar and custom configurations.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Shalabh Vyas)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Boost Your Skills Online: Smashing Workshops On Front-End And Design]]></title>
        <id>https://smashingmagazine.com/2021/05/new-online-workshops-front-end-ux/</id>
        <link href="https://smashingmagazine.com/2021/05/new-online-workshops-front-end-ux/"/>
        <updated>2021-05-20T14:20:00.000Z</updated>
        <summary type="html"><![CDATA[Front-end and design are remarkably complex these days. That’s why we invite kind, smart folks from the community to run online workshops for all of us to learn together. And we have new ones coming up, and we’d like to kindly welcome you to join in.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Iris Lješnjanin)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Implement Authentication In Next.js With Auth0]]></title>
        <id>https://smashingmagazine.com/2021/05/implement-authentication-nextjs-auth0/</id>
        <link href="https://smashingmagazine.com/2021/05/implement-authentication-nextjs-auth0/"/>
        <updated>2021-05-20T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[A step-by-step tutorial on adding authentication and authorization to your Next.js apps, with Auth0. We’ll be using a Next.js SDK to connect our application to the Auth0 API and will create the dynamic API route for React.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Facundo Giuliani)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Frustrating Design Patterns: Mega-Dropdown Hover Menus]]></title>
        <id>https://smashingmagazine.com/2021/05/frustrating-design-patterns-mega-dropdown-hover-menus/</id>
        <link href="https://smashingmagazine.com/2021/05/frustrating-design-patterns-mega-dropdown-hover-menus/"/>
        <updated>2021-05-19T11:40:00.000Z</updated>
        <summary type="html"><![CDATA[Everything to keep in mind when designing and building a mega-dropdown, common pitfalls, hover entry/exit delays, trajectory triangle technique and SVG path exit areas.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Vitaly Friedman)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Create, Edit And Animate SVGs All In One Place With SVGator 3.0]]></title>
        <id>https://smashingmagazine.com/2021/05/create-edit-animate-svg-svgator3/</id>
        <link href="https://smashingmagazine.com/2021/05/create-edit-animate-svg-svgator3/"/>
        <updated>2021-05-18T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[Today, we are taking a closer look at [SVGator 3.0](https://www.svgator.com/?utm_source=article&utm_medium=smashingmag&utm_campaign=svgator3_smashing), a new major release of the popular SVG application that lets you create, edit and animate SVG files and make the best out of what SVG has to offer — from start to finish.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Mikołaj Dobrucki)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 37 With Adam Argyle: What Is VisBug?]]></title>
        <id>https://smashingmagazine.com/2021/05/smashing-podcast-episode-37/</id>
        <link href="https://smashingmagazine.com/2021/05/smashing-podcast-episode-37/"/>
        <updated>2021-05-18T05:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode, we’re talking about VisBug. What is it, and how is it different from the array of options already found in Chrome DevTools? Drew McLellan talks to its creator Adam Argyle to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How We Improved Our Core Web Vitals (Case Study)]]></title>
        <id>https://smashingmagazine.com/2021/05/core-web-vitals-case-study/</id>
        <link href="https://smashingmagazine.com/2021/05/core-web-vitals-case-study/"/>
        <updated>2021-05-17T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[Google’s “Page Experience Update” will start rolling out in June. At first, sites that meet Core Web Vitals thresholds will have a minor ranking advantage in mobile search for all browsers. Search is important to any business, and this is the story of how Beau Hartshorne and his team at Instant Domain Search improved their Core Web Vitals scores.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Beau Hartshorne)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.2]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2"/>
        <updated>2021-05-17T05:32:19.000Z</updated>
        <summary type="html"><![CDATA[⚠ Deprecated: To accommodate the monorepo setup, the node version in all templates/demos/examples has changed from 14 to 16. This is not a breaking change as our compile target is still node 14, and node 16 is backward compatible. We still recommend you start using node-version: "16" in your .github/workflows/update-feed.yaml today to get the performance/security improvements from the newer node. See example
Chore: Reorganize to monorepo with npm workspace.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.1]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.1</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.1"/>
        <updated>2021-05-16T02:33:58.000Z</updated>
        <summary type="html"><![CDATA[Fixed: static files were unnecessarily copied for custom templates.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.7.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.0"/>
        <updated>2021-05-16T01:42:24.000Z</updated>
        <summary type="html"><![CDATA[Added: templating system. Demo | Source | Docs
Chore: rendering logic refactoring. Adopting functional paradigm.
Thank you @tianheg, @onnyyonn]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Tree-Shaking: A Reference Guide]]></title>
        <id>https://smashingmagazine.com/2021/05/tree-shaking-reference-guide/</id>
        <link href="https://smashingmagazine.com/2021/05/tree-shaking-reference-guide/"/>
        <updated>2021-05-14T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[“Tree-shaking” is a must-have performance optimization when bundling JavaScript. In this article, we dive deeper on how exactly it works and how specs and practice intertwine to make bundles leaner and more performant. Plus, you’ll get a tree-shaking checklist to use for your projects.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Átila Fassina)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Frustrating Design Patterns That Need Fixing: Birthday Picker]]></title>
        <id>https://smashingmagazine.com/2021/05/frustrating-design-patterns-birthday-picker/</id>
        <link href="https://smashingmagazine.com/2021/05/frustrating-design-patterns-birthday-picker/"/>
        <updated>2021-05-12T12:42:00.000Z</updated>
        <summary type="html"><![CDATA[In this new series of articles on UX, we take a closer look at some frustrating design patterns and explore better alternatives, along with plenty of examples to keep in mind when building or designing one. Let’s start with an infamous birthday picker.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Vitaly Friedman)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Little Smashing Stories]]></title>
        <id>https://smashingmagazine.com/2021/05/little-smashing-stories/</id>
        <link href="https://smashingmagazine.com/2021/05/little-smashing-stories/"/>
        <updated>2021-05-12T08:00:00.000Z</updated>
        <summary type="html"><![CDATA[Today marks the day we sent out our 300th edition of the Smashing Newsletter. This article is a little celebration in which we share little Smashing stories from people working behind the scenes.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Vitaly Friedman)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Primer On CSS Container Queries]]></title>
        <id>https://smashingmagazine.com/2021/05/complete-guide-css-container-queries/</id>
        <link href="https://smashingmagazine.com/2021/05/complete-guide-css-container-queries/"/>
        <updated>2021-05-11T13:30:00.000Z</updated>
        <summary type="html"><![CDATA[A prototype of the long-awaited CSS container queries has landed in Chrome Canary and is available for experimentation. Let’s look at what problem is being solved, learn how container queries work, and see how they compare with and complement existing CSS features for layout.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Stephanie Eckles)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Conference Platform We Use For Our Online Events: Hopin]]></title>
        <id>https://smashingmagazine.com/2021/05/smashingconf-conference-platform-hopin/</id>
        <link href="https://smashingmagazine.com/2021/05/smashingconf-conference-platform-hopin/"/>
        <updated>2021-05-11T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[At the beginning of 2020, the SmashingConf team was ready for a new year. We had so many things that excited us. New speakers, new workshops, new cities, new attendees, new experiences. And as we all know, 2020 had other ideas. With so many people working from home, we thought we would bring our [Smashing workshops](https://smashingconf.com/online-workshops/) from our home offices to yours — but how?]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Amanda Annandale)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Get Started With React By Building A Whac-A-Mole Game]]></title>
        <id>https://smashingmagazine.com/2021/05/get-started-whac-a-mole-react-game/</id>
        <link href="https://smashingmagazine.com/2021/05/get-started-whac-a-mole-react-game/"/>
        <updated>2021-05-10T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[Want to get started with React but struggling to find a good place to start? This article should have you covered. We’ll focus on some of the main concepts of React and then we’ll be building a game from scratch!]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Jhey Tompkins)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.4.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.4.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.4.0"/>
        <updated>2021-05-10T08:55:42.000Z</updated>
        <summary type="html"><![CDATA[Added: Basic theme customization: Demo | Source | Docs.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.6.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.6.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.6.0"/>
        <updated>2021-05-10T08:15:20.000Z</updated>
        <summary type="html"><![CDATA[Added: Link from the title of a subscription to its website.
Added: Store feedUrl and siteUrl for each source in cache.
Added: Semantic element (<time>) for timestamp on the UI.
Added: Semantic API for theming the default template. Demo | Source | Docs
Changed: Moved feed metadata from article level to feed level in cache.
Fixed: Any html-like text was stripped from title. Fixed with encoded text.
Removed: href for each source in cache. The value was never used so it's not a breaking change.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.5.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.5.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.5.0"/>
        <updated>2021-05-08T05:16:47.000Z</updated>
        <summary type="html"><![CDATA[Added: Atom feed generator
Added: Customizable site title
Added: Copy all files from static directory to the root of the site.
Changed: Favicon, css, and js assets now existing at site root level.
Chore: Excluded testing files from repo.]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Organize Product-Related Assets And Collaborate Better]]></title>
        <id>https://smashingmagazine.com/2021/05/product-records-organization-collaboration-best-practices/</id>
        <link href="https://smashingmagazine.com/2021/05/product-records-organization-collaboration-best-practices/"/>
        <updated>2021-05-07T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[How do you organize your Google Drive assets? How do you name your Dropbox Paper documents? How do you deal with comments? Let’s get it right.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Valeriia Panina)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Improving The Performance Of Shopify Themes (Case Study)]]></title>
        <id>https://smashingmagazine.com/2021/05/improving-performance-shopify-themes-case-study/</id>
        <link href="https://smashingmagazine.com/2021/05/improving-performance-shopify-themes-case-study/"/>
        <updated>2021-05-06T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[When dealing with themes for large platforms and CMS, legacy issues often become a bottleneck. In this article, Carson Shold discusses how his team improved the performance and organization of their Shopify themes, and improved maintainability along the way.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Carson Shold)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Reducing HTML Payload With Next.js (Case Study)]]></title>
        <id>https://smashingmagazine.com/2021/05/reduce-data-sent-client-nextjs/</id>
        <link href="https://smashingmagazine.com/2021/05/reduce-data-sent-client-nextjs/"/>
        <updated>2021-05-05T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[This article showcases a case study of Bookaway’s landing page performance. We’ll see how taking care of the props we send to Next.js pages can make loading times and Web Vitals better.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Liran Cohen)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Guide To Undoing Mistakes With Git (Part 1)]]></title>
        <id>https://smashingmagazine.com/2021/05/undoing-mistakes-git-part1/</id>
        <link href="https://smashingmagazine.com/2021/05/undoing-mistakes-git-part1/"/>
        <updated>2021-05-04T14:30:00.000Z</updated>
        <summary type="html"><![CDATA[No matter how experienced you are, mistakes are an inevitable part of software development. But we can learn to repair them! And this is what we'll be looking at in this two-part series: how to undo mistakes using Git.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Tobias Günther)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 36 With Miriam Suzanne: What Is The Future Of CSS?]]></title>
        <id>https://smashingmagazine.com/2021/05/smashing-podcast-episode-36/</id>
        <link href="https://smashingmagazine.com/2021/05/smashing-podcast-episode-36/"/>
        <updated>2021-05-04T05:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode, we’re starting our new season of the Smashing Podcast with a look at the future of CSS. What new specs will be landing in browsers soon? Drew McLellan talks to expert Miriam Suzanne to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
</feed>
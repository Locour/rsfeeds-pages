<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2021-07-04T00:53:57.919Z</id>
    <title>osmos::feed</title>
    <updated>2021-07-04T00:53:57.919Z</updated>
    <generator>osmosfeed 1.11.0</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[Amazon EKS Security Assessment - Kube Bench]]></title>
        <id>https://dev.to/aws-builders/amazon-eks-security-assessment-kube-bench-203</id>
        <link href="https://dev.to/aws-builders/amazon-eks-security-assessment-kube-bench-203"/>
        <updated>2021-07-04T00:45:19.000Z</updated>
        <summary type="html"><![CDATA[Introduction


The Center for Internet Security provides many guidelines and benchmark tests for best practices in securing your code. The CIS has published a benchmark for Kubernetes. The kube-bench is an open-source tool that checks whether Kubernetes is deployed securely by running the CIS benchmark for Kubernetes checks. It's written as a Go application and also distributed as a container. Each test is defined in the YAML and also supports JSON-format output that can be used to evolve along wiht Kubernetes and to integrate with automaton tools.
The CIS Kubernetes Benchmark is scoped for implementations managing both the control plane, which includes etcd, API server, controller, scheduler, and the data plane, which is made up of one or more nodes or EC2 instances.
The managed Kubernete…]]></summary>
        <author>
            <name>Sivamuthu Kumar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Install AnyDesk Ubuntu]]></title>
        <id>https://dev.to/arjungautam/install-anydesk-ubuntu-4kmc</id>
        <link href="https://dev.to/arjungautam/install-anydesk-ubuntu-4kmc"/>
        <updated>2021-07-03T18:49:22.000Z</updated>
        <summary type="html"><![CDATA[Click on the video to watch on youtube :]]></summary>
        <author>
            <name>Arjun Gautam</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to setup AWS Lambda Layers (Nodejs)]]></title>
        <id>https://dev.to/afrazkhan/how-to-setup-aws-lambda-layers-nodejs-182</id>
        <link href="https://dev.to/afrazkhan/how-to-setup-aws-lambda-layers-nodejs-182"/>
        <updated>2021-07-03T18:31:41.000Z</updated>
        <summary type="html"><![CDATA[Lambda layers  were introduced in 2018 for flexibel  code/data sharing  within same or different AWS accounts. AWS Lambda supports multiple environments but here we will talk about only Nodejs. I will describe the whole process of making lambda layers & how to use them in Lambda functions.
So, whenever, we want to use custom code in lambda functions supporting nodejs environment. We write that code in form of  node modules  and to make that code shared through lambda layers, we have to make a build  of those node modules. That build will be uploaded to a  Lambda Layer  and layer can be attached to any lambda function which can ultimately access that code.
In Nodejs supported AWS Lambda environment, lambda layers are usually made for following usecases:
There are only a few publically avail…]]></summary>
        <author>
            <name>Afraz Khan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why I switched from VsCode to WebStorm]]></title>
        <id>https://dev.to/dcastro/why-i-switched-from-vscode-to-webstorm-36dh</id>
        <link href="https://dev.to/dcastro/why-i-switched-from-vscode-to-webstorm-36dh"/>
        <updated>2021-07-03T18:12:39.000Z</updated>
        <summary type="html"><![CDATA[I want to start saying that I'm not trying to claim that WebStorm is better than VsCode and it is because I think that someone can feel more comfortable in VsCode rather than WebStorm or even in another tool, like Vim, Sublime Text, whatever. I just want to share with you why I decided to move to WebStorm and why I'm still using it and maybe you could consider using it too!.
The first reason why I decided to start using WebStorm is because I changed my computer, and as a developer with a lot of work I needed to start coding as fast as I could, so I downloaded VsCode because that was the editor which I used to use, then I realised that I did not have all my plugins that I had in my previous computer (obviously) and I did not even remember their names, it was very frustrating. After 1 hour t…]]></summary>
        <author>
            <name>Daniel Castro</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to install popular Linux distros]]></title>
        <id>https://dev.to/rightonhana/how-to-install-popular-linux-distros-c05</id>
        <link href="https://dev.to/rightonhana/how-to-install-popular-linux-distros-c05"/>
        <updated>2021-07-03T17:27:06.000Z</updated>
        <summary type="html"><![CDATA[Probably there are hundred or thousands of articles on how to install Linux but I made this mainly for myself, but maybe you find it useful too.
I will show you how to do it in 5 simple steps. The steps are almost the same for every popular distro.
First of all you will need a pendrive. Without one we can't do so much... 
Download a program to create bootable USB drive. There are many programs for that, here are some of them: UNetbootin, Rufus, Etcher, Linux Live USB Creator and there are many more.
Not all of them are for all Operating Systems so you will need to check if they are available for your OS. For example, UNetbootin if for Windows, Linux or Mac OS but Rufus is only for Windows.
Once you picked the program you like, download it and install it in your Operating System.
There are …]]></summary>
        <author>
            <name>Florencia Gonzalez</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[NPM package in 2021]]></title>
        <id>https://dev.to/juliancwirko/npm-package-in-2021-42e5</id>
        <link href="https://dev.to/juliancwirko/npm-package-in-2021-42e5"/>
        <updated>2021-07-03T16:56:46.000Z</updated>
        <summary type="html"><![CDATA[It was always a little bit hard to prepare JS code to be reusable through the NPM registry. 
Over time we had a lot of different approaches. We had many different ways to use modular-like code in JavaScript. 
Before 2015 we didn't even have official built-in modules standard in JavaScript. So we had to use third-party tools like AMD with, for example, RequireJS or - in Node ecosystem - CommonJS.
With ES6 or ES2015, we've got modules support in JavaScript. Of course, it was a time when all the development progress within browsers or Node was slow. Lately, we've gained momentum, and we are getting updates quite often. It's good. But what does that mean for NPM packages creators?
Let's imagine an example. I started to think why I even need tools like Babel or Parcel nowadays to create my NPM …]]></summary>
        <author>
            <name>Julian Ćwirko</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AMI=Amazon Machine Image,Custom AMI]]></title>
        <id>https://dev.to/ramushetty/ami-amazon-machine-image-custom-ami-hg4</id>
        <link href="https://dev.to/ramushetty/ami-amazon-machine-image-custom-ami-hg4"/>
        <updated>2021-07-03T15:40:33.000Z</updated>
        <summary type="html"><![CDATA[AMI is something like preconfigured template with required server configuration. 
By using this AMI we can quickly create as many instance we want 
Creating your own custom AMI
For creating custom AMI you need to have your own instance running.
If you don't know how to create a instance please check this article below

  
    
AWS Creating an EC2 Instance
Ramu Ummadishetty ・ Jun 23 ・ 2 min read
#aws
        #devops
        #cloud
        #tutorial
      

After you have instance go to instances select your instance click on Actions and click on Image and Templates and select Create Image and enter create image
Enter your image name



Go to AMI section which is present in the side nav bar


Here you can find your AMIs



Once the AMI is available go to instances click on launch instance




Now here in choose AMI section select My AMIs




You can see your own custom created AMI here 




Select it and follow the same instructions that we use for creating instance.
That's it, hope you enjoyed it!]]></summary>
        <author>
            <name>Ramu Ummadishetty</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Auto-complete with Angular material and RxJS]]></title>
        <id>https://dev.to/anirbmuk/auto-complete-with-angular-material-and-rxjs-3b8k</id>
        <link href="https://dev.to/anirbmuk/auto-complete-with-angular-material-and-rxjs-3b8k"/>
        <updated>2021-07-03T14:56:36.000Z</updated>
        <summary type="html"><![CDATA[This article talks about an efficient way to implement auto-complete feature using Angular concepts. The key components used in this demonstration are as follows:
Angular Material (v12) Autocomplete module.
RxJS for action and data binding.
Angular in-memory-web-api for REST services (Refer to in-memory-web-api).
 

 

 




Let us now see how we go about it:
The front-end consists of an angular autocomplete module. The input event taps the user's keystrokes and emits a new value into an action subject.

AutocompleteService class.

The action BehaviorSubject starts with an empty string. The action$ is an observable built out of this subject.

GET request. Since this is a higher-order observable (i.e., an observable returning an observable), we make use of one of the higher order functions like switchMap.

switchMap (and not other higher order functions like concatMap or mergeMap)? The reason is: switchMap unsubscribes from the previous observable once a new value is emitted by the parent observable.
What this means is - as soon as the user types in another letter or removes a letter, there is simply no need to subscribe and execute the rest call for the previous values. The user is only interested to see the results of the search according to his/her current input. And switchMap does this automatically, and thus gets rid of unwanted rest calls.
We can also get additional control on when to fire the rest service depending on the length of the user's input. For example, in this demo, I fire the rest call only when the user has entered at least 2 characters. If not, then I return an observable of empty array (using of([])).
 


  
  
  Back to the Component:


We tap onto the above observable and use async pipe to subscribe to it. Since we are completely using observables, we can also use the OnPush change-detection-strategy.

 
@angular/cli - 12.1.0
GitHub
 
Cheers!]]></summary>
        <author>
            <name>Anirban Mukherjee</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GraphQL + Clean Architecture boilerplate]]></title>
        <id>https://dev.to/tuanlc/graphql-clean-architectire-boilerplate-hog</id>
        <link href="https://dev.to/tuanlc/graphql-clean-architectire-boilerplate-hog"/>
        <updated>2021-07-03T14:27:10.000Z</updated>
        <summary type="html"><![CDATA[Inspiration


The Clean Architecture is an awesome guide for developers who desire to build a clean, structured and maintainable projects. The letter L in SOLID principal allows us to make depended components are easily replaced without touch to the business and the core of systems. For example of the web server where there are many frameworks out there (Expressjs, GraphQL, etc) and the chosen decision depends on the purpose of the business and the context.
In this boilerplate guide scope we will go through how to make the core business immune with the change of the detailed technologies. Let's go!
You can find the implementation detail in this repository
.
├── package.json
├── package-lock.json
├── README.md
├── src
│   ├── application
│   │   ├── auth
│   │   │   └── index.ts
│   │   ├──…]]></summary>
        <author>
            <name>Lê Công Tuấn</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Bounded types in fp-ts]]></title>
        <id>https://dev.to/derp/bounded-types-in-fp-ts-7db</id>
        <link href="https://dev.to/derp/bounded-types-in-fp-ts-7db"/>
        <updated>2021-07-03T13:57:37.000Z</updated>
        <summary type="html"><![CDATA[TLDR; show me the code!
A Bounded<a> is used to name the upper and lower limits within the a type for your domain. So for example, in this example, I am going to use a Bounded<number> from the fp-ts library to represent the age of a person within the bounds of 18 & 100.
import * as B from "fp-ts/lib/Bounded";
import * as O from "fp-ts/lib/Ord";

const AgeBound: B.Bounded<number> = {
  bottom: 18,
  top: 100,
  equals: O.ordNumber.equals,
  compare: O.ordNumber.compare
};

However, this does not actually do the checking of the bounds for you. So here I am creating a function that takes in a generic A type and a Bounded<A> to return back an Option<A>.
import * as Opt from "fp-ts/lib/Option";

// Bounded<A> -> A -> Option<A>
const mkBounded: <A>(bounded: B.Bounded<A>) => (a: A) => Opt.Option<…]]></summary>
        <author>
            <name>Derp</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[(Not) Using Docker on Windows]]></title>
        <id>https://dev.to/javitolin/not-using-docker-on-windows-ino</id>
        <link href="https://dev.to/javitolin/not-using-docker-on-windows-ino"/>
        <updated>2021-07-03T12:56:34.000Z</updated>
        <summary type="html"><![CDATA[Introduction



I continued the normal path of Windows Vista (Why), Windows 7 (Thank G’d), Windows 8 (Mmmm), 8.1 (Ok, Ok, back to normal), and now Windows 10 (finally). I work with Windows Servers as well; Windows Server 2008 R2, 2012R2, 2016 and even Windows Server 2019.
I know Windows pretty well. I wrote C++ programs that interact with Windows Internals. Even wrote a small filter driver. I’ve installed and configured more Windowses than I could count.
So, following this introduction, you can see why my first thought was to install Docker on Windows.

I asked another team, which had more practice using Docker, what they thought. They threw me away and told me I was being silly, “Docker should be only on Linux”. I asked why? there’s such a nice GUI for Windows..
First, you’ll need Windows…]]></summary>
        <author>
            <name>Javi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is a Database? Definition, Meaning, Types, Example]]></title>
        <id>https://dev.to/mahmoudessa/what-is-a-database-definition-meaning-types-example-4nhp</id>
        <link href="https://dev.to/mahmoudessa/what-is-a-database-definition-meaning-types-example-4nhp"/>
        <updated>2021-07-03T12:50:15.000Z</updated>
        <summary type="html"><![CDATA[What is Data?


In simple words, data can be facts related to any object in consideration. 
A database is a systematic collection of data. 
They support electronic storage and manipulation of data. 
Databases make data management easy.
Here are some popular types of databases.
A distributed database is a type of database that has contributions from the common database and information captured by local computers. 
In this type of database system, the data is not in one place and is distributed at various organizations.
This type of database defines database relationships in the form of tables. 
It is also called Relational DBMS, which is the most popular DBMS type in the market.
Database examples of the RDBMS system include MySQL, Oracle, and Microsoft SQL Server databases.
This type of com…]]></summary>
        <author>
            <name>Mahmoud EL-karuony</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[IvyFinal CTF (Crypto 2) - HeadCracker 300 - points]]></title>
        <id>https://dev.to/wireless90/ivyfinal-ctf-crypto-2-headcracker-300-points-3nkd</id>
        <link href="https://dev.to/wireless90/ivyfinal-ctf-crypto-2-headcracker-300-points-3nkd"/>
        <updated>2021-07-03T12:28:50.000Z</updated>
        <summary type="html"><![CDATA[The file can be downloaded here.
The best tool to crack this custom cipher with is your head. Just don't literally crack your head.
Let's first see what type of file we are dealing wih
┌──(razali㉿razali)-[~/Documents/Ivy/Finals/crypto]
└─$ file flag.enc          
flag.enc: data

It seems like a gibberish file.                                                                                                                                                                                                                                             
┌──(razali㉿razali)-[~/Documents/Ivy/Finals/crypto]
└─$ cat flag.enc           
���>����`

AJW:�AW��J�`����

>ϩ��                                                                                                                                           …]]></summary>
        <author>
            <name>wireless90</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA["Simplicity is prerequisite for reliability" - This matters now more than ever]]></title>
        <id>https://dev.to/devsimplicity/simplicity-prerequisite-for-reliability-in-modern-web-software-development-mess-4e9n</id>
        <link href="https://dev.to/devsimplicity/simplicity-prerequisite-for-reliability-in-modern-web-software-development-mess-4e9n"/>
        <updated>2021-07-03T12:15:19.000Z</updated>
        <summary type="html"><![CDATA[Simple is not easy, easy is not simple
Let's first get that out of the way. People are often equating easiness with simplicity, but they are very different words.
Simple (vs complex) - from "sim plex", literally: one-fold (i.e. not braided)


Easy (vs hard) - from "lying at, lie near"; familiar, near to our understanding



Rich Hickey goes more into details about this in his presentation. If you haven't already, check it out (I don't agree with everything he said, but it's a good presentation, definitely worth watching).
Most often, achieving simplicity is the hardest thing to do in software development and usually it requires an enormous experience.
Simplicity is probably the most important aspect of software development. As Edsger Dijkstra put it, "Simplicity is prerequisite for reliability".
If your design is not simple, the whole thing will eventually become fragile, unreliable and starting to fall apart.
Unfortunately, complexity sells much better and when you combine that with cargo-cult programming and resume driven development, you get the modern web development mess.
The same goes for modern system administration (or devops, if you will) - if you've been working with UNIX long enough, all you need to do is take a look at kubernetes mess.
I created devsimplicity.com as a simple, wiki-like place, focused mostly on addressing those issues, avoiding complexity traps and as a quick way to find&explore the better/saner alternatives. There's still lot of work to do, but it's getting better. If you like the idea, stay tuned.
Note: This is a snapshot of a wiki topic on devsimplicity.com and may be outdated. Up-todate and better formatted version: devsimplicity.com/simplicity]]></summary>
        <author>
            <name>devsimplicity</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Отправка писем в NestJS используя nodemailer. Публикация скриптов.]]></title>
        <id>https://dev.to/slkarol/nestjs-nodemailer-1d0h</id>
        <link href="https://dev.to/slkarol/nestjs-nodemailer-1d0h"/>
        <updated>2021-07-03T11:49:19.000Z</updated>
        <summary type="html"><![CDATA[Мне понадобилось отправить сообщение по почте о подтверждении регистрации на сайте. На текущий момент проверенное, хорошо зарекомендовавшее себя решение это Nodemailer. В роли бек-сервера у меня NestJS. Для NestJS есть модуль Nest JS Mailer, вот с ним и решил работать. Сперва установим пакеты @nestjs-modules/mailer, nodemailer и в dev-зависимость будет не лишним поставить @types/nodemailer . В качестве сервера почты я решил воспользоваться услугами яндекс.
После того, как получена учётная запись от яндекса, записал в файл .env такие переменные:
MAIL_TRANSPORT строка подключения к smtp-серверу для отправки почты (см. https://nodemailer.com/smtp/)
MAIL_FROM_NAME от чьего имени будет приходить почта.
Пример:
MAIL_TRANSPORT=smtps://useYandex@yandex.ru:password@smtp.yandex.ru
MAIL_FROM_NAME=Web…]]></summary>
        <author>
            <name>Stanislav Karol</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to create framework in Node.js]]></title>
        <id>https://dev.to/jahongir2007/how-to-create-framework-in-node-js-2cch</id>
        <link href="https://dev.to/jahongir2007/how-to-create-framework-in-node-js-2cch"/>
        <updated>2021-07-03T11:08:11.000Z</updated>
        <summary type="html"><![CDATA[Are you interested in creating frameworks? Then read this post carefully.
Let's find out what the framework itself is. A framework is a program that combines one or more functions, simplifying the work of a programmer. The framework works in the same programming language in which it was written. (The framework we create for Node.js is written in JavaScript)
Node.js is a runtime program that allows you to use the javascript programming language outside the browser. It contains several modules, such as http and so on. Popular apps created at Node.js: Linkedin, Netflix, Ebay and Uber. The most popular frameworks of this program are Express.js, Telegraf.js and so on. All frameworks written in JS also work in Node.js.
Download Node.js



Now all that remains is to think about one thing. What do…]]></summary>
        <author>
            <name>Jahongir Sobirov</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[TryHackMe OhSINT]]></title>
        <id>https://dev.to/applegamer22/tryhackme-ohsint-37l5</id>
        <link href="https://dev.to/applegamer22/tryhackme-ohsint-37l5"/>
        <updated>2021-07-03T10:53:34.000Z</updated>
        <summary type="html"><![CDATA[TryHackMe OhSINT



  
  
  References



Hammond, J. (2020). TryHackMe! OhSINT - METADATA & Research [YouTube Video]. In YouTube. https://youtu.be/oF0TQQmFu4w

OWoodfl1nt. (2019, March 3). OWoodfl1nt/people_finder. GitHub. https://github.com/OWoodfl1nt/people_finder/blob/master/README.md

OWoodflint. (2019, March 4). Twitter status. Twitter. https://twitter.com/OWoodflint/status/1102220421091463168

WiGLE.net. (2011). WiGLE: Wireless Network Mapping. wigle.net. https://www.wigle.net/

Woodflint, O. (2019, March 3). Oliver Woodflint Blog. Oliver Woodflint Blog; Oliver Woodflint Blog. https://oliverwoodflint.wordpress.com/author/owoodflint/




  
  
  What is this users avatar of?



By running exiftool WindowsXP.jpg, the following output tells that OWoodflint is a possible link:




ExifT…]]></summary>
        <author>
            <name>Omri Bornstein</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Containers from first principles with Rust]]></title>
        <id>https://dev.to/donaldsebleung/containers-from-first-principles-with-rust-2211</id>
        <link href="https://dev.to/donaldsebleung/containers-from-first-principles-with-rust-2211"/>
        <updated>2021-07-03T09:39:57.000Z</updated>
        <summary type="html"><![CDATA[Containers have taken the world by storm. Nowadays, many production environments employ containers in one form or another, running on developers' workstations, locally hosted servers and/or the cloud.
If you have worked as a developer or administrator in the industry, chances are you've worked with modern container runtimes such as Docker and Kubernetes or at least heard of them. From a high-level perspective, containers are an OS-level abstraction - a stripped down operating system (OS) containing one or more applications (apps) of interest running atop some host in an isolated manner, which provides an extra layer of security compared to running the app(s) directly on the host and enables the app(s) to be executed on different hosts (possibly with different hardware) in a consistent, rep…]]></summary>
        <author>
            <name>Donald Sebastian Leung</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Build a Serverless Leaderboard API At Edge using Cloudflare Workers and Redis]]></title>
        <id>https://dev.to/enesakar/build-a-serverless-leaderboard-api-at-edge-using-cloudflare-workers-and-redis-26h5</id>
        <link href="https://dev.to/enesakar/build-a-serverless-leaderboard-api-at-edge-using-cloudflare-workers-and-redis-26h5"/>
        <updated>2021-07-03T08:52:51.000Z</updated>
        <summary type="html"><![CDATA[With edge functions, it is possible to run your backend at the closest location to your users. Cloudflare Workers and Fastly Compute@Edge runs your function at the closest location to your user using their CDN infrastructure.
In this article we will implement a very common web use case at Edge. We will implement a leaderboard API without any backend servers, containers or even serverless functions. We will just use edge functions.  Leaderboard will have the following APIs:
  addScore: Adds a score with the player's name. This will write the score to the Upstash Redis directly from the Edge functions.
  getLeaderBoard: Returns the list of score-player pairs. This call will first check the Edge cache. If the leaderboard does not exist at the Edge Cache then it will fetch it from the Upstash …]]></summary>
        <author>
            <name>Enes Akar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Protect secrets in Azure Functions using Key Vault]]></title>
        <id>https://dev.to/pwd9000/protect-secrets-in-azure-functions-using-key-vault-d2i</id>
        <link href="https://dev.to/pwd9000/protect-secrets-in-azure-functions-using-key-vault-d2i"/>
        <updated>2021-07-03T07:54:05.000Z</updated>
        <summary type="html"><![CDATA[What is an Azure function?


Azure Functions is a cloud service available on-demand that provides all the continually updated infrastructure and resources needed to run your applications. You focus on the pieces of code that matter most to you, and Functions handles the rest. Functions provides serverless compute for Azure. You can use Functions to build web APIs, respond to database changes, process IoT streams, manage message queues, and more.





  
  
  What is Azure Key Vault?


Azure Key Vault is a cloud service that allows us to protect cryptographic keys, certificates (and the private keys associated with certificates), and secrets (such as connection strings and passwords) in the cloud.
Because Azure functions are serverless pieces of code, we do not want to put any of our secret…]]></summary>
        <author>
            <name>Marcel.L</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to SetUp Billing Alarm in AWS]]></title>
        <id>https://dev.to/nehasoni__/how-to-setup-billing-alarm-in-aws-4144</id>
        <link href="https://dev.to/nehasoni__/how-to-setup-billing-alarm-in-aws-4144"/>
        <updated>2021-07-03T07:15:06.000Z</updated>
        <summary type="html"><![CDATA[AWS offers large number of resources and services. With such a diverse options it is very easy to over-spend money in AWS and obviously you do not want that. No matter you are an expert developer, administrator or just starting with AWS, you should always keep eye on your AWS usage and its bills. 
Open your favorite browser and navigate to  AWS Login Page 



In the search bar type billing and click on Billing service to navigate to Billing & Cost Management Dashboard

Billing Preferences.

receive billing alerts and Receive Free Tier Usage Alerts, and enter your email and click save preferences.

You can even search for CloudWatch here by starting to type in the search box and it will find the service that you're searching for. Or you can click on the drop-down along with services and the…]]></summary>
        <author>
            <name>Neha Soni</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using Apache ECharts with React and TypeScript]]></title>
        <id>https://dev.to/maneetgoyal/using-apache-echarts-with-react-and-typescript-353k</id>
        <link href="https://dev.to/maneetgoyal/using-apache-echarts-with-react-and-typescript-353k"/>
        <updated>2021-07-03T05:09:19.000Z</updated>
        <summary type="html"><![CDATA[What is Apache ECharts?


It's a cool data-visualization library like Highcharts, Chart.js, amCharts, Vega-Lite, and numerous others. A lot of companies/products including AWS are using it in production.
It supports numerous charts out-of-the-box. Here's a wide range of examples to help you out. We also found their echarts-liquidfill extension quite useful.
Different teams have varying criteria behind adopting a data visualization library. If you happen to use Apache ECharts, this feed may help you integrate it with your React + TypeScript codebase.
You can implement a React functional component and reuse it in different parts of the app to avoid declaring useEffect hook and subscribing/unsubscribing to the "resize" event multiple times.
import React, { useRef, useEffect } from "react";
im…]]></summary>
        <author>
            <name>Maneet Goyal</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[IvyFinal CTF (Crypto 1) - Warmup 50 points]]></title>
        <id>https://dev.to/wireless90/ivyfinal-ctf-crypto-warmup-50-points-2i22</id>
        <link href="https://dev.to/wireless90/ivyfinal-ctf-crypto-warmup-50-points-2i22"/>
        <updated>2021-07-03T04:25:38.000Z</updated>
        <summary type="html"><![CDATA[You can get the file here.
It's important to warmup before physical activity.
Free hint, don't get used to it: XOR cipher was used for this flag's encryption with a single byte key.
So we practically need to find the key that was xored. Since its just 1 byte, its easy to bruteforce.
And the flag is always in the format if  ivyctf{...}.
So lets find the key that simply xors to match the first letter i.
In [19]: def get_key(contents):
    ...:     for i in range(256):
    ...:         if ord(contents[0]) ^ i == ord('i'):
    ...:             return i
    ...:
    ...:
    ...:
    ...:
    ...:

Above is just a function that gets the content of the file and goes through the value of a byte, 0 to 255.
i.
Once we get the key, we simply xor it with the rest of the file.
In [21]: def crack_flag(contents, key):
    ...:     flag = []
    ...:     for ch in contents:
    ...:         flag.append(chr(ord(ch) ^ key))
    ...:     print(''.join(flag))

Once we get our functions right, lets run them.
In [23]: contents = open('flag.enc', 'r').read()

In [24]: crack_flag(contents, get_key(contents))
ivyctf{all_warmed_up_and_ready_to_go}]]></summary>
        <author>
            <name>wireless90</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Make Your Own Node.Js Engine Based Blog.]]></title>
        <id>https://dev.to/manushifva/how-to-make-your-own-node-js-engine-based-blog-5f</id>
        <link href="https://dev.to/manushifva/how-to-make-your-own-node-js-engine-based-blog-5f"/>
        <updated>2021-07-03T02:15:56.000Z</updated>
        <summary type="html"><![CDATA[Blog? What is it?


A blog (a truncation of "weblog") is a discussion or informational website published on the World Wide Web consisting of discrete, often informal diary-style text entries (posts). Posts are typically displayed in reverse chronological order, so that the most recent post appears first, at the top of the web page. Until 2009, blogs were usually the work of a single individual, occasionally of a small group, and often covered a single subject or topic. In the 2010s, "multi-author blogs" (MABs) emerged, featuring the writing of multiple authors and sometimes professionally edited. MABs from newspapers, other media outlets, universities, think tanks, advocacy groups, and similar institutions account for an increasing quantity of blog traffic. The rise of Twitter and other "m…]]></summary>
        <author>
            <name>manushifva</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[TypeScript][PostgreSQL][TSyringe][Express]Try TypeORM 2]]></title>
        <id>https://dev.to/masanori_msl/typescript-postgresql-tsyringe-express-try-typeorm-2-3bka</id>
        <link href="https://dev.to/masanori_msl/typescript-postgresql-tsyringe-express-try-typeorm-2-3bka"/>
        <updated>2021-07-03T00:49:17.000Z</updated>
        <summary type="html"><![CDATA[Intro



[TypeScript][PostgreSQL]Try TypeORM
[TypeScript] Try DI with TSyringe
This time, I will try relationship by using TypeORM.
Node.js ver.16.3.0
TypeScript ver.4.3.4
Express ver.4.17.1
pg ver.8.6.0
TSyringe ver.4.5.0
TypeORM ver.0.2.34
ts-node ver.10.0.0
I can add foreign keys like below.
import {Entity, PrimaryGeneratedColumn, Column} from "typeorm";

@Entity('author')
export class Author {
    @PrimaryGeneratedColumn()
    id: number = -1;
    @Column({
        name: 'name',
        type: 'text',
        nullable: false
    })
    name: string = '';
}

import {Entity, PrimaryGeneratedColumn, Column} from "typeorm";

@Entity('genre')
export class Genre {
    @PrimaryGeneratedColumn()
    id: number = -1;
    @Column({
        name: 'name',
        type: 'text',
        nullable: fal…]]></summary>
        <author>
            <name>Masui Masanori</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Deploy API Node, Adonis, Mysql AWS Ubuntu]]></title>
        <id>https://dev.to/guillerbr/deploy-api-node-adonis-mysql-aws-ubuntu-4549</id>
        <link href="https://dev.to/guillerbr/deploy-api-node-adonis-mysql-aws-ubuntu-4549"/>
        <updated>2021-07-03T00:44:08.000Z</updated>
        <summary type="html"><![CDATA[Deploy de produção completo API Node/Adonis, Mysql, Ubuntu 18/20 no servidor cloud AWS.



Criar uma máquina no serviço ec2 da Aws. Ubuntu Server 18.04 ou 20




sudo apt-get update

sudo apt-get upgrade

Instalar o Nodejs na versão 14 TLS




curl -sL https://deb.nodesource.com/setup_14.x | sudo bash -

sudo apt -y install nodejs

Verifique a instalação e versão.




node  -v

-Versão do Nodejs instalada:
v14.17.2

Verifique o NPM e sua versão:




npm -v

Instalar o Adonis Framework Global
Comando de instalação:




sudo apt install mysql-server

Instalando da forma correta e segura siga esse exemplo:
https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-ubuntu-20-04-pt
systemctl status mysql.service

Se tudo estiver certo, o resultado será esse:

usuário padrão do mysql, o root.


Entre no Mysql, com o comando:
sudo mysql

Agora alterar/adicionar uma senha para o usuário root.
Altere 'you new password' para sua senha atual.




ALTER USER 'root'@'localhost' IDENTIFIED BY 'your new password'; 

Altere 'you new password' para sua senha atual.




ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'your new password';

Resposta do Mysql:
Query OK, 0 rows affected (0.01 sec)

sudo mysql -u root -p

Digite sua senha cadastrada no processo anterior.
Crie um novo banco de dados:
CREATE DATABASE my_name_database;

Veja o novo banco criado:




SHOW DATABASES;

.env, juntamente com o usuário root. Se tudo estiver correto poderemos fazer as migrations sem problemas.


Referências: 
https://dev.to/romainlanz/deploy-your-adonis-website-17ec
https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-ubuntu-20-04-pt
https://stackoverflow.com/questions/51008807/nodejs-mysql-client-does-not-support-authentication-protocol
https://scotch.io/tutorials/deploying-adonisjs-5-to-digitalocean
https://computingforgeeks.com/install-node-js-14-on-ubuntu-debian-linux/]]></summary>
        <author>
            <name>Guiller</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Deploy API Node, Adonis, Mysql AWS Ubuntu]]></title>
        <id>https://dev.to/guillerbr/deploy-api-node-adonis-mysql-aws-ubuntu-4549</id>
        <link href="https://dev.to/guillerbr/deploy-api-node-adonis-mysql-aws-ubuntu-4549"/>
        <updated>2021-07-03T00:44:08.000Z</updated>
        <summary type="html"><![CDATA[Deploy de produção completo API Node/Adonis, Mysql, Ubuntu 18/20 no servidor cloud AWS.



Criar uma máquina no serviço ec2 da Aws. Ubuntu Server 18.04 ou 20




sudo apt-get update

sudo apt-get upgrade

Instalar o Nodejs na versão 14 TLS




curl -sL https://deb.nodesource.com/setup_14.x | sudo bash -

sudo apt -y install nodejs

Verifique a instalação e versão.




node  -v

-Versão do Nodejs instalada:
v14.17.2

Verifique o NPM e sua versão:




npm -v

Instalar o Adonis Framework Global
Comando de instalação:




sudo apt install mysql-server

Instalando da forma correta e segura siga esse exemplo:
https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-ubuntu-20-04-pt
systemctl status mysql.service

Se tudo estiver certo, o resultado será esse:

usuário padrão do mysql, o root.


Entre no Mysql, com o comando:
sudo mysql

Agora alterar/adicionar uma senha para o usuário root.
Altere 'you new password' para sua senha atual.




ALTER USER 'root'@'localhost' IDENTIFIED BY 'your new password'; 

Altere 'you new password' para sua senha atual.




ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'your new password';

Resposta do Mysql:
Query OK, 0 rows affected (0.01 sec)

sudo mysql -u root -p

Digite sua senha cadastrada no processo anterior.
Crie um novo banco de dados:
CREATE DATABASE my_name_database;

Veja o novo banco criado:




SHOW DATABASES;

.env, juntamente com o usuário root. Se tudo estiver correto poderemos fazer as migrations sem problemas.


Referências: 
https://dev.to/romainlanz/deploy-your-adonis-website-17ec
https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-ubuntu-20-04-pt
https://stackoverflow.com/questions/51008807/nodejs-mysql-client-does-not-support-authentication-protocol
https://scotch.io/tutorials/deploying-adonisjs-5-to-digitalocean
https://computingforgeeks.com/install-node-js-14-on-ubuntu-debian-linux/]]></summary>
        <author>
            <name>Guiller</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why Virtual DOM?]]></title>
        <id>https://dev.to/aidenybai/why-is-the-virtual-dom-necesssary-59l2</id>
        <link href="https://dev.to/aidenybai/why-is-the-virtual-dom-necesssary-59l2"/>
        <updated>2021-07-02T22:23:07.000Z</updated>
        <summary type="html"><![CDATA[Plug: I help develop million: <1kb virtual DOM - it's fast!
The Virtual DOM was initially pioneered by the React authors on the basis of making delarative JavaScript patterns performant - but how? To understand this, we need to quickly review how traditional DOM manipulation works.
Generally speaking, the easiest way of changing the DOM ("Modifying the HTML") is to mutate the innerHTML property on an element. For example, if I want to add a div element in the document body, I could do something like this:
document.body.innerHTML = '<div>Hello World!</div>';
// <body> now has a <div>Hello World!</div> child.

This seems to be computationally performant, but it really isn't. While the action of reassignment is computationally performant, the DOM repaint ("Updating what the user sees") is not…]]></summary>
        <author>
            <name>Aiden Bai</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to build a podcast website or blog]]></title>
        <id>https://dev.to/marcinwosinek/how-to-build-a-podcast-website-or-blog-3cm4</id>
        <link href="https://dev.to/marcinwosinek/how-to-build-a-podcast-website-or-blog-3cm4"/>
        <updated>2021-07-02T20:57:39.000Z</updated>
        <summary type="html"><![CDATA[With 13 years in professional programming I've already seen a lot of failed hypes & undelivered promises. It's rare to see an innovation that actually tackles more issues then it's introducing. One of those rare occasions seems to be developing right now - the move towards JAM stack - which is an umbrella term for many technologies, that used together creates a different approach to put content online.
If I were to build a blog, or podcast website I would go with following technologies:
github or gitlab for hosting the repository
netlify for hosting the website itself, and building the code
next.js or other JAM stack framework to build my code upon
some git-based cms, if we want to have more content-author friendly access
There are several advantages of approach this problem this way:
both…]]></summary>
        <author>
            <name>Marcin Wosinek</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Zero-Width Space]]></title>
        <id>https://css-tricks.com/?p=343435</id>
        <link href="https://css-tricks.com/zero-width-space/"/>
        <updated>2021-07-02T20:39:04.000Z</updated>
        <summary type="html"><![CDATA[The name zero-width space is antithetical, but it’s not without uses. In text, maybe you’d use it around slashes because you want to be sure the words are treated individually but not have any physical space around the slash:…
The post Zero-Width Space appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Convert a Python Emotion Recognition Notebook into an API without extra code]]></title>
        <id>https://dev.to/karishnu/convert-your-emotion-recognition-notebook-into-an-api-without-extra-code-31k7</id>
        <link href="https://dev.to/karishnu/convert-your-emotion-recognition-notebook-into-an-api-without-extra-code-31k7"/>
        <updated>2021-07-02T19:06:16.000Z</updated>
        <summary type="html"><![CDATA[Training an Emotion Recognition in a Jupyter Notebook and converting it into a Flask API project without additional code using Cuttle


For people who use Jupyter notebooks for development and testing quite often, you’re probably habituated to copying and pasting code around all the time.
Deleting test snippets, using a different IDE to compile and test your code again, and developing an API is just a few of the time-consuming tasks an ML developer is used to.
Wouldn’t it be great if we could automate the drudgery of boilerplate code needed to build an API project?** **Here we will train an emotion recognition model in a Jupyter Notebook and convert it into a Flask API project with absolutely no extra code!
pip install 
tensorflow==2.5.0 Keras==2.4.3 numpy==1.19.5 opencv-python==4.4.0.44

…]]></summary>
        <author>
            <name>Karishnu Poddar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Don't make your SQL requests like this! Dont get hacked: SQL Injection]]></title>
        <id>https://dev.to/datsgabs/don-t-make-your-sql-requests-like-this-dont-get-hacked-sql-injection-10o4</id>
        <link href="https://dev.to/datsgabs/don-t-make-your-sql-requests-like-this-dont-get-hacked-sql-injection-10o4"/>
        <updated>2021-07-02T19:06:10.000Z</updated>
        <summary type="html"><![CDATA[Link to original article with code snippets and videos (recommended): https://gabriellazcano.com/blog/dont-make-your-sql-requests-like-this-dont-get-hacked/
So I’ve been learning SQL and something came to my mind. How safe is this, I won’t lie I’ve heard of SQL injections before but never really got into it. But now I know it’s really a dangerous tool if you are not doing things correctly, and the best way of preventing this is knowing how to do it. Also for what I’ve investigated it seems that a lot of sites are vulnerable to this kind of attacks so we have to make awareness of the topic.
The vulnerability is because we are concatenating to the SQL request, making it possible for people to modify the request using their knowledge on how it works. This is further explained in the original article. Sorry for the inconvenience but I found it impossible to structure it here in dev.to]]></summary>
        <author>
            <name>Gabriel Lazcano</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Analyze An Angular Project with Fortify]]></title>
        <id>https://dev.to/ngconf/how-to-analyze-an-angular-project-with-fortify-igi</id>
        <link href="https://dev.to/ngconf/how-to-analyze-an-angular-project-with-fortify-igi"/>
        <updated>2021-07-02T18:15:25.000Z</updated>
        <summary type="html"><![CDATA[Rogelio Flores Zubillaga | ng-conf | May 2019

Recently, I started a small Angular application that acts as an installer for a distributed API Gateway application. As part of our testing and quality engineering, we always inspect our web applications. However, we hadn’t done much with static code analysis. It was mostly security dynamic analysis over our client and server communication. Fortify is a product that we have used for this since the company that I work for owns it, and recently they added support for Typescript in their static code analysis. So this was a great opportunity to use it on our Angular project.
Fortify is a product of Micro Focus that allows security scans of applications. Many people are familiar with “WebInspect”, which some people use as a synonym for Fortify.
Thi…]]></summary>
        <author>
            <name>ng-conf</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Analyze An Angular Project with Fortify]]></title>
        <id>https://dev.to/ngconf/how-to-analyze-an-angular-project-with-fortify-igi</id>
        <link href="https://dev.to/ngconf/how-to-analyze-an-angular-project-with-fortify-igi"/>
        <updated>2021-07-02T18:15:25.000Z</updated>
        <summary type="html"><![CDATA[Rogelio Flores Zubillaga | ng-conf | May 2019

Recently, I started a small Angular application that acts as an installer for a distributed API Gateway application. As part of our testing and quality engineering, we always inspect our web applications. However, we hadn’t done much with static code analysis. It was mostly security dynamic analysis over our client and server communication. Fortify is a product that we have used for this since the company that I work for owns it, and recently they added support for Typescript in their static code analysis. So this was a great opportunity to use it on our Angular project.
Fortify is a product of Micro Focus that allows security scans of applications. Many people are familiar with “WebInspect”, which some people use as a synonym for Fortify.
Thi…]]></summary>
        <author>
            <name>ng-conf</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Accepting your CSS/JS library in my project]]></title>
        <id>https://dev.to/bacloud14/accepting-your-css-js-library-in-my-project-52p1</id>
        <link href="https://dev.to/bacloud14/accepting-your-css-js-library-in-my-project-52p1"/>
        <updated>2021-07-02T17:50:51.000Z</updated>
        <summary type="html"><![CDATA[Hello folks, 
I am glad to return with news on my web project "Listings". A contributor really decoupled front JS code into a much cleaner and maintainable code.
However, follow me for a second, I have an opportunity for anyone to contribute under some conditions.
First, let me recall that I used a lot of JS libraries and snippets for front-end; I still let myself tempted with your own libraries or snippets.
Now, let me lay down the conditions that I see reasonable in this context:
At least 5 stars on Github
Clean and versioned code
Less than 10 kb minified
Has an added value
Now, I know the last one is a bit eclectic, but let me give you examples of current libraries used so that you picture the wide range of possibilities:
pell: the simplest and smallest WYSIWYG text editor for web, with no dependencies repo

tagify: lightweight, efficient Tags input component in Vanilla JS / React / Angular / Vue repo

toasty: A minimal JavaScript notification plugin that provides a simple way to display customizable toast messages on the web page with CSS3 transition effects. repo

holmes: Fast and easy searching inside a page repo It uses microlight also.
auto-complete:  An extremely lightweight and powerful vanilla JavaScript completion suggester. repo

jsi18n: Simple client side internationalization with javascript. repo 
avatar: Library for showing Gravatars or generating user avatars. repo 
FontPicker: Font selector component for Google Fonts . repo

stretchy: Form element autosizing, the way it should be. repo



As you can see, the list is big, but it would be suitable if you can deploy the website to get a taste of it and discover functionalities so you can suggest your library.
Let me know in comments if you have any question, also if you need help deploying the web-app.
Thanks a lot !]]></summary>
        <author>
            <name>bacloud14</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Security news weekly round-up - 2nd July 2021]]></title>
        <id>https://dev.to/ziizium/security-news-weekly-round-up-2nd-july-2021-4j4</id>
        <link href="https://dev.to/ziizium/security-news-weekly-round-up-2nd-july-2021-4j4"/>
        <updated>2021-07-02T17:42:18.000Z</updated>
        <summary type="html"><![CDATA[6 weeks?, Yeah!. Let the streak continue!
Introduction


Hello, and welcome to this week's security review. I am your host Habdul Hazeez.
In this week's review, we'll look at some really scary news, like seriously scary, from printers going AWOL to Artificial Intelligence systems being fooled into identifying someone else as Elon Musk and ATM being hacked by .... wait for it....waving a phone 🤤.
I told you it was scary 😨.
Let's begin.
NFC flaws let researchers hack an ATM by waving a phone


NFC is short for Near Field Communications, and like all tech developed by man, it can be manipulated and abused.
In this scenario, security researchers used it to hack an Automated Teller Machine popularly known as an ATM.
Excerpt:
One researcher has found a collection of bugs that allow him to hack…]]></summary>
        <author>
            <name>Habdul Hazeez</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Full Stack App Automated deployment on AWS EKS]]></title>
        <id>https://dev.to/fredericheem/full-stack-app-automated-deployment-on-aws-eks-3m19</id>
        <link href="https://dev.to/fredericheem/full-stack-app-automated-deployment-on-aws-eks-3m19"/>
        <updated>2021-07-02T16:37:27.000Z</updated>
        <summary type="html"><![CDATA[This example automatically deploys a full-stack application with Kubernetes on AWS using their managed control plane called Elastic Kubernetes Service
Automation is performed with GruCloud, which is an infrastructure as code tool written in Javascript.
This infrastructure combines 2 providers: AWS and Kubernetes.
A few modules for each of these providers are being used:

In this example, the load balancer, target groups, listeners, and rules are managed by GruCloud instead of the AWS Load Balancer Controller.
Cert Manager which brings more resources,
module-aws-certificate
module-aws-vpc
module-aws-eks
module-aws-load-balancer
The local module defining the app on the k8s side is located at base.
There is no trace of manifests in YAML, instead, Kubernetes manifests are described in Javascri…]]></summary>
        <author>
            <name>Frederic</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[YAGBW - Yet Another Git Branching Workflow]]></title>
        <id>https://dev.to/andou/yagbw-yet-another-git-branching-workflow-hf4</id>
        <link href="https://dev.to/andou/yagbw-yet-another-git-branching-workflow-hf4"/>
        <updated>2021-07-02T15:50:20.000Z</updated>
        <summary type="html"><![CDATA[Hey guys! Andou here, backend engineer / web developer / tech leader for Bitmama Reply, an Italian web agency headquartered in Milan, Turin and London. 
In this article I would like to talk to you about YAGBW - Yet Another Git Branching Workflow, the git branching workflow we usually work with.
Let's get started!
When you decide to version control your project (and you should do) using git, you are somewhat asked to choose a branching model or workflow.
I've listed the most common workflows in my tech resources list, which are:
Git Flow : Probably the most famous branching model
GitHub Flow : My favourite branching model, good for CI/CD
Trunk Based Development : A skinny model good for initial project phases
Well, without further ado, here is the branching workflow we usually adopt to hand…]]></summary>
        <author>
            <name>Antonio Pastorino</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A MongoDB Learning journey]]></title>
        <id>https://dev.to/codepossible/a-mongodb-learning-journey-3hc</id>
        <link href="https://dev.to/codepossible/a-mongodb-learning-journey-3hc"/>
        <updated>2021-07-02T15:27:18.000Z</updated>
        <summary type="html"><![CDATA[Introduction


This is my tale of fumbling and tumbling into love with MongoDB, as the data store for the product, we are building at Introvoke, to power right scale branded virtual and hybrid event experiences for organizers, OEMs and enterprises.
Most of professional life while developing applications using different technology stacks, I have primarily used RDBMS as my data store. Many times it was Microsoft SQL Server as I was primarily a .NET/C# developer working at Microsoft. I had the pleasure of working with MySQL, PostgreSQL, IBM DB2 and yes, Oracle as well, working for start ups, software vendors, educational institutions and large enterprises. Good and robust products, for the solutions they power and price points they offer.
Until I joined my new role at Introvoke in late April …]]></summary>
        <author>
            <name>Shashank Banerjea</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Integridade de sub-recursos (SRI)]]></title>
        <id>https://dev.to/brunoromeiro/integridade-de-sub-recursos-sri-1oih</id>
        <link href="https://dev.to/brunoromeiro/integridade-de-sub-recursos-sri-1oih"/>
        <updated>2021-07-02T14:44:20.000Z</updated>
        <summary type="html"><![CDATA[O que é integridade de sub-recursos?


SRI é uma especificação da W3C que permite aos desenvolvedores web garantir que os recursos hospedados em servidores de terceiros não foram adulterados. Seu uso é recomendado como boa prática, sempre que as bibliotecas são carregadas de uma fonte de terceiro.
O HTTPS garante que a conexão entre o navegador e o servidor seja segura. O próprio recurso ainda pode ser modificado no lado do servidor por um invasor para incluir conteúdo malicioso, mas ainda pode ser servido com um certificado válido. O SRI, por outro lado, garante que um recurso não mudou desde que o hash foi criado.
crossorigin=”anonymous”?


Quando a solicitação não está na mesma origem, o atributo crossorigin deve estar presente para a verificação da integridade do arquivo. Sem este atri…]]></summary>
        <author>
            <name>Bruno Romeiro</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why Should One learn Angular in 2021?]]></title>
        <id>https://dev.to/katholder/why-should-one-learn-angular-in-2021-2ghl</id>
        <link href="https://dev.to/katholder/why-should-one-learn-angular-in-2021-2ghl"/>
        <updated>2021-07-02T14:43:47.000Z</updated>
        <summary type="html"><![CDATA[The JS environment teems with libraries and frameworks. However, with diverse options comes confusion along the way. It is imperative to choose the correct form of technology that helps you achieve what you want and helps in achieving your aim. A wrong decision can eat your time and leave your project in shambles. 
Why Choose Angular For Web Development? Let us look into some of the reasons for choosing Angular for your next project and how it will impact your business.
Parented by Google
Fulfills the Requirements
Purposefully informative
Checks and balances
The first impression is the last
using Angular CLI. All the components have predefined styles which help in the fast delivery of the service. Angular Material documentation is replete with the necessary examples which are required.
Package in itself
SPAs
Module Based
Friendly user-experience
Concluding to the final question- is it still relevant given that it has been here for a decade Yes! Absolutely! It is up-to-date and quite efficient in helping you build modern products. It is supported, powered, and parented by Google, and that in itself makes Angular's future bright. However, depending upon your project, the choice of the framework should be taken judiciously. The angular ecosystem is vast and continues to bring a lot to the table. The core team releases biannual versions, making it always excitable for the next updated version.]]></summary>
        <author>
            <name>Kat Holder</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Good Meetings]]></title>
        <id>https://css-tricks.com/?p=342995</id>
        <link href="https://css-tricks.com/good-meetings/"/>
        <updated>2021-07-02T14:41:26.000Z</updated>
        <summary type="html"><![CDATA[Like it or not, meetings are essential to a good working environment and communication. Therefore, it’s crucial that we work on making them as productive as possible. Today we’ll explore myriad ways to keep meetings coordinated, well documented, and talk …
The post Good Meetings appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Sarah Drasner</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Teamcity + AWS]]></title>
        <id>https://dev.to/ollita7/teamcity-aws-366n</id>
        <link href="https://dev.to/ollita7/teamcity-aws-366n"/>
        <updated>2021-07-02T14:18:15.000Z</updated>
        <summary type="html"><![CDATA[In this article we will explain how to create an ec2 ubuntu instance with the Teamcity server installed.
To begin with in this case we will create an instance from an Ubuntu 20.0 image. However, you can take a look at other alternatives that Amazon provides for us here: here.
When we are creating this instance it's important to save the pem file, so that you can access the machine through ssh.
After we have created the instance we will go to security and use the Public IPv4 DNS, in order to create a CNAME record on your domain to access that machine. 
Access to the machine




> ssh -i "<file_name>.pem" ubuntu@ec2-ip-address.sa-east-1.compute.amazonaws.com

Install java 8 to install teamcity




> sudo apt-get update
> sudo apt-get install openjdk-8-jdk

Check the java version




> java -version

Download the Teamcity Server, in our case we downloaded the latest version: 2020-2




> sudo wget https://download-cf.jetbrains.com/teamcity/TeamCity-<version>.tar.gz

> tar xfz TeamCity-<version>.tar.gz

> sudo useradd teamcity
> sudo chown -R teamcity:teamcity TeamCity

To change the server port, in the <TeamCityHome>/conf/server.xml file, change the port number in the not commented  XML node (here the port number is 8111):
Now if you browse the IP address of your server using port 8111 you should see the TeamCity web interface.
Before creating the projects we need to create at least one build agent.
> cd Teamcity/buildAgent/build
> sudo sh install.sh localhost

Finally we need to run our TeamCity Server with the following command line from:  <TeamCityHome>/bin .
> sudo sh runAll.sh start

We strongly recommend that you use docker instead of installing everything locally on this server, so that you can dockerize all your applications.
You can find more information about how to Install Docker Engine on Ubuntu, here: (https://docs.docker.com/engine/install/ubuntu/) 
Moreover, in my previous post you can read about Dockerizing an angular app.
https://dev.to/ollita7/dockerizing-an-angular-app-3nef)]]></summary>
        <author>
            <name>Guillermo Fernandez</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[🦠📲 The 9 Most Common Security Threats to Mobile Devices in 2021]]></title>
        <id>https://dev.to/robertinoc_dev/the-9-most-common-security-threats-to-mobile-devices-in-2021-26e4</id>
        <link href="https://dev.to/robertinoc_dev/the-9-most-common-security-threats-to-mobile-devices-in-2021-26e4"/>
        <updated>2021-07-02T13:16:41.000Z</updated>
        <summary type="html"><![CDATA[🛡 Mobile security threats are increasing as more organizations seek to increase mobility. Here’s how to protect your business from the most common mobile attacks.



  
  
  
Mobile initiatives are a top priority for many organizations these days because research shows that increases in mobility help enterprises improve operations and productivity.
However, increases in organizational mobility typically result in an increase in the number of mobile devices that are accessing your systems from a remote location. And for your security teams, this means a growing variety of endpoints and threats they need to secure in order to protect your organization from a data breach.
As in the past, the most common threats to mobile security include mobile malware. However, as Verizon’s 2020 Mobile Secu…]]></summary>
        <author>
            <name>Robertino</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python custom virtual environment for Liunx and Windows]]></title>
        <id>https://dev.to/ajaydeshmukh/python-custom-virtual-environment-for-liunx-and-windows-i2l</id>
        <link href="https://dev.to/ajaydeshmukh/python-custom-virtual-environment-for-liunx-and-windows-i2l"/>
        <updated>2021-07-02T13:16:23.000Z</updated>
        <summary type="html"><![CDATA[In Windows, simple and easy to install python  virtual environment using pip command and we are good to go ...


Here, how anyone can do it.
Open Command prompt or Powershell 
pip install --upgrade pip
pip3 install virtualenvwrapper-win

Remember :- Python.3x - uses pip3 and Python.2x - uses pip
Creating, working and deleting specific python virtual environment
mkvirtual env1
deactivate

workon env1
pip3 install flask
decativate

rmvirtualenv env1

This is like, we can create multiple python virtual environment in C Drive at specific location and can be accessable it from anywhere, if we working on any project or doing something.
Screenshot - cmd

venv for certain task


Let's do it.
Open bash ( Terminal )

if not installed, we can install now
sudo apt update
sudo apt install python3
sudo apt install python3-pip3
pip3 install --upgrade pip3

Then installing virtual environment
sudo pip3 install virtualenvwrapper
sudo pip3 install virtualenvwrapper-win

Creating any folder in home directory, like
mkdir pyenvs

Making changes to the .bashrc file
sudo nano ~/.bashrc

You will see like this screen

Scroll down (or use Down key ) till the end, then Copy and Paste these below script but find the "Your_user_name" by command uname -r and  version of python as python3.7, python3.8 and python3.9 etc using which python3.
For example: In my case,
'/home/ajay/pyens'
'/usr/bin/python3.9'





export WORKON_HOME='/home/Your_user_name/pyens'
export VIRTUALENVWRAPPER_PYTHON='/usr/bin/python3.x'
source /usr/local/bin/virtualenvwrapper.sh

Ctrl+S (save) and Ctrl+X (moving out from the file)
And creating python virtual environment either single or multiple times is same as like in windows.
bash ( Terminal )


Screenshot - bash

Check out pypi virtualenvwrapper-win on python pypi packages

Cheat sheet table



Commands





mkvirtualenv new_env_name



workon current_env_name



rmvirtualenv env_name


deactivate


lsvirtualenv





  
  
  Happy hacking :-)]]></summary>
        <author>
            <name>ajay-deshmukh</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Enhancing Safety by embracing Types!]]></title>
        <id>https://dev.to/itminds/enhancing-safety-by-embracing-types-548p</id>
        <link href="https://dev.to/itminds/enhancing-safety-by-embracing-types-548p"/>
        <updated>2021-07-02T11:20:12.000Z</updated>
        <summary type="html"><![CDATA[Introduction


Typescript has an amazing support of types, generics and type inference. It's also possible to generate a large amount of utility types through generics to make your typescript functions far better suited to use composition or inheritance instead of the specific objects. In this article, I will do a short-dive into the vast possibilities possible with types. However, sometimes it's difficult to imagine one-self using these types, when reading about them, so hopefully the examples I've brought from my own experience will at least resemble to issues you yourself might've encountered.
I will introduce this subject with a little detour, instead of jumping into the specific types right away, I want to rediscover one for ourselves. I'm assuming you're at least somewhat familiar wi…]]></summary>
        <author>
            <name>Cnorbjerg</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building a Standardized VPC]]></title>
        <id>https://dev.to/joeterlecki/building-a-standardized-vpc-5flm</id>
        <link href="https://dev.to/joeterlecki/building-a-standardized-vpc-5flm"/>
        <updated>2021-07-02T11:18:53.000Z</updated>
        <summary type="html"><![CDATA[Building a Standardized VPC



As someone who is always constantly tinkering and wanting to learn new technology, I seemed to fall into a profession with a never-ending buffet of tools and concepts, the DevOps/Cloud Infrastructure space. Often I find myself scouring Reddit and LinkedIn posts for "best practices!", "security!" and "cloud-native!; however, I always find myself leaving those sessions needing more input. To settle this void, I decided its time to build out my "Enterprise" worthy sandbox with my good old pal… AWS.
Working with AWS usually takes up 8 hours of my day to begin with, so I have grown quite comfortable with its features, nuances, and pricing models. It is about time I start building more stuff in my free time and blogging about it.
There is no better place to start t…]]></summary>
        <author>
            <name>Joe Terlecki</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[NodeJS Basics: File System Usage]]></title>
        <id>https://dev.to/smarthomedan/nodejs-basics-file-system-usage-5789</id>
        <link href="https://dev.to/smarthomedan/nodejs-basics-file-system-usage-5789"/>
        <updated>2021-07-02T11:10:59.000Z</updated>
        <summary type="html"><![CDATA[Accessing files from the OS in Node needs to be done in a certain way. 
When doing the import method, I found we were actually only loading the code at load time, and the files were being manpulated during runtime.
import payload from './payload.json';

This method didn't work when supplying data for API's. 
The solution was to load in the files using the Node FileSystem module. 
The snippet below shows how to do it.
import fs from 'fs';
import path from 'path';

const filepath = path.join(__dirname, 'payload.json');

const filePayloadRaw = fs.readFileSync(filepath, 'utf8');

const filePayload = JSON.parse(filePayloadRaw);

Few Notes on the above.
__dirname is an inbuilt variable to essentially give you the current directory location. This is important as when you run the node using Typescript, you will be in a src/ directory, so when you build it, the file location is wrong because you are executing from the /dist directory. __dirname gives you the runtime location. 


fs.readFileSync() needs to be passed in a character encoding. Additionally fs also provides a readFile() function which is async.


The raw result from fs is not usable until you parse it with the JSON library.]]></summary>
        <author>
            <name>Smart Home Dan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Build a custom field color picker React component for Payload CMS]]></title>
        <id>https://dev.to/payloadcms/build-a-custom-field-color-picker-react-component-for-payload-cms-4nfe</id>
        <link href="https://dev.to/payloadcms/build-a-custom-field-color-picker-react-component-for-payload-cms-4nfe"/>
        <updated>2021-07-02T11:03:57.000Z</updated>
        <summary type="html"><![CDATA[You can build completely custom field types in Payload by swapping in your own React components for any field in your app. In this tutorial, we'll be showing you how.
Building your own custom fields in Payload is as easy as writing a React component. Any field type can be extended further to make your own custom field, right down to how it works in the admin panel. In this way, you can avoid reinventing everything about a field and only work on adding your custom business logic exactly how you need.
To demonstrate this, we're going to create a simple color picker component for use right in the Payload CMS admin panel. By the end of this guide, we'll have created a modular, reusable custom field that can be dropped into any Payload CMS app with ease.
The component will:
Store its value in t…]]></summary>
        <author>
            <name>Dan Ribbens</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Build a custom field color picker React component for Payload CMS]]></title>
        <id>https://dev.to/payloadcms/build-a-custom-field-color-picker-react-component-for-payload-cms-4nfe</id>
        <link href="https://dev.to/payloadcms/build-a-custom-field-color-picker-react-component-for-payload-cms-4nfe"/>
        <updated>2021-07-02T11:03:57.000Z</updated>
        <summary type="html"><![CDATA[You can build completely custom field types in Payload by swapping in your own React components for any field in your app. In this tutorial, we'll be showing you how.
Building your own custom fields in Payload is as easy as writing a React component. Any field type can be extended further to make your own custom field, right down to how it works in the admin panel. In this way, you can avoid reinventing everything about a field and only work on adding your custom business logic exactly how you need.
To demonstrate this, we're going to create a simple color picker component for use right in the Payload CMS admin panel. By the end of this guide, we'll have created a modular, reusable custom field that can be dropped into any Payload CMS app with ease.
The component will:
Store its value in t…]]></summary>
        <author>
            <name>Dan Ribbens</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How we created an open-source alternative to Twilio and why it matters]]></title>
        <id>https://dev.to/psanders/how-we-created-an-open-source-alternative-to-twilio-and-why-it-matters-434g</id>
        <link href="https://dev.to/psanders/how-we-created-an-open-source-alternative-to-twilio-and-why-it-matters-434g"/>
        <updated>2021-07-02T10:55:23.000Z</updated>
        <summary type="html"><![CDATA[Last year, around the time I started assembling Team Fonos, I published a post on Reddit that sparked a great conversation and placed Project Fonos on Github’s trending list even though we didn’t have much to show.
 / 
        fonos
      
    
As a result, I had the opportunity to interview dozens of CTOs from companies worldwide and speak with several VCs who were interested in the idea of an open-source stack for Programmable Telecommunications.
In the interviews, I found we need an innovative approach to a cloud-based stack for Programmable Telecommunications.
Building an application that takes advantage of the existing Telecom network has always been a difficult task compared with, for example, building a web-based application.
This is difficult because it involves a particular set of…]]></summary>
        <author>
            <name>Pedro Sanders</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Email Testing Flow As It Should Be]]></title>
        <id>https://smashingmagazine.com/2021/07/email-testing-flow/</id>
        <link href="https://smashingmagazine.com/2021/07/email-testing-flow/"/>
        <updated>2021-07-02T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[With so many tools and approaches, email still has quite a few pain points, both for developers and email marketers. Email is difficult because it has too many aspects to set and a few instances with no common rules to follow.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Andriy Zapisotskyi)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Contest for developers with $95 000 rewards from the Free TON project]]></title>
        <id>https://dev.to/cigun07/contest-for-developers-with-95-000-rewards-from-the-free-ton-project-2if3</id>
        <link href="https://dev.to/cigun07/contest-for-developers-with-95-000-rewards-from-the-free-ton-project-2if3"/>
        <updated>2021-07-02T10:15:24.000Z</updated>
        <summary type="html"><![CDATA[On-line auctions implementation contest

There is a clear need for efficient implementation of different Auction types in Free TON. As many use cases demands auction mechanics we need a reference implementation of many auction types in-line with distributed smart contract architecture.
              Rewards

1 place — 50 000 TON (≈37 000 USD)
Landing page - https://freeton.support/ 
https://forum.freeton.org/t/on-line-auctions-implementation-contest/9481/8 
https://freeton.org/]]></summary>
        <author>
            <name>Aleksandr  Crypto</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[TS: Nullish Coelescing (The TS Ternary Shortcut)]]></title>
        <id>https://dev.to/apetrides/ts-nullish-coelescing-the-ts-ternary-shortcut-12mc</id>
        <link href="https://dev.to/apetrides/ts-nullish-coelescing-the-ts-ternary-shortcut-12mc"/>
        <updated>2021-07-02T07:41:48.000Z</updated>
        <summary type="html"><![CDATA[Nullish Coelescing in TypeScript is practically a shortcut for the ternary operator, achieved by using ?? between statements or values.
The double question marks work from left to right. Take the basic example below:
const value1 = undefined;
const value2 = 6;

const result = value1 ?? value2;

console.log(result); // returns 6

This reads as follows:
"If value1 is not null or undefined and has an actual value, then return that value. However, if value1 does not have a value, then return value2"
It's important to note that in the case of nullish coelescing, only null or undefined are being checked specifically. This should not be confused with checking for "truthyness" like the logical || operator would.
Take the below examples as a final explanation on this:
const b = "" ?? 42;
console.log(b); // returns ""

const c = false ?? 42;
console.log(c); // returns false

const d = NaN ?? 42;
console.log(d); // returns NaN

const e = -0 ?? 42;
console.log(e) // returns -0]]></summary>
        <author>
            <name>Anthony Petrides</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Recover Data From a Hikvision DVR]]></title>
        <id>https://dev.to/hetmansoftware/how-to-recover-data-from-a-hikvision-dvr-am5</id>
        <link href="https://dev.to/hetmansoftware/how-to-recover-data-from-a-hikvision-dvr-am5"/>
        <updated>2021-07-02T07:02:09.000Z</updated>
        <summary type="html"><![CDATA[From this article, you will learn how to recover data from DVR and NVR video recorders. We will explore the peculiarities of how they store video files, why such files can be lost, and how they can be recovered. In the process, we’ll be using a IP network video recorder Hikvision DS-7104NI-Q1/4P.

Video surveillance systems are becoming the standard option for stores and offices, for monitoring the situation around your house, apartment, or in the street. Not so long ago, surveillance systems tended to be based on personal computers, but these days, the most widespread option is autonomous NVR and DVR devices which no longer need a PC nearby.
An accidental failure or a commonplace scenario with deleting a video file accidentally may have disastrous consequences if the file in question was …]]></summary>
        <author>
            <name>Michael Mirosnichenko</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[freeCodeCamp July 2021 Summit – Campfire Mode, Data Science Curriculum, Chapter, and Other New Features]]></title>
        <id>60de3cf127f80207bcdbc9af</id>
        <link href="https://www.freecodecamp.org/news/freecodecamp-july-2021-summit/"/>
        <updated>2021-07-02T04:55:18.000Z</updated>
        <summary type="html"><![CDATA[We just published demos of several upcoming freeCodeCamp features and community initiatives. You can read about them here, and watch the entire Summit in the video embedded below. Here's what we cover in this jam-packed one hour community update.Announcement #1: Campfire ModeWe've built a new mode where you can]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Trick to Enable Printify Shipping Notifications for Orders in WooCommerce? Customer Notes.]]></title>
        <id>https://css-tricks.com/?p=342994</id>
        <link href="https://css-tricks.com/the-trick-to-enable-printify-shipping-notifications-for-orders-in-woocommerce-customer-notes/"/>
        <updated>2021-07-02T00:02:51.000Z</updated>
        <summary type="html"><![CDATA[This is a super niche blog post. But it’s been on my list forever to write down because this caused me grief for far too long.
The setup is that you can use WooCommerce to sell things on a WordPress …
The post The Trick to Enable Printify Shipping Notifications for Orders in WooCommerce? Customer Notes. appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Data Structures in TypeScript - Graph]]></title>
        <id>https://dev.to/ricardo93borges/data-structures-in-typescript-graph-551i</id>
        <link href="https://dev.to/ricardo93borges/data-structures-in-typescript-graph-551i"/>
        <updated>2021-07-01T22:32:34.000Z</updated>
        <summary type="html"><![CDATA[The graph is a data structure that consists of vertices (or nodes) that can be connected to other vertices by edges.

The degree is the number of edges that are connected to a vertex, for example, the vertex A has a degree of 1 and the vertex C has a degree of 2.
Graphs can be either directed or undirected, directed graphs are like a one-way street, undirected is like a two-way street.

Graphs can also have cycles.

Graphs might be a disconnected one, that means it consists of isolated subgraphs, or a connected one, in which all every pair of nodes are connected by an edge.

Graphs can be used to represent networks, websites structure, also used in path optimization algorithms, there are applications in other fields, such as linguistics, physics, chemistry, biology, mathematics, etc.
Graph…]]></summary>
        <author>
            <name>Ricardo Borges</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cómo crear un USB booteable desde Linux, fácil y rápido]]></title>
        <id>https://dev.to/jcarrizalez/como-crear-un-usb-booteable-desde-linux-facil-y-rapido-3o9g</id>
        <link href="https://dev.to/jcarrizalez/como-crear-un-usb-booteable-desde-linux-facil-y-rapido-3o9g"/>
        <updated>2021-07-01T18:56:22.000Z</updated>
        <summary type="html"><![CDATA[PASO 1 – Nos hacemos root





$ su

$ fdisk -l

Disco /dev/sdb: 7,3 GiB, 7780433920 bytes, 15196160 sectores

Unidades: sectores de 1 * 512 = 512 bytes
Tamaño de sector (lógico/físico): 512 bytes / 512 bytes
Tamaño de E/S (mínimo/óptimo): 512 bytes / 512 bytes
Tipo de etiqueta de disco: dos
Identificador del disco: 0x46e1cc6c

Device Boot Start End Sectors Size Id Type
/dev/sdb1 128 15196159 15196032 7,3G b W95 FAT32

$ umount /dev/sdb1

Con el comando mkfs.vfat elegimos el formato FAT y con -F 32 el tipo de formato, si quisiéramos FAT16 sería -F 16.
$ mkfs.vfat -F 32 /dev/sdb -I

$ dd if=debian-live-10.8.0-amd64-gnome.iso of=/dev/sdb

Un poco de paciencia y esperamos a que finalice la operación y listo, ya tenemos nuestro USB arrancable preparado para funcionar.
Si queremos que salga una barra de progreso al pasar la ISO al pendrive tendremos que instalar pv y luego ejecutar el comando así:
$ apt-get install pv

$ dd if=debian-live-10.8.0-amd64-gnome.iso |pv| dd of=/dev/sdb

(1,4 GB) copiados, 398,941 s, 3,5 MB/s

Si lo queremos más chulo debemos especificarle a pv el tamaño del ISO en MB así graficará la barra de progreso con el siguiente comando:
$ dd if=debian-live-10.8.0-amd64-gnome.iso |pv -s 2355M | dd of=/dev/sdb

4588160+0 registros escritos
2349137920 bytes (2,3 GB) copiados, 618,708 s, 3,8 MB/s
2,19GiB 0:10:18 [3,62MiB/s] [=================================> ] 99% 

Eso es todo..]]></summary>
        <author>
            <name>Juan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS for Web Vitals]]></title>
        <id>https://css-tricks.com/?p=343637</id>
        <link href="https://web.dev/css-web-vitals/"/>
        <updated>2021-07-01T18:54:45.000Z</updated>
        <summary type="html"><![CDATA[The marketing for Core Web Vitals (CWV) has been a massive success. I guess that’s what happens when the world’s dominant search engine tells people that something’s going to be an SEO factor. Ya know what language can play a …
The post CSS for Web Vitals appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[App Platform on Digital Ocean]]></title>
        <id>https://css-tricks.com/?p=342591</id>
        <link href="https://css-tricks.com/app-platform-on-digital-ocean/"/>
        <updated>2021-07-01T18:54:12.000Z</updated>
        <summary type="html"><![CDATA[This is new stuff from DO.
App Platform is a hosting product, no surprise there, but it has some features that are Jamstack-inspired in the best possible way, and an additional set of unique and powerful features. Let’s start with …
The post App Platform on Digital Ocean appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is Website Theming? How to Use CSS Custom Properties and Gatsby.js to Customize Your Site]]></title>
        <id>60dc72b527f80207bcdbbd8f</id>
        <link href="https://www.freecodecamp.org/news/website-theming-with-css-custom-properties-and-gatsbyjs/"/>
        <updated>2021-07-01T18:19:21.000Z</updated>
        <summary type="html"><![CDATA[In this article, I'm going to show you how to theme your website so users can customize certain elements to their tastes.  We'll talk about website themes, how theming works, and we'll end with a demo so you can see it in action. Let's dive in. Table of Contents:What]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Run a Bash Script]]></title>
        <id>https://dev.to/basicspython/how-to-run-a-bash-script-4m44</id>
        <link href="https://dev.to/basicspython/how-to-run-a-bash-script-4m44"/>
        <updated>2021-07-01T18:07:18.000Z</updated>
        <summary type="html"><![CDATA[Running a bash script is easy, but it does take a few steps and it’s important to do them in the right order. In this post, we’ll go through the steps to ensure that your script will run correctly 😉
The first step is to make a bash script. Any bash script uses the Linux commands.  A script can simply be a file with a list of commands and the .sh extension. If you are new to Linux, you can use this site to practice. 
The second step is to make sure that your script file is executable. In Linux and macOS, you can check if a file is executable by running the ls -l command and then looking for an x in the permissions column. 
The example below shows the difference:
$ ls -l *.sh
-rwxrwxr-x 1 frank frank   43 mei 29 16:30 hello.sh
-rw-rw-r-- 1 frank frank 8192 jul  1 19:41 not-executable.sh

If it isn’t executable, run the following command in Terminal.
chmod +x script.sh

To start a script you write:
./script.sh

I can write a shell script when I need to, but then continue working in Python or Perl or C++ or whatever real programming language I'm most comfortable with at the time (these days mostly C++).
For example, one of my recent side projects involved crunching data from a database, working with various embedded systems and more. Shell is not the right tool for that kind of application.
Bash is more suited for when you write a lot of commands in the shell anyway and want to automate that.]]></summary>
        <author>
            <name>PythonBasics</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[HTML List – How to Use Bullet Points, Ordered, and Unordered Lists]]></title>
        <id>60c0897ad3126007592d5701</id>
        <link href="https://www.freecodecamp.org/news/html-list-how-to-use-bullet-points-ordered-and-unordered-lists/"/>
        <updated>2021-07-01T18:02:56.000Z</updated>
        <summary type="html"><![CDATA[Listing items on a web page is a common task you'll have to do as a web developer. You may have to list shopping cart items, the order of students based on their grades, dogs with the loudest bark – and so on. So you need to know the different ways]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[10 Tips for Safe and Secure Remote Working for Developers]]></title>
        <id>https://dev.to/azapisotskyi/10-tips-for-safe-and-secure-remote-working-for-developers-19fg</id>
        <link href="https://dev.to/azapisotskyi/10-tips-for-safe-and-secure-remote-working-for-developers-19fg"/>
        <updated>2021-07-01T17:10:15.000Z</updated>
        <summary type="html"><![CDATA[10 Tips for Safe and Secure Remote Working


Modern employees require more flexibility than their previous counterparts. 
54% of employees say they’d rather shift to a career that offers them more flexibility. In other words, organizations are more likely to retain employees if they offer flexible work arrangements.
But shifting from in-person work to remote work comes with a full host of changes (and something to keep in mind when starting a business). The most crucial one? Making sure your remote team is set up to work safely and securely. 
But before we touch on 10 tips to improve your remote team’s security, let’s take a look at the importance of safe and secure remote working.
Now that more employees are working remotely, many companies are using cloud based workflows, so everyone has…]]></summary>
        <author>
            <name>Andriy Zapisotskyi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Backend Web Development with Python - Full Course]]></title>
        <id>60d5e7ae6e1a1407b6b0bc5a</id>
        <link href="https://www.freecodecamp.org/news/backend-web-development-with-python-full-course/"/>
        <updated>2021-07-01T16:51:30.000Z</updated>
        <summary type="html"><![CDATA[The backend of a website can be written in many different programming languages. It is becoming increasingly common for to use Python for the backend of a website. We just published a full backend web development with Python course on the freeCodeCamp.org YouTube channel. This comprehensive course is for]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Make mock data for your detail view component]]></title>
        <id>https://dev.to/michaelahoffman/make-mock-data-for-your-detail-view-component-59dp</id>
        <link href="https://dev.to/michaelahoffman/make-mock-data-for-your-detail-view-component-59dp"/>
        <updated>2021-07-01T16:36:26.000Z</updated>
        <summary type="html"><![CDATA[In this part of the series I'm going to work on making the mock data for the detail view. In the previous part of the series I made the list view of the zoo animals. I need to now make the animal detail view.
How do I use this at work?
Much like in the first tutorial I use this to help create a clickable prototype directly in the code base. This allows our users and SMEs to see the new features and flows directly in the context of the website they are currently familiar with. 
This works really well when you are working to fold a new user experience into an existing system. 
This also works great for new systems when I’m helping businesses transition from keeping their data and business processes in an excel spreadsheet to an application with business intelligence. I usually do a prototype…]]></summary>
        <author>
            <name>Michaela Hoffman</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vim Resources: A Hacker's Guide]]></title>
        <id>https://dev.to/basicspython/vim-resources-a-hacker-s-guide-353p</id>
        <link href="https://dev.to/basicspython/vim-resources-a-hacker-s-guide-353p"/>
        <updated>2021-07-01T15:19:59.000Z</updated>
        <summary type="html"><![CDATA[I have discovered and used vim as my primary text editor for the past few years.
Vim, an acronym meaning Vi IMproved, is a ubiquitous text editor available on nearly every system imaginable. 
Even in the most arcane corners of life, you will find a version of vim. From the data center to the local science lab to the classroom to the server farm, there is probably a version of vim running.
Vim is a text editor that operates in the console. It is very popular among programmers, and is particularly well-suited to editing source code.

Vim is often used by terminal users. But it can also be used inside modern IDEs (vim mode) and there are graphical versions as well (gVim)
In this post, I'm going to lay out a Hacker's Guide to Vim. This will be a collection of the best "Vim resources" that I have come across. 
Vim is a very complex tool with hundreds of commands and thousands of plugins that can be used to extend Vim and add functionality. So where do you start?
You can learn vim by exercise. This site offers interactive exercises. Vim is one of the programs you learn by doing.
Of course, the official vim website is a good resource as well. It has some documentation and lets you download vim. If you use Linux vim or vi is probably already installed, the same for Mac OS X users.
How to setup vim for Python. I find it quite useful, as I write quite a lot of Python code. Of course you can write Python code in any editor you want, I find for small scripts it's very practical to fire up vim.
An introduction to vim. This article shows you the basics of vim. How to open a terminal, vim and how to quit (ESC ZQ).
Settings up vim for javascript. If you write a lot of JS code, you can use vim. You can also use vim-mode inside visual studio code or phpstorm.
A cheatsheet for vim. Shows an overview for the vim commands. While a cheat sheet is useful, i think it's better to practice a lot with the commands.
A list of vim plugins. Personally I use NerdTree quite a bit.
Do you know any others? Which plugins do you use?]]></summary>
        <author>
            <name>PythonBasics</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hack the “Deploy to Netlify” Button Using Environment Variables to Make a Customizable Site Generator]]></title>
        <id>https://css-tricks.com/?p=343092</id>
        <link href="https://css-tricks.com/hack-the-deploy-to-netlify-button-using-environment-variables-to-make-a-customizable-site-generator/"/>
        <updated>2021-07-01T14:40:14.000Z</updated>
        <summary type="html"><![CDATA[If you’re anything like me, you like being lazy shortcuts. The “Deploy to Netlify” button allows me to take this lovely feature of my personality and be productive with it.

Clicking the button above lets me (or you!) instantly …
The post Hack the “Deploy to Netlify” Button Using Environment Variables to Make a Customizable Site Generator appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Cassidy Williams</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[👥 Verifiable Credentials with Auth0 and MATTR]]></title>
        <id>https://dev.to/robertinoc_dev/verifiable-credentials-with-auth0-and-mattr-40ke</id>
        <link href="https://dev.to/robertinoc_dev/verifiable-credentials-with-auth0-and-mattr-40ke"/>
        <updated>2021-07-01T13:48:35.000Z</updated>
        <summary type="html"><![CDATA[📚 How to issue Verifiable Credentials from Auth0 user data using #MATTR's #Auth0 Marketplace Integration.



  
  
  
TL;DR: This blog post illustrates how to implement verifiable credentials using MATTR's Auth0 Marketplace integration. Our example features a fictitious university that issues digital credentials for students to use at various retail and hospitality locations—the university benefits by reducing the cost to produce and maintain physical ID cards. Students minimize PII (personally identifiable information) exposure with third-party organizations and the university (i.e., where their credentials are presented).
ACME University, a (fictitious) prestigious educational institution, has been an Auth0 customer since late 2016. ACME uses Auth0 to store data about all its students a…]]></summary>
        <author>
            <name>Robertino</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[It’s A (Front-End Testing) Trap! Six Common Testing Pitfalls And How To Solve Them]]></title>
        <id>https://smashingmagazine.com/2021/07/frontend-testing-pitfalls/</id>
        <link href="https://smashingmagazine.com/2021/07/frontend-testing-pitfalls/"/>
        <updated>2021-07-01T12:30:00.000Z</updated>
        <summary type="html"><![CDATA[When writing front-end tests, you’ll find a lot of pitfalls along the way. Let’s explore common mistakes developers make, and how to avoid them. Testing doesn’t need to be painful, after all.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Ramona Schwering)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Brief History of Dongles & Copy Protection]]></title>
        <id>https://dev.to/a_lernin/a-brief-history-of-dongles-copy-protection-2m9k</id>
        <link href="https://dev.to/a_lernin/a-brief-history-of-dongles-copy-protection-2m9k"/>
        <updated>2021-07-01T09:56:30.000Z</updated>
        <summary type="html"><![CDATA[Two general techniques can be used to provide copy protection for a software application. Programs can be protected digitally using software or physically with a copy protection dongle. 
While using software may seem like a simpler method, keeping your software safe from piracy can be difficult. The software used to protect your program can be hacked, rendering it useless as a defensive measure.
Tenacious hackers can subvert the detection and encryption mechanisms put in place to keep them away from protected software resources. Using a physical form of defense like a USB copy protection dongle provides an additional level of security that must be breached to gain access to the projected resource. It’s not a perfect method but is widely used by software developers to protect their work.
A …]]></summary>
        <author>
            <name>ALernin</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Data Recovery from LVM Volumes in Linux]]></title>
        <id>https://dev.to/hetmansoftware/data-recovery-from-lvm-volumes-in-linux-goe</id>
        <link href="https://dev.to/hetmansoftware/data-recovery-from-lvm-volumes-in-linux-goe"/>
        <updated>2021-07-01T06:46:44.000Z</updated>
        <summary type="html"><![CDATA[Would you like to know how to use the LVM technology in Linux? How to create an LVM volume, how to configure and mount it in your operating system, how to add and remove disks, and how to recover the information you have accidentally deleted? In today’s article, you will find all of that – and even more.

LVM (Logical Volume Manager) is a standard disk management feature available in every version of Linux. The volume manager provides a new level of interaction between your operating system and disks or volumes which this system is using. In a conventional disk management pattern, Linux looks for available drives first, and then checks what volumes are available on these devices.
With the help of LVM, disks or volumes can be united into a single space. If the disk space is treated like tha…]]></summary>
        <author>
            <name>Michael Mirosnichenko</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Microservices Architecture: Event Sourcing and Saga Pattern]]></title>
        <id>https://dev.to/priyanshi_sharma/microservices-architecture-event-sourcing-and-saga-pattern-5f9e</id>
        <link href="https://dev.to/priyanshi_sharma/microservices-architecture-event-sourcing-and-saga-pattern-5f9e"/>
        <updated>2021-07-01T06:35:58.000Z</updated>
        <summary type="html"><![CDATA[Organizations continuously seek new approaches to build growth opportunities and reduce marketing time. One can increase their organization’s efficiency and agility by application or software modernization. Application modernization is a gateway to continuously improve your organization by refactoring a monolithic application into a set of independently developed, managed and deployed microservices.
Although you can use monolithic applications for a few use cases, modern features usually don’t work in an application based on monolithic architecture. Monolithic applications can become large and unmanageable that require coordination and effort from multiple teams, even if a small change is needed.
That’s why by choosing microservices you can decentralize your data stores and promote polyglo…]]></summary>
        <author>
            <name>Priyanshi Sharma</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The 2021 New Coder Survey is Now Live – and Here&#x27;s How We Designed It]]></title>
        <id>60dc78e927f80207bcdbbddc</id>
        <link href="https://www.freecodecamp.org/news/2021-new-coder-survey/"/>
        <updated>2021-07-01T04:36:31.000Z</updated>
        <summary type="html"><![CDATA[Hello freeCodeCamp community! I'm Dilan, a PhD candidate in sociology at Boston University. I'm an absolute coding newbie, but I do know a bit about surveys. 😃 I have been working with freeCodeCamp founder Quincy Larson over the past few months to design the 2021 New Coder Survey. And I'm thrilled]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Faster angular universal with PWA]]></title>
        <id>https://dev.to/anirbmuk/faster-angular-universal-with-pwa-4lcm</id>
        <link href="https://dev.to/anirbmuk/faster-angular-universal-with-pwa-4lcm"/>
        <updated>2021-07-01T02:00:16.000Z</updated>
        <summary type="html"><![CDATA[This article speaks about an interesting side-effect of mixing angular universal with progressive web application (pwa) - and that's a massive performance boost!
--
ng add @nguniversal/express-engine

Once this is done, let's quickly check if SSR is working as per our expectation.
npm run build:ssr && npm run serve:ssr

Node server fires up on port 4000 and I check for my webpage's source.
view-source:http://localhost:4000/


ng add @angular/pwa

No extra configurations so far, and that's how it will be. Let's build our universal application once again and serve it on localhost:4000.
But wait!!! Now when I view my webpage source on the browser, I get this:

So does this mean that my SSR is broken?
Nope! My SSR is perfectly fine :-) Let's run a quick check to prove this. Open up POSTMAN and run a GET request against http://localhost:4000. And voila! I see my server-side-rendered page once again!

--
index.html is now cached by service-worker at the browser. The browser does not need to wait for the server to render the content any more, and it simply serves the cached version, and Angular takes over thereafter, like a normal SPA. Open up ngsw-config.json and verify that index.html is one of the cached resources.

Note (and a small exercise): If you remove index.html from ngsw-config.json and re-build your universal, you would see that the server-rendered content is back on your browser source, since the HTML is now no longer being cached!
 
Cheers -:)]]></summary>
        <author>
            <name>Anirban Mukherjee</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Welcome Pop 21.04]]></title>
        <id>https://dev.to/bukanspot/welcome-pop-21-04-3c2h</id>
        <link href="https://dev.to/bukanspot/welcome-pop-21-04-3c2h"/>
        <updated>2021-07-01T00:35:46.000Z</updated>
        <summary type="html"><![CDATA[Finally 4 finger is on linux :)
Have a dock, nice
What's more?]]></summary>
        <author>
            <name>Indra Wahyu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Slow downloading on corporate proxies? Try aria2!]]></title>
        <id>https://dev.to/mbround18/slow-downloading-on-corporate-proxies-try-aria2-10dg</id>
        <link href="https://dev.to/mbround18/slow-downloading-on-corporate-proxies-try-aria2-10dg"/>
        <updated>2021-06-30T22:52:55.000Z</updated>
        <summary type="html"><![CDATA[Disclosure


This is for if you have troubles downloading large files while on a company network, or want to download files faster using Linux or Mac. 
1). Download aria2
Through brew: brew install aria2

Other systems: https://aria2.github.io/

Ubuntu Example:




2). cd to your downloads directory.
3). Run the following command:
aria2c --file-allocation=none -c -x 10 -s 10 $URL

4). Replace $URL with the download URL of the file you are trying to pull.
On the corporate network, downloading the docker for mac was taking upwards of an hour. 
Downloading with aria2c:

The download was much quicker due to multi-threaded downloads! 😄
Credit to Aria2 for an awesome downloading tool!
Credit to hmj6jmh on StackOverflow for the solution they posted to "How to make wget faster or multithreading?" which helped me solve my frustration downloading while on corporate networks.]]></summary>
        <author>
            <name>Michael</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How do you make a layout with pictures down one side of a page matched up with paragraphs on the other side?]]></title>
        <id>https://css-tricks.com/?p=343224</id>
        <link href="https://css-tricks.com/how-do-you-make-a-layout-with-pictures-down-one-side-of-a-page-matched-up-with-paragraphs-on-the-other-side/"/>
        <updated>2021-06-30T20:36:52.000Z</updated>
        <summary type="html"><![CDATA[I got this exact question in an email the other day, and I thought it would make a nice blog post because of how wonderfully satisfying this is to do in CSS these days. Plus we can sprinkle in polish …
The post How do you make a layout with pictures down one side of a page matched up with paragraphs on the other side? appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learn the CSS Box-Shadow Property by Coding a Beautiful Button ✨]]></title>
        <id>6063b8d69618b008528a9d79</id>
        <link href="https://www.freecodecamp.org/news/css-box-shadow-property-with-examples/"/>
        <updated>2021-06-30T18:49:49.000Z</updated>
        <summary type="html"><![CDATA[Today we're gonna learn how to use CSS's box-shadow property to make beautiful website components. Along the way, we'll create a button and get hands-on experience using this property. Let's get started. 🎖️ Table of Contents Why you should use the CSS box-shadow propertyThe syntax of the box-shadow propertyHow to make]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using Strapi with Angular Universal Apps]]></title>
        <id>https://dev.to/zaracooper/using-strapi-with-angular-universal-apps-5e5i</id>
        <link href="https://dev.to/zaracooper/using-strapi-with-angular-universal-apps-5e5i"/>
        <updated>2021-06-30T17:25:35.000Z</updated>
        <summary type="html"><![CDATA[Angular is a powerful feature-rich platform that you can use to create all kinds of single-page apps, ranging from simple sites to more intricate ones. With it, you can build efficient native, web, and mobile apps with a wide range of tools and libraries it integrates. However, there are still ways apps built with it can be improved. For example, using Angular Universal, you can render your apps server-side to speed up page loads and improve SEO and performance.
Server-side rendering involves converting an app to HTML on a server. When you send a request for a particular path to the server, it returns an entirely static HTML page as a response. No additional requests need to be made to populate the page with data and resources as it is all contained in the response. The page appears almost…]]></summary>
        <author>
            <name>Zara Cooper</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[E-commerce Security Basics: How to Start with E-commerce Security]]></title>
        <id>https://dev.to/k88techmedia/e-commerce-security-basics-how-to-start-with-e-commerce-security-42f4</id>
        <link href="https://dev.to/k88techmedia/e-commerce-security-basics-how-to-start-with-e-commerce-security-42f4"/>
        <updated>2021-06-30T16:36:32.000Z</updated>
        <summary type="html"><![CDATA[When it comes to security and maintenance of an e-commerce, a lot of store  owners fail. Why? Mainly because it requires undivided focus and a continuous effort. You can solve the problem a great deal by getting a security tool that automates the process for you. Additionally, it helps to revops your business.
That being said, there are steps that can help you in preventing security threats to a certain extent. Today, in this post, we are going to look at the different dimensions of e-commerce security and the proven measures that enhance it.
E-commerce security is one of the most important aspects of running a successful e-commerce store. While there is a whole range of e-commerce security threats one needs to watch out for, implementing a few measures does the trick in stopping them.
 
S…]]></summary>
        <author>
            <name>Jhon Wilson</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[When a Click is Not Just a Click]]></title>
        <id>https://css-tricks.com/?p=343064</id>
        <link href="https://css-tricks.com/when-a-click-is-not-just-a-click/"/>
        <updated>2021-06-30T14:45:42.000Z</updated>
        <summary type="html"><![CDATA[The click event is quite simple and easy to use; you listen for the event and run code when the event is fired. It works on just about every HTML element there is, a core feature of the DOM API.…
The post When a Click is Not Just a Click appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Travis Almand</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fixing a Bug in Low-Resolution Mode]]></title>
        <id>https://css-tricks.com/?p=343182</id>
        <link href="https://css-tricks.com/fixing-a-bug-in-low-resolution-mode/"/>
        <updated>2021-06-30T14:44:54.000Z</updated>
        <summary type="html"><![CDATA[I was working on a bug ticket the other day where it was reported that an icon was sitting low in a button. Just not aligned like it should be. I had to go on a little journey to figure …
The post Fixing a Bug in Low-Resolution Mode appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Build a grayscale release environment from scratch]]></title>
        <id>https://dev.to/devui/build-a-grayscale-release-environment-from-scratch-1fc9</id>
        <link href="https://dev.to/devui/build-a-grayscale-release-environment-from-scratch-1fc9"/>
        <updated>2021-06-30T14:38:39.000Z</updated>
        <summary type="html"><![CDATA[Guide


Grayscale release, also known as canary release.
The term "canary" stems from the tradition of coal miners bringing caged canaries into mines. Miners use canaries to detect the concentration of carbon monoxide in the mine. The canaries would be poisoned by high concentration of carbon monoxide, in this case miners should evacute immediately. - DevOps Practice Guide
When we use "grayscale" or "canary" in software development. It refers to a small number of users' test before official release. So the problems can be detected earlier to prevent them from affecting most users.
Pipeline with grayscale release module is a very important tool and an efficient practice in DevOps, but I knew little about this when I was a student. After onboarding, I discovered the power of pipelines.
When …]]></summary>
        <author>
            <name>DevUI</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is The C Programming Language? A Tutorial for Beginners]]></title>
        <id>6055c55b687d62084bf68804</id>
        <link href="https://www.freecodecamp.org/news/what-is-the-c-programming-language-beginner-tutorial/"/>
        <updated>2021-06-30T14:25:53.000Z</updated>
        <summary type="html"><![CDATA[This tutorial is an overview of basic concepts of the C programming language.  It goes over the history of the language, why and where it is used, the compilation process, and some very basic programming concepts that are common in most popular programming languages. It is not a complete guide]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hosting frontend Blazor applications on the edge]]></title>
        <id>https://dev.to/bunnynet/hosting-frontend-blazor-applications-on-the-edge-4mfn</id>
        <link href="https://dev.to/bunnynet/hosting-frontend-blazor-applications-on-the-edge-4mfn"/>
        <updated>2021-06-30T14:05:31.000Z</updated>
        <summary type="html"><![CDATA[Frameworks such as Angular, Vue.js, React or more recently, Blazor allow you to build highly dynamic applications based on a set of static files. Hosting these applications everywhere should be simple, but the catch is that the entry point will typically be an index.html file that holds the main application logic and connects everything together.
To work around this, you are usually forced to use a .htaccess file or special server configuration to route all of your requests to the correct destinations. This issue makes hosting frontend framework applications cumbersome in a cloud storage scenario.
However, we believe that bunny.net Edge Storage is a perfect home for these files. Not only is deployment extremely easy, but we also distribute and host these files in 5 different regions around…]]></summary>
        <author>
            <name>james middleton</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learn React Router]]></title>
        <id>60d5ea736e1a1407b6b0bc8d</id>
        <link href="https://www.freecodecamp.org/news/learn-react-router/"/>
        <updated>2021-06-30T14:01:01.000Z</updated>
        <summary type="html"><![CDATA[React Router is commonly used to make different routes for pages in React Applications. We just released a crash course on the freeCodeCamp.org YouTube channel that will teach you how to create routes in your React applications. Piyush Agarwal developed this course. Piyush is a prolific course creator on]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Package.json File explained!!!]]></title>
        <id>https://dev.to/naveenchandar/package-json-file-explained-b94</id>
        <link href="https://dev.to/naveenchandar/package-json-file-explained-b94"/>
        <updated>2021-06-30T12:32:06.000Z</updated>
        <summary type="html"><![CDATA[If you've been working on javascript or related framework projects then definitely you came across the file named package.json and we might be curious why this file is included in our projects and why it's needed 🤔.
The main purpose of this file is to hold various metadata related to the project and it is used to give information to npm that allows to identify the project and its dependencies.
To create a package.json file manually you need to run a command npm init which will ask you a bunch of questions that is not compulsory. Just hit enter to complete those.You can change it later.
npm init -y which will create a file named package.json with the defaults.
Let's see the list of available options which npm has given us to make in this file.
name
Must be less than or equal to 214 charact…]]></summary>
        <author>
            <name>Naveenchandar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The State Of Web Workers In 2021]]></title>
        <id>https://smashingmagazine.com/2021/06/web-workers-2021/</id>
        <link href="https://smashingmagazine.com/2021/06/web-workers-2021/"/>
        <updated>2021-06-30T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[The web is single-threaded. This makes it increasingly hard to write smooth and responsive apps. Workers have a bad rep, but can be an important and useful tool in any web developer's toolbelt for these kinds of problems. Let’s get up to speed on Workers on the Web!]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Surma)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular Material Responsive Sub Navigation Menu]]></title>
        <id>https://dev.to/w3hubs/angular-material-responsive-sub-navigation-menu-3imb</id>
        <link href="https://dev.to/w3hubs/angular-material-responsive-sub-navigation-menu-3imb"/>
        <updated>2021-06-30T10:09:15.000Z</updated>
        <summary type="html"><![CDATA[Navigation Menu has multiple links to show categories with a click/hover more sub category’s. So here we made Responsive Sub Navigation Menu in Material Angular with CSS.
In this Navigation Menu, we used Angular Material components and also modify CSS classes. Here we used a menu with and ripple effects on clicks. Also, we used a responsive side Expansion Panel. To show all sub-links in expandable details views. To make a clickable toggle we used material icons and functions. These fully responsive and mobile-friendly elements.
Make it yours now by using it, downloading it and please share it. we will design more elements for you.
Source Code]]></summary>
        <author>
            <name>w3hubs.com</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[angular multimonitors]]></title>
        <id>https://dev.to/mansourehaghabeig/angular-multimonitors-7m7</id>
        <link href="https://dev.to/mansourehaghabeig/angular-multimonitors-7m7"/>
        <updated>2021-06-30T09:39:04.000Z</updated>
        <summary type="html"><![CDATA[Hello, I want to know how can obtain the height and width of second monitor in angular. by window object, I can get window information of one monitor.]]></summary>
        <author>
            <name>mansourehaghabeig</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Many Shades Of July (2021 Desktop Wallpapers Edition)]]></title>
        <id>https://smashingmagazine.com/2021/06/desktop-wallpaper-calendars-july-2021/</id>
        <link href="https://smashingmagazine.com/2021/06/desktop-wallpaper-calendars-july-2021/"/>
        <updated>2021-06-30T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[Let’s welcome July with some fresh desktop wallpapers. Designed by artists and designers from around the world, they are available with and without a calendar. Enjoy!]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cosima Mielke)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What does `font: 110%/1.4 system-ui` mean?]]></title>
        <id>https://css-tricks.com/?p=343470</id>
        <link href="https://css-tricks.com/what-does-font-110-1-4-system-ui-mean/"/>
        <updated>2021-06-29T22:43:50.000Z</updated>
        <summary type="html"><![CDATA[I use this line, or one like it, in a lot of quick demos. Not that it’s not a production-worthy line of code—I just tend to be a bit more explicit on bigger projects. 
html {
  font: 110%/1.4 system-ui;
}
…
The post What does `font: 110%/1.4 system-ui` mean? appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Chromium spelling and grammar features]]></title>
        <id>https://css-tricks.com/?p=343260</id>
        <link href="https://www.azabani.com/2021/05/17/spelling-grammar.html"/>
        <updated>2021-06-29T20:25:00.000Z</updated>
        <summary type="html"><![CDATA[Delan Azabani digs into the (hopefully) coming soon ::spelling-error and ::grammar-error pseudo selectors in CSS. Design control is always nice. Hey, if we can style scrollbars and style selected text, why not this?
The squiggly lines that indicate possible spelling or grammar errors 
…
The post Chromium spelling and grammar features appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Coding Interview Backtracking Problems Crash Course – The Only One You&#x27;ll Ever Need]]></title>
        <id>60db519527f80207bcdbb6fa</id>
        <link href="https://www.freecodecamp.org/news/coding-interview-backtracking-problems-crash-course/"/>
        <updated>2021-06-29T20:00:32.000Z</updated>
        <summary type="html"><![CDATA[Whether you are new to coding interviews or are already familiar with the concept of backtracking, this is the crash course for you. We will learn about an all-purpose coding template and apply it to two LeetCode hard problems. Ready to crunch your next coding interview? Let's go!]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux List Processes – How to Check Running Processes]]></title>
        <id>604b8c6ea7946308b7687683</id>
        <link href="https://www.freecodecamp.org/news/linux-list-processes-how-to-check-running-processes/"/>
        <updated>2021-06-29T19:47:13.000Z</updated>
        <summary type="html"><![CDATA[Every day, developers use various applications and run commands in the terminal. These applications can include a browser, code editor, terminal, video conferencing app, or music player.  For each of these software applications that you open or commands you run, it creates a process or task. One beautiful feature of]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[:nth-child Between Two Fixed Indexes]]></title>
        <id>https://css-tricks.com/?p=342736</id>
        <link href="https://css-tricks.com/nth-child-between-two-fixed-indexes/"/>
        <updated>2021-06-29T14:37:21.000Z</updated>
        <summary type="html"><![CDATA[I needed to select some elements between two fixed indexes the other day — like literally the second through fifth elements. Ironically, I have a whole post on “Useful :nth-child Recipes” but this wasn’t one of them. 
The answer, it …
The post :nth-child Between Two Fixed Indexes appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Breaking Down Bulky Builds With Netlify And Next.js]]></title>
        <id>https://smashingmagazine.com/2021/06/breaking-down-bulky-builds-netlify-nextjs/</id>
        <link href="https://smashingmagazine.com/2021/06/breaking-down-bulky-builds-netlify-nextjs/"/>
        <updated>2021-06-29T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[Static Generation is great for performance — until the app gets too big and build-times go through the roof. Today, we’ll have a look at how Netlify’s fresh On-Demand Builders can fix that.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Átila Fassina)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 40 Mike Cavaliere: What Is Chakra UI For React?]]></title>
        <id>https://smashingmagazine.com/2021/06/smashing-podcast-episode-40/</id>
        <link href="https://smashingmagazine.com/2021/06/smashing-podcast-episode-40/"/>
        <updated>2021-06-29T05:30:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode, we’re talking about Chakra UI. What is it and how can it help with your React projects? Drew McLellan talks to expert Mike Cavaliere to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[System *Things]]></title>
        <id>https://css-tricks.com/?p=343040</id>
        <link href="https://css-tricks.com/system-things/"/>
        <updated>2021-06-28T22:14:22.000Z</updated>
        <summary type="html"><![CDATA[I think we’re all largely aware of colors like this:
color: OldLace;
background: rebeccapurple;
I guess you’d just call those “named colors” in CSS. 
Those aren’t the only kind of named colors there are though. Some of them are …
The post System *Things appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Working around the viewport-based fluid typography bug in Safari]]></title>
        <id>https://css-tricks.com/?p=343139</id>
        <link href="https://www.sarasoueidan.com/blog/safari-fluid-typography-bug-fix/"/>
        <updated>2021-06-28T21:17:26.000Z</updated>
        <summary type="html"><![CDATA[Sara digs into a bug I happened to have mentioned back in 2012 where fluid type didn’t resize when the browser window resized. Back then, it affected Chrome 20 and Safari 6, but the bug still persists today in Safari …
The post Working around the viewport-based fluid typography bug in Safari appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Positioning Overlay Content with CSS Grid]]></title>
        <id>https://css-tricks.com/?p=342971</id>
        <link href="https://css-tricks.com/positioning-overlay-content-with-css-grid/"/>
        <updated>2021-06-28T14:25:33.000Z</updated>
        <summary type="html"><![CDATA[Not news to any web developer in 2021: CSS Grid is an incredibly powerful tool for creating complex, distinct two-dimensional modern web layouts.
Recently, I have been experimenting with CSS Grid and alignment properties to create component layouts that …
The post Positioning Overlay Content with CSS Grid appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Ryan Mulligan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Creating Custom Emmet Snippets In VS Code]]></title>
        <id>https://smashingmagazine.com/2021/06/custom-emmet-snippets-vscode/</id>
        <link href="https://smashingmagazine.com/2021/06/custom-emmet-snippets-vscode/"/>
        <updated>2021-06-28T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[In this article, Manuel explains why Emmet is one of his favorite productivity tools for writing HTML and CSS, and how you can create custom Emmet snippets in Visual Studio Code to help you improve your front-end workflows even more.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Manuel Matuzović)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Creating A Multi-Author Blog With Next.js]]></title>
        <id>https://smashingmagazine.com/2021/06/creating-multi-author-blog-nextjs/</id>
        <link href="https://smashingmagazine.com/2021/06/creating-multi-author-blog-nextjs/"/>
        <updated>2021-06-25T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[This article explains how we can connect different types of content in a Next.js application. With this technique, we can add any kind of one-to-one, one-to-many, or even many-to-many relationship to our projects.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Dom Habersack)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Run A UX Audit For A Major EdTech Platform (Case Study)]]></title>
        <id>https://smashingmagazine.com/2021/06/ux-audit-edtech-platform-case-study/</id>
        <link href="https://smashingmagazine.com/2021/06/ux-audit-edtech-platform-case-study/"/>
        <updated>2021-06-25T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[This article is a case study of how a UX audit affects a UI. It explains how a famous educational platform can be analyzed edX against Jakob Nielsen’s usability guidelines. To get started, Mark Lankmiller shares all of the criteria and metrics he used for his UX audit.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Mark Lankmilier)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Rise Of Design Thinking As A Problem Solving Strategy]]></title>
        <id>https://smashingmagazine.com/2021/06/design-thinking-problem-solving-strategy/</id>
        <link href="https://smashingmagazine.com/2021/06/design-thinking-problem-solving-strategy/"/>
        <updated>2021-06-24T14:00:00.000Z</updated>
        <summary type="html"><![CDATA[In the dynamic and unpredictable environments in which we work, even the most carefully crafted solutions can have a short shelf life. When we accept that our work is impermanent and our problem-solving abilities are limited, our goal can shift from delivering full solutions to developing tools that empower our users to adaptively design for themselves.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Josh Singer)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Online Workshops (July-October 2021)]]></title>
        <id>https://smashingmagazine.com/2021/06/new-smashing-online-workshops-frontend-ux-design/</id>
        <link href="https://smashingmagazine.com/2021/06/new-smashing-online-workshops-frontend-ux-design/"/>
        <updated>2021-06-23T13:30:00.000Z</updated>
        <summary type="html"><![CDATA[Frontend and design are remarkably complex these days. That’s why we invite kind, smart folks from the community to run [online workshops](https://smashingconf.com/online-workshops/) for all of us to learn together. And we have new ones coming up, and we’d like to kindly welcome you to join in.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Iris Lješnjanin)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Automating Screen Reader Testing On macOS Using Auto VO]]></title>
        <id>https://smashingmagazine.com/2021/06/automating-screen-reader-testing-macos-autovo/</id>
        <link href="https://smashingmagazine.com/2021/06/automating-screen-reader-testing-macos-autovo/"/>
        <updated>2021-06-23T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[Automated testing is an important part of any software project, including testing for accessibility. There are already tools for linting and integration testing accessibility, but what about end-to-end testing with real assistive technology? Since I hadn’t seen this before, I set out to build Auto VO, a driver for the VoiceOver screen reader.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cameron Cundiff)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.11.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.11.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.11.0"/>
        <updated>2021-06-23T05:57:59.000Z</updated>
        <summary type="html"><![CDATA[Added: support an experimental template for YouTube feed 📺 Demo | Source

Aggregate content from any YouTube channel rss url https://www.youtube.com/feeds/videos.xml?channel_id=<replace_with_channel_id>
Videos are embedded via iframe and loading accelerated by youtube-lite-embed
Ads are reduced thanks to YouTube's policy for embedded videos 🙃
Works on mobile devices with butter smooth horizontal scroll.
Caveat: the template works only with YouTube content. You cannot mix textual RSS feed or other video sources such as Vimeo.
Changed: Default HTML template meta tag adjusted to match convention
Changed: sources in template data is now ordered by last update timestamp (as opposed to alphabetical)
Thank you @PiyushLosalka]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Designing With Code: A Modern Approach To Design (Development Challenges)]]></title>
        <id>https://smashingmagazine.com/2021/06/design-code-modern-approach-development-challenges/</id>
        <link href="https://smashingmagazine.com/2021/06/design-code-modern-approach-development-challenges/"/>
        <updated>2021-06-22T09:00:00.000Z</updated>
        <summary type="html"><![CDATA[After years of innovation in both tools and processes, the struggle between design and development is still real. This article focuses on the best practices for improving the design to development processes and how cutting-edge solutions, such as UXPin powered by Merge technology, can help in facilitating the change.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Mikołaj Dobrucki)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Image To Text Conversion With React And Tesseract.js (OCR)]]></title>
        <id>https://smashingmagazine.com/2021/06/image-text-conversion-react-tesseract-js-ocr/</id>
        <link href="https://smashingmagazine.com/2021/06/image-text-conversion-react-tesseract-js-ocr/"/>
        <updated>2021-06-21T14:30:00.000Z</updated>
        <summary type="html"><![CDATA[Do you have to process data manually because it is served through images or scanned documents? An image-to-text conversion makes it possible to extract text from images to automate the processing of texts on images, videos, and scanned documents. In this article, we look at how to convert an image to text with React and Tesseract.js(OCR), preprocess images, and deal with the limitations of Tesseract (OCR).]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Ayobami Ogundiran)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[An Alternative Voice UI To Voice Assistants]]></title>
        <id>https://smashingmagazine.com/2021/06/alternative-voice-ui-voice-assistants/</id>
        <link href="https://smashingmagazine.com/2021/06/alternative-voice-ui-voice-assistants/"/>
        <updated>2021-06-18T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[Voice assistants are currently the most popular use case for voice user interfaces. However, due to the bad feedback loop resulting from voice assistants can only solve simple user tasks such as setting an alarm or playing music. In order for voice user interfaces to really break through, feedback to the user must be visual, not auditive.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Ottomatias Peura)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Client-Side Routing In Next.js]]></title>
        <id>https://smashingmagazine.com/2021/06/client-side-routing-next-js/</id>
        <link href="https://smashingmagazine.com/2021/06/client-side-routing-next-js/"/>
        <updated>2021-06-18T13:00:00.000Z</updated>
        <summary type="html"><![CDATA[Next.js has a file-based routing system in which each page automatically becomes a route based on its file name. This article will guide you through almost everything you need to know about Routing in Next.js and point you in the direction of related topics and concepts.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Adebiyi Adedotun)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Your Image Is Probably Not Decorative]]></title>
        <id>https://smashingmagazine.com/2021/06/img-alt-attribute-alternate-description-decorative/</id>
        <link href="https://smashingmagazine.com/2021/06/img-alt-attribute-alternate-description-decorative/"/>
        <updated>2021-06-17T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[Image placement on the modern web is highly intentional, helping to communicate the overall purpose of a page or view. This means that nearly every image you declare needs to have an alternate description.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Eric Bailey)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Complete Guide To Accessibility Tooling]]></title>
        <id>https://smashingmagazine.com/2021/06/complete-guide-accessibility-tooling/</id>
        <link href="https://smashingmagazine.com/2021/06/complete-guide-accessibility-tooling/"/>
        <updated>2021-06-16T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[In a new short series of posts, we highlight some of the useful tools and techniques for developers and designers. Recently we’ve covered HTML Emails and SVG Generators. This time we look into different kinds of tools to help you streamline your accessibility testing process. Don’t miss the next one.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Nic Chan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Spinning Up Multiple WordPress Sites Locally With DevKinsta]]></title>
        <id>https://smashingmagazine.com/2021/06/multiple-wordpress-sites-locally-devkinsta/</id>
        <link href="https://smashingmagazine.com/2021/06/multiple-wordpress-sites-locally-devkinsta/"/>
        <updated>2021-06-15T10:15:00.000Z</updated>
        <summary type="html"><![CDATA[When developing themes and plugins for WordPress, we need to test them in different environments. How can we create multiple testing sites on our computer, quickly and easily, without having to become a sysadmin?]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Leonardo Losoviz)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 39 With Addy Osmani: Image Optimization]]></title>
        <id>https://smashingmagazine.com/2021/06/smashing-podcast-episode-39/</id>
        <link href="https://smashingmagazine.com/2021/06/smashing-podcast-episode-39/"/>
        <updated>2021-06-15T07:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode of the Smashing Podcast, we’re talking about image optimization. What steps should we follow for performant images in 2021? We talk to expert Addy Osmani to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[When CSS Isn’t Enough: JavaScript Requirements For Accessible Components]]></title>
        <id>https://smashingmagazine.com/2021/06/css-javascript-requirements-accessible-components/</id>
        <link href="https://smashingmagazine.com/2021/06/css-javascript-requirements-accessible-components/"/>
        <updated>2021-06-14T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[Spoiler alert: tooltips, modals, tabs, carousels, and dropdown menus are some of the user interface components that require more than CSS. To ensure accessibility of your interface, JavaScript is a necessary addition to accomplish focus management, respond to keyboard events, and toggle ARIA attributes.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Stephanie Eckles)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Web Design Done Well: Making Use Of Audio]]></title>
        <id>https://smashingmagazine.com/2021/06/web-design-done-well-audio/</id>
        <link href="https://smashingmagazine.com/2021/06/web-design-done-well-audio/"/>
        <updated>2021-06-11T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[Design often revolves around visuals, but the other senses deserve love too. In this article, we tune in to audio features that are making sites sing.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Frederick O’Brien)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Useful Front-End Boilerplates And Starter Kits]]></title>
        <id>https://smashingmagazine.com/2021/06/useful-frontend-boilerplates-starter-kits/</id>
        <link href="https://smashingmagazine.com/2021/06/useful-frontend-boilerplates-starter-kits/"/>
        <updated>2021-06-10T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[We don’t need to write everything from scratch every single time. With boilerplates and starter kits, we can set up our projects faster, and get to work immediately.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cosima Mielke)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Three Front-End Auditing Tools I Discovered Recently]]></title>
        <id>https://smashingmagazine.com/2021/06/three-frontend-auditing-tools/</id>
        <link href="https://smashingmagazine.com/2021/06/three-frontend-auditing-tools/"/>
        <updated>2021-06-10T11:15:00.000Z</updated>
        <summary type="html"><![CDATA[Building a faster website can be a rocket task these days. There are so many things to consider, so it’s challenging to get everything right. Here are some less-known tools that might help you get there.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Stefan Judis)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Meet <code>:has</code>, A Native CSS Parent Selector (And More)]]></title>
        <id>https://smashingmagazine.com/2021/06/has-native-css-parent-selector/</id>
        <link href="https://smashingmagazine.com/2021/06/has-native-css-parent-selector/"/>
        <updated>2021-06-09T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[What makes relational selector one of the most requested features and how are we, as developers, working around not having it? In this article, we’re going to check the early spec of the :has selector, and see how it should improve the CSS workflow once it’s released.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Adrian Bece)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[From AVIF to WebP: A New Smashing Book By Addy Osmani]]></title>
        <id>https://smashingmagazine.com/2021/06/image-optimization-book-release/</id>
        <link href="https://smashingmagazine.com/2021/06/image-optimization-book-release/"/>
        <updated>2021-06-08T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[It’s here! For the last year, we’ve been working with Addy Osmani on a new Smashing Book all around image optimization. And now it’s here. Meet “Image Optimization”, our deep-dive guide to understand how to deliver high-quality images on the web fast.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Vitaly Friedman)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Build A Geocoding App In Vue.js Using Mapbox]]></title>
        <id>https://smashingmagazine.com/2021/06/building-geocoding-app-vue-mapbox/</id>
        <link href="https://smashingmagazine.com/2021/06/building-geocoding-app-vue-mapbox/"/>
        <updated>2021-06-07T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this guide, we’ll be taking a general look at the concepts of forward geocoding and reverse geocoding, and will build a mini-app that applies these concepts to display specific locations, using Mapbox and Vue.js 2.6.11 to achieve this.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Prince Chukwudire)</name>
        </author>
    </entry>
</feed>
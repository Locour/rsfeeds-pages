<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2021-07-07T00:54:49.728Z</id>
    <title>osmos::feed</title>
    <updated>2021-07-07T00:54:49.728Z</updated>
    <generator>osmosfeed 1.11.0</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[hello! need help. set up in Mac for React (nvm, node.js, npm) not working. Can anyone please help?]]></title>
        <id>https://dev.to/alejsala/hello-need-help-set-up-in-mac-for-react-nvm-node-js-npm-not-working-can-anyone-please-help-3ijb</id>
        <link href="https://dev.to/alejsala/hello-need-help-set-up-in-mac-for-react-nvm-node-js-npm-not-working-can-anyone-please-help-3ijb"/>
        <updated>2021-07-07T00:50:45.000Z</updated>
        <summary type="html"><![CDATA[hello! Need HELP. i'm trying to set up to use React. i can't get environment to work in Mac.]]></summary>
        <author>
            <name>AlejSala</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Deploy and automatically provision SSL certs on a Node.js server with Traefik and Docker.]]></title>
        <id>https://dev.to/paularah/deploy-and-automatically-provision-ssl-certs-on-a-node-js-server-with-traefik-and-docker-2j0e</id>
        <link href="https://dev.to/paularah/deploy-and-automatically-provision-ssl-certs-on-a-node-js-server-with-traefik-and-docker-2j0e"/>
        <updated>2021-07-07T00:31:33.000Z</updated>
        <summary type="html"><![CDATA[In this tutorial, we would learn to deploy Node.js servers with docker on a Linux-based VPS and automatically provision SSL certificates with Traefik.
Basic familiarity with Node.js, docker and docker-compose.
A virtual private server with a public IP address from any cloud service provider of your choice.

A domain or subdomain and a corresponding DNS record pointing the public IP address of your VPS. 
Traefik is an open-source, cloud-native reverse proxy. A reverse proxy essentially sits in front your servers and handles incoming clients request. So instead your client request directly going to your Node.js server, the request first goes through Traefik and Traefik then forwards it to your server. This allows us do things like SSL encryption, canary deploys, load balancing among others. …]]></summary>
        <author>
            <name>Paul Arah</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Deploy and automatically provision SSL certs on a Node.js server with Traefik and Docker.]]></title>
        <id>https://dev.to/paularah/deploy-and-automatically-provision-ssl-certs-on-a-node-js-server-with-traefik-and-docker-2j0e</id>
        <link href="https://dev.to/paularah/deploy-and-automatically-provision-ssl-certs-on-a-node-js-server-with-traefik-and-docker-2j0e"/>
        <updated>2021-07-07T00:31:33.000Z</updated>
        <summary type="html"><![CDATA[In this tutorial, we would learn to deploy Node.js servers with docker on a Linux-based VPS and automatically provision SSL certificates with Traefik.
Basic familiarity with Node.js, docker and docker-compose.
A virtual private server with a public IP address from any cloud service provider of your choice.

A domain or subdomain and a corresponding DNS record pointing the public IP address of your VPS. 
Traefik is an open-source, cloud-native reverse proxy. A reverse proxy essentially sits in front your servers and handles incoming clients request. So instead your client request directly going to your Node.js server, the request first goes through Traefik and Traefik then forwards it to your server. This allows us do things like SSL encryption, canary deploys, load balancing among others. …]]></summary>
        <author>
            <name>Paul Arah</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Create your own PURE python text editor with my mine]]></title>
        <id>https://dev.to/amzy0/create-your-own-pure-python-text-editor-with-my-mine-25i2</id>
        <link href="https://dev.to/amzy0/create-your-own-pure-python-text-editor-with-my-mine-25i2"/>
        <updated>2021-07-06T23:24:36.000Z</updated>
        <summary type="html"><![CDATA[LUXARG]]></summary>
        <author>
            <name>Amzy 0 |  محمد امین عظیمی</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Losing poor habits with forms]]></title>
        <id>https://dev.to/jmau111/losing-poor-habits-with-forms-4c6i</id>
        <link href="https://dev.to/jmau111/losing-poor-habits-with-forms-4c6i"/>
        <updated>2021-07-06T22:50:40.000Z</updated>
        <summary type="html"><![CDATA[The summer is magic but not all web forms.
It's shocking because sometimes, you just cannot use them whether you have impairments or not.
for attributes


Labels allow screen readers to voice the input prompt to the user. Unfortunately, many websites use placeholders only.
It's a terrible practice as screen readers will try to guess things, for example, by taking texts that precede or follow, which might have nothing to do with the inputs.
Besides, placeholders disappear when the inputs are focused.
So don't do that:
<input placeholder="Enter your email" name="email" type="email">

Instead, do something like this:
<label for="email">Your Email address</label>
<input id="email" name="email" type="email" required>

If you have to hide labels, you can still use extra HTML and CSS:
<label for=…]]></summary>
        <author>
            <name>Julien Maury</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dependency sandboxing in node.js with Jpex]]></title>
        <id>https://dev.to/jackmellis/dependency-sandboxing-in-node-js-with-jpex-3mbi</id>
        <link href="https://dev.to/jackmellis/dependency-sandboxing-in-node-js-with-jpex-3mbi"/>
        <updated>2021-07-06T21:56:20.000Z</updated>
        <summary type="html"><![CDATA[React recap


Okay so I've written about jpex a few times, particularly in relation to react
Essentially it allows you to do something like this:
import { useResolve } from 'react-jpex';

const useMyDep = () => {
  const dep = useResolve<IDep>();
  return dep.someValue;
};

and this:
import { encase } from 'react-jpex';

const useMyDep = encase((dep: IDep) => () => {
  return dep.someValue;
})

depending on your preferred flavour.
Jpex uses the service locator pattern to resolve and inject dependencies, plus it's super-powered by Typescript inference for a super slick experience. But the really really cool thing about it is you can test your react components with the provider component to stub your dependencies:
<Provider
  onMount={(jpex) => {
    jpex.constant<IDep>(mockValue);
    // ev…]]></summary>
        <author>
            <name>Jack</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Dependency sandboxing in node.js with Jpex]]></title>
        <id>https://dev.to/jackmellis/dependency-sandboxing-in-node-js-with-jpex-3mbi</id>
        <link href="https://dev.to/jackmellis/dependency-sandboxing-in-node-js-with-jpex-3mbi"/>
        <updated>2021-07-06T21:56:20.000Z</updated>
        <summary type="html"><![CDATA[React recap


Okay so I've written about jpex a few times, particularly in relation to react
Essentially it allows you to do something like this:
import { useResolve } from 'react-jpex';

const useMyDep = () => {
  const dep = useResolve<IDep>();
  return dep.someValue;
};

and this:
import { encase } from 'react-jpex';

const useMyDep = encase((dep: IDep) => () => {
  return dep.someValue;
})

depending on your preferred flavour.
Jpex uses the service locator pattern to resolve and inject dependencies, plus it's super-powered by Typescript inference for a super slick experience. But the really really cool thing about it is you can test your react components with the provider component to stub your dependencies:
<Provider
  onMount={(jpex) => {
    jpex.constant<IDep>(mockValue);
    // ev…]]></summary>
        <author>
            <name>Jack</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Automatically Upload an Android App Bundle to the Play Store]]></title>
        <id>60e16e1b134ad707be00d6bc</id>
        <link href="https://www.freecodecamp.org/news/automatically-upload-an-android-app-bundle-to-the-play-store/"/>
        <updated>2021-07-06T21:08:39.000Z</updated>
        <summary type="html"><![CDATA[In this article, I'm going to explain how to automatically upload an Android App Bundle (.aab file) to the Play Store's beta track. We'll use Android Studio and AWS as a cloud infrastructure provider.  Once we've uploaded the app bundle, we'll trigger a Slack notification.  This is a valuable use]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Body Toggle]]></title>
        <id>https://css-tricks.com/?p=343438</id>
        <link href="https://css-tricks.com/body-toggle/"/>
        <updated>2021-07-06T20:55:45.000Z</updated>
        <summary type="html"><![CDATA[I appreciate the clarity of this trick that Mikael Ainalem posted over on Reddit:
It’s a one-liner that toggles the class on the <body> so you can mock up different states and toggle between them on click.
<body onclick="this.classList.toggle("active");"
Could …
The post Body Toggle appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building a URL shortener with Node.js]]></title>
        <id>https://dev.to/logrocket/building-a-url-shortener-with-node-js-52oe</id>
        <link href="https://dev.to/logrocket/building-a-url-shortener-with-node-js-52oe"/>
        <updated>2021-07-06T20:42:53.000Z</updated>
        <summary type="html"><![CDATA[Written by Subha Chanda ✏️
URL shorteners like Bitly and Cuttly are incredibly popular. In this article, we are going to create a similar tool by building an API service that shortens the URLs provided to it.

For the project, we are going to use MongoDB and Node.js, so you should have basic knowledge of them for this tutorial.
Let's first plan out the building process, which is pretty straightforward. For each URL passed into our API, we will generate a unique ID and create a short URL with it. Then, the long URL, short URL, and unique ID will be stored in the database.
When a user sends a GET request to the short URL, the URL will be searched within the database, and the user will be redirected to the corresponding original URL. Sound complex? Don't worry, we'll cover everything you need…]]></summary>
        <author>
            <name>Matt Angelosanto</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Free Live lab: Deploying Kubernetes Apps in an Air Gapped Environment]]></title>
        <id>https://dev.to/ogtrilliams/free-live-lab-deploying-kubernetes-apps-in-an-air-gapped-environment-4d9p</id>
        <link href="https://dev.to/ogtrilliams/free-live-lab-deploying-kubernetes-apps-in-an-air-gapped-environment-4d9p"/>
        <updated>2021-07-06T20:41:38.000Z</updated>
        <summary type="html"><![CDATA[Curious about how to manage #airgapped applications in #K8s but don't know where to start your learning journey? @replicatedhq can help with that! Join our free #airgap lab and gain hands-on experience installing a #Kubernetes application in an air gapped environment. Register here:]]></summary>
        <author>
            <name>T. Nichole Williams</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[I’ve got one question about Jetpack for you.]]></title>
        <id>https://css-tricks.com/?p=343560</id>
        <link href="https://css-tricks.com/ive-got-one-question-about-jetpack-for-you/"/>
        <updated>2021-07-06T20:00:30.000Z</updated>
        <summary type="html"><![CDATA[And maybe an optional follow-up if you’re up for it.
Automattic, the makers of Jetpack and many other WordPress-y things, have sponsored my site (me = Chris Coyier; site = CSS-Tricks) for quite a while. I use Jetpack myself, …
The post I’ve got one question about Jetpack for you. appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Build a Discord Bot with Discord.js (v13) 🤖]]></title>
        <id>https://dev.to/hypening/build-a-discord-bot-with-discord-js-v13-14mj</id>
        <link href="https://dev.to/hypening/build-a-discord-bot-with-discord-js-v13-14mj"/>
        <updated>2021-07-06T19:55:59.000Z</updated>
        <summary type="html"><![CDATA[Introduction


Hello there, this sentence will mark the beginning of my first ever article released to the public. In this, and the following articles I will introduce beginners to the magical world of Discord bots. I will be using the new discord.js v13 library. However, there are certain prerequisites.
At least beginner knowledge of Javascript. I've seen this all too much, eager new developers asking to be spoon-fed basic Javascript and Node.js fundamentals. There are innumerable fantastic resources out there, like freeCodeCamp. Don't be scared to use Google, DuckDuckGo, or any other search engine.
Node.js and NPM installed on your machine. As this is an article about Discord.js solely, I wont be going in to the specifics here. You can download Node.js and NPM @ https://nodejs.org/. Agai…]]></summary>
        <author>
            <name>Hypening</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[5 GraphQL clients for JavaScript and Node.js]]></title>
        <id>https://dev.to/logrocket/5-graphql-clients-for-javascript-and-node-js-59mm</id>
        <link href="https://dev.to/logrocket/5-graphql-clients-for-javascript-and-node-js-59mm"/>
        <updated>2021-07-06T19:17:27.000Z</updated>
        <summary type="html"><![CDATA[Written by Chisimdiri Ejinkeonye ✏️
GraphQL is a query language and runtime for APIs. It enables clients to specify queries and allows servers to validate data against a strongly typed schema.
Unlike REST APIs, GraphQL uses a single endpoint for all operations. GraphQL-based servers can only communicate via GraphQL queries. For simple projects, it’s feasible to use a REST client, like Axios or fetch(), to send GraphQL queries. However, for larger, more complex projects that have advanced requirements, a GraphQL client is needed.
GraphQL clients make communication easier by abstracting away small details and implementing additional features, some of which include caching, query batching and deduplication, and static typing of GraphQL query results.
In this guide, we’ll compare the following…]]></summary>
        <author>
            <name>Matt Angelosanto</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Test Driven Development With TypeScript]]></title>
        <id>https://dev.to/kalashin1/test-driven-development-with-typescript-1b0p</id>
        <link href="https://dev.to/kalashin1/test-driven-development-with-typescript-1b0p"/>
        <updated>2021-07-06T19:15:09.000Z</updated>
        <summary type="html"><![CDATA[Nobody ever liked writing test, when i left school i thought that i had escaped writing test. Enter software development and i realize i still can't run away from tests. Why do we even have to write tests? Tests are important in the software development cycle because it bears witness to these thing;
Your understanding of the problem you are trying to solve, writing tests will prove that you understand the problem and the software requirements.
That your solution is actually doing what you built it to do? How else can you prove that? We can run it in the browser to check the result of our code but that's only good for simple projects where you have a lot of time, and if you are mostly concerned with the look and design.
It is a  really good form of documentation.
When many people hear about…]]></summary>
        <author>
            <name>Kinanee Samson</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Test Driven Development With TypeScript]]></title>
        <id>https://dev.to/kalashin1/test-driven-development-with-typescript-1b0p</id>
        <link href="https://dev.to/kalashin1/test-driven-development-with-typescript-1b0p"/>
        <updated>2021-07-06T19:15:09.000Z</updated>
        <summary type="html"><![CDATA[Nobody ever liked writing test, when i left school i thought that i had escaped writing test. Enter software development and i realize i still can't run away from tests. Why do we even have to write tests? Tests are important in the software development cycle because it bears witness to these thing;
Your understanding of the problem you are trying to solve, writing tests will prove that you understand the problem and the software requirements.
That your solution is actually doing what you built it to do? How else can you prove that? We can run it in the browser to check the result of our code but that's only good for simple projects where you have a lot of time, and if you are mostly concerned with the look and design.
It is a  really good form of documentation.
When many people hear about…]]></summary>
        <author>
            <name>Kinanee Samson</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Minha instalação do Manjaro para programação]]></title>
        <id>https://dev.to/abraaom/minha-instalacao-do-manjaro-para-programacao-1o4k</id>
        <link href="https://dev.to/abraaom/minha-instalacao-do-manjaro-para-programacao-1o4k"/>
        <updated>2021-07-06T19:14:38.000Z</updated>
        <summary type="html"><![CDATA[O Manjaro é uma distro Linux baseada no Arch, mas que trás uma instalação muito mais facilitada do que seu irmão maior, a instalação foi feita no Manjaro Gnome, mas os comandos via terminal são todos iguais em qualquer uma das várias interfaces disponíveis para o Manjaro.
A escolha pelo Manjaro ao invés de uma distro mais popular se dá para mim principalmente pela presença do gerenciador de pacotes do Arch, o Pacman, e a possibilidade de acessar o enorme repositório do Arch, considerando o AUR e também a possibilidade de adicionar facilmente o suporte a Flatpack e Snap diretamente no gerenciador de pacotes Pamac, que possui uma GUI, basicamente se existe algo para Linux, então estará disponível para o Manjaro de forma facilitada por meio de algum dos repositórios citados, oficiais ou não. …]]></summary>
        <author>
            <name>Abraão Moreira</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA['npm' is not recognized as internal or external command : Solution]]></title>
        <id>https://dev.to/supritha/npm-is-not-recognized-as-internal-or-external-command-solution-o1n</id>
        <link href="https://dev.to/supritha/npm-is-not-recognized-as-internal-or-external-command-solution-o1n"/>
        <updated>2021-07-06T19:05:44.000Z</updated>
        <summary type="html"><![CDATA[Introduction


When you have installed node.js on your OS but unable to run the npm commands, this blog will tell you how to fix this issue.

You might have already installed Node.js from the official website. with your respective OS. If you've not installed, click here.

To make sure that you have node installed on your computer --



Copy the folder path of node
click on the drop down symbol, then use Ctrl+C on the path OR right click on the path and then click copy address.
 



Change settings
Control Panel -> View advanced system settings


Environment variables

Path and then click on edit as shown in the picture below emoji




Click on New 

In the new text field appeared, paste the folder path that you copied earlier and then click on OK

You're done!

My twitter
Like it and share it for more such articles.
buying me a coffee ☕.]]></summary>
        <author>
            <name>Supritha Ravishankar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[YAML Validations]]></title>
        <id>https://dev.to/adaendra/yaml-validations-5941</id>
        <link href="https://dev.to/adaendra/yaml-validations-5941"/>
        <updated>2021-07-06T18:55:55.000Z</updated>
        <summary type="html"><![CDATA[In some pipelines or when a project build, we want to check if some files are build correctly like our YAML files!
So here is YamlLint!
You can find on their website all that you will need to use it, but here is a quick look!
Depending your project, you can :
install it directly on your machine if you are on Linux




sudo apt-get install yamllint

install it with brew



brew install yamllint

add it in your Python project



python setup.py sdist
pip install --user dist/yamllint-*.tar.gz

Then you can use it directly with the default configs, or override it with your configs.
To do it, create a .yamllint file at the top level of your project. Then, in this file, you can enable/disable rules or override rules ...
example
---

yaml-files:
  - '*.yaml'
  - '*.yml'
  - '.yamllint'

rules:
  …]]></summary>
        <author>
            <name>Maxime Guilbert</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fetching a API, vs using ContextProvider. When should you use just fetching vs a ContextProvider??]]></title>
        <id>https://dev.to/yobretyo/fetching-a-api-vs-using-contextprovider-when-should-you-use-just-fetching-vs-a-contextprovider-12cg</id>
        <link href="https://dev.to/yobretyo/fetching-a-api-vs-using-contextprovider-when-should-you-use-just-fetching-vs-a-contextprovider-12cg"/>
        <updated>2021-07-06T18:09:44.000Z</updated>
        <summary type="html"><![CDATA[I’m using Next for the first time and I’m liking it, 
In my Next project i have several files to get data from Airtable:
In Airtable.js

const Airtable = require('airtable');
const base = new Airtable({ apiKey: process.env.AIRTABLE_API_KEY }).base(process.env.AIRTABLE_BASE_ID);
const table = base(process.env.AIRTABLE_TABLE_NAME);
const table2 = base(process.env.AIRTABLE_TABLE_NAME2);
const table3 = base(process.env.AIRTABLE_TABLE_NAME3);

const minifyRecords = (records) => {
    return records.map(record => getMinifiedRecord(record));
}

const getMinifiedRecord = (record) => {
    if(!record.fields.completed) {
        record.fields.completed = false;
    }
    return {
        id: record.id,
        fields: record.fields,
    }
}
export { table, table2, table3, getMinifiedRecord, minifyRe…]]></summary>
        <author>
            <name>Bret</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Editing Tabular Data in Angular]]></title>
        <id>https://dev.to/ngconf/editing-tabular-data-in-angular-41a4</id>
        <link href="https://dev.to/ngconf/editing-tabular-data-in-angular-41a4"/>
        <updated>2021-07-06T18:06:13.000Z</updated>
        <summary type="html"><![CDATA[Jim Armstrong | ng-conf | May 2019
A fun dive into everything from custom Directives to advanced ViewChildren




  
  
  Introduction


This article targets beginning to intermediate-level Angular developers and covers a wide variety of topics that arise in production applications. While centered around the concept of editing tabular data, these techniques may be used in a variety of other Angular applications.
For anyone who has read at least one of my articles, you should understand that my background is applied mathematics and scientific computing. So, this article continues the trend of exploring the use of Angular in scientific and business (analytics) applications.
Working with time-series data is a fundamental concept in numerous business and engineering sectors. In this context, f…]]></summary>
        <author>
            <name>ng-conf</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Editing Tabular Data in Angular]]></title>
        <id>https://dev.to/ngconf/editing-tabular-data-in-angular-41a4</id>
        <link href="https://dev.to/ngconf/editing-tabular-data-in-angular-41a4"/>
        <updated>2021-07-06T18:06:13.000Z</updated>
        <summary type="html"><![CDATA[Jim Armstrong | ng-conf | May 2019
A fun dive into everything from custom Directives to advanced ViewChildren




  
  
  Introduction


This article targets beginning to intermediate-level Angular developers and covers a wide variety of topics that arise in production applications. While centered around the concept of editing tabular data, these techniques may be used in a variety of other Angular applications.
For anyone who has read at least one of my articles, you should understand that my background is applied mathematics and scientific computing. So, this article continues the trend of exploring the use of Angular in scientific and business (analytics) applications.
Working with time-series data is a fundamental concept in numerous business and engineering sectors. In this context, f…]]></summary>
        <author>
            <name>ng-conf</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Django full CI-CD flow to AWS with GitHub Actions and S3]]></title>
        <id>https://dev.to/vlntsolo/django-full-ci-cd-flow-to-aws-with-github-actions-and-s3-2enp</id>
        <link href="https://dev.to/vlntsolo/django-full-ci-cd-flow-to-aws-with-github-actions-and-s3-2enp"/>
        <updated>2021-07-06T17:24:27.000Z</updated>
        <summary type="html"><![CDATA[This guide covers all steps needed for setting up your CI-CD workflow for Django project with Amazon Beanstalk and GitHub Actions under the hood.
Link to sample project: https://github.com/vlntsolo/django-cicd 
AWS Beanstalk environment
S3 configuration
IAM user access
GitHub workflow settings
Preparing Django settings
First run
Composing postdeploy commands (hooks)
Before we start, what is CI-CD flow in the first place?
Despite the fact that Django code doesn't require any build step compared to compiled apps, you might find it quite frustrating to repeat a manual re-upload each time you need to deploy a new feature or a bug fix. Because of this, CI-CD (Continuous integration and Continuous delivery) workflows were invented.
CI-CD workflows or pipelines allow us to safely build, test and …]]></summary>
        <author>
            <name>Valentine Solonechnyi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript Proto and Prototype]]></title>
        <id>https://dev.to/mmeurer00/javascript-proto-and-prototype-a2a</id>
        <link href="https://dev.to/mmeurer00/javascript-proto-and-prototype-a2a"/>
        <updated>2021-07-06T17:16:35.000Z</updated>
        <summary type="html"><![CDATA[Javascript can be described as a prototype-based language. This stems from an object's ability to have a prototype object, which allows them to inherit features from one another. You can read more about this in the MDN Web Docs.
But if you've ever looked at an arrary in your console, you may notice __proto__, what exactly is that? 
If you don't already, open up your browser console. Now, create an empty array ([]). After you create the array, expand it using the > icon. Viola! You will see the **proto** attribute.
[]
length: 0
__proto__: Array(0) // <--- Here it is!
length: 0
constructor: ƒ Array()
concat: ƒ concat()

It does not matter how you create your array, you'll always find the proto attribute.
let example = [1,2,3,4,5]

example
(5) [1, 2, 3, 4, 5]
0: 1
1: 2
2: 3
3: 4
4: 5
length: …]]></summary>
        <author>
            <name>Maxine Meurer</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Consuming and decoding JSON in Terraform]]></title>
        <id>https://dev.to/lucassha/consuming-and-decoding-json-in-terraform-309p</id>
        <link href="https://dev.to/lucassha/consuming-and-decoding-json-in-terraform-309p"/>
        <updated>2021-07-06T17:01:05.000Z</updated>
        <summary type="html"><![CDATA[Intro


HCL, the language of Terraform, has come a long way since 0.11. With its many new releases, the ability to consume JSON and create adaptive Terraform has become considerably easier with additions like for loops, arrays, and maps
Consuming JSON and then working with it is not always the easiest. In this post, I'll be showing how to consume JSON in 3 different ways:
Reading a file in the local directory
Reading in JSON from an AWS S3 bucket
Passing in JSON via environment variables
Why these 3 specific options? Well, all 3 are totally viable ways to consume JSON and are largely dependent on what your needs are. If the JSON is static, reading from S3 might be a good option. If you are running Terraform in a containerized environment, passing in as an environment variable may be a good…]]></summary>
        <author>
            <name>Shannon</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fix "Unexpected field" Error From Multer]]></title>
        <id>https://dev.to/maximization/fix-unexpected-field-error-from-multer-31i5</id>
        <link href="https://dev.to/maximization/fix-unexpected-field-error-from-multer-31i5"/>
        <updated>2021-07-06T16:52:22.000Z</updated>
        <summary type="html"><![CDATA[Learn how to decypher & fix this cryptic error message from multer, and finally implement working file uploads in Node.js 🎉
🔗 Links from video
https://maximorlov.com/request-parsing-nodejs-guide/
📚 Prefer reading?
https://maximorlov.com/fix-unexpected-field-error-multer/
🎥 Watch more videos like this one on my YouTube channel
https://www.youtube.com/channel/UCfxGdiOo8MthaZw4mFG0obA]]></summary>
        <author>
            <name>Maxim Orlov</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Deploy a React App to GitHub Pages]]></title>
        <id>https://dev.to/hidaytrahman/deploy-a-react-app-to-github-pages-3nl7</id>
        <link href="https://dev.to/hidaytrahman/deploy-a-react-app-to-github-pages-3nl7"/>
        <updated>2021-07-06T16:45:05.000Z</updated>
        <summary type="html"><![CDATA[Let's deploy react application on GitHub by using GitHub Pages.
You need to have Node, yarn, and npm installed on your machine. To check if they are installed, open up a terminal window and type the following:
npm -v
yarn -v
node -v

If these commands print out a version number in the terminal, you are good to go. If not, you need to go ahead and install what is missing.
Node (contains npm)
Yarn
Am assuming you already have a GitHub account. if not create one
Let's start.
To create a project, you need to type the following in the terminal:
npx create-react-app my-react-app

Once the operation finishes, you will have a boilerplate React project, ready to go. To see if it works properly run the command:
cd my-react-app

and run below command
yarn start or npm start
If everything runs properl…]]></summary>
        <author>
            <name>Hidayt Rahman</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Jotai State Manager]]></title>
        <id>https://dev.to/franciscomendes10866/jotai-state-manager-5c07</id>
        <link href="https://dev.to/franciscomendes10866/jotai-state-manager-5c07"/>
        <updated>2021-07-06T16:38:02.000Z</updated>
        <summary type="html"><![CDATA[Managing the global state of a web application is one of the biggest challenges we face today. Although we have several solutions, I think the biggest problem is that we use certain libraries that need a huge boilerplate even if you need to make a small change.
One of the libraries that makes life easier for me in my opinion is Jotai. Which in my opinion has an approach that greatly simplifies managing the global states of our applications.
Other libraries already take the worry out of how you should structure our react components, but on the other hand they force us to structure our stores. However with Jotai it's super simple, you declare one thing or another and start using it (it's literally like that).
When I use a library that needs a lot of boilerplate and a whole structure, if the …]]></summary>
        <author>
            <name>Francisco Mendes</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to push your website online for free (Bonus: How to get domain name for 2$)]]></title>
        <id>https://dev.to/codeozz/how-to-push-your-website-online-for-free-bonus-how-to-get-domain-name-for-2-1ikp</id>
        <link href="https://dev.to/codeozz/how-to-push-your-website-online-for-free-bonus-how-to-get-domain-name-for-2-1ikp"/>
        <updated>2021-07-06T16:35:19.000Z</updated>
        <summary type="html"><![CDATA[Welcome my friend ! Today I will show you how to deploy your static website for free with Netlify !
In bonus I will show you where you can bug domain name for 2$ and connect it will Netlify !
First step:
Create an account on https://www.netlify.com/.
In the overview, you will need to connect your git project to Netlify.

Go to https://app.netlify.com/start Select your plateform between Github, Gitlab or Bitbucket.
Second Step:
Choose the branch to deploy, it's means that when you will push onto this branch, Netlify will build the project and re-deploy it.

For me I create a dedicated branch named prod.
Third Step:

You will need to provide the npm command that will build your project (and the output directory name). 
I use npm run build and I named the output file /dist (classic).
Netlify …]]></summary>
        <author>
            <name>CodeOzz</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[IvyFinal CTF (Crypto 3) - Silly 400 - points]]></title>
        <id>https://dev.to/wireless90/ivyfinal-ctf-crypto-3-silly-400-points-5ehj</id>
        <link href="https://dev.to/wireless90/ivyfinal-ctf-crypto-3-silly-400-points-5ehj"/>
        <updated>2021-07-06T16:05:54.000Z</updated>
        <summary type="html"><![CDATA[You can get the binary here .
192.168.40.199 8300
The server code is given to us as such.
from flask import Flask, request, Response
from flask_cors import CORS
from hashlib import md5
import time

app = Flask(__name__)
CORS(app)

def get_flag_length():
    time.sleep(0.05) # Throttling against brute-forcers
    flag = open('../flag.txt','r').read()
    return len(flag)

def get_flag_char(i):
    flag = open('../flag.txt','r').read()
    return flag[i].encode()

def checkflag(userflag):
    for i, c in enumerate(userflag):
        if get_flag_length() <= i:
            return False

        if c.encode() != get_flag_char(i):
            return False

    if get_flag_length() != len(userflag):
        return False

    return True

@app.route("/", methods=['GET'])
def index():
    userflag …]]></summary>
        <author>
            <name>wireless90</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Authenticate Users and Implement CORS in Node.js Apps]]></title>
        <id>60b22e9611ffb70827ef9547</id>
        <link href="https://www.freecodecamp.org/news/how-to-authenticate-users-and-implement-cors-in-nodejs-applications/"/>
        <updated>2021-07-06T16:02:13.000Z</updated>
        <summary type="html"><![CDATA[In this tutorial, you will learn how to authenticate users and secure endpoints in Node.js. You'll also see how to implement Cross-Origin Resource Sharing (CORS) in Node. So let's get started.  Prerequisites You'll need the following to follow along with this tutorial:  A working understanding of JavaScript. A good]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Most Effective Way to Protect Client-Side JavaScript Applications]]></title>
        <id>https://dev.to/jscrambler/the-most-effective-way-to-protect-client-side-javascript-applications-1hi</id>
        <link href="https://dev.to/jscrambler/the-most-effective-way-to-protect-client-side-javascript-applications-1hi"/>
        <updated>2021-07-06T15:34:49.000Z</updated>
        <summary type="html"><![CDATA[JavaScript is a programming language with many useful features—it is built around flexibility, giving you all the capability necessary to do what you want with it. JavaScript’s dynamic nature allowed it to become the de facto language for the browser and the most popular programming language in the world.
One of the most useful JS features is, for example, immediate parsing. This feature means that the browser executes the code right as it downloads content, naturally providing benefits. However, with this level of freedom also comes responsibility.
In this article, weʼd like to delve into the JavaScript security risks and how to protect JavaScript code. This time we will cover only front-end code that runs on the browser, but we have another tutorial on protecting Node.js apps.
Imagine al…]]></summary>
        <author>
            <name>Jscrambler</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Implementing a forgot password flow (with pseudo code)]]></title>
        <id>https://dev.to/supertokens/implementing-a-forgot-password-flow-with-pseudo-code-fa4</id>
        <link href="https://dev.to/supertokens/implementing-a-forgot-password-flow-with-pseudo-code-fa4"/>
        <updated>2021-07-06T15:14:36.000Z</updated>
        <summary type="html"><![CDATA[Table of contents:



  
  
  Security Issues to consider:



Brute Force Attacks
Theft of password reset tokens from the database
Reusing existing tokens
Stealing tokens through email hijacking




  
  
  How to implement a secure password reset flow



User’s enters email in the UI
Creating password reset token and storing it in DB
Sending token to the user and verifying it when used
Applications need to account for the frequency with which users forget their passwords. This opens a potential attack vector because anyone can request a new password on behalf of the legitimate user. Resetting a password requires sending a token to a user’s email address and this provides an opening for attackers. Making sure you have a secure process for handling the password reset tokens will ensure your…]]></summary>
        <author>
            <name>SuperTokens</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[5 JavaScript Tips to Improve Your React Code]]></title>
        <id>60df35f027f80207bcdbccea</id>
        <link href="https://www.freecodecamp.org/news/javascript-tips-to-improve-your-react-code-today/"/>
        <updated>2021-07-06T15:12:00.000Z</updated>
        <summary type="html"><![CDATA[Let's look at five JavaScript tips you can use today to instantly improve your React applications.  Because React is a JavaScript library, any improvements that we make in our JavaScript skills will directly improve the applications that we build with React. For this reason, I've put together a number of]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Can we build Micro VMs with Dockerfile? : Answer is Yes !!!]]></title>
        <id>https://dev.to/manishfoodtechs/can-we-build-micro-vms-with-dockerfile-answer-is-yes-14d3</id>
        <link href="https://dev.to/manishfoodtechs/can-we-build-micro-vms-with-dockerfile-answer-is-yes-14d3"/>
        <updated>2021-07-06T14:59:02.000Z</updated>
        <summary type="html"><![CDATA[Answer is : ####Slim
This results in a real VM that can boot instantly, while using very limited resources. If done properly, slim can allow you to design and build immutable unikernels for running services, or build tiny and embedded development environments.
Slim currently supports Virtualbox, KVM, and hyperkit (MacOS only) as providers for running VMs. Slim will discover all available providers, defaulting to virtualbox, if more than one provider is available. The -p flag can be used to force Slim to use a specific provider.
You can find repo here
 / 
        slim
      
    
 

slim will build a micro-vm from a Dockerfile. Slim works by building and extracting a rootfs from a Dockerfile, and then merging that filesystem with a small minimal kernel that runs in RAM.
This results in a real VM that can boot instantly, while using very limited resources. If done properly, slim can allow you to design and build immutable unikernels for running services, or build tiny and embedded development environments.
Create a micro-vm from a Dockerfile. Use build command with a directory containing a Dockerfile.
$ slim build images/alpine3.8-simple



This will add a bootable iso in the slim registry. See example Dockerfile.
slim build will use your default provider unless the -p flag is specified (ie -p hyperkit).
See a list of micro-vm images on your machine.
$ slim images



Provision a new instance…
View on GitHub
Click here for joining my team]]></summary>
        <author>
            <name>manish srivastava</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Can we build Micro VMs with Dockerfile? : Answer is Yes !!!]]></title>
        <id>https://dev.to/manishfoodtechs/can-we-build-micro-vms-with-dockerfile-answer-is-yes-14d3</id>
        <link href="https://dev.to/manishfoodtechs/can-we-build-micro-vms-with-dockerfile-answer-is-yes-14d3"/>
        <updated>2021-07-06T14:59:02.000Z</updated>
        <summary type="html"><![CDATA[Answer is : ####Slim
This results in a real VM that can boot instantly, while using very limited resources. If done properly, slim can allow you to design and build immutable unikernels for running services, or build tiny and embedded development environments.
Slim currently supports Virtualbox, KVM, and hyperkit (MacOS only) as providers for running VMs. Slim will discover all available providers, defaulting to virtualbox, if more than one provider is available. The -p flag can be used to force Slim to use a specific provider.
You can find repo here
 / 
        slim
      
    
 

slim will build a micro-vm from a Dockerfile. Slim works by building and extracting a rootfs from a Dockerfile, and then merging that filesystem with a small minimal kernel that runs in RAM.
This results in a real VM that can boot instantly, while using very limited resources. If done properly, slim can allow you to design and build immutable unikernels for running services, or build tiny and embedded development environments.
Create a micro-vm from a Dockerfile. Use build command with a directory containing a Dockerfile.
$ slim build images/alpine3.8-simple



This will add a bootable iso in the slim registry. See example Dockerfile.
slim build will use your default provider unless the -p flag is specified (ie -p hyperkit).
See a list of micro-vm images on your machine.
$ slim images



Provision a new instance…
View on GitHub
Click here for joining my team]]></summary>
        <author>
            <name>manish srivastava</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Detect and stop 404 attacks with fail2ban]]></title>
        <id>https://dev.to/armiedema/detect-and-stop-404-attacks-with-fail2ban-1coo</id>
        <link href="https://dev.to/armiedema/detect-and-stop-404-attacks-with-fail2ban-1coo"/>
        <updated>2021-07-06T14:50:54.000Z</updated>
        <summary type="html"><![CDATA[A common penetration test malicious visitors like to deploy is running a script full of not-so-random URIs.
Depending on if they receive a 200, 4xx, or 5xx response, this will let them know certain things about your web app. Such as: 
What tech stack is being used, which can let them know how to exploit the site further
If files that contain sensitive information are exposed
These types of attacks often result in the generation of a plethora of 404 errors. 
"404 attack" isn't the best descriptor of what the attack is, but 404 errors are a byproduct that we can key off of to help stomp these types of attacks. 
In addition to the security issues these attacks expose, another reason to consider stomping these attacks is the server load they expend. These attacks will often occur over a relati…]]></summary>
        <author>
            <name>Adam Miedema</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Dilemma of Naming Font Size Variables]]></title>
        <id>https://css-tricks.com/?p=343149</id>
        <link href="https://css-tricks.com/the-dilemma-of-naming-font-size-variables/"/>
        <updated>2021-07-06T14:41:22.000Z</updated>
        <summary type="html"><![CDATA[Normally, a project will have a set of pre-determined font sizes, usually as variables named in such a way that seeks some semblance of order and consistency. Any project of considerable size can use something like that. There are always …
The post The Dilemma of Naming Font Size Variables appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Martin Lexelius</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Schedule a Job in Node Using node-cron]]></title>
        <id>60aa196411ffb70827ef5f43</id>
        <link href="https://www.freecodecamp.org/news/schedule-a-job-in-node-with-nodecron/"/>
        <updated>2021-07-06T14:27:26.000Z</updated>
        <summary type="html"><![CDATA[In this article, you will learn how to schedule a job in Node using node-cron.  Node-cron is a handy npm package which you can use to schedule jobs to run at specific times or intervals. It is most suitable for scheduling repetitive jobs such as email notifications, file downloads, and]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building executable as user for distribution from a progressive web app]]></title>
        <id>https://dev.to/olivierus/building-executable-as-user-for-distribution-from-a-progressive-web-app-1g3p</id>
        <link href="https://dev.to/olivierus/building-executable-as-user-for-distribution-from-a-progressive-web-app-1g3p"/>
        <updated>2021-07-06T14:06:32.000Z</updated>
        <summary type="html"><![CDATA[I was working on a project for graduation called Roots, and I needed a way of exporting a web experience to an executable. I never expected this to be such a difficult thing to find information on. Granted, there are not a lot of use cases for this. Since I could not find a good way of exporting a web experience to an executable, I embarked on a quest to figure this out for myself.
Some might wonder: "Why would you want to export an executable from the web?". In my case, I needed this for my  graduation project Roots. Roots is a 2D narrative game engine in the browser. Here are the pros to giving the option to create a executable to your users.
The main thing with Roots was that it has to be simple, so everybody with a browser can use it. And letting users try to host their projects online…]]></summary>
        <author>
            <name>Olivierus</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Custom ArrayLayout with React and JsonForms]]></title>
        <id>https://dev.to/edge33/custom-arraylayout-with-react-and-jsonforms-2ch0</id>
        <link href="https://dev.to/edge33/custom-arraylayout-with-react-and-jsonforms-2ch0"/>
        <updated>2021-07-06T13:38:36.000Z</updated>
        <summary type="html"><![CDATA[As I started building forms with React and JsonForms library, I found myself in the need of a custom layout for rendering array of items with eventually nested arrays, without all the whistles and bells of the default material-renderers. After some digging in the source code I was able to come out with a custom array layout with my personal style. I will share in this post how to structure your project in order build great custom JsonForms components.
let's create a demo project for our needs. Open a terminal and type:
$ npx create-react-app my-app --template typescript

then install needed dependencies:
$ npm install --save @jsonforms/core
$ npm install --save @jsonforms/react
$ npm install --save @jsonforms/material-renderers

$ npm install --save @material-ui/core
$ npm install --save @…]]></summary>
        <author>
            <name>Francesco Maida</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Build an Angular & Amazon IVS player app in less than 15 minutes!!]]></title>
        <id>https://dev.to/amazonivs/build-an-angular-amazon-ivs-player-app-in-less-than-15-minutes-2668</id>
        <link href="https://dev.to/amazonivs/build-an-angular-amazon-ivs-player-app-in-less-than-15-minutes-2668"/>
        <updated>2021-07-06T13:26:58.000Z</updated>
        <summary type="html"><![CDATA[Intro ⭐️


Video & Streaming don't have to be complicated for the web anymore! in this tutorial we will build an Angular app using Amazon IVS & Video.js in less than 15 minutes!!
Amazon IVS (Amazon Interactive Video Service) is a fully managed live streaming solution: simply stream to Amazon IVS, and the service does everything you need to make low-latency live video available to any viewer around the globe. Amazon IVS handles the ingestion, transcoding, packaging, and delivery of your live content, using the same battle-tested technology that powers Twitch.
For more information on Amazon IVS check https://ivs.rocks
Check the twitch stream of this tutorial: https://www.youtube.com/watch?v=xCsh88xNkKE
I have a personal quest of making infrastructure and development approachable, accessible …]]></summary>
        <author>
            <name>Super Diana</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[An Incomplete List of Practical Security for Mortals]]></title>
        <id>https://dev.to/ludovicianul/an-incomplete-list-of-practical-security-for-mortals-136l</id>
        <link href="https://dev.to/ludovicianul/an-incomplete-list-of-practical-security-for-mortals-136l"/>
        <updated>2021-07-06T13:01:24.000Z</updated>
        <summary type="html"><![CDATA[Software security is hard and complex. Many people think about it as something aside from the typical development process. It's usually seen as a responsibility of 
some security people that only care about security and don't understand that we need to deliver business value fast in an already complicated microservices-event-driven-api-frist-ha-cloud ecosystem.
microservices-event-driven-api-frist-ha-cloud. 
I see it similar to airport security. We do all these checks, we scan people, we forbid them to take things onboard and so on, although 99.99..9% of people don't plan to hijack the plane. 
0.00..1% of the cases that we have all these measures in place. Because the consequences are big.
So how do you balance between not over-engineering security and be paranoiac about everything while s…]]></summary>
        <author>
            <name>Madalin Ilie</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How Node JS Bring Success To Your Online Business?]]></title>
        <id>https://dev.to/cathysmith/how-node-js-bring-success-to-your-online-business-1fli</id>
        <link href="https://dev.to/cathysmith/how-node-js-bring-success-to-your-online-business-1fli"/>
        <updated>2021-07-06T12:37:57.000Z</updated>
        <summary type="html"><![CDATA[How Node JS Bring Success To Your Online Business? | Webdevelopment 
If you've ever dealt with Javascript, you'll know that Node.js is based on Chrome's V8 JavaScript engine, is one of the finest JavaScript platforms. It's also a web server that's strong, quick, efficient, and scalable. In reality, it is used by some of the best app development companies for various security reasons. In this blog, you will get to know how Node JS brings success to your online business.
Client-server coupling with high performance
A low-cost hosting provider
Cloud-based technology
Node.js services that aren't too heavy
Support native bindings that are quick.
Delivered using a minimum viable product (MVP)
Open-source packages and modules make it simple to utilize.
Installation and execution are simple.
Suppo…]]></summary>
        <author>
            <name>Cathy Smith</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How Real Estate App Development Transforms The Sector Digitally]]></title>
        <id>https://dev.to/william99659653/how-real-estate-app-development-transforms-the-sector-digitally-30gm</id>
        <link href="https://dev.to/william99659653/how-real-estate-app-development-transforms-the-sector-digitally-30gm"/>
        <updated>2021-07-06T11:57:39.000Z</updated>
        <summary type="html"><![CDATA[The Internet can do wonders for your enterprise irrespective of your business model and size. With the digital world slowly taking over, tons of industries have shifted their businesses to the online world and have gained a lot of profit. One such business that can attain heights if it shifts to the online world is real estate. There are tons of real estate app development companies helping realtors improve their sales by providing amazing solutions. What kind of solutions? Read on to find out.
What Benefits You Will Get By Hiring A Real Estate App Development Company?
There are tons of benefits that one can get by hiring a real estate app developer for their business. Here are some of the advantages that you and your customers will get from this solution.
— An application dedicated solely…]]></summary>
        <author>
            <name>williamjohns</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Quick Script to Deploy to a Lambda Function]]></title>
        <id>https://dev.to/thomasstep/quick-script-to-deploy-to-a-lambda-function-57p5</id>
        <link href="https://dev.to/thomasstep/quick-script-to-deploy-to-a-lambda-function-57p5"/>
        <updated>2021-07-06T11:55:51.000Z</updated>
        <summary type="html"><![CDATA[I have written a version of this script multiple times over, so I finally made a generic enough version to hopefully fulfill my needs now into the future. There are some prerequisites/assumptions that I make. First is that there is an existing CloudFormation stack with a Lambda function that uses a versioned S3 bucket to grab its source. The template would look something like this
Parameters:
  SourceBucket:
    Type: String
    Description: S3 bucket with source
  SourceKey:
    Type: String
    Description: S3 key with Lambda source code
  SourceVersion:
    Type: String
    Description: S3 version for source code

Resources:
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref SourceBucket
        S3Key: !Ref SourceKey
        S3ObjectVers…]]></summary>
        <author>
            <name>Thomas Step</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular change detection -OnPush]]></title>
        <id>https://dev.to/this-is-angular/angular-change-detection-onpush-18g</id>
        <link href="https://dev.to/this-is-angular/angular-change-detection-onpush-18g"/>
        <updated>2021-07-06T11:35:38.000Z</updated>
        <summary type="html"><![CDATA[In my last post about change detection, we touched on the basics of it. In this article, we will try to understand more about ChangeDetectionStrategy.OnPush method. So let us get started.
So first thing we will discuss is how to convert the component to the Onpush strategy. Let say we have a Sample component and we are having a default change detection strategy(by default all newly created components are having default change detection), it will be like:
import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-sample',
  templateUrl: './sample.component.html',
  styleUrls: ['./sample.component.scss']
})
export class SampleComponent implements OnInit {

  constructor() { }

  ngOnInit(): void {
  }

}

Now let's add the change detection as O…]]></summary>
        <author>
            <name>Nikhil Dhawan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Javascript Hoisting]]></title>
        <id>https://dev.to/naveenchandar/javascript-hoisting-2pde</id>
        <link href="https://dev.to/naveenchandar/javascript-hoisting-2pde"/>
        <updated>2021-07-06T11:28:25.000Z</updated>
        <summary type="html"><![CDATA[Hoisting is one of the important concepts every javascript or its related frameworks developers should be familiar with. Ever wonder how function calls or variable access can be done even before declaring those. If that's so then, Welcome to Javascript Hoisting World!!!.
This is one of the most common interview questions in front end development and common answer will be 

Hoisting is not what you think!!!😕
If you are trying to search and learn about hoisting, almost everywhere you will be seeing the same definition. May be that's beginner friendly but definitely that's not true. In JavaScript, Nothing will be moved.

Before we start, let us understand how our code will be executed in javascript engine.
Variables are one of the fundamental blocks of any programming language, the way each …]]></summary>
        <author>
            <name>Naveenchandar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Solarwinds' Loggly and Papertrail Default to Sending Unencrypted Logs]]></title>
        <id>https://dev.to/caseywrble/solarwinds-loggly-and-papertrail-default-to-sending-unencrypted-logs-4ci5</id>
        <link href="https://dev.to/caseywrble/solarwinds-loggly-and-papertrail-default-to-sending-unencrypted-logs-4ci5"/>
        <updated>2021-07-06T10:57:41.000Z</updated>
        <summary type="html"><![CDATA[Logs often contain sensitive data; are you sure they're encrypted?
Solarwinds scrutiny is well-earned these days. Despite being a security company by nature and owning two logging companies - Loggly & Papertrail - I can’t help but notice they aren't taking care of their own business.
For example, if you follow the Loggly or Papertrail default instructions, your syslog will be configured to send everything over the internet as plain-text. Of course, they support TLS and have advanced/optional instructions for configuring that but after decades of experience in software and devops we know the danger of defaults against a motivated attacker. At Wrble we offer unencrypted channels if you must but default and strongly recommend configuring TLS and it is in there by default - saving you time whi…]]></summary>
        <author>
            <name>Caseywrble</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Choose A Headless CMS]]></title>
        <id>https://smashingmagazine.com/2021/07/how-to-choose-a-headless-cms/</id>
        <link href="https://smashingmagazine.com/2021/07/how-to-choose-a-headless-cms/"/>
        <updated>2021-07-06T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[There is an array of Headless CMSes out there. In this article, we delve into headless CMS features to satisfy your content editors, marketers and yourself as a developer. For the experience headless practitioner, this could be a checklist to see what’s new out there. For those starting out on their headless journey, this could be a guide on what to look for.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Emmanuel Tissera)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Types of Data Binding in Angular]]></title>
        <id>https://dev.to/ahmedgmurtaza/types-of-data-binding-in-angular-2878</id>
        <link href="https://dev.to/ahmedgmurtaza/types-of-data-binding-in-angular-2878"/>
        <updated>2021-07-06T09:06:11.000Z</updated>
        <summary type="html"><![CDATA[Data binding is the automatic synchronization of data between model and view. In Angular, we have 3 fundamental ways to make to-and-fro binding between view and source.
Source to View (one-way)
View to Source (one-way)
View to Source to View (two-way)
This refers to as Property binding method, it includes all following patterns to share data from source to view.
Interpolation refers to embedding expressions into markup text. By default Angular interpolation uses {{ and }} to encapsulates the expression.
<p>{{title}}</p>
<div><img src="{{itemImageUrl}}"></div>

The [] brackets cause Angular to consider right-hand side value as dynamic, without brackets Angular evaluates the right-hand value as static string.
<img [src]="itemImageUrl">
<app-item-detail childItem="parentItem"></app-item-detail> 


Apart from element properties, we have element attributes ARIA and SVG for which we can use attribute bindings:
<button [attr.aria-label]="actionName">{{actionName}} with Aria</button>

Single class binding
[class.sale]="onSale"

Multiple Class bindings
[class]="'my-class-1 my-class-2 my-class-3'"

Single style binding
<nav [style.background-color]="expression"></nav>

Multiple styles binding
<nav [style]="stylesExpression"></nav>

More specifically, we call this Custom Event binding, utilizing Angular Event Emitter. 
Consider the following code showing button which alerts on click. The alert content is passed through <app-button> component template using custom event showMessage():





  
  
  3. View to Source to View (two-way)


Angular two-way data binding is the combination of square brackets [] and parentheses (). [()] refers to property binding followed by event binding.
<app-sizer [(size)]="fontSize"></app-sizer>





So, which methods you have already used or would love to use soon, or something else? And Why? Let me know in the comments section. 😃
See you again in another exciting article. Until then, happy coding! 💻]]></summary>
        <author>
            <name>Ahmed Murtaza</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Types of Data Binding in Angular]]></title>
        <id>https://dev.to/ahmedgmurtaza/types-of-data-binding-in-angular-2878</id>
        <link href="https://dev.to/ahmedgmurtaza/types-of-data-binding-in-angular-2878"/>
        <updated>2021-07-06T09:06:11.000Z</updated>
        <summary type="html"><![CDATA[Data binding is the automatic synchronization of data between model and view. In Angular, we have 3 fundamental ways to make to-and-fro binding between view and source.
Source to View (one-way)
View to Source (one-way)
View to Source to View (two-way)
This refers to as Property binding method, it includes all following patterns to share data from source to view.
Interpolation refers to embedding expressions into markup text. By default Angular interpolation uses {{ and }} to encapsulates the expression.
<p>{{title}}</p>
<div><img src="{{itemImageUrl}}"></div>

The [] brackets cause Angular to consider right-hand side value as dynamic, without brackets Angular evaluates the right-hand value as static string.
<img [src]="itemImageUrl">
<app-item-detail childItem="parentItem"></app-item-detail> 


Apart from element properties, we have element attributes ARIA and SVG for which we can use attribute bindings:
<button [attr.aria-label]="actionName">{{actionName}} with Aria</button>

Single class binding
[class.sale]="onSale"

Multiple Class bindings
[class]="'my-class-1 my-class-2 my-class-3'"

Single style binding
<nav [style.background-color]="expression"></nav>

Multiple styles binding
<nav [style]="stylesExpression"></nav>

More specifically, we call this Custom Event binding, utilizing Angular Event Emitter. 
Consider the following code showing button which alerts on click. The alert content is passed through <app-button> component template using custom event showMessage():





  
  
  3. View to Source to View (two-way)


Angular two-way data binding is the combination of square brackets [] and parentheses (). [()] refers to property binding followed by event binding.
<app-sizer [(size)]="fontSize"></app-sizer>





So, which methods you have already used or would love to use soon, or something else? And Why? Let me know in the comments section. 😃
See you again in another exciting article. Until then, happy coding! 💻]]></summary>
        <author>
            <name>Ahmed Murtaza</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Display datetime correctly in iOS/Safari using ionic2/angular2]]></title>
        <id>https://dev.to/webrusterkk/display-datetime-correctly-in-ios-safari-using-ionic2-angular2-lof</id>
        <link href="https://dev.to/webrusterkk/display-datetime-correctly-in-ios-safari-using-ionic2-angular2-lof"/>
        <updated>2021-07-06T07:58:39.000Z</updated>
        <summary type="html"><![CDATA[The issue is caused by the Intlapi because DatePipe for Angular 2. Release is working fine only for FireFox and Chrome with custom format strings. it Doesn’t work on Safari due to lack of Intl. so as a temporary work around is to include the Intl polyfill
<script src="https://cdn.polyfill.io/v2/polyfill.min.js?features=Intl.~locale.en"></script>
Solution 2 You can use the moment.js which can format your required date as follows
moment(singleTable[0].FromCurrentDate).format("dd/MM/yyyy,h:mm:ss a")]]></summary>
        <author>
            <name>Tummala Krishna Kishore</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Pop!_OS 21.04 on Zephyrus G14 (Ryzen 5)]]></title>
        <id>https://dev.to/vinod/pop-os-21-04-on-zephyrus-g14-amd-ryzen-5-5h5e</id>
        <link href="https://dev.to/vinod/pop-os-21-04-on-zephyrus-g14-amd-ryzen-5-5h5e"/>
        <updated>2021-07-06T07:27:04.000Z</updated>
        <summary type="html"><![CDATA[Happy to report that - the latest Pop!_OS 21.04 is working without any glitches on G14.

Audio, Video, and Mic are working without glitches
Google Chrome and Firefox browsers work with hardware/GPU video decode support
Screenshare, Video conferencing Apps are working without glitches especially using Chrome
Battery Life is as good as Windows if not a bit more
Graphics mode switching between AMD & NVIDIA is seamless
Gnome 4 is performing without bugs and exceptions - unlike Fedora 34
Trackpad gestures animations aren't smooth.]]></summary>
        <author>
            <name>Vinod Ponmanadiyil</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[ASP.NET CORE 5.0 TLS 1.2 issue on linux]]></title>
        <id>https://dev.to/moliveto/asp-net-core-5-0-tls-1-2-issue-on-linux-1ii5</id>
        <link href="https://dev.to/moliveto/asp-net-core-5-0-tls-1-2-issue-on-linux-1ii5"/>
        <updated>2021-07-05T23:57:48.000Z</updated>
        <summary type="html"><![CDATA[Jul  5 '21
            Comments: 1
            Answers: 0
        
I have a problem with TLS 1.2 in asp.net core 5.0 and linux
System.Net.Http.HttpRequestException: The SSL connection could not be established, see inner exception
       ---> System.IO.IOException:  Received an unexpected EOF or 0 bytes from the transport stream.
         at System.Net.Security.SslStream.<FillHandshakeBufferAsync>g__InternalFillHandshakeBufferAsync|182_0[TIOAdapter](TIOAdapter adap, ValueTask`1 task, Int32 minSize)
         at System.Net.Security.SslStream.ReceiveBlobAsync[TIOAdapter](TIOAdapter adapter)
         at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter,
…
    
  
Open Full Question]]></summary>
        <author>
            <name>Marcelo Adrian Oliveto</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA['any' vs 'unknown' in TypeScript 👀]]></title>
        <id>https://dev.to/karishmashukla/any-vs-unknown-in-typescript-4jo</id>
        <link href="https://dev.to/karishmashukla/any-vs-unknown-in-typescript-4jo"/>
        <updated>2021-07-05T19:50:08.000Z</updated>
        <summary type="html"><![CDATA[When you start learning TypeScript, you will come across two types - any and unknown.
any - The any type allows us to assign literally “any” particular value to that variable, simulating what we know as plain JavaScript.
unknown -  The unknown type is the type-safe counterpart of any. Anything is assignable to unknown, but unknown isn't assignable to anything but itself and any without a type assertion or a control flow based narrowing.
Errghh... Let's understand with an example.
let age: number;
let userAge: any;

userAge = 'This is some age';
userAge = 20;

age = userAge;

And yes, This code works! 🎉 Type of userAge is any so it can be assigned any value - string, number etc.
let age: number;
let userAge: unknown;

userAge = 'This is some age';
userAge = 20;

age = userAge;

The statement age=userAge gives an error. I mean, the type is unknown so what is the problem here? To assign an unknown value to a value with a fixed type, we have to do some quick type check!
let age: number;
let userAge: unknown;

userAge = 'This is some age';
userAge = 20;

if(typeof userAge === 'number') {
  age = userAge;
}

And now this works too! 🎉
When to use what? 🤔
unknown is a better choice if you know what you want to do with that value eventually. 
I hope you learnt at least something. Also, this was my first ever post on Dev! Thank you for reading :)]]></summary>
        <author>
            <name>Karishma</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Package Flutter Linux App Into AppImage Part 2]]></title>
        <id>https://dev.to/hosamhasan/package-flutter-linux-app-into-appimage-part-2-1c5o</id>
        <link href="https://dev.to/hosamhasan/package-flutter-linux-app-into-appimage-part-2-1c5o"/>
        <updated>2021-07-05T19:30:14.000Z</updated>
        <summary type="html"><![CDATA[Now, We are ready to build our first Flutter AppImage app 🚀


Firstly , we will change our working directory to the project directory.
$ cd flutter_appimage

1- Create folder  AppDir
$ mkdir AppDir

2- Generate the YAML recipe file required to build the AppImage
$ appimage-builder --generate

this command will prompt some questions. Here is the final output :
INFO:Generator:Searching AppDir
? ID [Eg: com.example.app]: com.example.flutter_appimage
? Application Name: Flutter AppImage
? Icon: flutter_appimage_icon
? Executable path relative to AppDir [usr/bin/app]: flutter_appimage
? Arguments [Default: $@]: $@
? Version [Eg: 1.0.0]: latest
? Update Information [Default: guess]: guess
? Architecture: x86_64

Now, you will notice a new file AppImageBuilder.yml  added to the root directory of…]]></summary>
        <author>
            <name>Hosam Hasan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Package Flutter Linux App Into AppImage Part 1]]></title>
        <id>https://dev.to/hosamhasan/package-flutter-linux-app-into-appimage-part-1-2agj</id>
        <link href="https://dev.to/hosamhasan/package-flutter-linux-app-into-appimage-part-1-2agj"/>
        <updated>2021-07-05T19:27:13.000Z</updated>
        <summary type="html"><![CDATA[Flutter is one of the fastest-growing cross-platform UI frameworks with a great and powerful community which has a great part of Flutter success.

Lately, Flutter announced desktop support including Linux which got the attention of big corporates like Canonical (Publisher of Ubuntu), and lately announced that they are rebuilding Ubuntu Desktop Installer using Flutter.
Flutter official docs also have a section on how to build and package Flutter Linux app in Snap (Linux Universal Package Manager) and ship it to Snap Store. here
So it will be interesting if we tried to package Flutter Apps using another universal package manager which is AppImage.
Linux OS (I will use Manjaro)


Flutter with Linux config enabled ( assuming you have latest flutter stable version )


AppImage Tool


AppImage Builder




  
  
  Install AppImage Tool and AppImage Builder


1- Install required deps
$ sudo pacman -Sy python-pip python-setuptools binutils patchelf desktop-file-utils gdk-pixbuf2 wget fakeroot strace

2 - Install Apimage Tool
$ sudo wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -O /usr/local/bin/appimagetool
$ sudo chmod +x /usr/local/bin/appimagetool

3 - Install AppImage Builder
sudo pip3 install appimage-builder

1 - install required deps for building flutter linux app
sudo pacman -Sy clang cmake ninja pkgconf gtk3

2 - Enable Flutter linux desktop configuration
$ flutter config --enable-linux-desktop

3 -  Create flutter project  flutter_appimage
$ flutter create flutter_appimage

3 - Build Linux App
$ (cd flutter_appimage && flutter build linux) 







  
  
  Now, We are good to go to build the AppImage 🥳]]></summary>
        <author>
            <name>Hosam Hasan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[VechaiUI]: A set of high-quality React components with the built-in dark theme using TailwindCSS.]]></title>
        <id>https://dev.to/tranbathanhtung/vechaiui-a-set-of-high-quality-react-components-with-the-built-in-dark-theme-using-tailwindcss-722</id>
        <link href="https://dev.to/tranbathanhtung/vechaiui-a-set-of-high-quality-react-components-with-the-built-in-dark-theme-using-tailwindcss-722"/>
        <updated>2021-07-05T17:57:04.000Z</updated>
        <summary type="html"><![CDATA[Hello guys, Today I am very excited to share my open-source project Vechai-UI: A set of high-quality React components with the built-in dark mode. 
Github: https://github.com/vechai/vechaiui 
https://www.vechaiui.com/  
Feature overview: 
30+ React components & Pre-designed headlessui + radix-ui components.
Written in TypeScript. 
Built-in dark mode. 
Powerful theme customization. 
Please take a look and let me know what you think.]]></summary>
        <author>
            <name>tranbathanhtung</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to setup pretty import paths in a create-react-app application]]></title>
        <id>https://dev.to/chgldev/how-to-setup-pretty-import-paths-in-a-create-react-app-application-5dck</id>
        <link href="https://dev.to/chgldev/how-to-setup-pretty-import-paths-in-a-create-react-app-application-5dck"/>
        <updated>2021-07-05T17:00:01.000Z</updated>
        <summary type="html"><![CDATA[Pretty import paths?


We've all seen relative file import paths inside react applications. If you structure your apps like me you end up with terribly long paths to import other components. Auto-import can take care of that for you automatically, but isn't it hard to read and let's be honest, very, very error prone?
One way to solve this issue is adding webpack aliases. Now if you created your application using the create-react-app cli, you will notice that there isn't a webpack config to mess with unless you eject it running npm run eject, which will expose the entire configuration and makes you responsible of maintaining it. I prefer not ejecting my react application because I prefer the ease of use using react-scripts, so there must be another way.
Create React App Configuration Overri…]]></summary>
        <author>
            <name>Chris</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Creating CRUD for customer data vs using open-source Databunker tool]]></title>
        <id>https://dev.to/stremovsky/creating-crud-for-customer-data-vs-using-open-source-databunker-tool-o95</id>
        <link href="https://dev.to/stremovsky/creating-crud-for-customer-data-vs-using-open-source-databunker-tool-o95"/>
        <updated>2021-07-05T16:28:12.000Z</updated>
        <summary type="html"><![CDATA[Creating CRUD without security in mind can bring you to security disaster. Check out this article how to do it correctly.
I am an open-source developer working on Databunker. Today I got a question from one of the guys on a social network.
It is totally true, you can go DIY. On the other hand, Databunker grew to be a better solution than you can think about.
Databunker is a special application server used for the secure storage of customer data. It is not a full-fledged database. In the backend, it is using MySQL, PostgreSQL, or SQLite to store encrypted customer records. The product comes with full GDPR compliance and is built with privacy-by-design architecture.
Any company implementing Databunker has a quick and easy way for GDPR and privacy-by-design compliance in addition to much better security.
Hashicorp Vault is a great product. It is built for completely different use cases.
For example, when saving records in Databunker, Databunker knows to extract user email, phone, login identity, and custom identity and built a secure hashed-based index to do a quick user record lookup.
User record CRUD is just a part of the service. In Databunker, you have a secure session storage API, temp shareable identities API, automatic record expiration and removal, compliance with pseudonymization, DPO management, user-accessible UI, and more.
Besides you can go with a free version with an MIT license.
It is up to you to go with Databunker or build your own solution.
Just do not leave customer data unencrypted.
More info:
https://databunker.org/
https://github.com/securitybunker/databunker]]></summary>
        <author>
            <name>Yuli</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Setting up Vim for Bash Scripting]]></title>
        <id>https://dev.to/mr_destructive/setting-up-vim-for-bash-scripting-2ef5</id>
        <link href="https://dev.to/mr_destructive/setting-up-vim-for-bash-scripting-2ef5"/>
        <updated>2021-07-05T16:13:39.000Z</updated>
        <summary type="html"><![CDATA[Vim and BASH?


Bash Scripting is a powerful skill to have as a programmer because we find Linux almost everywhere and to get through it you must have a command over its interface which is generally the BASH shell. Vim is a great option for doing this, or probably the best out there! Because Vim is pre-installed in almost every Linux distribution. This is not an in-depth setup for BASH on Vim, it is a simple editorial on starting up BASH scripting on the Vim editor. So without wasting time on "Vim features" let's dive in with the setup for BASH in Vim.
Setting up a bash script doesn't require much code but still in some cases it can be a bit hassle and to avoid the repetitive task, one can easily set up a macro for the boilerplate BASH script.
nnoremap bs i#!/bin/bash/<ESC>o

Ok that was p…]]></summary>
        <author>
            <name>Meet Gor</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building Angular Applications with GitHub Copilot]]></title>
        <id>https://dev.to/brandontroberts/building-angular-applications-with-github-copilot-2mj9</id>
        <link href="https://dev.to/brandontroberts/building-angular-applications-with-github-copilot-2mj9"/>
        <updated>2021-07-05T15:42:40.000Z</updated>
        <summary type="html"><![CDATA[GitHub Copilot is a new feature in technical preview that uses AI to "pair program" with you, and give you hints, tips, and code snippets in VSCode. Below is a livestream of me walking through creating a TODOs app with Nx, Angular, and adding NgRx Store to manage the todos using code suggested from GitHub Copilot.




I thought it was an interesting journey, and look forward to using it more. Let me know what you think of GitHub's new pair programming tool!
Request an invite: https://copilot.github.com]]></summary>
        <author>
            <name>Brandon Roberts</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Question: Will Typescript replace Javascript in web development?]]></title>
        <id>https://dev.to/linhtch90/question-will-typescript-replace-javascript-in-web-development-444h</id>
        <link href="https://dev.to/linhtch90/question-will-typescript-replace-javascript-in-web-development-444h"/>
        <updated>2021-07-05T15:28:14.000Z</updated>
        <summary type="html"><![CDATA[Typescript is proving its success while more and more Javascript libraries and frameworks are adopting this language. Do you think that Typescript will replace Javascript as the main language for frontend (React, Angular, Vue) and backend (Node, Express) developpment?]]></summary>
        <author>
            <name>Linh Truong Cong Hong</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kubernetes Explained Simply: Containers, Pods and Images]]></title>
        <id>https://css-tricks.com/?p=343166</id>
        <link href="https://css-tricks.com/kubernetes-explained-simply-containers-pods-and-images/"/>
        <updated>2021-07-05T14:17:33.000Z</updated>
        <summary type="html"><![CDATA[If you zone out every time someone mentions “Kubernetes,” “containers,” or “pods,” this article is for you. No complex diagrams involved!
As a front-end developer, you don’t have to know how to configure an infrastructure from scratch. However, if you …
The post Kubernetes Explained Simply: Containers, Pods and Images appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Lari Maza</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Writeup: HackTheBox Mirai- Without Metasploit (OSCP Prep)]]></title>
        <id>https://dev.to/0xhuey/writeup-hackthebox-mirai-without-metasploit-oscp-prep-707</id>
        <link href="https://dev.to/0xhuey/writeup-hackthebox-mirai-without-metasploit-oscp-prep-707"/>
        <updated>2021-07-05T14:17:16.000Z</updated>
        <summary type="html"><![CDATA[Hello Again All!
Here with another write up and this time it will be Mirai from HackTheBox.
Difficulty level: Easy
So lets begin!
Nmap -sC -sV -T4 -oN nmap.txt 10.10.10.48
-sC = equivalent to --script=default
-sV = Probe open ports to determine service/Versions info
-T4 = Set timing for faster output (0-5)
-oN = Output to save it to a file

Open Ports displayed:
22 OpenSSH
53 DNSmasq
80 Lighthttpd
1185 Platinum
Let's head over to the website to see what is there.

Nothing appears to display when going to the site so let's try the following.
Right-click on the page.

Still nothing is displaying.

Alright, lets check out the other ports open on the box.
ssh 10.10.10.48

So no luck with trying to just SSH into the machine. I am going to run a nmap Vuln Scan on the machine to check.
Nmap --scr…]]></summary>
        <author>
            <name>Chris 'Huey' S</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Trigonometry in CSS and JavaScript: Beyond Triangles]]></title>
        <id>https://css-tricks.com/?p=343671</id>
        <link href="https://tympanus.net/codrops/2021/06/04/trigonometry-in-css-and-javascript-beyond-triangles/"/>
        <updated>2021-07-05T14:15:20.000Z</updated>
        <summary type="html"><![CDATA[Web design is such a rectangle-based design medium that literally any deviation from it feels fresh. Michelle Barker gets into using math in various ways to programmatically draw lines, shapes, and animations that end up looking both beautiful and have …
The post Trigonometry in CSS and JavaScript: Beyond Triangles appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Secure your API Gateway APIs with Auth0]]></title>
        <id>https://dev.to/aws-builders/secure-your-api-gateway-apis-with-auth0-a4o</id>
        <link href="https://dev.to/aws-builders/secure-your-api-gateway-apis-with-auth0-a4o"/>
        <updated>2021-07-05T14:01:34.000Z</updated>
        <summary type="html"><![CDATA[I have been working with Amazon API Gateway to build APIs for several years now. What has always beem common is that the APIs need to be secured and callers need to be authorized. I have been using many different ways of authorizing the users. I have been usinhg AWS Iam and short lived tokens using Cognito Identity Provider, built in authorization with Cognito User Pools, and Custom Authorizers or Lambda Authorizers that it's called now days. Yes! I'm that API Gateway Old.  
In this post we are going to take a step away and not use Cognito at all for authorization. Instead we will use one of the major third party providers out there, Auth0.
I will use the console to do the entire setup. As normal everything exists as CloudFormation and is available on GitHub
First of all we need to sign up…]]></summary>
        <author>
            <name>Jimmy Dahlqvist</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Windows Security Alert: Disable Print Spooler]]></title>
        <id>https://dev.to/chapmandigital/windows-security-alert-disable-print-spooler-23fk</id>
        <link href="https://dev.to/chapmandigital/windows-security-alert-disable-print-spooler-23fk"/>
        <updated>2021-07-05T13:59:50.000Z</updated>
        <summary type="html"><![CDATA[Read about PrintNightmare 
It's a quick fix!
Just disable Print Spooler service on Windows 10 and Windows Server environments.
Open PowerShell as Administrator
Run Command:




Stop-Service -Name Spooler -Force

Prevent the service from starting back up again during restart:
Set-Service -Name Spooler -StartupType Disabled

We hope this helps save you from ransomware.
Chapman Digital]]></summary>
        <author>
            <name>chapmandigital</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Secure your API Gateway APIs with Auth0]]></title>
        <id>https://dev.to/jimmydqv/secure-your-api-gateway-apis-with-auth0-fh5</id>
        <link href="https://dev.to/jimmydqv/secure-your-api-gateway-apis-with-auth0-fh5"/>
        <updated>2021-07-05T13:48:32.000Z</updated>
        <summary type="html"><![CDATA[I have been working with Amazon API Gateway to build APIs for several years now. What has always beem common is that the APIs need to be secured and callers need to be authorized. I have been using many different ways of authorizing the users. I have been usinhg AWS Iam and short lived tokens using Cognito Identity Provider, built in authorization with Cognito User Pools, and Custom Authorizers or Lambda Authorizers that it's called now days. Yes! I'm that API Gateway Old.  
In this post we are going to take a step away and not use Cognito at all for authorization. Instead we will use one of the major third party providers out there, Auth0.
I will use the console to do the entire setup. As normal everything exists as CloudFormation and is available on GitHub
First of all we need to sign up…]]></summary>
        <author>
            <name>Jimmy Dahlqvist</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Created my first NPM package with typescript.]]></title>
        <id>https://dev.to/iamsarthak/created-my-first-npm-package-with-typescript-13np</id>
        <link href="https://dev.to/iamsarthak/created-my-first-npm-package-with-typescript-13np"/>
        <updated>2021-07-05T13:31:48.000Z</updated>
        <summary type="html"><![CDATA[I created my first npm package with the help of typescript.
npm link
github link
this package help to interact with tmdb api easily. The package is built with typescript so all the response types are pre-defined .]]></summary>
        <author>
            <name>Sarthak Kaushik</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ubuntu Linux installation to a USB external drive with EFI boot]]></title>
        <id>https://dev.to/geraldew/ubuntu-linux-installation-to-a-usb-external-drive-with-efi-boot-46pj</id>
        <link href="https://dev.to/geraldew/ubuntu-linux-installation-to-a-usb-external-drive-with-efi-boot-46pj"/>
        <updated>2021-07-05T12:59:17.000Z</updated>
        <summary type="html"><![CDATA[Note: this is a tech person's guide, for sharing with other tech folk. I'm not attempting to make this completely newbie friendly - but I'd be happy to see its points used in something that is.
The goal here is to create a fully-functional forever-updateable system. So the two things that this is not:
it is not just a “live boot”;
this is not just something to then use to install Linux onto the internal hard drive of a computer.
Rather, this is Linux ready to plug into the USB port of any computer that can be told to boot from that. Every time you boot this system, it will inspect and deal with the hardware that it finds.
This way, the external USB drive becomes your "system", and the computer is just the commodity used at the time. Depending on your use cases:
a physically small drive is …]]></summary>
        <author>
            <name>geraldew</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Control flow analysis of aliased conditional expressions in TypeScript]]></title>
        <id>https://dev.to/willheslam/control-flow-analysis-of-aliased-conditional-expressions-in-typescript-kdp</id>
        <link href="https://dev.to/willheslam/control-flow-analysis-of-aliased-conditional-expressions-in-typescript-kdp"/>
        <updated>2021-07-05T12:51:12.000Z</updated>
        <summary type="html"><![CDATA[An interesting feature was added to TypeScript recently that will improve the ergonomics of code that relies on type narrowing or discrimination:
TS 4.4 (currently beta) can infer when a variable's type implies something about the type of another.
A simple example given in the PR description:
function fn(x: unknown) {
    const isString = typeof x === 'string'
    if (isString) {
        x.length  // Ok
    }
}

In TS 4.3.4, accessing x.length is a type error...
Even though we know that if (and only if) isString is true, x must be a string, the type checker doesn't know that!
This is because isString is just a stupid old boolean - it doesn't know or care why it happens to be true or false.
For TS to understand the expression implies something about its inputs, typeof x === 'string' has to …]]></summary>
        <author>
            <name>Will Heslam</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to add Material Design icons to Angular 11]]></title>
        <id>https://dev.to/tony2tones/how-to-add-material-design-icons-to-angular-11-2708</id>
        <link href="https://dev.to/tony2tones/how-to-add-material-design-icons-to-angular-11-2708"/>
        <updated>2021-07-05T11:45:07.000Z</updated>
        <summary type="html"><![CDATA[Quick post on how to add material design icons to your angular project with working sample project repo
https://pixel-tones.com/how-to-add-material-design-icons-on-angular-11/]]></summary>
        <author>
            <name>Anthony</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Understanding the Angular Framework and Source Code.]]></title>
        <id>https://dev.to/bishalchettri/understanding-the-angular-framework-and-source-code-1o84</id>
        <link href="https://dev.to/bishalchettri/understanding-the-angular-framework-and-source-code-1o84"/>
        <updated>2021-07-05T10:56:57.000Z</updated>
        <summary type="html"><![CDATA[Hi All, I want to understand the in depth working of angular framework and the angular source code. How can I do this and what can be a good starting point ?]]></summary>
        <author>
            <name>Bishal Chettri</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Understanding the Angular Framework and Source Code.]]></title>
        <id>https://dev.to/bishalchettri/understanding-the-angular-framework-and-source-code-1o84</id>
        <link href="https://dev.to/bishalchettri/understanding-the-angular-framework-and-source-code-1o84"/>
        <updated>2021-07-05T10:56:57.000Z</updated>
        <summary type="html"><![CDATA[Hi All, I want to understand the in depth working of angular framework and the angular source code. How can I do this and what can be a good starting point ?]]></summary>
        <author>
            <name>Bishal Chettri</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using HSL Colors In CSS]]></title>
        <id>https://smashingmagazine.com/2021/07/hsl-colors-css/</id>
        <link href="https://smashingmagazine.com/2021/07/hsl-colors-css/"/>
        <updated>2021-07-05T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[In this article, Ahmad Shadeed explains what HSL is, how to use it, and shares some of the useful use-cases and examples that you can use right away in your current projects.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Ahmad Shadeed)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Protractor is dead, long live Cypress! - Part 2]]></title>
        <id>https://dev.to/rainerhahnekamp/protractor-is-dead-long-live-cypress-part-2-3ce9</id>
        <link href="https://dev.to/rainerhahnekamp/protractor-is-dead-long-live-cypress-part-2-3ce9"/>
        <updated>2021-07-05T07:21:31.000Z</updated>
        <summary type="html"><![CDATA[Table of Contents



Basics
First Test
Look out for Flakiness
Be careful with Asynchronity
Further Reading
On 24th April, Angular announced the deprecation of their end-to-end (E2E) testing tool, Protractor. It remains unclear whether there will be a successor or if Angular will delegate this to its users. At the time of this writing, WebDriver.IO, TestCafé and Cypress have come up with schematics for the Angular CLI.
This is the follow-up to my article about E2E frameworks in general in which I will help you get started with E2E testing in Cypress.
You can find  the sources files on 
 / 
        angular-cypress
      
    
If you prefer watching over reading, then this recording of my talk is for you:



Cypress is extremely easy to use. Starting from Angular 12, you just need to run the …]]></summary>
        <author>
            <name>rainerhahnekamp</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Recover Data from RAID 5, 1, 0 on Linux (mdadm)]]></title>
        <id>https://dev.to/hetmansoftware/how-to-recover-data-from-raid-5-1-0-on-linux-mdadm-4268</id>
        <link href="https://dev.to/hetmansoftware/how-to-recover-data-from-raid-5-1-0-on-linux-mdadm-4268"/>
        <updated>2021-07-05T06:23:47.000Z</updated>
        <summary type="html"><![CDATA[In this article, you will find a detailed tutorial on data recovery from RAID 0, 1 or 5. The array we have been testing was built on Linux, and the methods described here will help you recover your files even if one or several disks break down.

A Linux-based hardware RAID is hardly a good example of a reliable storage system – if one of the disks within the array gets disconnected, the whole RAID can’t be mounted, and all the information becomes inaccessible in a second. In this case, you will need a special utility to rebuild the array with the remaining (healthy) drives. It will find and display the data which is still there, and restore this information.
We will perform all the tests with Hetman RAID Recovery. Its main purpose is to search and restore information from inoperable drives…]]></summary>
        <author>
            <name>Michael Mirosnichenko</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Making a Mock Service for all the mock data]]></title>
        <id>https://dev.to/michaelahoffman/making-a-mock-service-for-all-the-mock-data-14dp</id>
        <link href="https://dev.to/michaelahoffman/making-a-mock-service-for-all-the-mock-data-14dp"/>
        <updated>2021-07-04T23:40:56.000Z</updated>
        <summary type="html"><![CDATA[In this part of the tutorial I’m going to be making a mock service to house all my animal details. In the previous part of the mock data series I made a second set of classes for animals and identified the need to move them out to a single location.
Here is where the magic happens with this process. When I’ve identified duplicated data and move it to a central location not only does my code become more consistent and simplified but it is also more maintainable.
It is true that I am often working in prototype code so it really doesn’t “matter” that I have some duplication going on. Or even that the code isn’t maintainable because it’s all a prototype right now anyway.
I’m always pushing to make my code easier to fold into the process. I don’t want to spend time/effort/energy on writing the …]]></summary>
        <author>
            <name>Michaela Hoffman</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Change Timezone on linux (ubuntu)]]></title>
        <id>https://dev.to/goffity/change-timezone-on-linux-ubuntu-3f25</id>
        <link href="https://dev.to/goffity/change-timezone-on-linux-ubuntu-3f25"/>
        <updated>2021-07-04T19:14:45.000Z</updated>
        <summary type="html"><![CDATA[Check timezone on host
timedatectl

Change timezone
timedatectl set-timezone ${timezone}

List timezone
timezonectl list-timezones]]></summary>
        <author>
            <name>goffity</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[DOCKER INSIDE DOCKER]]></title>
        <id>https://dev.to/manishfoodtechs/docker-inside-docker-57fj</id>
        <link href="https://dev.to/manishfoodtechs/docker-inside-docker-57fj"/>
        <updated>2021-07-04T15:50:53.000Z</updated>
        <summary type="html"><![CDATA[Sometimes we want Docker inside Docker. For Example :the CI pipeline,   Jenkins Docker-based dynamic agents for your CI/CD pipelines, Sandboxed environments or experimental workstations.
Here are three methods. (1) and (2) are need to be secured as they have more privileges over your docker daemon. You can use firewall in docker or make it rootless.
Following articles can help you :
Adding FIREWALL to Docker
manish srivastava ・ Jul 4 ・ 2 min read
#devops
        #docker
        #beginners
        #linux
      
Why hackers 'first love' a docker container? Hacking Docker
manish srivastava ・ Jun 4 '20 ・ 21 min read
#docker
        #linux
        #showdev
        #devops
      
and 
New Type of Docker : Rootless + Safer : for every Docker user.
manish srivastava ・ Jun 1 '20 ・ 9 min read
#docke…]]></summary>
        <author>
            <name>manish srivastava</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[[new] Complete Angular 11 tutorial in one Article]]></title>
        <id>https://dev.to/priteshbhoi/new-complete-angular-11-tutorial-in-one-article-4f3p</id>
        <link href="https://dev.to/priteshbhoi/new-complete-angular-11-tutorial-in-one-article-4f3p"/>
        <updated>2021-07-04T15:49:07.000Z</updated>
        <summary type="html"><![CDATA[Welcome to the Angular 11 Tutorial Course, specially designed for beginners and busy developers. 
I create simple step-by-step tutorials which cover the version of Angular 2 to the latest Angular 11.
Angular is a client-side TypeScript based framework which is used to create dynamic web applications. 
-Support TypeScript
Components and services both are simply classes with decorators that mark their types and provide metadata which guide Angular to do things.
Every Angular application always has at least one component known as root component that connects a page hierarchy with page DOM. Each component defines a class that contains application data and logic, and is associated with an HTML template that defines a view to be displayed in a target environment.
NgModules are different from oth…]]></summary>
        <author>
            <name>Pritesh Bhoi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Fourteenth Fourth]]></title>
        <id>https://css-tricks.com/?p=343496</id>
        <link href="https://css-tricks.com/the-fourteenth-fourth/"/>
        <updated>2021-07-04T13:29:01.000Z</updated>
        <summary type="html"><![CDATA[It’s CSS-Tricks birthday! Somehow that keeps coming around every year. It’s that time where I reflect upon that past year. It’s like the annual vibe check. 
I’m writing this just days after my current home state of Oregon has …
The post The Fourteenth Fourth appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Zero-Width Space]]></title>
        <id>https://css-tricks.com/?p=343435</id>
        <link href="https://css-tricks.com/zero-width-space/"/>
        <updated>2021-07-02T20:39:04.000Z</updated>
        <summary type="html"><![CDATA[The name zero-width space is antithetical, but it’s not without uses. In text, maybe you’d use it around slashes because you want to be sure the words are treated individually but not have any physical space around the slash:…
The post Zero-Width Space appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Good Meetings]]></title>
        <id>https://css-tricks.com/?p=342995</id>
        <link href="https://css-tricks.com/good-meetings/"/>
        <updated>2021-07-02T14:41:26.000Z</updated>
        <summary type="html"><![CDATA[Like it or not, meetings are essential to a good working environment and communication. Therefore, it’s crucial that we work on making them as productive as possible. Today we’ll explore myriad ways to keep meetings coordinated, well documented, and talk …
The post Good Meetings appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Sarah Drasner</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Email Testing Flow As It Should Be]]></title>
        <id>https://smashingmagazine.com/2021/07/email-testing-flow/</id>
        <link href="https://smashingmagazine.com/2021/07/email-testing-flow/"/>
        <updated>2021-07-02T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[With so many tools and approaches, email still has quite a few pain points, both for developers and email marketers. Email is difficult because it has too many aspects to set and a few instances with no common rules to follow.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Andriy Zapisotskyi)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[freeCodeCamp July 2021 Summit – Campfire Mode, Data Science Curriculum, Chapter, and Other New Features]]></title>
        <id>60de3cf127f80207bcdbc9af</id>
        <link href="https://www.freecodecamp.org/news/freecodecamp-july-2021-summit/"/>
        <updated>2021-07-02T04:55:18.000Z</updated>
        <summary type="html"><![CDATA[We just published demos of several upcoming freeCodeCamp features and community initiatives. You can read about them here, and watch the entire Summit in the video embedded below. Here's what we cover in this jam-packed one hour community update.Announcement #1: Campfire ModeWe've built a new mode where you can]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Trick to Enable Printify Shipping Notifications for Orders in WooCommerce? Customer Notes.]]></title>
        <id>https://css-tricks.com/?p=342994</id>
        <link href="https://css-tricks.com/the-trick-to-enable-printify-shipping-notifications-for-orders-in-woocommerce-customer-notes/"/>
        <updated>2021-07-02T00:02:51.000Z</updated>
        <summary type="html"><![CDATA[This is a super niche blog post. But it’s been on my list forever to write down because this caused me grief for far too long.
The setup is that you can use WooCommerce to sell things on a WordPress …
The post The Trick to Enable Printify Shipping Notifications for Orders in WooCommerce? Customer Notes. appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS for Web Vitals]]></title>
        <id>https://css-tricks.com/?p=343637</id>
        <link href="https://web.dev/css-web-vitals/"/>
        <updated>2021-07-01T18:54:45.000Z</updated>
        <summary type="html"><![CDATA[The marketing for Core Web Vitals (CWV) has been a massive success. I guess that’s what happens when the world’s dominant search engine tells people that something’s going to be an SEO factor. Ya know what language can play a …
The post CSS for Web Vitals appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[App Platform on Digital Ocean]]></title>
        <id>https://css-tricks.com/?p=342591</id>
        <link href="https://css-tricks.com/app-platform-on-digital-ocean/"/>
        <updated>2021-07-01T18:54:12.000Z</updated>
        <summary type="html"><![CDATA[This is new stuff from DO.
App Platform is a hosting product, no surprise there, but it has some features that are Jamstack-inspired in the best possible way, and an additional set of unique and powerful features. Let’s start with …
The post App Platform on Digital Ocean appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is Website Theming? How to Use CSS Custom Properties and Gatsby.js to Customize Your Site]]></title>
        <id>60dc72b527f80207bcdbbd8f</id>
        <link href="https://www.freecodecamp.org/news/website-theming-with-css-custom-properties-and-gatsbyjs/"/>
        <updated>2021-07-01T18:19:21.000Z</updated>
        <summary type="html"><![CDATA[In this article, I'm going to show you how to theme your website so users can customize certain elements to their tastes.  We'll talk about website themes, how theming works, and we'll end with a demo so you can see it in action. Let's dive in. Table of Contents:What]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[HTML List – How to Use Bullet Points, Ordered, and Unordered Lists]]></title>
        <id>60c0897ad3126007592d5701</id>
        <link href="https://www.freecodecamp.org/news/html-list-how-to-use-bullet-points-ordered-and-unordered-lists/"/>
        <updated>2021-07-01T18:02:56.000Z</updated>
        <summary type="html"><![CDATA[Listing items on a web page is a common task you'll have to do as a web developer. You may have to list shopping cart items, the order of students based on their grades, dogs with the loudest bark – and so on. So you need to know the different ways]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Backend Web Development with Python - Full Course]]></title>
        <id>60d5e7ae6e1a1407b6b0bc5a</id>
        <link href="https://www.freecodecamp.org/news/backend-web-development-with-python-full-course/"/>
        <updated>2021-07-01T16:51:30.000Z</updated>
        <summary type="html"><![CDATA[The backend of a website can be written in many different programming languages. It is becoming increasingly common for to use Python for the backend of a website. We just published a full backend web development with Python course on the freeCodeCamp.org YouTube channel. This comprehensive course is for]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hack the “Deploy to Netlify” Button Using Environment Variables to Make a Customizable Site Generator]]></title>
        <id>https://css-tricks.com/?p=343092</id>
        <link href="https://css-tricks.com/hack-the-deploy-to-netlify-button-using-environment-variables-to-make-a-customizable-site-generator/"/>
        <updated>2021-07-01T14:40:14.000Z</updated>
        <summary type="html"><![CDATA[If you’re anything like me, you like being lazy shortcuts. The “Deploy to Netlify” button allows me to take this lovely feature of my personality and be productive with it.

Clicking the button above lets me (or you!) instantly …
The post Hack the “Deploy to Netlify” Button Using Environment Variables to Make a Customizable Site Generator appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Cassidy Williams</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[It’s A (Front-End Testing) Trap! Six Common Testing Pitfalls And How To Solve Them]]></title>
        <id>https://smashingmagazine.com/2021/07/frontend-testing-pitfalls/</id>
        <link href="https://smashingmagazine.com/2021/07/frontend-testing-pitfalls/"/>
        <updated>2021-07-01T12:30:00.000Z</updated>
        <summary type="html"><![CDATA[When writing front-end tests, you’ll find a lot of pitfalls along the way. Let’s explore common mistakes developers make, and how to avoid them. Testing doesn’t need to be painful, after all.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Ramona Schwering)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The 2021 New Coder Survey is Now Live – and Here&#x27;s How We Designed It]]></title>
        <id>60dc78e927f80207bcdbbddc</id>
        <link href="https://www.freecodecamp.org/news/2021-new-coder-survey/"/>
        <updated>2021-07-01T04:36:31.000Z</updated>
        <summary type="html"><![CDATA[Hello freeCodeCamp community! I'm Dilan, a PhD candidate in sociology at Boston University. I'm an absolute coding newbie, but I do know a bit about surveys. 😃 I have been working with freeCodeCamp founder Quincy Larson over the past few months to design the 2021 New Coder Survey. And I'm thrilled]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How do you make a layout with pictures down one side of a page matched up with paragraphs on the other side?]]></title>
        <id>https://css-tricks.com/?p=343224</id>
        <link href="https://css-tricks.com/how-do-you-make-a-layout-with-pictures-down-one-side-of-a-page-matched-up-with-paragraphs-on-the-other-side/"/>
        <updated>2021-06-30T20:36:52.000Z</updated>
        <summary type="html"><![CDATA[I got this exact question in an email the other day, and I thought it would make a nice blog post because of how wonderfully satisfying this is to do in CSS these days. Plus we can sprinkle in polish …
The post How do you make a layout with pictures down one side of a page matched up with paragraphs on the other side? appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learn the CSS Box-Shadow Property by Coding a Beautiful Button ✨]]></title>
        <id>6063b8d69618b008528a9d79</id>
        <link href="https://www.freecodecamp.org/news/css-box-shadow-property-with-examples/"/>
        <updated>2021-06-30T18:49:49.000Z</updated>
        <summary type="html"><![CDATA[Today we're gonna learn how to use CSS's box-shadow property to make beautiful website components. Along the way, we'll create a button and get hands-on experience using this property. Let's get started. 🎖️ Table of Contents Why you should use the CSS box-shadow propertyThe syntax of the box-shadow propertyHow to make]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[When a Click is Not Just a Click]]></title>
        <id>https://css-tricks.com/?p=343064</id>
        <link href="https://css-tricks.com/when-a-click-is-not-just-a-click/"/>
        <updated>2021-06-30T14:45:42.000Z</updated>
        <summary type="html"><![CDATA[The click event is quite simple and easy to use; you listen for the event and run code when the event is fired. It works on just about every HTML element there is, a core feature of the DOM API.…
The post When a Click is Not Just a Click appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Travis Almand</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fixing a Bug in Low-Resolution Mode]]></title>
        <id>https://css-tricks.com/?p=343182</id>
        <link href="https://css-tricks.com/fixing-a-bug-in-low-resolution-mode/"/>
        <updated>2021-06-30T14:44:54.000Z</updated>
        <summary type="html"><![CDATA[I was working on a bug ticket the other day where it was reported that an icon was sitting low in a button. Just not aligned like it should be. I had to go on a little journey to figure …
The post Fixing a Bug in Low-Resolution Mode appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The State Of Web Workers In 2021]]></title>
        <id>https://smashingmagazine.com/2021/06/web-workers-2021/</id>
        <link href="https://smashingmagazine.com/2021/06/web-workers-2021/"/>
        <updated>2021-06-30T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[The web is single-threaded. This makes it increasingly hard to write smooth and responsive apps. Workers have a bad rep, but can be an important and useful tool in any web developer's toolbelt for these kinds of problems. Let’s get up to speed on Workers on the Web!]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Surma)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Many Shades Of July (2021 Desktop Wallpapers Edition)]]></title>
        <id>https://smashingmagazine.com/2021/06/desktop-wallpaper-calendars-july-2021/</id>
        <link href="https://smashingmagazine.com/2021/06/desktop-wallpaper-calendars-july-2021/"/>
        <updated>2021-06-30T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[Let’s welcome July with some fresh desktop wallpapers. Designed by artists and designers from around the world, they are available with and without a calendar. Enjoy!]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cosima Mielke)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Breaking Down Bulky Builds With Netlify And Next.js]]></title>
        <id>https://smashingmagazine.com/2021/06/breaking-down-bulky-builds-netlify-nextjs/</id>
        <link href="https://smashingmagazine.com/2021/06/breaking-down-bulky-builds-netlify-nextjs/"/>
        <updated>2021-06-29T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[Static Generation is great for performance — until the app gets too big and build-times go through the roof. Today, we’ll have a look at how Netlify’s fresh On-Demand Builders can fix that.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Átila Fassina)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 40 With Mike Cavaliere: What Is Chakra UI For React?]]></title>
        <id>https://smashingmagazine.com/2021/06/smashing-podcast-episode-40/</id>
        <link href="https://smashingmagazine.com/2021/06/smashing-podcast-episode-40/"/>
        <updated>2021-06-29T05:30:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode, we’re talking about Chakra UI. What is it and how can it help with your React projects? Drew McLellan talks to expert Mike Cavaliere to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Creating Custom Emmet Snippets In VS Code]]></title>
        <id>https://smashingmagazine.com/2021/06/custom-emmet-snippets-vscode/</id>
        <link href="https://smashingmagazine.com/2021/06/custom-emmet-snippets-vscode/"/>
        <updated>2021-06-28T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[In this article, Manuel explains why Emmet is one of his favorite productivity tools for writing HTML and CSS, and how you can create custom Emmet snippets in Visual Studio Code to help you improve your front-end workflows even more.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Manuel Matuzović)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Creating A Multi-Author Blog With Next.js]]></title>
        <id>https://smashingmagazine.com/2021/06/creating-multi-author-blog-nextjs/</id>
        <link href="https://smashingmagazine.com/2021/06/creating-multi-author-blog-nextjs/"/>
        <updated>2021-06-25T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[This article explains how we can connect different types of content in a Next.js application. With this technique, we can add any kind of one-to-one, one-to-many, or even many-to-many relationship to our projects.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Dom Habersack)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Run A UX Audit For A Major EdTech Platform (Case Study)]]></title>
        <id>https://smashingmagazine.com/2021/06/ux-audit-edtech-platform-case-study/</id>
        <link href="https://smashingmagazine.com/2021/06/ux-audit-edtech-platform-case-study/"/>
        <updated>2021-06-25T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[This article is a case study of how a UX audit affects a UI. It explains how a famous educational platform can be analyzed edX against Jakob Nielsen’s usability guidelines. To get started, Mark Lankmiller shares all of the criteria and metrics he used for his UX audit.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Mark Lankmilier)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Rise Of Design Thinking As A Problem Solving Strategy]]></title>
        <id>https://smashingmagazine.com/2021/06/design-thinking-problem-solving-strategy/</id>
        <link href="https://smashingmagazine.com/2021/06/design-thinking-problem-solving-strategy/"/>
        <updated>2021-06-24T14:00:00.000Z</updated>
        <summary type="html"><![CDATA[In the dynamic and unpredictable environments in which we work, even the most carefully crafted solutions can have a short shelf life. When we accept that our work is impermanent and our problem-solving abilities are limited, our goal can shift from delivering full solutions to developing tools that empower our users to adaptively design for themselves.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Josh Singer)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Online Workshops (July-October 2021)]]></title>
        <id>https://smashingmagazine.com/2021/06/new-smashing-online-workshops-frontend-ux-design/</id>
        <link href="https://smashingmagazine.com/2021/06/new-smashing-online-workshops-frontend-ux-design/"/>
        <updated>2021-06-23T13:30:00.000Z</updated>
        <summary type="html"><![CDATA[Frontend and design are remarkably complex these days. That’s why we invite kind, smart folks from the community to run [online workshops](https://smashingconf.com/online-workshops/) for all of us to learn together. And we have new ones coming up, and we’d like to kindly welcome you to join in.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Iris Lješnjanin)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Automating Screen Reader Testing On macOS Using Auto VO]]></title>
        <id>https://smashingmagazine.com/2021/06/automating-screen-reader-testing-macos-autovo/</id>
        <link href="https://smashingmagazine.com/2021/06/automating-screen-reader-testing-macos-autovo/"/>
        <updated>2021-06-23T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[Automated testing is an important part of any software project, including testing for accessibility. There are already tools for linting and integration testing accessibility, but what about end-to-end testing with real assistive technology? Since I hadn’t seen this before, I set out to build Auto VO, a driver for the VoiceOver screen reader.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cameron Cundiff)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.11.0]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.11.0</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.11.0"/>
        <updated>2021-06-23T05:57:59.000Z</updated>
        <summary type="html"><![CDATA[Added: support an experimental template for YouTube feed 📺 Demo | Source

Aggregate content from any YouTube channel rss url https://www.youtube.com/feeds/videos.xml?channel_id=<replace_with_channel_id>
Videos are embedded via iframe and loading accelerated by youtube-lite-embed
Ads are reduced thanks to YouTube's policy for embedded videos 🙃
Works on mobile devices with butter smooth horizontal scroll.
Caveat: the template works only with YouTube content. You cannot mix textual RSS feed or other video sources such as Vimeo.
Changed: Default HTML template meta tag adjusted to match convention
Changed: sources in template data is now ordered by last update timestamp (as opposed to alphabetical)
Thank you @PiyushLosalka]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Designing With Code: A Modern Approach To Design (Development Challenges)]]></title>
        <id>https://smashingmagazine.com/2021/06/design-code-modern-approach-development-challenges/</id>
        <link href="https://smashingmagazine.com/2021/06/design-code-modern-approach-development-challenges/"/>
        <updated>2021-06-22T09:00:00.000Z</updated>
        <summary type="html"><![CDATA[After years of innovation in both tools and processes, the struggle between design and development is still real. This article focuses on the best practices for improving the design to development processes and how cutting-edge solutions, such as UXPin powered by Merge technology, can help in facilitating the change.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Mikołaj Dobrucki)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Image To Text Conversion With React And Tesseract.js (OCR)]]></title>
        <id>https://smashingmagazine.com/2021/06/image-text-conversion-react-tesseract-js-ocr/</id>
        <link href="https://smashingmagazine.com/2021/06/image-text-conversion-react-tesseract-js-ocr/"/>
        <updated>2021-06-21T14:30:00.000Z</updated>
        <summary type="html"><![CDATA[Do you have to process data manually because it is served through images or scanned documents? An image-to-text conversion makes it possible to extract text from images to automate the processing of texts on images, videos, and scanned documents. In this article, we look at how to convert an image to text with React and Tesseract.js(OCR), preprocess images, and deal with the limitations of Tesseract (OCR).]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Ayobami Ogundiran)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[An Alternative Voice UI To Voice Assistants]]></title>
        <id>https://smashingmagazine.com/2021/06/alternative-voice-ui-voice-assistants/</id>
        <link href="https://smashingmagazine.com/2021/06/alternative-voice-ui-voice-assistants/"/>
        <updated>2021-06-18T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[Voice assistants are currently the most popular use case for voice user interfaces. However, due to the bad feedback loop resulting from voice assistants can only solve simple user tasks such as setting an alarm or playing music. In order for voice user interfaces to really break through, feedback to the user must be visual, not auditive.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Ottomatias Peura)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Client-Side Routing In Next.js]]></title>
        <id>https://smashingmagazine.com/2021/06/client-side-routing-next-js/</id>
        <link href="https://smashingmagazine.com/2021/06/client-side-routing-next-js/"/>
        <updated>2021-06-18T13:00:00.000Z</updated>
        <summary type="html"><![CDATA[Next.js has a file-based routing system in which each page automatically becomes a route based on its file name. This article will guide you through almost everything you need to know about Routing in Next.js and point you in the direction of related topics and concepts.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Adebiyi Adedotun)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Your Image Is Probably Not Decorative]]></title>
        <id>https://smashingmagazine.com/2021/06/img-alt-attribute-alternate-description-decorative/</id>
        <link href="https://smashingmagazine.com/2021/06/img-alt-attribute-alternate-description-decorative/"/>
        <updated>2021-06-17T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[Image placement on the modern web is highly intentional, helping to communicate the overall purpose of a page or view. This means that nearly every image you declare needs to have an alternate description.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Eric Bailey)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Complete Guide To Accessibility Tooling]]></title>
        <id>https://smashingmagazine.com/2021/06/complete-guide-accessibility-tooling/</id>
        <link href="https://smashingmagazine.com/2021/06/complete-guide-accessibility-tooling/"/>
        <updated>2021-06-16T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[In a new short series of posts, we highlight some of the useful tools and techniques for developers and designers. Recently we’ve covered HTML Emails and SVG Generators. This time we look into different kinds of tools to help you streamline your accessibility testing process. Don’t miss the next one.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Nic Chan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Spinning Up Multiple WordPress Sites Locally With DevKinsta]]></title>
        <id>https://smashingmagazine.com/2021/06/multiple-wordpress-sites-locally-devkinsta/</id>
        <link href="https://smashingmagazine.com/2021/06/multiple-wordpress-sites-locally-devkinsta/"/>
        <updated>2021-06-15T10:15:00.000Z</updated>
        <summary type="html"><![CDATA[When developing themes and plugins for WordPress, we need to test them in different environments. How can we create multiple testing sites on our computer, quickly and easily, without having to become a sysadmin?]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Leonardo Losoviz)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 39 With Addy Osmani: Image Optimization]]></title>
        <id>https://smashingmagazine.com/2021/06/smashing-podcast-episode-39/</id>
        <link href="https://smashingmagazine.com/2021/06/smashing-podcast-episode-39/"/>
        <updated>2021-06-15T07:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode of the Smashing Podcast, we’re talking about image optimization. What steps should we follow for performant images in 2021? We talk to expert Addy Osmani to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[When CSS Isn’t Enough: JavaScript Requirements For Accessible Components]]></title>
        <id>https://smashingmagazine.com/2021/06/css-javascript-requirements-accessible-components/</id>
        <link href="https://smashingmagazine.com/2021/06/css-javascript-requirements-accessible-components/"/>
        <updated>2021-06-14T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[Spoiler alert: tooltips, modals, tabs, carousels, and dropdown menus are some of the user interface components that require more than CSS. To ensure accessibility of your interface, JavaScript is a necessary addition to accomplish focus management, respond to keyboard events, and toggle ARIA attributes.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Stephanie Eckles)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Web Design Done Well: Making Use Of Audio]]></title>
        <id>https://smashingmagazine.com/2021/06/web-design-done-well-audio/</id>
        <link href="https://smashingmagazine.com/2021/06/web-design-done-well-audio/"/>
        <updated>2021-06-11T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[Design often revolves around visuals, but the other senses deserve love too. In this article, we tune in to audio features that are making sites sing.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Frederick O’Brien)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Useful Front-End Boilerplates And Starter Kits]]></title>
        <id>https://smashingmagazine.com/2021/06/useful-frontend-boilerplates-starter-kits/</id>
        <link href="https://smashingmagazine.com/2021/06/useful-frontend-boilerplates-starter-kits/"/>
        <updated>2021-06-10T15:00:00.000Z</updated>
        <summary type="html"><![CDATA[We don’t need to write everything from scratch every single time. With boilerplates and starter kits, we can set up our projects faster, and get to work immediately.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cosima Mielke)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Three Front-End Auditing Tools I Discovered Recently]]></title>
        <id>https://smashingmagazine.com/2021/06/three-frontend-auditing-tools/</id>
        <link href="https://smashingmagazine.com/2021/06/three-frontend-auditing-tools/"/>
        <updated>2021-06-10T11:15:00.000Z</updated>
        <summary type="html"><![CDATA[Building a faster website can be a rocket task these days. There are so many things to consider, so it’s challenging to get everything right. Here are some less-known tools that might help you get there.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Stefan Judis)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Meet <code>:has</code>, A Native CSS Parent Selector (And More)]]></title>
        <id>https://smashingmagazine.com/2021/06/has-native-css-parent-selector/</id>
        <link href="https://smashingmagazine.com/2021/06/has-native-css-parent-selector/"/>
        <updated>2021-06-09T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[What makes relational selector one of the most requested features and how are we, as developers, working around not having it? In this article, we’re going to check the early spec of the :has selector, and see how it should improve the CSS workflow once it’s released.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Adrian Bece)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[From AVIF to WebP: A New Smashing Book By Addy Osmani]]></title>
        <id>https://smashingmagazine.com/2021/06/image-optimization-book-release/</id>
        <link href="https://smashingmagazine.com/2021/06/image-optimization-book-release/"/>
        <updated>2021-06-08T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[It’s here! For the last year, we’ve been working with Addy Osmani on a new Smashing Book all around image optimization. And now it’s here. Meet “Image Optimization”, our deep-dive guide to understand how to deliver high-quality images on the web fast.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Vitaly Friedman)</name>
        </author>
    </entry>
</feed>
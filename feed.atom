<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>urn:2021-11-14T01:05:23.561Z</id>
    <title>osmos::feed</title>
    <updated>2021-11-14T01:05:23.561Z</updated>
    <generator>osmosfeed 1.11.3</generator>
    <link rel="alternate" href="index.html"/>
    <entry>
        <title type="html"><![CDATA[Understand unit tests once and for all [In less than 3 min]]]></title>
        <id>https://dev.to/talhakhalid101/understand-unit-tests-once-and-for-all-in-less-than-3-min-5bpm</id>
        <link href="https://dev.to/talhakhalid101/understand-unit-tests-once-and-for-all-in-less-than-3-min-5bpm"/>
        <updated>2021-11-13T22:37:20.000Z</updated>
        <summary type="html"><![CDATA[One day, browsing through software development communities I came across the following image:

Time passed, I finally learned what unit tests are, what this cheap rabbit represents and I would like to help you understand too.
But what are unit tests?
A unit test is basically testing the smallest testable part of a program.
Okay, but what does that mean?
If you pr the grass in a language that supports functional paradigm for example, the smallest testable part of your code should be a function. So a unit test would be the test of any function. In the case of object orientation it would be the testing of a method of your object.
Well‚Ä¶ as everything is easier to understand in practice, let's go to the code!
In the example below, we have a function that adds two numbers and returns the sum val‚Ä¶]]></summary>
        <author>
            <name>TalhaKhalid101</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The inmates are running the asylum: 10 things you should know about your internal Platform Team]]></title>
        <id>https://dev.to/peibolsang/the-inmates-are-running-the-asylum-10-things-you-should-know-about-your-internal-platform-team-4lk2</id>
        <link href="https://dev.to/peibolsang/the-inmates-are-running-the-asylum-10-things-you-should-know-about-your-internal-platform-team-4lk2"/>
        <updated>2021-11-13T21:04:16.000Z</updated>
        <summary type="html"><![CDATA[(Cover photo credits: James Harrison @jstrippa via Unsplash)
The idea of leveraging tools and frameworks to create better software is not new. For example, in traditional product-centric approaches, vendors pushed developers to build services that orbited around a smart integration bus with the vain hope of making the software more robust (Oracle SOA Suite anyone?). Constrained by lots of proprietary technologies, this approach was far from ideal for developers to design and build their applications. Nowadays, with the emergence of standards-based computing utilities (Serverless) and the novel software engineering practices that evolved with them (NoOps), we can look at these internal tools from a more developer-centric point of view.
Nowadays, you no longer need to buy a product to cover ‚Ä¶]]></summary>
        <author>
            <name>Pablo Bermejo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Fast and easy way to setup web developer certificates]]></title>
        <id>https://dev.to/istarkov/fast-and-easy-way-to-setup-web-developer-certificates-450e</id>
        <link href="https://dev.to/istarkov/fast-and-easy-way-to-setup-web-developer-certificates-450e"/>
        <updated>2021-11-13T21:00:22.000Z</updated>
        <summary type="html"><![CDATA[Modern days having that cookies auth etc depends on https we need to have https local web environment.
Before to generate local certificates I used minica. 
The main issue that you need a big readme for osx, linux and windows users, how to regenerate keys, 
Having that we use vscode remote for development it was 2x more work to register all that keys on local and remote machines.
The solution below doesnt need any setup from developers. 
Register on DNS provider A records for development like:
A blabla.devdomain.com 127.0.0.1
Then using letsencrypt certbot for your provider just generate needed certificates.
They are already trusted and the only issue is 3 month expiration period, what can be easily fixed with cron.
In our case we use cloudflare as DNS. 
Create cloudflare API token https:/‚Ä¶]]></summary>
        <author>
            <name>Ivan Starkov</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Understanding Docker in a visual way (in üé• video): part 1 ‚Äì Images]]></title>
        <id>https://dev.to/aurelievache/understanding-docker-in-a-visual-way-in-video-part-1-images-4fbn</id>
        <link href="https://dev.to/aurelievache/understanding-docker-in-a-visual-way-in-video-part-1-images-4fbn"/>
        <updated>2021-11-13T20:36:39.000Z</updated>
        <summary type="html"><![CDATA[Understanding Docker can be difficult or time-consuming. In order to spread knowledges about Cloud technologies I started to create sketchnotes about Docker, then I've auto-published a book and since now I've started a new serie of video! :-)
I imagined a serie of short videos with a mix of sketchnotes and speech.
I think it could be a good way, more visual, with audio & video to explain Docker (and others technologies).
The first episode is focused on a very important Docker object: Images.




The video is in French BUT I done the subtitles in english (and french too).
If you liked the video and are interested to watch another ones, please give me some feedbacks (and you can also subscribe to my Youtube channel, if you want to ‚ù§Ô∏è).
I can also give you, in an article, the full english transcript and sketchnotes in high quality, about this video, if you are interested.
If you are interested, I published all the sketchnotes on Docker (and new ones!) to make a "book" of 120 pages: "Understanding Docker in a visual way".
If you like theses sketchnotes, you can follow me, I will publish others sketchs shortly :-).]]></summary>
        <author>
            <name>Aur√©lie Vache</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Uptime of macOS system via terminal]]></title>
        <id>https://dev.to/stankukucka/uptime-of-macos-system-via-terminal-4jip</id>
        <link href="https://dev.to/stankukucka/uptime-of-macos-system-via-terminal-4jip"/>
        <updated>2021-11-13T20:10:48.000Z</updated>
        <summary type="html"><![CDATA[You are logged into your system. In this case, it's macOS. You are facing just a simple question. Are you the only one who is logged in? I would like to give you an answer to this simple question with a bit of explanation. Here in upcoming lines, there will be a bit of theory background behind it.
In case your system is healthy (understand as an official system with applied updates), you are the only physical user logged in. You can check this logged in information with a simple command you will enter into the terminal. But there is a trick in that, will explain in next lines hereunder. Open your Terminal.app you'll find out in Finder in the section Applications and Utilities. For more informations check official Terminal User Guide.
By entering uptime command you'll be informed in one line output about the current time, number of days your system is up, number of logged-in users etc.
uptime

If you'll enter this very same command into the terminal in capital form as UPTIME, you'll receive a more readable summary of the logged-in sessions by the user.
UPTIME

The same output can be given by entering w command into the terminal.
w

Do remember you will always have a minimum of 2 logged-in users. By default when you open another terminal session it will be counted as another active user logged in. In other words, if you open four-terminal sessions, you will see 4 users logged in +1 as the default logged-in user I have written about.]]></summary>
        <author>
            <name>Stan ku2ck4</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Let's build a list of real and alive open-source Angular projects.]]></title>
        <id>https://dev.to/ovidiu141/lets-build-a-list-of-real-and-alive-open-source-angular-projects-1en6</id>
        <link href="https://dev.to/ovidiu141/lets-build-a-list-of-real-and-alive-open-source-angular-projects-1en6"/>
        <updated>2021-11-13T19:51:05.000Z</updated>
        <summary type="html"><![CDATA[I only found lists polluted with dead/toy/component-library OSS projects. (or even containing AngularJS projects)
I want to find some real and alive open source projects which are using Angular. I'm sure some of us want to dive deeper and read some Angular code used in real life.
Feel free to mention projects in the comments and I will try to keep the list up to date.
List:
PeerTube (Angular 13 | 9.9k Github stars) 
https://github.com/Chocobozzz/PeerTube


Openproject (Angular 12 | 5.3k Github stars)
https://github.com/opf/openproject


Oppia (Angular 11 | 4.3k Github stars)
https://github.com/oppia/oppia]]></summary>
        <author>
            <name>Ovidiu Miu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Your doctor (parent process) ‚Äì is your prescription  publisher, meanwhile you, well guess who you are ?..]]></title>
        <id>https://dev.to/projektorius96/your-doctor-parent-process-is-your-prescription-publisher-meanwhile-you-well-guess-who-you-are--38b9</id>
        <link href="https://dev.to/projektorius96/your-doctor-parent-process-is-your-prescription-publisher-meanwhile-you-well-guess-who-you-are--38b9"/>
        <updated>2021-11-13T19:19:41.000Z</updated>
        <summary type="html"><![CDATA[If you reading , it means you are subscriber , you (as child process) read doctor's stdout & stderr i.e. you are a child process (subscriber) that consumes the output as Writable, not as Readable stream as what you may expected initially. In layman's terms you behave opposite than you doctor, common sense, you are not a doctor (unless RIP Don Shirley)
const path = require('path')
const child_process = require('child_process');
// child_process.spawn(command@string, args@array, {options@object})

let ls = child_process.spawn('ls', ['-la'], {cwd: path.join(__dirname)})
// console.log(ls.pid /* self */ === ls._handle.pid /* inherited from parent */)

// the line below will be ignored , 'cause this is child process : it does not intended to consume stdin ;
ls.stdin.on('data', (data)=>console.log("data:", data))

ls.stdout.on('data', (data) => console.log(`stdout: ${data}`));

ls.stderr.on('data', (data) => console.log(`stderr: ${data}`)); // give spawn command as e.g lsapfhjsfjka to reproduce error

ls.on('close', (code) => console.log(`child process exited with code ${code}`));


This been first of short series on Dev.to . See you in a next one ! 

Thanks to @devternity
 for support I've been spared up today !]]></summary>
        <author>
            <name>projektorius96</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[File Uploads on GraphQL: Why or Why not]]></title>
        <id>https://dev.to/mrsauravsahu/file-uploads-on-graphql-why-or-why-not-ek0</id>
        <link href="https://dev.to/mrsauravsahu/file-uploads-on-graphql-why-or-why-not-ek0"/>
        <updated>2021-11-13T18:58:27.000Z</updated>
        <summary type="html"><![CDATA[Note: The code mentioned in this post can be found in these repositories. 
NestJS Reference - mrsauravsahu/blog-graphql-nestjs-fileupload

.NET Reference - mrsauravsahu/blog-graphql-dotnet-fileupload




If you just want to see how to do file uploads with GraphQL, just click here
GraphQL has become quite popular due to its various features fixing under/over fetching issues. It also allows for easy caching, federation, non-versioning APIs, subscriptions etc,.
For the modern Internet where data needs to be accessible on various types of applications running on various types of devices, GraphQL seems like a great way forward and also a good concept to put into your knowledge bag.
GraphQL request and responses are typically in JSON format even though the GraphQL Spec doesn't mandate any format‚Ä¶]]></summary>
        <author>
            <name>Sahu, S</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How does Angular know about (click)?]]></title>
        <id>https://dev.to/ovidiu141/how-does-angular-know-about-click-3poc</id>
        <link href="https://dev.to/ovidiu141/how-does-angular-know-about-click-3poc"/>
        <updated>2021-11-13T18:37:54.000Z</updated>
        <summary type="html"><![CDATA[<button (click)="doSomething()">Do it</button>
But how does Angular know how to deal with this (click) thing? 
It works because of the so called Event Biding. Basically it binds the target event name (click) to a method from the component (doSomething).
As explained in this nice article , Angular doesn't have a list of it's own event names, but it actually uses the names of the underlying DOM events.
So the event binding part of the <button (click)="doSomething()">Do it</button> snippet is the equivalent of this vanilla snippet:
element.addEventListener('click', () => { doSomething() });


This means the if I want to know which events I can bind to in Angular I can search them here: https://developer.mozilla.org/en-US/docs/Web/Events
What about the $event?
If the event is a DOM event, like click, mouseenter, keyup etc then the $event is the event itself. For example in the case of click, the $event is a MouseEvent.
EventEmitter) the $event is actually the emitted data.]]></summary>
        <author>
            <name>Ovidiu Miu</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to learn AWS for free ?]]></title>
        <id>https://dev.to/aws-builders/how-to-learn-aws-for-free--2inc</id>
        <link href="https://dev.to/aws-builders/how-to-learn-aws-for-free--2inc"/>
        <updated>2021-11-13T17:18:41.000Z</updated>
        <summary type="html"><![CDATA[ùëªùíòùíê ùëÆùíìùíÜùíÇùíï ùíÇùíèùíÖ ùë≠ùíìùíÜùíÜ ùë®ùëæùë∫ ùíçùíÜùíÇùíìùíèùíäùíèùíà ùíìùíÜùíîùíêùíñùíìùíÑùíÜùíî below:
https://lnkd.in/gnAzj7bH
https://lnkd.in/g_FCjGvF
I just "buy" (free) one and watching #dataanalytics !

https://www.linkedin.com/feed/update/urn:li:activity:6865332472352260096/]]]></summary>
        <author>
            <name>Walter Lee</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[KYS-ED: When Compressing come into Cryptography]]></title>
        <id>https://dev.to/xampy/kys-ed-when-compressing-come-into-cryptography-1iml</id>
        <link href="https://dev.to/xampy/kys-ed-when-compressing-come-into-cryptography-1iml"/>
        <updated>2021-11-13T17:06:58.000Z</updated>
        <summary type="html"><![CDATA[In this lecture, we will dicuss about a new compression/cryptography algorithm. We cover how it started and what we've got at the end of researches.
One month ago, We started working on a lossless compression algorithm. We took a message from an alphabets of $n$ symbols and tried to find a way to reduce the amount of bits used tohold the message. Normally each symbol in the alphabet hold 


After seraveral tries, We found an algorithm which compress the source data with a constant ratio. 
This is how the algorithm works.
The algorithm don't work on symbol directly but use them to construct the treatement block. And it takes as input the binary form of the message regardless of the message type, pass the binary data to the treatlent block and at output we get a new binary data which size is‚Ä¶]]></summary>
        <author>
            <name>Max-Xampy</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS modules in next.js]]></title>
        <id>https://dev.to/fredrikbergqvist/css-modules-in-nextjs-34nm</id>
        <link href="https://dev.to/fredrikbergqvist/css-modules-in-nextjs-34nm"/>
        <updated>2021-11-13T16:46:34.000Z</updated>
        <summary type="html"><![CDATA[On bergqvist.it I used styled jsx for styling my components. I preferred that to other css-in-js frameworks (like JSS) because of it actually using CSS syntax instead of JavaScript objects.
    // styled jsx example with good old CSS
    <style jsx>{`
      .label { color: red; font-style: italic; }
      .article { padding: 0; }
    `}
    </style>

    //JSS example with CSS as a JS object
    const useStyles = createUseStyles({
      label: {
        color: 'red'
        fontStyle: 'italic'
      },
      article: {
        padding: 0
      }
    })

I like Styled jsx but it has had an issue with FOUC in the last few versions of Next.js though, and with Next 12 I decided to try something new and migrate to CSS Modules instead.
A¬†CSS Module¬†is a CSS file in which all class names and anim‚Ä¶]]></summary>
        <author>
            <name>Fredrik Bergqvist</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to display a navbar component after logging in without reloading the page in angular 12]]></title>
        <id>https://dev.to/rammurthykota/how-to-display-a-navbar-component-after-logging-in-without-reloading-the-page-in-angular-12-2kfi</id>
        <link href="https://dev.to/rammurthykota/how-to-display-a-navbar-component-after-logging-in-without-reloading-the-page-in-angular-12-2kfi"/>
        <updated>2021-11-13T16:11:17.000Z</updated>
        <summary type="html"><![CDATA[My landing page does not show a navbar, but I want to display a navbar after logging in successfully.  Currently, I'm able to show navbar if I do a full page reload after logging in successfully. I'm very sure that there is a better way than this approach.
app.component.html
<app-navbar></app-navbar>
<router-outlet></router-outlet>

login.component.ts
login(){
    this.credentials = this.myForm.value;
    if(this.credentials){
      this.loginService.authenticate(this.credentials)
      .subscribe(data => {
        this.storageService.setLocalStorageItem('auth', JSON.stringify(data));
        this.dataService.global.showNav = true;
        this.sharedService.getProjectMetadata()
        .subscribe(metadata => {
          this.storageService.setLocalStorageItem('projectMetaData', JSON.strin‚Ä¶]]></summary>
        <author>
            <name>Ram Murthy Kota</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to display a navbar component after logging in without reloading the page in angular 12]]></title>
        <id>https://dev.to/rammurthykota/how-to-display-a-navbar-component-after-logging-in-without-reloading-the-page-in-angular-12-2kfi</id>
        <link href="https://dev.to/rammurthykota/how-to-display-a-navbar-component-after-logging-in-without-reloading-the-page-in-angular-12-2kfi"/>
        <updated>2021-11-13T16:11:17.000Z</updated>
        <summary type="html"><![CDATA[My landing page does not show a navbar, but I want to display a navbar after logging in successfully.  Currently, I'm able to show navbar if I do a full page reload after logging in successfully. I'm very sure that there is a better way than this approach.
app.component.html
<app-navbar></app-navbar>
<router-outlet></router-outlet>

login.component.ts
login(){
    this.credentials = this.myForm.value;
    if(this.credentials){
      this.loginService.authenticate(this.credentials)
      .subscribe(data => {
        this.storageService.setLocalStorageItem('auth', JSON.stringify(data));
        this.dataService.global.showNav = true;
        this.sharedService.getProjectMetadata()
        .subscribe(metadata => {
          this.storageService.setLocalStorageItem('projectMetaData', JSON.strin‚Ä¶]]></summary>
        <author>
            <name>Ram Murthy Kota</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Create A CallBack Functions JavaScript And TypeScript]]></title>
        <id>https://dev.to/own_alazzam10/create-a-callback-functions-javascript-and-typescript-4h9a</id>
        <link href="https://dev.to/own_alazzam10/create-a-callback-functions-javascript-and-typescript-4h9a"/>
        <updated>2021-11-13T16:08:36.000Z</updated>
        <summary type="html"><![CDATA[At Some Time You Want To Build A CallBack Functions With Parameters This Tutoial is For Begginers And Middle Level So Let`s Start
CallBack Functions is Mean A Function Then You Want To Make Thing After Exectue it By Browser Like This.
JavaScript
TypeScript
This Will Be Printing Function This Execute A callBack method after printing the name
JavaScript
TypeScript
Then We Need To Pass Data Between The Data Inside Function And CallBack Function Like This
JavaScript
TypeScript
This is the tutorial about CallBack Functions JavaScript And TypeScript follow me for more and sorry about syntex highlight because not working]]></summary>
        <author>
            <name>Own Alazzam</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[This Year's Hacktoberfest!]]></title>
        <id>https://dev.to/yuvraj_singh/this-years-hacktoberfest-2j43</id>
        <link href="https://dev.to/yuvraj_singh/this-years-hacktoberfest-2j43"/>
        <updated>2021-11-13T15:36:42.000Z</updated>
        <summary type="html"><![CDATA[This year hacktoberfest was fun to do. In beginning i just started submitting my PRs and then after long 29 days, i reviewed my PRs and Damn Maximum of the Projects were not in Hacktoberfest Participation list and in panic I somehow manage to find five projects that were hacktoberfest-accepted. Thanks to God i reviewed my Submission, Otherwise this Year would be empty Without it. This was my story Guys! Share yours's in comment.üòäüòâ]]></summary>
        <author>
            <name>YuvrajSHAD</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cplayer and Its application]]></title>
        <id>https://dev.to/crajbanshi/cplayer-and-its-application-2eap</id>
        <link href="https://dev.to/crajbanshi/cplayer-and-its-application-2eap"/>
        <updated>2021-11-13T15:35:54.000Z</updated>
        <summary type="html"><![CDATA[I have created a web based music player using javascript. I kept its name as CPlayer.
Github link
https://github.com/crajbanshi/cplayer
And also created one website using this. Application name is MSound. Now it is deployed in stage trying to move it to production. I hope th MSound app will be in fly very soon.
Visit the application stage url: http://tune.rf.gd]]></summary>
        <author>
            <name>Chanchal Rajbanshi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cplayer and Its application]]></title>
        <id>https://dev.to/crajbanshi/cplayer-and-its-application-2eap</id>
        <link href="https://dev.to/crajbanshi/cplayer-and-its-application-2eap"/>
        <updated>2021-11-13T15:35:54.000Z</updated>
        <summary type="html"><![CDATA[I have created a web based music player using javascript. I kept its name as CPlayer.
Github link
https://github.com/crajbanshi/cplayer
And also created one website using this. Application name is MSound. Now it is deployed in stage trying to move it to production. I hope th MSound app will be in fly very soon.
Visit the application stage url: http://tune.rf.gd]]></summary>
        <author>
            <name>Chanchal Rajbanshi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[8 Most Common Type Of Cyber Attacks]]></title>
        <id>https://dev.to/prajwolshrestha/8-most-common-type-of-cyber-attacks-2be5</id>
        <link href="https://dev.to/prajwolshrestha/8-most-common-type-of-cyber-attacks-2be5"/>
        <updated>2021-11-13T14:43:43.000Z</updated>
        <summary type="html"><![CDATA[Before learning about types of cyber attacks, you must know what a cyber attack is. Basically, it is an attack performed by a group or an individual to gain unauthorized access to a system with the intent to harm the victim.
In this article, we will briefly learn about some of the most common types of cyber attacks  and how to protect yourself from them.
Phishing involves sending emails that appear to be from trusted sources. The goal is to make the victim click on the link and trick them into giving their login credentials or spreading malware.
Spear phishing is carried out in the same way, except it is more focused on particular people. The attacker has to do some research on the victim before sending them the malicious link. For example, with a little research an attacker can find your ‚Ä¶]]></summary>
        <author>
            <name>Prajwol Shrestha</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[An online Book shop API Node js]]></title>
        <id>https://dev.to/devtips3/an-online-book-shop-api-node-js-6a5</id>
        <link href="https://dev.to/devtips3/an-online-book-shop-api-node-js-6a5"/>
        <updated>2021-11-13T14:26:20.000Z</updated>
        <summary type="html"><![CDATA[bookstore-api
Features:
Technology Stack:
Github : https://github.com/saidMounaim/a-bookstore-api
Follow me on github : https://github.com/saidMounaim/]]></summary>
        <author>
            <name>dev tips</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Create a multi-tenant application in Nest.js Part 3 (multi-database setup)]]></title>
        <id>https://dev.to/ismaeil_shajar/create-a-multi-tenancy-application-in-nestjs-part-3-multi-database-setup-13ap</id>
        <link href="https://dev.to/ismaeil_shajar/create-a-multi-tenancy-application-in-nestjs-part-3-multi-database-setup-13ap"/>
        <updated>2021-11-13T14:11:35.000Z</updated>
        <summary type="html"><![CDATA[In part 1, we set up the nestjs framework and configured and tested microservices architecture application using nest.js. In part 2, we used Sequelize and mongoose to access the database and tested for both MySQL database and MongoDB.
In this part; we will see how to let the application connect to multiple databases depending on the request. Since it is a multi-tenancy application, each tenant has their own database containing their data accessing the same application, thus the application needs to connect to different databases.
forRootAsync() instead of forRoot(), we need to use a custom class for configuration.
For both sequelize and mongoose, add this:
MongooseModule.forRootAsync({
    useClass:MongooseConfigService
  }),
SequelizeModule.forRootAsync({
      useClass:SequelizeConfigSer‚Ä¶]]></summary>
        <author>
            <name>ismaeil-shajar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Create a multi-tenant application in Nest.js Part 3 (multi-database setup)]]></title>
        <id>https://dev.to/ismaeil_shajar/create-a-multi-tenancy-application-in-nestjs-part-3-multi-database-setup-13ap</id>
        <link href="https://dev.to/ismaeil_shajar/create-a-multi-tenancy-application-in-nestjs-part-3-multi-database-setup-13ap"/>
        <updated>2021-11-13T14:11:35.000Z</updated>
        <summary type="html"><![CDATA[In part 1, we set up the nestjs framework and configured and tested microservices architecture application using nest.js. In part 2, we used Sequelize and mongoose to access the database and tested for both MySQL database and MongoDB.
In this part; we will see how to let the application connect to multiple databases depending on the request. Since it is a multi-tenancy application, each tenant has their own database containing their data accessing the same application, thus the application needs to connect to different databases.
forRootAsync() instead of forRoot(), we need to use a custom class for configuration.
For both sequelize and mongoose, add this:
MongooseModule.forRootAsync({
    useClass:MongooseConfigService
  }),
SequelizeModule.forRootAsync({
      useClass:SequelizeConfigSer‚Ä¶]]></summary>
        <author>
            <name>ismaeil-shajar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Typing speed project for beginners]]></title>
        <id>https://dev.to/lucifer25x/typing-speed-project-for-beginners-4g1m</id>
        <link href="https://dev.to/lucifer25x/typing-speed-project-for-beginners-4g1m"/>
        <updated>2021-11-13T13:47:35.000Z</updated>
        <summary type="html"><![CDATA[Added some functions:
Keystroke Counter (False/True)
Word counter (False/True)
More detailed finish window.
Fixed textarea problem.
Source Code: https://github.com/Lucifer25x/typing-test
https://lucifer25x.github.io/typing-test/]]></summary>
        <author>
            <name>Lucifer25x</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Typing speed project for beginners]]></title>
        <id>https://dev.to/lucifer25x/typing-speed-project-for-beginners-4g1m</id>
        <link href="https://dev.to/lucifer25x/typing-speed-project-for-beginners-4g1m"/>
        <updated>2021-11-13T13:47:35.000Z</updated>
        <summary type="html"><![CDATA[Added some functions:
Keystroke Counter (False/True)
Word counter (False/True)
More detailed finish window.
Fixed textarea problem.
Source Code: https://github.com/Lucifer25x/typing-test
https://lucifer25x.github.io/typing-test/]]></summary>
        <author>
            <name>Lucifer25x</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Angular app in Github pages]]></title>
        <id>https://dev.to/davidmimay/angular-app-in-github-pages-2a56</id>
        <link href="https://dev.to/davidmimay/angular-app-in-github-pages-2a56"/>
        <updated>2021-11-13T12:33:22.000Z</updated>
        <summary type="html"><![CDATA[How to deploy and angular app to GitHub pages and get it running under your own domain: username.github.io. Also you can use the GitHub API to get access to your repositories data as I did on my personal portfolio:
Live demo
Source code
Git
GitHub account
Angular CLI
Create a new public repository using your GitHub username and this form:
username.github.io

First, clone the newly created repository to a local folder:
$ git clone https://github.com/username/username.github.io.git
Navigate to the repository root folder:
$ cd username.github.io
Create a new angular project in the root directory of the repo:
$ ng new myApp --directory ./
Open angular.json file and change the buildOutput path to ‚Äúdocs‚Äù:
angular.json
‚Ä¶
"architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "docs",
‚Ä¶

Build the angular application in production mode:
$ ng build --prod
You can push the /docs folder only, or you can push the whole application /myApp (recommended):
$ git add .
$ git commit -m "Init app"
$ git push
Now navigate to your repository settings https://github.com/username/username.github.io/settings

scroll down to the GitHub pages section to change the build source to /docs. Few seconds later your site will be built and published and you should see the message ‚ÄúYour site is published at‚Ä¶‚Äù. If don‚Äôt, try refreshing the site.

Then you can view the deployments at the right side of the repository, under environments, pressing github-pages or at https://github.com/username/username.github.io/deployments

You can make changes locally, test them using $ ng serve and then build for production using $ ng build --prod and push your updated code to GitHub. The page will automatically re-build.]]></summary>
        <author>
            <name>david mimay</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Secrets With SOPS]]></title>
        <id>https://dev.to/aarushikansal/secrets-with-sops-2h5e</id>
        <link href="https://dev.to/aarushikansal/secrets-with-sops-2h5e"/>
        <updated>2021-11-13T11:58:54.000Z</updated>
        <summary type="html"><![CDATA[SOPS (Secrets OperationS) is an open source tool from Mozilla, intended to edit, encrypt, decrypt a range of different file types, such as YAML, JSON, ENV etc. 
Encryption can be done in variety of ways, using major cloud providers encryption tools, PGP, and even age.
In this article, we'll focus on using AWS + KMS. A similar setup and workflow can be used for GCP and Azure as well. 
Download + install one of: 
stable releases


unstable features



More details can be found on the SOPS github repo.
Pre-requistes for this are: 
A ready to use KMS key.
Correctly configured AWS credentials, for example:




[default]
aws_access_key_id = <access-key-id>
aws_secret_access_key = <access-key>

[kmsuser]
aws_access_key_id = <kmsuser-access-key-id>
aws_secret_access_key = <kmsuer-access-key>


A s‚Ä¶]]></summary>
        <author>
            <name>Aarushi Kansal</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Secrets With SOPS]]></title>
        <id>https://dev.to/aarushikansal/secrets-with-sops-2h5e</id>
        <link href="https://dev.to/aarushikansal/secrets-with-sops-2h5e"/>
        <updated>2021-11-13T11:58:54.000Z</updated>
        <summary type="html"><![CDATA[SOPS (Secrets OperationS) is an open source tool from Mozilla, intended to edit, encrypt, decrypt a range of different file types, such as YAML, JSON, ENV etc. 
Encryption can be done in variety of ways, using major cloud providers encryption tools, PGP, and even age.
In this article, we'll focus on using AWS + KMS. A similar setup and workflow can be used for GCP and Azure as well. 
Download + install one of: 
stable releases


unstable features



More details can be found on the SOPS github repo.
Pre-requistes for this are: 
A ready to use KMS key.
Correctly configured AWS credentials, for example:




[default]
aws_access_key_id = <access-key-id>
aws_secret_access_key = <access-key>

[kmsuser]
aws_access_key_id = <kmsuser-access-key-id>
aws_secret_access_key = <kmsuer-access-key>


A s‚Ä¶]]></summary>
        <author>
            <name>Aarushi Kansal</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[‡πÅ‡∏ä‡∏£‡πå‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏•‡∏≠‡∏á migrate ‡∏à‡∏≤‡∏Å pnpm ‡πÑ‡∏õ yarn berry ‡∏Å‡∏±‡∏ô]]></title>
        <id>https://dev.to/jungai/aechrprasbkaarnlng-migrate-cchaak-pnpm-aip-yarn-berry-kan-2kac</id>
        <link href="https://dev.to/jungai/aechrprasbkaarnlng-migrate-cchaak-pnpm-aip-yarn-berry-kan-2kac"/>
        <updated>2021-11-13T11:33:50.000Z</updated>
        <summary type="html"><![CDATA[‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡πÄ‡∏´‡πá‡∏ô‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö yarn berry ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏•‡∏¢‡∏≠‡∏¢‡∏≤‡∏Å‡∏•‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏∞ migrate ‡∏à‡∏≤‡∏Å‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ pnpm ‡πÑ‡∏õ berry ‡∏Å‡πá‡πÄ‡∏•‡∏¢‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏ô‡∏µ‡πâ‡∏Ñ‡∏£‡∏±‡∏ö
‡∏à‡∏£‡∏¥‡∏á‡πÜ‡πÅ‡∏•‡πâ‡∏ß‡∏ú‡∏°‡πÄ‡∏Ñ‡∏¢‡πÑ‡∏î‡πâ‡∏¢‡∏¥‡∏ôyarn (berry) ‡∏°‡∏≤‡∏ô‡∏≤‡∏ô‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏•‡∏≠‡∏á‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ß‡πà‡∏≤‡∏ä‡πà‡∏ß‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏ú‡∏°‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏´‡πá‡∏ô issue ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡πâ‡∏ß project ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Å‡πá‡πÄ‡∏•‡∏¢‡∏Ñ‡∏¥‡∏î‡∏ß‡πà‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏û‡∏±‡∏Å‡∏Ñ‡πà‡∏≠‡∏¢‡∏°‡∏≤‡∏•‡∏≠‡∏á‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏Å‡πá‡∏•‡∏∑‡∏° -.- 
‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏ß‡∏á‡∏Å‡∏≤‡∏£ dev ‡∏ú‡∏°‡∏Å‡πá‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà npm -> yarn(classic) -> pnpm(‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô)
‡∏Ç‡∏≠‡∏¢‡πâ‡∏≠‡∏ô‡πÑ‡∏õ‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ yarn classic (‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏Ç‡∏≠‡∏¢‡πà‡∏≠‡∏ß‡πà‡∏≤ classic) ‡∏ú‡∏°‡πÉ‡∏ä‡πâ feature ‡∏ô‡∏∂‡∏á‡∏Ñ‡∏∑‡∏≠‡∏ï‡∏±‡∏ß worksapces‡πÉ‡∏ä‡πâ‡∏°‡∏≤‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 3 ‡∏õ‡∏µ‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏ñ‡πâ‡∏≤‡∏ô‡∏±‡∏ö‡πÑ‡∏°‡πà‡∏ú‡∏¥‡∏î ‡πÅ‡∏•‡∏∞‡∏Å‡πá‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏ô‡∏≤‡∏ô‡∏°‡∏≤‡∏ô‡∏µ‡πâ‡∏ú‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏ï‡∏±‡∏ß pnpm ‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏π‡∏î‡∏ñ‡∏∂‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡πá‡πÄ‡∏•‡∏¢‡∏•‡∏≠‡∏á‡πÑ‡∏õ‡∏î‡∏π‡∏ß‡πà‡∏≤‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏¢‡∏±‡∏á‡πÑ‡∏á‡∏°‡∏µ feature ‡πÑ‡∏´‡∏ô‡∏ö‡πâ‡∏≤‡∏á
‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏õ‡∏î‡∏π‡∏ß‡πà‡∏≤‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡πÇ‡∏≠‡πÄ‡∏Ñ‡πÄ‡∏•‡∏¢‡∏°‡∏µ‡∏ó‡∏∏‡∏Å feature ‡∏ó‡∏µ‡πà‡∏ú‡∏°‡πÉ‡∏ä‡πâ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡∏ä‡πà‡∏ß‡∏á‡πÜ‡∏´‡∏•‡∏±‡∏á‡∏ú‡∏°‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô pnpm ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏´‡∏•‡∏±‡∏Å‡∏Ñ‡∏∑‡∏≠ yarn berry ‡∏°‡∏≤‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á structure ‡∏ó‡∏µ‡πà‡∏ú‡∏°‡πÉ‡∏ä‡πâ pnpm ‡πÅ‡∏ö‡∏ö‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏á‡πà‡∏≤‡∏¢‡∏ï‚Ä¶]]></summary>
        <author>
            <name>Woraphol Wananiyakul</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Heal You - Fitness App UI kit]]></title>
        <id>https://dev.to/adom_shafi_17/heal-you-fitness-app-ui-kit-21c8</id>
        <link href="https://dev.to/adom_shafi_17/heal-you-fitness-app-ui-kit-21c8"/>
        <updated>2021-11-13T06:43:48.000Z</updated>
        <summary type="html"><![CDATA[Hello Everyone. Meet Heal You, it is a premium UI Kit consist of 80+ health & fitness app screens that can help you to boost your design process. This kit is carefully crafted and contains many UI components that you can use for design inspiration or speed up your design workflow. You can also find a series of screens that guide users through the app interface & functions. You can make your custom workout on this app. You can track your daily activity & set up an alarm for your exercise time. Easy to customize to fit your style. Also, You can get a dark mode version of it. Available in Figma, XD, Sketch & Flutter File.
https://www.uihut.com/feature/heal-you-fitness-app-ui-kit/16704]]></summary>
        <author>
            <name>Adom Shafi</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[OS themed profile]]></title>
        <id>https://dev.to/yashdatir/os-themed-profile-4bf1</id>
        <link href="https://dev.to/yashdatir/os-themed-profile-4bf1"/>
        <updated>2021-11-13T05:53:38.000Z</updated>
        <summary type="html"><![CDATA[Hey there, m up with one of my other mini project, making an OS clone for my profile. It has its own UI, CLI, formats etc. I feel this may have endless possibilities for its usage, also may come up with something creative. I would also like if any one can collaborate for the same. Currently it has all the data static, but arrangements have been made to make it dynamic using a backend. So, lets get in touch...
https://yashdatir.github.io/profile-os/]]></summary>
        <author>
            <name>Yash Datir</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Counter application with react and typescript]]></title>
        <id>https://dev.to/suhakim/counter-application-with-react-and-typescript-56j4</id>
        <link href="https://dev.to/suhakim/counter-application-with-react-and-typescript-56j4"/>
        <updated>2021-11-13T05:37:48.000Z</updated>
        <summary type="html"><![CDATA[Let's build this counter application using react-typescript.We are going to use useReducer hook for this application.

Let's set up our application
$ cd Desktop
$ mkdir react-counter
$ cd react-counter

Now create a react app
$ npx create-react-app ./ --template typescript

You should see a brand new react application.Clean up all unnecessary files.You can use a different component but in my case i am going to use App.tsx component.
At first create a component App and export it defaultly
const App:React.FunctionComponent=()=>{
  return <div className='container'></div>
}

Now we are going to setup our useReducer hooks.Add this statement to your code
const [state, dispatch] = React.useReducer(counterReducer, initialState);

Now let's create our cunterReducer and initialState
First initialSt‚Ä¶]]></summary>
        <author>
            <name>sadiul hakim</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Here are the Dockerfile tips you can use to get your builds faster and safer]]></title>
        <id>https://dev.to/mtk3d/here-are-the-dockerfile-tips-you-can-use-to-get-your-builds-faster-and-safer-4o1a</id>
        <link href="https://dev.to/mtk3d/here-are-the-dockerfile-tips-you-can-use-to-get-your-builds-faster-and-safer-4o1a"/>
        <updated>2021-11-13T02:58:15.000Z</updated>
        <summary type="html"><![CDATA[Nowadays we are using docker a lot in web development. It's easy to use, great in scaling, and gives us an immutable environment for running your application from local development to deploy on production.
In this article, I want to show you some of those practices based on this example:
FROM php:7-fpm
WORKDIR /app

COPY . .

ADD https://deb.nodesource.com/setup_12.x .
RUN bash setup_12.x

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer

RUN apt update && \
    apt install -y \
    curl \
    git \
    htop \
    libicu-dev \
    libgd-dev \
    mariadb-client \
    libonig-dev \
    vim \
    unzip \
    nodejs

RUN apt purge -y --auto-remove
RUN npm install -g yarn

RUN docker-php-ext-install \
    exif \
    gd \
    intl \
    m‚Ä¶]]></summary>
        <author>
            <name>Mateusz Cholewka</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Green Flower - Global Voting]]></title>
        <id>https://dev.to/greenflowervoting/green-flower-global-voting-2kn2</id>
        <link href="https://dev.to/greenflowervoting/green-flower-global-voting-2kn2"/>
        <updated>2021-11-13T02:31:01.000Z</updated>
        <summary type="html"><![CDATA[This is the beginning of a Monthly Series about Voting The following Content is driven by the community of https://github.com/GreenFlowerVoting/GreenFlowerVoting/medium.md
This Space enables a discussion to create a global, society fair, secure voting system.
Imagination: We discover a planet and we are trying to create a voting system that stands for
global equality without any borders 
without any regional differences regardless of the geographical locations of the individuals
independent of society or education
Problems:
Regional differences 
Unique Identification 
Manipulation 
Desinterest 
Uncertainty 
Lobbying 
Contributions 
What are your concerns?
Goals for this Project:
Create an open collective - open source voting plattform
Start and Election
The chosen one will receive a Reward!
The voters will decide how the Reward will be spent to benefit the voters.
CONTRIBUTIONS: 
https://github.com/GreenFlowerVoting/GreenFlowerVoting]]></summary>
        <author>
            <name>GreenFlowerVoting</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Web-push Notification using React and Node js]]></title>
        <id>https://dev.to/ronyfr3/web-push-notification-using-react-and-node-js-oc9</id>
        <link href="https://dev.to/ronyfr3/web-push-notification-using-react-and-node-js-oc9"/>
        <updated>2021-11-13T01:39:03.000Z</updated>
        <summary type="html"><![CDATA[I will share my code here for better understanding the core concept.


public/custom-sw.js
console.log("Service Worker Loaded...");
self.addEventListener('push', event => {
  const data = event.data.json()
  console.log('New notification', data)
  event.waitUntil(
    self.registration.showNotification(data.title, {
      body:data.description,
      icon:data.icon
    })
  );
})

src/serviceWorker.js
// This optional code is used to register a service worker.
// register() is not called by default.

// This lets the app load faster on subsequent visits in production, and gives
// it offline capabilities. However, it also means that developers (and users)
// will only see deployed updates on subsequent visits to a page, after all the
// existing tabs open on the page have been closed, sinc‚Ä¶]]></summary>
        <author>
            <name>ronyfr3</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How does the browser magically see React changes in development?]]></title>
        <id>https://dev.to/matthewekeller/how-does-the-browser-magically-see-react-changes-in-development-4oc4</id>
        <link href="https://dev.to/matthewekeller/how-does-the-browser-magically-see-react-changes-in-development-4oc4"/>
        <updated>2021-11-13T01:27:51.000Z</updated>
        <summary type="html"><![CDATA[Several months ago I was new to React.  As an experienced developer of classic javascript, one of the most objectionable things about the newer thick client frameworks such as React and Angular is the need to build the client side application to see changes. Let's face it, we are used to only having to refresh the browser page.  Fortunately for us the community has has helped us out with this issue, specifically the Create React App community.
1) Node.js, React, and Webpack are watching your code and transpiling it - It's no secret that React delivered to the browser is quite different than what you wrote. Your tsx code has to be changed to jsx and your jsx code has to be changed to javascript, and this javascript has to be packed up for delivery to the browser.  Since you don't feel like doing this on your own some automation is in order, fortunately you will not have to think about this, just know that it is happening.
2) A socket has been created on the browser back to the server - This is where the real magic is because by creating a socket with the server, communication can be pushed to the browser instead of having the browser poll the server, which would be far more messy.  So everytime you change your code, the chain reaction described in step one happens and then a message is sent up the socket to tell the browser to refresh the page.
There is a really interesting wrinkle to step 2.  If you load your page and then fire up your DOM inspector you will not see this socket, which is super confusing.  However, if you force a refresh of your browser page with the inspector open you will then see the socket.  A bug perhaps in Chrome?
So there it is, a peak behind the curtain.  Happy coding.
For more information on the latest frameworks, check out this article Common Frameworks for 2022.]]></summary>
        <author>
            <name>matthewekeller</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Secure your app in a few easy steps üîí]]></title>
        <id>https://dev.to/leahein/secure-your-app-in-a-few-easy-steps-2amo</id>
        <link href="https://dev.to/leahein/secure-your-app-in-a-few-easy-steps-2amo"/>
        <updated>2021-11-13T00:26:33.000Z</updated>
        <summary type="html"><![CDATA[Security is a broad topic, and one I am certainly no expert at. However, there are some really simply things you can do to increase the security of your web application.
For starters, there are some HTTP Response Headers you can include in your web responses, that can prevent easily preventable vulnerabilities.
This will aim to outline all of the headers recommended by the OWASP Secure Headers Project, as part of a series. Let's begin with a couple.

As a caveat, these are by no means foolproof. However, they do provide a first layer of defense in depth for attackers.
The recommended mechanism for configuring your web application to return these headers in every response, is by configuring your web server. Since nginx is a widely used option, I will provide examples that demonstrate how to‚Ä¶]]></summary>
        <author>
            <name>Leah Einhorn</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Secure your app in a few easy steps üîí]]></title>
        <id>https://dev.to/leahein/secure-your-app-in-a-few-easy-steps-2amo</id>
        <link href="https://dev.to/leahein/secure-your-app-in-a-few-easy-steps-2amo"/>
        <updated>2021-11-13T00:26:33.000Z</updated>
        <summary type="html"><![CDATA[Security is a broad topic, and one I am certainly no expert at. However, there are some really simply things you can do to increase the security of your web application.
For starters, there are some HTTP Response Headers you can include in your web responses, that can prevent easily preventable vulnerabilities.
This will aim to outline all of the headers recommended by the OWASP Secure Headers Project, as part of a series. Let's begin with a couple.

As a caveat, these are by no means foolproof. However, they do provide a first layer of defense in depth for attackers.
The recommended mechanism for configuring your web application to return these headers in every response, is by configuring your web server. Since nginx is a widely used option, I will provide examples that demonstrate how to‚Ä¶]]></summary>
        <author>
            <name>Leah Einhorn</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Remote Development using SSH with Visual Studio Code on an AWS EC2 instance]]></title>
        <id>https://dev.to/cindyledev/remote-development-using-ssh-with-visual-studio-code-on-an-aws-ec2-instance-2fel</id>
        <link href="https://dev.to/cindyledev/remote-development-using-ssh-with-visual-studio-code-on-an-aws-ec2-instance-2fel"/>
        <updated>2021-11-13T00:05:40.000Z</updated>
        <summary type="html"><![CDATA[The following will show you how to create and connect to a virtual machine (VM) on AWS using the Visual Studio Code Remote - SSH extension. You'll be able to run Telescope in development on a remote machine with VS Code just like if the source code was local. This documentation is based on Remote development over SSH
Telescope is a tool for tracking blogs around Seneca's open source develop. The application itself has many microservices that use Docker containers and are composed together using Docker-Compose. You can find the GitHub repo here
Next.js
Material UI
Node.js
Elasticsearch
Redis
Traefik
Firebase
Jest
Auth
Feed-Discovery
Image
Parser
Planet
Posts
Search
Status
Users
Disclaimer: The EC2 instance used in this guide is not within AWS's Free-Tier so please see EC2 Pricing to see if ‚Ä¶]]></summary>
        <author>
            <name>Cindy Le</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Other Looks at the Conditional Border Radius Trick]]></title>
        <id>https://css-tricks.com/?p=356304</id>
        <link href="https://css-tricks.com/other-looks-at-the-conditional-border-radius-trick/"/>
        <updated>2021-11-12T23:54:00.000Z</updated>
        <summary type="html"><![CDATA[Remember when Ahmad Shadeed wrote about that border-radius ‚Äútoggle‚Äù he found in Facebook‚Äôs CSS? It was interesting! I covered it. A few weeks after that surge of linkage, a couple of articles came out digging into it a little deeper. ‚Ä¶
The post Other Looks at the Conditional Border Radius Trick appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Remote Development with AWS Cloud9 IDE using a Docker and Docker-Compose application]]></title>
        <id>https://dev.to/cindyledev/getting-started-with-aws-cloud9-ide-using-a-docker-and-docker-compose-application-35hj</id>
        <link href="https://dev.to/cindyledev/getting-started-with-aws-cloud9-ide-using-a-docker-and-docker-compose-application-35hj"/>
        <updated>2021-11-12T23:41:47.000Z</updated>
        <summary type="html"><![CDATA[In this tutorial, we will be setting up Telescope in AWS Cloud9 IDE. Telescope is a tool for tracking blogs around Seneca's open source develop. The application itself has many microservices that use Docker containers and are composed together using Docker-Compose. You can find the GitHub repo here
Next.js
Material UI
Node.js
Elasticsearch
Redis
Traefik
Firebase
Jest
Auth
Feed-Discovery
Image
Parser
Planet
Posts
Search
Status
Users
AWS Cloud9 is a cloud-based integrated development environment (IDE) that lets you write, run, and debug your code with just a browser.
Disclaimer: The EC2 instance used in this guide is not within AWS's Free-Tier so please see EC2 Pricing to see if you're comfortable with these costs. Cloud9 has a cost-saving setting to help reduce costs by automatically hibern‚Ä¶]]></summary>
        <author>
            <name>Cindy Le</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Understanding TypeScript object serialization]]></title>
        <id>https://dev.to/logrocket/understanding-typescript-object-serialization-251e</id>
        <link href="https://dev.to/logrocket/understanding-typescript-object-serialization-251e"/>
        <updated>2021-11-12T21:14:05.000Z</updated>
        <summary type="html"><![CDATA[Written by Faith Ng'etich ‚úèÔ∏è
In this article, we‚Äôll learn about how systems communicate seamlessly with each other through a process called serialization and deserialization and how we can apply that in TypeScript. The process is seamless because of how the transferable data is handled.
As a user, when you access any application, you do so to retrieve information. This information is made up of data that must be stored somewhere; this is where serialization comes in.
By the end of this article, you should be able to understand how data transfers from one location to another, what format it transfers in, and the possible options for storing data streams. We‚Äôll also cover technical issues that can arise when working with serialization in TypeScript.
So what is serialization and deserializati‚Ä¶]]></summary>
        <author>
            <name>Matt Angelosanto</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Learn Materialize by running streaming SQL on your nginx logs]]></title>
        <id>https://dev.to/bobbyiliev/learn-materialize-by-running-streaming-sql-on-your-nginx-logs-3n32</id>
        <link href="https://dev.to/bobbyiliev/learn-materialize-by-running-streaming-sql-on-your-nginx-logs-3n32"/>
        <updated>2021-11-12T20:32:35.000Z</updated>
        <summary type="html"><![CDATA[Introduction


In this tutorial, I will show you how Materialize works by using it to run SQL queries on continuously produced nginx logs. By the end of the tutorial, you will have a better idea of what Materialize is, how it's different than other SQL engines, and how to use it.
For the sake of simplicity, I will use a brand new Ubuntu 21.04 server where I will install nginx, Materialize and mzcli, a CLI tool similar to psql used to connect to Materialize and execute SQL on it.
If you want to follow along you could spin up a new Ubuntu 21.04 server on your favorite could provider. 
If you prefer running Materialize on a different operating system, you can follow the steps on how to install Materialize here:
How to install Materialize
Materialize is a streaming database for real-time analy‚Ä¶]]></summary>
        <author>
            <name>Bobby Iliev</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Write Good Commit Messages with Commitlint]]></title>
        <id>618deac811d3cb08287a4ba3</id>
        <link href="https://www.freecodecamp.org/news/how-to-use-commitlint-to-write-good-commit-messages/"/>
        <updated>2021-11-12T20:11:06.000Z</updated>
        <summary type="html"><![CDATA[We are often in a hurry to commit our changes in Git and so we write something random in our commit messages. In fact, I have seen people putting the date and time or even something like commit 1, commit 2 in their messages.  This is not a good practice,]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The #1 Best Design Pattern for Managing Forms in React]]></title>
        <id>https://dev.to/spencerpauly/the-1-best-design-pattern-for-managing-forms-in-react-4215</id>
        <link href="https://dev.to/spencerpauly/the-1-best-design-pattern-for-managing-forms-in-react-4215"/>
        <updated>2021-11-12T19:47:13.000Z</updated>
        <summary type="html"><![CDATA[Ughh‚Ä¶ why does form code in React always get so messy?
It starts out simple: a <form> component, a couple input fields, and a submit button. But soon things get a little more complicated.
You think, "hmmm.. I want some more validation for this zip code field". So you add a custom workaround that validates the data in the input field.
Then, you think "I want to disable the submit button when the form is submitting". So you create another custom workaround that keeps track of what's submitting, and when things are complete, etc.
Then, you think "I want better error handling". So you add yet another workaround.
And over time that simple form balloons into a 400-line long super-component with multiple useEffects, useStates, and custom logic to handle all the edge cases.
Sound familiar?
I've ha‚Ä¶]]></summary>
        <author>
            <name>Spencer Pauly</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[üîì Auth0 Integration with Singpass]]></title>
        <id>https://dev.to/robertinoc_dev/auth0-integration-with-singpass-4lc7</id>
        <link href="https://dev.to/robertinoc_dev/auth0-integration-with-singpass-4lc7"/>
        <updated>2021-11-12T18:58:21.000Z</updated>
        <summary type="html"><![CDATA[Learn how to enable Singpass login with QR code in Auth0 Universal Login.



  
  
  
When it comes to national digital identity, Singapore has a lot to say. 
Singpass in 2003 and has been enhancing it over the years. 
With Auth0's customer base quickly growing in Southeast Asia, Singapore and Japan, it was about time to officially offer Singpass services on the Auth0 platform.
This is the first of a two-post series. In this post, we‚Äôll learn how to integrate Singpass QR Login with Auth0 Universal Login. 
Singpass QR login uses OIDC authorization code flow. 
<script src=‚Äùhttps://id.singpass.gov.sg/static/ndi_embedded_auth.js‚Äù></script>

Websites integrate with Singpass by hosting NDI embedded Javascript SDK. On page load, the Singpass SDK starts an authorization flow, with the state and no‚Ä¶]]></summary>
        <author>
            <name>Robertino</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Typescript Support For Cypress]]></title>
        <id>https://dev.to/cypress/typescript-support-for-cypress-2hme</id>
        <link href="https://dev.to/cypress/typescript-support-for-cypress-2hme"/>
        <updated>2021-11-12T17:58:18.000Z</updated>
        <summary type="html"><![CDATA[For someone who has worked with Typescript for the past 5+ years, I really miss it when it's not there. I find adding types to my javascript code a nice comfort. Writing automated tests with Cypress is no exception. With that being said, adding Typescript support to your Cypress applications is easy peasy!
Cypress ships with official type declarations for TypeScript. This allows you to write your tests in TypeScript. The first thing we need to do is install the typescript dependency.
yarn add --dev typescript

Next we need to update our tsconfig.json file with the following configuration:
{
  "compilerOptions": {
    "target": "es5",
    "lib": ["es5", "dom"],
    "types": ["cypress"]
  },
  "include": ["**/*.ts"]
}

Finally we need to rename all of our .spec.js integration files to .spec.ts. 
If you are like me you've found the path to this point super simple! However, if your application is using Cypress's Custom Commands API your Cypress application is now angry.

Don't worry this is easy to fix! Let's open the file that contains our custom commands (usually support/commands.ts). This file should contain all of your commands as well as a Cypress namespace with a Chainable Interface. It is in this Interface we will add a reference to our custom command(s).
declare namespace Cypress {
  interface Chainable<Subject> {
    getBySel(selector: string): Chainable<Element>
  }
}

Cypress.Commands.add('getBySel', (selector: string, ...args: any[]): Cypress.CanReturnChainable => {
  return cy.get(`[data-test=${selector}]`, ...args)
})

And voil√† our Cypress application is happy and now has full support for Typescript!
Our complete guide on adding Typescript support to your application
Typescript Support Doc]]></summary>
        <author>
            <name>Jordan Powell</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Security news weekly round-up - 12th November 2021]]></title>
        <id>https://dev.to/ziizium/security-news-weekly-round-up-12th-november-2021-5abe</id>
        <link href="https://dev.to/ziizium/security-news-weekly-round-up-12th-november-2021-5abe"/>
        <updated>2021-11-12T17:56:40.000Z</updated>
        <summary type="html"><![CDATA[Introduction


Hello there. Welcome to this week's security review where we talk about stories that are worthy of your time.
I am your host Habdul Hazeez.
This week, if your device could get infected with malware or affected by a vulnerability just by reading this edition, I am sure your device will get infected or an attacker might find a vulnerability on an app on your device and might just execute an RCE on it. Just saying üòá.
Let's get on with it.
New Android malware targets Netflix, Instagram, and Twitter users


It's a banking Trojan using a fake overlay in an attempt to steal your credit card information.
Stay safe.
Excerpt from the article:
By utilizing the Application Accessibility toolkit installed on Android by default, the attacker is able to use the application to implement th‚Ä¶]]></summary>
        <author>
            <name>Habdul Hazeez</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why Does my WiFi Keep Disconnecting? [Solved on Windows 10 PC]]]></title>
        <id>618e136011d3cb08287a4c71</id>
        <link href="https://www.freecodecamp.org/news/why-does-my-wifi-keep-disconnecting-solved-on-windows-10-pc/"/>
        <updated>2021-11-12T17:47:24.000Z</updated>
        <summary type="html"><![CDATA[When you're using your Windows machine, your WiFi might unexpectedly disconnect.  This might be caused by various problems such as an outdated network adapter driver, outdated router software, and optimized power management in Windows 10.  If your WiFi keeps disconnecting and you're looking for a solution, you've come to the]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The journey has begun]]></title>
        <id>https://dev.to/bonobo90/the-journey-has-begun-34gm</id>
        <link href="https://dev.to/bonobo90/the-journey-has-begun-34gm"/>
        <updated>2021-11-12T17:26:45.000Z</updated>
        <summary type="html"><![CDATA[Finally, I've decided to start studying to build a new career.
Ethical Hacking, I'm coming.
Bonobo]]></summary>
        <author>
            <name>bonobo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Protect Next.js Apps with Jscrambler]]></title>
        <id>https://dev.to/jscrambler/how-to-protect-nextjs-apps-with-jscrambler-6ih</id>
        <link href="https://dev.to/jscrambler/how-to-protect-nextjs-apps-with-jscrambler-6ih"/>
        <updated>2021-11-12T16:52:55.000Z</updated>
        <summary type="html"><![CDATA[Next.js is an open-source React-based framework built on top of Node.js that is aimed at developing web apps. It includes handy features such as hybrid static & server rendering, TypeScript support, smart bundling, and route pre-fetching.
In the 2020 State of JavaScript survey, Next.js was the second most used back-end framework (behind Express) but claimed the top spot when it came to satisfaction, with 92% of its users stating they are satisfied with the framework.
In this article, we‚Äôll look at how you can integrate Jscrambler into your Next.js app development workflow. This will enable you to protect your JavaScript source code, through a combination of advanced obfuscation, code locks, anti-tampering, and anti-debugging.
In order to properly integrate Jscrambler into your Next.js buil‚Ä¶]]></summary>
        <author>
            <name>Jscrambler</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Interactive Rebase: Clean up your Commit History]]></title>
        <id>https://css-tricks.com/?p=355658</id>
        <link href="https://css-tricks.com/interactive-rebase-clean-up-your-commit-history/"/>
        <updated>2021-11-12T15:16:24.000Z</updated>
        <summary type="html"><![CDATA[Interactive Rebase is the Swiss Army knife of Git commands: lots of use cases and lots of possibilities! It's really a great addition to any developer's tool chain, because it lets you revise your local commit history‚Äîbefore you share your work with the rest of the team. Let's see what you can do with an interactive rebase and then look at some practical examples.
The post Interactive Rebase: Clean up your Commit History appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Tobias G√ºnther</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Making the most boring website ever with TypeScript, NestJs, React and others. Part 8.]]></title>
        <id>https://dev.to/nordicbeaver/making-the-most-boring-website-ever-with-typescript-nestjs-react-and-others-part-8-1pjo</id>
        <link href="https://dev.to/nordicbeaver/making-the-most-boring-website-ever-with-typescript-nestjs-react-and-others-part-8-1pjo"/>
        <updated>2021-11-12T15:01:19.000Z</updated>
        <summary type="html"><![CDATA[This series is about making a generic website for a local business with TypeScript, NodeJs, NestJs, Prisma, React and NextJs. I'm trying to make my videos quite short, about 10 minutes each (except for the first one), while putting as much content there as I can. Here is the full playlist.
In this videos we'll create a User model to store users data on the server and discuss why we need password hashing and salt. We'll also add new forms and pages to manage users in the Admin panel.
Enjoy :)]]></summary>
        <author>
            <name>NordicBeaver</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Making the most boring website ever with TypeScript, NestJs, React and others. Part 8.]]></title>
        <id>https://dev.to/nordicbeaver/making-the-most-boring-website-ever-with-typescript-nestjs-react-and-others-part-8-1pjo</id>
        <link href="https://dev.to/nordicbeaver/making-the-most-boring-website-ever-with-typescript-nestjs-react-and-others-part-8-1pjo"/>
        <updated>2021-11-12T15:01:19.000Z</updated>
        <summary type="html"><![CDATA[This series is about making a generic website for a local business with TypeScript, NodeJs, NestJs, Prisma, React and NextJs. I'm trying to make my videos quite short, about 10 minutes each (except for the first one), while putting as much content there as I can. Here is the full playlist.
In this videos we'll create a User model to store users data on the server and discuss why we need password hashing and salt. We'll also add new forms and pages to manage users in the Admin panel.
Enjoy :)]]></summary>
        <author>
            <name>NordicBeaver</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Deploying .net core, angular and sql server to ubuntu]]></title>
        <id>https://dev.to/maxwelladn/deploying-net-core-angular-and-sql-server-to-ubuntu-2a6h</id>
        <link href="https://dev.to/maxwelladn/deploying-net-core-angular-and-sql-server-to-ubuntu-2a6h"/>
        <updated>2021-11-12T14:31:16.000Z</updated>
        <summary type="html"><![CDATA[In this article I will share with you how I deploy NGX.BILL a .net core/SQL Server and angular application to ubuntu using nginx
Prerequisites:  You must have an Ubuntu 16.04, 18.04, or 20.04 machine with at least 2 GB of memory.
Connect to the same server as the database using an ssh client.
Putty 
adduser USER

Enter new UNIX password:
Retype new UNIX password:
passwd: password updated successfully

Changing the user information for USER
Enter the new value, or press ENTER for the default
        Full Name []:
        Room Number []:
        Work Phone []:
        Home Phone []:
        Other []:
Is the information correct? [Y/n] y

Give admin rights to the user.
usermod -a -G sudo USER

Copy the ssh key the new user.
cp -r ~/.ssh /home/USER/
sudo chown -R USER:USER /home/USER/.ssh

Rest‚Ä¶]]></summary>
        <author>
            <name>Maxwell ADANZOUNNON</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How will Lacework‚Äôs acquisition of Soluble benefit devs?]]></title>
        <id>https://dev.to/lacework/how-will-laceworks-acquisition-of-soluble-benefit-devs-2i0f</id>
        <link href="https://dev.to/lacework/how-will-laceworks-acquisition-of-soluble-benefit-devs-2i0f"/>
        <updated>2021-11-12T14:09:41.000Z</updated>
        <summary type="html"><![CDATA[I‚Äôm absolutely thrilled about Lacework‚Äôs newest announcement‚Äîwe just acquired Soluble, a startup whose mission is to help security and operations teams leverage IaC to scale cloud operations and security for businesses of all sizes. I‚Äôm especially excited about what Lacework‚Äôs incorporation of the Soluble technology means for devs like yourselves. There are countless benefits, but these are the three that I‚Äôm looking forward to the most.  
IaC is quickly becoming the primary mechanism to manage cloud infrastructure at scale. This shift increases both velocity and risk‚Äîto keep up, security and development teams need to quickly address the resulting vulnerabilities or misconfigurations. Integrating the Soluble technology into Lacework‚Äôs platform and teaming with Soluble‚Äôs experts prepares us to shift further left into developer workflows. 
Lacework can directly and quickly reach developer audiences. Soluble helps Lacework make security issues easier to solve by correlating cloud misconfigurations to IaC and enabling remediation at the source via pull requests. This expands Lacework‚Äôs platform to the places where developers are writing their code: directly in the UX/CLI/GitHub and GitLab. For developers to integrate with Lacework, they simply need to connect through Git. 
Soluble shares Lacework‚Äôs vision to build a modern, data-driven approach to cloud security. Implementing Soluble‚Äôs capabilities to the Lacework platform helps security and operations teams shift further left and partner with developers so they can manage applications and infrastructure efficiently, securely, and reliably.
I‚Äôd love to hear your thoughts on this acquisition in the comments belowüëá.]]></summary>
        <author>
            <name>Tessa Kriesel</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[7 PWA Frameworks to Know in 2022]]></title>
        <id>https://dev.to/rlogical/7-pwa-frameworks-to-know-in-2022-3n2k</id>
        <link href="https://dev.to/rlogical/7-pwa-frameworks-to-know-in-2022-3n2k"/>
        <updated>2021-11-12T12:41:27.000Z</updated>
        <summary type="html"><![CDATA[Here are some of the best frameworks that you can use for developing your PWA.
Best Frameworks for Developing Progressive Web Applications
1. AngularJS
It is a framework built in 2010 and largely used for creating dependable and stable PWAs using the ecosystem of JavaScript. The system helps make an amazing PWA through JSON set up so that there is no need to begin from scratch. Angular‚Äôs web app development services are so much easier as it saves the hassle of handling repetitive tasks.
PWAs created using this framework also leverage the distinctive compilation method and ahead-of-time or AOT. It has a large developers community, a huge third-party extensions archive, and modular elements. The security and speed are increased with the amazing concept of the AOT compiler. There is dependenc‚Ä¶]]></summary>
        <author>
            <name>Rlogical Techsoft Pvt Ltd</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mayday, mayday! I need a scalable infrastructure to migrate on Scaleway Elements! Part 1 - Networking & Security]]></title>
        <id>https://dev.to/stack-labs/mayday-mayday-i-need-a-scalable-infrastructure-to-migrate-on-scaleway-elements-part-1-networking-security-37bg</id>
        <link href="https://dev.to/stack-labs/mayday-mayday-i-need-a-scalable-infrastructure-to-migrate-on-scaleway-elements-part-1-networking-security-37bg"/>
        <updated>2021-11-12T10:14:11.000Z</updated>
        <summary type="html"><![CDATA[That's it! We are going to migrate our on-premise applications to Scaleway Elements! 
We start by deploying a first Web application to please the business team, we set up auto scaling and backups to satisfy the ops team, we encrypt the storage and the database with a key and a firewall to reassure the security team, all at a lower price. 
Everything has been thought of and the migration of the first application is a real success and the business accepts to migrate other applications ... But wait ... no long-term strategy has been established to facilitate the migration of new applications üò±
Moving to the Public Cloud represents a major change within a company. A phase of adoption and acculturation is necessary for a successful transition. 
A lack of a long-term vision can be costly during‚Ä¶]]></summary>
        <author>
            <name>Chabane R.</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Installing Linux on Windows (WSL) is easier than ever]]></title>
        <id>https://dev.to/horusgoul/installing-linux-on-windows-wsl-is-easier-than-ever-b16</id>
        <link href="https://dev.to/horusgoul/installing-linux-on-windows-wsl-is-easier-than-ever-b16"/>
        <updated>2021-11-12T10:07:40.000Z</updated>
        <summary type="html"><![CDATA[TL;DR: Open a terminal with admin rights and execute the following command: wsl --install. If you want to choose a distro, continue reading!
Until very recently, you had to go through multiple steps to enable WSL in your system. The worst part was that some of them were in the control panel, others in a terminal, and you also had to use the Microsoft Store to choose the Linux distribution you wanted.
With the recent changes they've made for the release of both Windows 11 and the latest Windows 10 update, installing WSL has become a straightforward task.
You only need to run one command if you're happy with using Ubuntu as your Linux distribution:
wsl --install

If you prefer another distribution, with this other command, you can list all the available distros:
wsl --list --online

And then, run the installation command:
wsl --install -d <distro name>

That's it! You'll have to restart your computer, and then it will ask you for a username and password. Once you create your user, the process will be completed.]]></summary>
        <author>
            <name>Horus Lugo</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Useful React Hooks That You Can Use In Your Projects]]></title>
        <id>https://smashingmagazine.com/2021/11/useful-react-hooks/</id>
        <link href="https://smashingmagazine.com/2021/11/useful-react-hooks/"/>
        <updated>2021-11-12T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[The React team introduced several hooks in React 16.8 which you can use from third-party providers in your application, or even create your own custom hook. In this tutorial, we‚Äôll take a look at some of the most useful hooks in React and how to use them.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Ifeanyi Dike)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Fastest Way To Build Lightweight Angular Content Service]]></title>
        <id>https://dev.to/devbyrayray/the-fastest-way-to-build-lightweight-angular-content-service-3l6l</id>
        <link href="https://dev.to/devbyrayray/the-fastest-way-to-build-lightweight-angular-content-service-3l6l"/>
        <updated>2021-11-12T08:09:52.000Z</updated>
        <summary type="html"><![CDATA[In the typical Angular applications, we use a lot of titles, labels, headers, and more content. But if you need a way to put those content elements in one place, you need something like a dictionary. It's a combination of small words and more extensive sentences.
Some applications need multiple languages, but others need one language but have loads of content to re-use. In this article, I want to show you the fastest way to create a content (some call it a dictionary) Service for your Angular application.
If you need a content service with multiple languages, I highly recommend NGX-Translate. This package offers a simple API and Pipe mechanism to re-use pieces of content but also supports multiple languages.

The simplest and fastest way to create Angular Services is by using the Angular C‚Ä¶]]></summary>
        <author>
            <name>Dev By RayRay</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Post to Twitter in Node.js]]></title>
        <id>https://dev.to/coder4_life/post-to-twitter-in-nodejs-132d</id>
        <link href="https://dev.to/coder4_life/post-to-twitter-in-nodejs-132d"/>
        <updated>2021-11-12T07:12:34.000Z</updated>
        <summary type="html"><![CDATA[This is how simple it is to programmatically send out tweets to your own Twitter account using Node.js!]]></summary>
        <author>
            <name>coder4life</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Server Management using Ansible Tool]]></title>
        <id>https://dev.to/danielcristho/server-management-using-ansible-tool-4dl1</id>
        <link href="https://dev.to/danielcristho/server-management-using-ansible-tool-4dl1"/>
        <updated>2021-11-12T03:28:25.000Z</updated>
        <summary type="html"><![CDATA[Server management using Ansible tool
 What is Ansible? 
Ansible is an open source tool that is most used by a SysAdmin in the process of automating.
 Why you should use Ansible? 
Ansible is a powerful tool that you can use in the process of server management, configuration task, and other tasks. So when you use Ansible, many process such as configuration or deployment an application in server will be simple and quickly.
 Let's start!!
 install 
Linux:
$ sudo apt install software-properties-common
$ sudo add-apt-repository --yes --update  ppa:ansible/ansible
$ sudo apt install ansible

coming soon]]></summary>
        <author>
            <name>Daniel Pepuho</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Password Security: A bit deeper dive into Hashes, Salts, Bcrypt and Node's Crypto module.]]></title>
        <id>https://dev.to/stephepush/password-security-a-bit-deeper-dive-into-hashes-salts-bcrypt-and-nodes-crypto-module-7l7</id>
        <link href="https://dev.to/stephepush/password-security-a-bit-deeper-dive-into-hashes-salts-bcrypt-and-nodes-crypto-module-7l7"/>
        <updated>2021-11-12T02:46:15.000Z</updated>
        <summary type="html"><![CDATA[As I finished much of the administration portion of the current project I'm working on, I started to explore possible solutions for authentication within the app. I spent a good portion of last month going through a tutorial series made by Zach Gollwitzer (link to it on freeCodeCamp's youtube page as well as the playlist Zach's own youtube channel). The tutorial seems pretty comprehensive, it begins with a review of using Express middle-ware, because moving forward, you use lots of middle-ware throughout the rest of the series. The series then moves on to using PassportJS, the Passport Local Strategy and Sessions, and then to using PassportJS with Javascript Web Tokens (JWT) with Passport and then to JWTs by themselves in an angular front-end. I didn't actually go through the very end, whi‚Ä¶]]></summary>
        <author>
            <name>Stephen</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[.Net Core vs NodeJS (NodeJS)]]></title>
        <id>https://dev.to/arielcalix/net-core-vs-nodejs-3gn0</id>
        <link href="https://dev.to/arielcalix/net-core-vs-nodejs-3gn0"/>
        <updated>2021-11-12T01:34:20.000Z</updated>
        <summary type="html"><![CDATA[Hola Amigos y bienvenidos a este vs entre dos tecnolog√≠as, hablaremos sobre que son cada una y en que podemos implementarlas y sin m√°s les presento a nuestro segundo contendiente NodeJS.
NodeJS nacio en el a√±o 2009 bajo del nombre de Nodo por Ryan Dahl, quien para ese a√±o formaba parte de Joyent, la empresa que ser√≠a la propietaria de NodeJS.
A pesar que en sus inicios NodeJS tuvo un desarrollo lento, llego a ser la potente plataforma que es hoy, consagrandose como una de las m√°s amadas de los √∫ltimos a√±os.
Es un entorno de ejecucion de un solo hilo de c√≥digo abierto y multiplataforma, de ah√≠ que tenga tan buena comunidad de soporte, se ejecuta bajo el motor JS V8 usado por Google.
En cuanto al lenguaje implementado, el elegido fue JS, mismo que se uso en Scripts del lado de cliente durante sus primeros a√±os (20 aproximadamente), y solo podia usarse con la implementaci√≥n de <script> en el que un desarrollador necesitaba trabajar con multiples lenguajes para moverse entre el Backend y Frontend.
NodeJS est√° escrito en los inmortales C y C++, y no dejando por fuera JS.
Aplicaciones de chat en tiempo real.
Aplicaciones web.
Servicios de API Rest.
IoT.
Streaming de datos.
Aplicaciones complejas de una sola P√°gina.
Sobre el futuro de NodeJS es dificil de decirlo a ciencia cierta, dado que es una tecnolog√≠a joven y que continua expandiendose, cuenta con un gran futuro por delante, pero tambien dependera del apoyo que la comunidad siga brindandole.
Imagen por Marius Niveri en Unsplash]]></summary>
        <author>
            <name>Ariel Calix</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[100 d√≠as de c√≥digo: 9, repaso de comandos y git]]></title>
        <id>https://dev.to/darito/100-dias-de-codigo-9-repaso-de-comandos-y-git-3h6d</id>
        <link href="https://dev.to/darito/100-dias-de-codigo-9-repaso-de-comandos-y-git-3h6d"/>
        <updated>2021-11-12T01:15:15.000Z</updated>
        <summary type="html"><![CDATA[¬°Hey hey hey!
Hoy es un nuevo d√≠a y con ello comienzan nuevos retos, esta vez realizare esto r√°pido ya que a pesar de que avance bastante en mis proyectos no me di cuenta del tiempo que paso. 
Avance un poco en la guia The odin Project

Instale linux Ubuntu y configure varias particiones necesarias para el curso mencionado arriba.
Aprend√≠ sobre la diferencia de particiones GPT y MBR asi como que son Bios y UEFI.
Domine la herramienta rufus (algo mas para a√±adir al curriculum).
Avance hasta la secci√≥n de Fundamentos de HTML en The odin Project

Aprend√≠ a agregar una clave ssh a mi cuenta de github.
Realice una instalaci√≥n y configuracion de git en linux.
Cree un proyecto de ejemplo en github y realice cambios.
Aprend√≠ que la mejor forma de hacer una explicaci√≥n de los cambios en una confirmaci√≥n (commit) es escribirlo de forma imperativa.
Volv√≠ a aprender los comandos basicos de linux como pwd, touch, cat, ls, cd entre otros.
Y eso es todo por hoy.
Espero que les vaya super bien y que tengan √©xito con sus proyectos. 
Chao mundo!]]></summary>
        <author>
            <name>Daro</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Cheat Sheet for the Nest JS Request Pipeline]]></title>
        <id>https://dev.to/darraghor/a-cheat-sheet-for-the-nest-js-request-pipeline-3jke</id>
        <link href="https://dev.to/darraghor/a-cheat-sheet-for-the-nest-js-request-pipeline-3jke"/>
        <updated>2021-11-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I'm always checking the NestJS documentation to read what a Middleware Vs Interceptor is and I could never remember the order that the different NestJS pipeline elements are called in.
So I made this cheatsheet for myself so I had something to refer to.
Click to open full size image - more explanation of the cheat is available below.

In this cheatsheet show the pipeline of Middleware -> Guards -> Before Interceptors -> Pipes -> Controllers -> Services -> After Interceptors -> Exception Filters that you would typically use in a NestJS rest application.
It's important to note that some of these are just highly focused instances of middleware or interceptors. The middleware is the most generic pipeline context and the others are just NestJS constructs to encourage convention.
This isn't 100%‚Ä¶]]></summary>
        <author>
            <name>Darragh O'Riordan</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is manylinux?]]></title>
        <id>https://dev.to/icncsx/what-is-manylinux-4ojd</id>
        <link href="https://dev.to/icncsx/what-is-manylinux-4ojd"/>
        <updated>2021-11-11T21:09:40.000Z</updated>
        <summary type="html"><![CDATA[Why Python packaging can be hard


There may be a time in your development career where you need to author a package that extends Python w/ C or C++. In such a case your Python package needs to go through a compilation process, which converts C or C++ to binaries that work for a specific target system. This becomes really tedious when you think about how many flavors and versions of Linux there are.  Building a separate binary for Red Hat, SUSE, Ubuntu, etc... Ugh so tiring.
Why Python packaging can be easy w/ manylinux


Fortunately, there is a solution. manylinux was birthed to make it easy for your Python packages to be compatible with most Linux variants. manylinux takes advantage of the fact that most distributions are mindful of backwards compatibility, and intentionally builds bdist wheels on an old version of a distribution. The idea is that if we build on an old supported version, the binaries produced are compatible with current versions.
So what is a manylinux really? Is it a ham sandwich?


No. Even better. It's a Docker image. manylinux is a Docker image built off a certain old versions of the CentOS operating system that comes bundled with libraries that are assumed to be present by default on almost all Linux systems.
You can find an example of manylinux distributions within the pandas project. Here are two (out of many) from the list of available pandas downloads from PyPI:
pandas-1.0.3-cp37-cp37m-manylinux1_x86_64.whl
pandas-1.0.3-cp37-cp37m-manylinux1_i686.whl

In this case, pandas has built manylinux wheels for CPython 3.7 supporting both x86-64 and i686 architectures. It's manylinux so this wheel should be compatible for many linux :)
Happy packaging!]]></summary>
        <author>
            <name>DH Kim</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[NgRx Best Practices Series: 1. Cache & LoadStatus]]></title>
        <id>https://dev.to/this-is-angular/ngrx-best-practices-series-1-cache-loadstatus-3o8d</id>
        <link href="https://dev.to/this-is-angular/ngrx-best-practices-series-1-cache-loadstatus-3o8d"/>
        <updated>2021-11-11T21:03:56.000Z</updated>
        <summary type="html"><![CDATA[In this series of articles, I am sharing the lessons that I have learned from building reactive applications in Angular using NgRx state management. My introduction explained how I came to use NgRx. Going forward, I will share best practices in the form of an example application, Eternal. Here, we‚Äôll look at the way state management lets you add caching functionality to your code.
If you prefer watching over reading, here is the video version:




You can find  the sources files on 
 / 
        ngrx-best-practices
      
    
This pattern ensures that the store does not load data it already has. In other words: It adds a caching functionality.
We create this pattern in two steps. The state gets an additional property called loadStatus, which it uses internally to determine if a request to ‚Ä¶]]></summary>
        <author>
            <name>Rainer Hahnekamp</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Comandos B√°sicos de LINUX.]]></title>
        <id>https://dev.to/gdcodev/comandos-basicos-de-linux-cpj</id>
        <link href="https://dev.to/gdcodev/comandos-basicos-de-linux-cpj"/>
        <updated>2021-11-11T20:22:45.000Z</updated>
        <summary type="html"><![CDATA[A continuaci√≥n, se detallan algunos de los comandos con los que se puede empezar.
pwd (print working directory - imprimir directorio de trabajo)


Sirve para encontrar la ruta del directorio (carpeta) de trabajo actual en el que te encuentras.

cd (change directory - cambiar de directorio)


Sirve para navegar por los archivos y directorios.
cd proyecto1/  entrar en el directorio proyecto1

cd .. (con dos puntos) retroceder un nivel

cd ../.. retroceder dos niveles

cd - (con un gui√≥n) para ir al directorio anterior

mkdir (make directory - crear directorio)


Crear un nuevo directorio con el nombre que le indiques.
mkdir <nombre-directorio>

take


Crear un nuevo directorio con el nombre que le indiques y accede al mismo.
take <nombre-directorio>
touch (crear archivos)


Crear un nuevo ar‚Ä¶]]></summary>
        <author>
            <name>Gast√≥n Danielsen</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Semantic menu context]]></title>
        <id>https://css-tricks.com/?p=356652</id>
        <link href="https://css-tricks.com/semantic-menu-context/"/>
        <updated>2021-11-11T20:07:40.000Z</updated>
        <summary type="html"><![CDATA[Scott digs into the history of the <menu> element. He traced it as far back as HTML 2 (!) in a 1994 changelog. The vibe then, it seems, was to mark up a list. I would suspect the intention ‚Ä¶
The post Semantic menu context appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GitHub Actions Hackathon 2021 - Hosting an Angular application on GitHub Pages using GitHub Actions]]></title>
        <id>https://dev.to/rodrigokamada/github-actions-hackathon-2021-hosting-an-angular-application-on-github-pages-using-github-actions-139k</id>
        <link href="https://dev.to/rodrigokamada/github-actions-hackathon-2021-hosting-an-angular-application-on-github-pages-using-github-actions-139k"/>
        <updated>2021-11-11T18:05:49.000Z</updated>
        <summary type="html"><![CDATA[My Workflow


I created this workflow to deploy an application example built with Angular 12 on GitHub Pages.
DIY Deployments
name: GitHub Pages

on:
  push:
    branches:
    - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm run test:headless

    - name: Build
      run: npm run build:prod

    - name: Deploy
      if: success()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: dist/angular-github-actions
        enable_jekyll: true

 / 
        angular-github-actions
      
    
Application example built with Angular 12 and hosted on GitHub Pages using GitHub Actions.
This tutorial was posted on my blog in portuguese and on the DEV Community in english.



Before you start, you need to install and configure the tools:
git
Node.js and npm
Angular CLI
IDE (e.g. Visual Studio Code)
1. Let's create the account. Access the site https://github.com/ and click on the button Sign up.

2. Fill in the fields Username, Email address, Password, click on the button Verify to solve the challenge and click on the button Create account.

3. Let's create the repository. Click on the menu with the avatar and click on the menu Your repositories.

4. Click on the button New.

5. Fill in the field Repository name and click‚Ä¶
View on GitHub
This tutorial was posted on my blog in portuguese and on the DEV Community in english.]]></summary>
        <author>
            <name>Rodrigo Kamada</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Support IE11 Users as You Move to Angular 13]]></title>
        <id>https://dev.to/mthompsoncode/how-to-support-ie11-users-as-you-move-to-angular-13-179j</id>
        <link href="https://dev.to/mthompsoncode/how-to-support-ie11-users-as-you-move-to-angular-13-179j"/>
        <updated>2021-11-11T16:54:00.000Z</updated>
        <summary type="html"><![CDATA[IE 11 won't be supported in Angular 13. You can support it in 12 while you migrate to 13, or drop support. Either way, you need to act.
Internet Explorer 11 is a legacy browser and support for it in Angular 13 is being dropped officially. Sticking with Angular 12 is not a viable long term option. Here are ways to support your users when upgrading your Angular version.
Update tsconfig.json and populate polyfills
Use Differential Loading
How to Customize User Experience for IE 11
How to Drop Support for IE 11 the Good Way
As an Angular developer, you want to provide support for as many browsers as you can, but in the case of Internet Explorer 11, this is becoming increasingly difficult, and soon will no longer be possible. Current market share is likely less than 1% and will drop even more a‚Ä¶]]></summary>
        <author>
            <name>Mark Thompson</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A better Linux gaming distro guide]]></title>
        <id>https://dev.to/thecashewtrader/a-better-linux-gaming-distro-guide-16bg</id>
        <link href="https://dev.to/thecashewtrader/a-better-linux-gaming-distro-guide-16bg"/>
        <updated>2021-11-11T16:37:56.000Z</updated>
        <summary type="html"><![CDATA[Introduction


I watched this video by Linus Tech Tips, and decided to improve on his criticisms to hopefully create a better guide to choosing your Linux gaming distro.
These are some common terms to know: 
DE/Desktop Environment: This is the GUI interface to your OS.
Terminal/TTY/Command Line: This is the text based interface to your OS.
As Linux is Free and Open Source Software, you can customize anything and everything you want on any distro. However, as this is a beginner focused guide, it mostly focuses on what is built in to a distro, not what is possible with a distro.
POP!_OS


This distribution is simple to use, has a nice DE, and generally doesn't get in your way. The breakage caused while installing linux in Linus' video is something that is trivial to fix. You can expect it to‚Ä¶]]></summary>
        <author>
            <name>thecashewtrader</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Set Up Laravel 8 on Your Android Phone]]></title>
        <id>618b035411d3cb08287a3f7d</id>
        <link href="https://www.freecodecamp.org/news/how-to-setup-laravel-8-on-android-phone/"/>
        <updated>2021-11-11T16:34:04.000Z</updated>
        <summary type="html"><![CDATA[Hey, how are you doing? In this article, I'm going to show you how you can install Laravel 8 on your phone.  To get the most out of this guide, you should have some knowledge of PHP and you should know what Laravel is. But if you don't, don't worry]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is Hoisting in JavaScript?]]></title>
        <id>618ca60511d3cb08287a474b</id>
        <link href="https://www.freecodecamp.org/news/what-is-hoisting-in-javascript/"/>
        <updated>2021-11-11T16:12:59.000Z</updated>
        <summary type="html"><![CDATA[In JavaScript, hoisting allows you to use functions and variables before they're declared. In this post, we'll learn what hoisting is and how it works. What is hoisting?Take a look at the code below and guess what happens when it runs: console.log(foo); var foo = 'foo'; It might]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Dockerize a Flask Application]]></title>
        <id>618a1b968bcfae07ca4e3a16</id>
        <link href="https://www.freecodecamp.org/news/how-to-dockerize-a-flask-app/"/>
        <updated>2021-11-11T16:04:40.000Z</updated>
        <summary type="html"><![CDATA[These days, developers need to develop, ship, and run applications quicker than ever. And fortunately, there's a tool that helps you do that ‚Äì¬†Docker. With Docker, you can now easily ship, test, and deploy your code quickly while maintaining full control over your infrastructure. It significantly reduces how long it]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Easy Dark Mode (and Multiple Color Themes!) in React]]></title>
        <id>https://css-tricks.com/?p=355683</id>
        <link href="https://css-tricks.com/easy-dark-mode-and-multiple-color-themes-in-react/"/>
        <updated>2021-11-11T15:28:04.000Z</updated>
        <summary type="html"><![CDATA[I was working on a large React application for a startup, and aside from just wanting some good strategies to keep our styles organized, I wanted to give this whole ‚Äúdark mode‚Äù thing a shot. With the huge ecosystem around ‚Ä¶
The post Easy Dark Mode (and Multiple Color Themes!) in React appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Abram Thau</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ubuntu 21.10 Released, Steps to Upgrade from Ubuntu 21.04]]></title>
        <id>https://dev.to/tgbaodeeptry/ubuntu-2110-released-steps-to-upgrade-from-ubuntu-2104-h64</id>
        <link href="https://dev.to/tgbaodeeptry/ubuntu-2110-released-steps-to-upgrade-from-ubuntu-2104-h64"/>
        <updated>2021-11-11T15:27:08.000Z</updated>
        <summary type="html"><![CDATA[As mentioned at the outset, the Ubuntu 21.10 was released on October 14, 2021, with many new features, key changes and update coming with.
Ubuntu 21.10 or Ubuntu Impish Indri is a Debian-based Linux distribution that uses largely free and open-source software. For Internet of Things devices and robots, Ubuntu is available in three editions: Desktop, Server, and Core. All editions can be installed on a single computer or on a virtual machine.
Ubuntu 21.10 - the newest Ubuntu was released, and contains many features:
Gnome 40, contains many features like touchpad gestures, many core apps.
Linux Kernel 5.14 with enhanced hardware support and performance improving
A new desktop installer
Light Theme now is the default theme



Category
System Requirements




System
Ubuntu 21.04 Hirsute Hippo


Access
Privileged access to your Linux system as root or via the sudo command


Hardware
- 2 GHz dual core processor
 - 4 GiB RAM (system memory)
 - Hard drive space: 25 GB (8.6 GB as a minimum) (or USB stick, memory card or external drive but see LiveCD for an alternative approach)
 - VGA with a screen resolution of 1024x768 pixels
 - For the installer media, you'll need a CD/DVD drive or a USB port.
 - Internet access is helpful



Read more: Ubuntu 21.10 Released, Steps to Upgrade from Ubuntu 21.04]]></summary>
        <author>
            <name>Tr·∫ßn Gia B·∫£o</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Quickly Get Alerted to Front-End Errors and Performance Issues]]></title>
        <id>https://css-tricks.com/?p=355516</id>
        <link href="https://css-tricks.com/quickly-get-alerted-to-front-end-errors-and-performance-issues/"/>
        <updated>2021-11-11T15:22:31.000Z</updated>
        <summary type="html"><![CDATA[(This is a sponsored post.)
Measuring things is great. They say what you only fix what you measure. Raygun is great at measuring websites. Measuring performance, measuring errors and crashes, measuring code problems. 
You know what‚Äôs even better than ‚Ä¶
The post Quickly Get Alerted to Front-End Errors and Performance Issues appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[From Good To Great In Dashboard Design: Research, Decluttering And Data Viz]]></title>
        <id>https://smashingmagazine.com/2021/11/dashboard-design-research-decluttering-data-viz/</id>
        <link href="https://smashingmagazine.com/2021/11/dashboard-design-research-decluttering-data-viz/"/>
        <updated>2021-11-11T14:00:00.000Z</updated>
        <summary type="html"><![CDATA[Dribbbleshots just might be the hotbed of questionable dashboards. Striking visuals, little context, and no research: all recipes for mediocrity. Mediocrity won‚Äôt do. We‚Äôll pursue greatness. And in that pursuit, we‚Äôll cover research, decluttering, and data visualization.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Adam Fard)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to Create Word Add-In With Angular 2+?]]></title>
        <id>https://dev.to/tarungurang/how-to-create-word-add-in-with-angular-2-3dil</id>
        <link href="https://dev.to/tarungurang/how-to-create-word-add-in-with-angular-2-3dil"/>
        <updated>2021-11-11T13:31:20.000Z</updated>
        <summary type="html"><![CDATA[Word add-ins are one of many developer options you have on the Office add-in platform. In this blog, we can add the add-in using angular. Add-ins are just small web applications that run in one place and are served over HTTPS in the Office client.
Step 1: In the package.json file, add the dependencies and dev dependencies and run the npm install command to install these dependencies.
{
  "name": "addin-demo",
  "version": "0.0.0",
  "scripts": {
    "ng": "ng",
    "start": "ng serve",
    "build": "ng build",
    "test": "ng test",
    "lint": "ng lint",
    "e2e": "ng e2e"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "~11.0.1",
    "@angular/common": "~11.0.1",
    "@angular/compiler": "~11.0.1",
    "@angular/core": "~11.0.1",
    "@angular/forms": "~11.0.1",
 ‚Ä¶]]></summary>
        <author>
            <name>Tarun Gurang</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What's the time in your friend's country?]]></title>
        <id>https://dev.to/jothinkumar/time-widget-2bcj</id>
        <link href="https://dev.to/jothinkumar/time-widget-2bcj"/>
        <updated>2021-11-11T11:34:21.000Z</updated>
        <summary type="html"><![CDATA[So,have you ever wondered what time it is in your friend's country? Well, this tool will help you sure!
https://github.com/Jothin-kumar/time-widget
https://jothin-kumar.github.io/time-widget/
Tell me in the comments what you think about my project :-)
Feel free to contact me:
bjothinphysics@gmail.com
https://jothin-kumar.github.io/





Thank you!!!
Happy coding!]]></summary>
        <author>
            <name>B.Jothin kumar</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Developing with VS Code on WSL 2]]></title>
        <id>https://dev.to/cryptus_neoxys/developing-with-vs-code-on-wsl-2-51o8</id>
        <link href="https://dev.to/cryptus_neoxys/developing-with-vs-code-on-wsl-2-51o8"/>
        <updated>2021-11-11T07:44:39.000Z</updated>
        <summary type="html"><![CDATA[VS Code ü§Ø


VS Code seems to be the 1 size fit all code editor. VS Code offers really seamless integration to develop on a remote connection such as the WSL 2 with the simple installation of an extension.
If you don't have it already, install VS Code from the official site. 

(You can also download the insiders build if you like living on the bleeding edge)
While installing VS Code, make sure to check the Add to Path option.

All you need to do is install the Remote - WSL Extension

Start a WSL 2 remote session
Ctrl + Shift + P and type in new wsl window to open up a new WSL 2 window and select the option

A new WSL 2 window should open up from the directory you were using.

It is advised to use VS Code from the Linux file system instead of the windows'. To do this just use the Open Folder option from the File menu.
Just traverse to ~ or $HOME directory and then add the projects to the Linux file system and use them from there.

Upon opening any projects in WSL window, you will see the WSL 2.0  connection on the bottom-left as well as the title bar.

üéâüéâüéâ
Feel free to reach out to me on Twitter @cryptus_neoxys and connect with me on LinkedIn.
Microsoft Docs]]></summary>
        <author>
            <name>Dev Sharma</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[100 d√≠as de c√≥digo: 8, una instalaci√≥n de linux que se convirti√≥ en una batalla de ego.]]></title>
        <id>https://dev.to/darito/100-dias-de-codigo-8-una-instalacion-de-linux-que-se-convirtio-en-una-batalla-de-ego-2o0l</id>
        <link href="https://dev.to/darito/100-dias-de-codigo-8-una-instalacion-de-linux-que-se-convirtio-en-una-batalla-de-ego-2o0l"/>
        <updated>2021-11-11T01:18:44.000Z</updated>
        <summary type="html"><![CDATA[¬°Hey hey hey!
Quiero comenzar este post con la leyenda que indica que esto no es una guia si no mas bien una historia y suena muy po√©tico decirlo asi porque al fin y a el cabo es una instalaci√≥n de software.
Pero dejemos de darle tantas vueltas al asunto y vayamos a ello.
Un usuario promedio no se preocupa por lo que pasa detr√°s de un sistema operativo pero nosotros que somos desarrolladores deber√≠amos entender como funcionan el software en conjunto con el hardware ya que es muy importante aunque no siempre se necesita este conocimiento hasta que te pones a la tarea.
Aqu√≠ es donde comienza la premisa ¬øpor donde comienzo? e internet te responde: ¬°descargando el software por supuesto!. 

montarlo en un usb o cd con ayuda de alg√∫n programa (rufus), reiniciar el pc y configurar la bios para qu‚Ä¶]]></summary>
        <author>
            <name>Daro</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Don‚Äôt Snore on CORS]]></title>
        <id>https://css-tricks.com/?p=356058</id>
        <link href="https://css-tricks.com/dont-snore-on-cors/"/>
        <updated>2021-11-10T22:38:05.000Z</updated>
        <summary type="html"><![CDATA[Whatever, I just needed a title. Everyone‚Äôs favorite web security feature has crossed my desk a bunch of times lately and I always feel like that is a sign I should write something because that‚Äôs what blogging is. 
The main ‚Ä¶
The post Don‚Äôt Snore on CORS appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[What is a PC? Computer Definition and Computer Basics for Beginners]]></title>
        <id>6189613e8bcfae07ca4e3967</id>
        <link href="https://www.freecodecamp.org/news/what-is-a-pc-computer-definition-and-computer-basics-for-beginners/"/>
        <updated>2021-11-10T18:35:08.000Z</updated>
        <summary type="html"><![CDATA[Computers have revolutionized our lives.  They help us get repetitive tasks done quickly and accurately. And they are tireless and do not fear complexity.  Computers are able to process data and perform operations at a rate of millions per second. They can get a task done much faster compared to]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[No Audio Output Device is Installed [Fixed on Windows 10 PC]]]></title>
        <id>618bf06d11d3cb08287a4450</id>
        <link href="https://www.freecodecamp.org/news/no-audio-output-device-is-installed-fixed-on-windows-10-pc/"/>
        <updated>2021-11-10T18:27:53.000Z</updated>
        <summary type="html"><![CDATA[If you use Windows 10, you might have encountered the error "no audio output device is installed".    This error can be caused by a corrupt driver, overdue updates, or improper connection.  In this article, I will show you 2 ways you can fix the "no audio output]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python Reverse String ‚Äì String Reversal in Python Explained with Examples]]></title>
        <id>615eb0160d91c9077974e918</id>
        <link href="https://www.freecodecamp.org/news/python-reverse-string-string-reversal-in-python-explained-with-code-examples/"/>
        <updated>2021-11-10T16:40:09.000Z</updated>
        <summary type="html"><![CDATA[When you're working with Python strings, there are times when you'll have to reverse them, and work with their reversed copies instead.  But since Python strings are immutable, you cannot modify or reverse them in place. In Python, there are a few different ways you can do this. And this]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Array vs Object Destructuring in JavaScript ‚Äì What‚Äôs the Difference?]]></title>
        <id>61695ddc80d82d07c45a5220</id>
        <link href="https://www.freecodecamp.org/news/array-vs-object-destructuring-in-javascript/"/>
        <updated>2021-11-10T16:24:16.000Z</updated>
        <summary type="html"><![CDATA[The destructuring assignment in JavaScript provides a neat and DRY way to extract values from your arrays and objects. This article aims to show you exactly how array and object destructuring assignments work in JavaScript. So, without any further ado, let‚Äôs get started with array destructuring. What Is Array]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[React Authentication Tutorial ‚Äì How to Set Up Auth with Firebase V9 and React Router V6]]></title>
        <id>618671f48bcfae07ca4e299e</id>
        <link href="https://www.freecodecamp.org/news/react-firebase-authentication-and-crud-operations/"/>
        <updated>2021-11-10T16:22:43.000Z</updated>
        <summary type="html"><![CDATA[Hey everyone, in this tutorial we'll use React with Firebase V9 to setup authentication for an application.  We will create Firebase functions for Login and Register, we will add toast messages for errors, and we will add private routes using session-based authentication. It's going to be fun. We will use]]></summary>
        <author>
            <name>freeCodeCamp.org</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Quick and Dirty Bootstrap Overrides at Runtime]]></title>
        <id>https://css-tricks.com/?p=355649</id>
        <link href="https://css-tricks.com/quick-and-dirty-bootstrap-overrides-at-runtime/"/>
        <updated>2021-11-10T15:00:29.000Z</updated>
        <summary type="html"><![CDATA[Oh, Bootstrap, that old standard web library that either you hate or you spend all your time defending as ‚Äúit‚Äôs fine, it‚Äôs not that bad.‚Äù Regardless of what side you fall on, it‚Äôs a powerful UI framework that‚Äôs everywhere, ‚Ä¶
The post Quick and Dirty Bootstrap Overrides at Runtime appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Meredith Matthews</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[cleanup.pictures]]></title>
        <id>https://css-tricks.com/?p=356208</id>
        <link href="https://css-tricks.com/cleanup-pictures/"/>
        <updated>2021-11-10T14:55:26.000Z</updated>
        <summary type="html"><![CDATA[Nice domain, eh? Does just what it says on the tin: cleans up pictures. You draw over areas of the image you want cleaned up, and it does its best using weird science. It‚Äôs like Photoshop‚Äôs Spot Healing Brush‚Ä¶
The post cleanup.pictures appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Detecting Specific Text Input with HTML and CSS]]></title>
        <id>https://css-tricks.com/?p=356142</id>
        <link href="https://css-tricks.com/detecting-specific-text-input-with-html-and-css/"/>
        <updated>2021-11-09T22:53:45.000Z</updated>
        <summary type="html"><![CDATA[Louis Lazaris breaks down some bonafide CSS trickery from Jane. The Pen shows off interactivity where:
You have to press a special combination of keys on a keyboard.
Then type a secret password.
From there, a special message pops ‚Ä¶
The post Detecting Specific Text Input with HTML and CSS appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[VideoPress for WordPress]]></title>
        <id>https://css-tricks.com/?p=356370</id>
        <link href="https://css-tricks.com/videopress-for-wordpress/"/>
        <updated>2021-11-09T22:53:18.000Z</updated>
        <summary type="html"><![CDATA[(This is a sponsored post.)
The leade here is that VideoPress makes video on WordPress way better. VideoPress is a part of Jetpack. And now, if VideoPress is the only thing you care about from the Jetpack world, you ‚Ä¶
The post VideoPress for WordPress appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[React Suspense: Lessons Learned While Loading Data]]></title>
        <id>https://css-tricks.com/?p=356187</id>
        <link href="https://css-tricks.com/react-suspense-lessons-learned-while-loading-data/"/>
        <updated>2021-11-09T15:20:10.000Z</updated>
        <summary type="html"><![CDATA[Suspense is React‚Äôs forthcoming feature that helps coordinate asynchronous actions‚Äîlike data loading‚Äîallowing you to easily prevent inconsistent state in your UI. I‚Äôll provide a better explanation of what exactly that means, along with a quick introduction of Suspense, and then ‚Ä¶
The post React Suspense: Lessons Learned While Loading Data appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Adam Rackis</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Localizing Your Next.js App]]></title>
        <id>https://smashingmagazine.com/2021/11/localizing-your-nextjs-app/</id>
        <link href="https://smashingmagazine.com/2021/11/localizing-your-nextjs-app/"/>
        <updated>2021-11-09T13:00:00.000Z</updated>
        <summary type="html"><![CDATA[Internationalized routing is not exactly a new feature on Next.js. In this article, we are not only checking what we get from this feature, but also how to leverage such functionalities to achieve the best user experience and a smooth developer experience as well.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (√Åtila Fassina)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Automatically Transforming And Optimizing Images And Videos On Your WordPress Website]]></title>
        <id>https://smashingmagazine.com/2021/11/transforming-optimizing-images-videos-wordpress-website/</id>
        <link href="https://smashingmagazine.com/2021/11/transforming-optimizing-images-videos-wordpress-website/"/>
        <updated>2021-11-09T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[In this article, Leonardo Losoviz explains how Cloudinary‚Äôs integration can be used with WordPress to produce and deliver optimal digital experiences.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Leonardo Losoviz)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS Grid Can Do Auto Height Transitions]]></title>
        <id>https://css-tricks.com/?p=356204</id>
        <link href="https://css-tricks.com/css-grid-can-do-auto-height-transitions/"/>
        <updated>2021-11-08T19:01:31.000Z</updated>
        <summary type="html"><![CDATA[Bonafide CSS trick alert! Nelson Menezes figured out a new way (that only works in Firefox for now) that is awfully clever.
Perhaps you know that CSS cannot animate to auto dimensions, which is super unfortunate. Animating from ‚Ä¶
The post CSS Grid Can Do Auto Height Transitions appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Icon Glassmorphism Effect in CSS]]></title>
        <id>https://css-tricks.com/?p=322098</id>
        <link href="https://css-tricks.com/icon-glassmorphism-effect-in-css/"/>
        <updated>2021-11-08T14:57:42.000Z</updated>
        <summary type="html"><![CDATA[I recently came across a cool effect known as glassmorphism in a Dribble shot. My first thought was I could quickly recreate it in a few minutes if I just use some emojis for the icons without wasting time ‚Ä¶
The post Icon Glassmorphism Effect in CSS appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Ana Tudor</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Does the Next Generation of Static Site Generators Make Building Sites Better?]]></title>
        <id>https://css-tricks.com/?p=356134</id>
        <link href="https://css-tricks.com/does-the-next-generation-of-static-site-generators-make-building-sites-better/"/>
        <updated>2021-11-08T14:56:23.000Z</updated>
        <summary type="html"><![CDATA[Just ran across √Æles, a new static site generator mostly centered around Vue. The world has no particular shortage of static site generators, but it‚Äôs interesting to see what this ‚Äúnext generation‚Äù of SSGs seem to focus on or ‚Ä¶
The post Does the Next Generation of Static Site Generators Make Building Sites Better? appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Meet Hydrogen: A React Framework For Dynamic, Contextual And Personalized E-Commerce]]></title>
        <id>https://smashingmagazine.com/2021/11/hydrogen-react-framework-dynamic-contextual-personalized-ecommerce/</id>
        <link href="https://smashingmagazine.com/2021/11/hydrogen-react-framework-dynamic-contextual-personalized-ecommerce/"/>
        <updated>2021-11-08T14:30:00.000Z</updated>
        <summary type="html"><![CDATA[A great commerce experience is not a Lighthouse score or a set of Core Web Vitals figures (although both are important inputs), but it‚Äôs also a trilemma that carefully balances competing needs of delivering a great customer experience, dynamic storefront capabilities and long-term business objectives.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Ilya Grigorik)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Favicons: How to Make Sure Browsers Only Download the SVG Version]]></title>
        <id>https://css-tricks.com/?p=355780</id>
        <link href="https://css-tricks.com/favicons-how-to-make-sure-browsers-only-download-the-svg-version/"/>
        <updated>2021-11-05T20:47:32.000Z</updated>
        <summary type="html"><![CDATA[≈†ime Vidas DM‚Äôd me the other day about this thread from subzey on Twitter. My HTML for favicons was like this:
<!-- Warning! Typo! --<link rel="icon" href="/favicon.ico" size="any"<link rel="icon" href="/favicon.svg" type="image/svg+xml"
The attribute size is a typo there, ‚Ä¶
The post Favicons: How to Make Sure Browsers Only Download the SVG Version appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.]]></summary>
        <author>
            <name>Chris Coyier</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Value Of Concept Testing As Part Of Product Design]]></title>
        <id>https://smashingmagazine.com/2021/11/concept-testing-part-of-product-design/</id>
        <link href="https://smashingmagazine.com/2021/11/concept-testing-part-of-product-design/"/>
        <updated>2021-11-05T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[Concept testing ideas before moving into a detailed design is good UX practice. In this article, Victor Yocco presents details on how and when to engage in concept testing, as well as case studies providing details on the insights gained in two very different settings.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Victor Yocco)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 43 With Matthew Phillips: What Is Astro?]]></title>
        <id>https://smashingmagazine.com/2021/11/smashing-podcast-episode-43/</id>
        <link href="https://smashingmagazine.com/2021/11/smashing-podcast-episode-43/"/>
        <updated>2021-11-04T18:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode, we‚Äôre talking about Astro. Will this modern static site builder launch you into the stratosphere? Drew McLellan talks to developer Matthew Phillips to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[GraphQL On The Front-End (React And Apollo)]]></title>
        <id>https://smashingmagazine.com/2021/11/graphql-frontend-react-apollo/</id>
        <link href="https://smashingmagazine.com/2021/11/graphql-frontend-react-apollo/"/>
        <updated>2021-11-04T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[Within the last decade, technologies like GraphQL have changed how we build web apps and how they communicate with each other. GraphQL provides certain benefits over REST APIs ‚Äî let‚Äôs find out what they are.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (David Atanda)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Deep Dive Into Serverless UI With TypeScript]]></title>
        <id>https://smashingmagazine.com/2021/11/deep-dive-into-serverless-ui-typescript/</id>
        <link href="https://smashingmagazine.com/2021/11/deep-dive-into-serverless-ui-typescript/"/>
        <updated>2021-11-03T11:30:00.000Z</updated>
        <summary type="html"><![CDATA[Serverless UI is simply a free, open-source command-line utility for quickly building and deploying serverless applications on the AWS platform. In this article, we will learn and cover everything needed on using Serverless UI to deploy our projects or serverless applications to cloud services providers.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Ikeh Akinyemi)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Creating A Magento PWA: Customizing Themes vs. Coding From Scratch]]></title>
        <id>https://smashingmagazine.com/2021/11/magento-pwa-customizing-themes-coding/</id>
        <link href="https://smashingmagazine.com/2021/11/magento-pwa-customizing-themes-coding/"/>
        <updated>2021-11-02T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[This article sheds the spotlight on Magento PWAs and explains why business owners are getting them (often instead of native applications). Alex Husar introduces ways of how progressive web applications can be developed on Magento, as well as go over the major pros and cons of each development path.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Alex Husar)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Splash Of Color For Misty Days (November 2021 Desktop Wallpapers Edition)]]></title>
        <id>https://smashingmagazine.com/2021/10/desktop-wallpaper-calendars-november-2021/</id>
        <link href="https://smashingmagazine.com/2021/10/desktop-wallpaper-calendars-november-2021/"/>
        <updated>2021-10-31T08:20:00.000Z</updated>
        <summary type="html"><![CDATA[November is just around the corner, and with it, a new collection of desktop wallpapers to celebrate the beginning of the month. Designed by creatives from all across the globe, they come in versions with and without a calendar. Let‚Äôs make November colorful!]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Cosima Mielke)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[50 Resources And Tools To Turbocharge Your Copywriting Skills]]></title>
        <id>https://smashingmagazine.com/2021/10/resources-tools-turbocharge-copywriting-skills/</id>
        <link href="https://smashingmagazine.com/2021/10/resources-tools-turbocharge-copywriting-skills/"/>
        <updated>2021-10-29T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[Stop wasting time and effort writing copy that falls flat. Raise your copywriting game and boost your powers of persuasion with these rich and informative online resources.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Freya Giles)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Build An Amazon Product Scraper With Node.js]]></title>
        <id>https://smashingmagazine.com/2021/10/building-amazon-product-scraper-nodejs/</id>
        <link href="https://smashingmagazine.com/2021/10/building-amazon-product-scraper-nodejs/"/>
        <updated>2021-10-28T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[The wealth of data that Amazon holds can make a huge difference when you‚Äôre designing a product or hunting for a bargain. But, how can a developer get that data? Simple, by using a web scraper. Here‚Äôs how to build your data extraction bot with Node.js.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Robert Sfichi)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Eye-Tracking In Mobile UX Research]]></title>
        <id>https://smashingmagazine.com/2021/10/eye-tracking-mobile-ux-research/</id>
        <link href="https://smashingmagazine.com/2021/10/eye-tracking-mobile-ux-research/"/>
        <updated>2021-10-27T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[Thanks to technology, eye-tracking has become more accessible to UX research as it allows researchers to get insights about users ‚Äôvisual attention. This article explores the latest trends in the eye-tracking market and how the methodology can be included in the UX researcher‚Äôs toolbox.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Mariana Macedo)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Optimizing Next.js Applications With Nx]]></title>
        <id>https://smashingmagazine.com/2021/10/optimizing-nextjs-applications-nx/</id>
        <link href="https://smashingmagazine.com/2021/10/optimizing-nextjs-applications-nx/"/>
        <updated>2021-10-26T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[Nx is a build framework that facilitates optimization, efficient scaling of applications, and other features such as shared libraries and components. In this article, we will be looking at how we can effectively scale Next.js applications by using Nx.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Melvin Kosisochukwu)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Deep Dive Into object-fit And background-size In CSS]]></title>
        <id>https://smashingmagazine.com/2021/10/object-fit-background-size-css/</id>
        <link href="https://smashingmagazine.com/2021/10/object-fit-background-size-css/"/>
        <updated>2021-10-25T13:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this article, we will go through how `object-fit` and `background-size` work, when we can use them, and why, along with some practical use cases and recommendations. Let‚Äôs dive in.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Ahmad Shadeed)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[An Introduction To Quasar Framework: Building Cross-Platform Applications]]></title>
        <id>https://smashingmagazine.com/2021/10/introduction-quasar-framework-cross-platform-applications/</id>
        <link href="https://smashingmagazine.com/2021/10/introduction-quasar-framework-cross-platform-applications/"/>
        <updated>2021-10-23T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[Quasar is an open-source Vue.js-based cross-platform framework that allows you, as a developer, to easily build apps for both desktop and mobile using technologies such as Cordova and Electron and writing your code once. The app we‚Äôll build will store and get its data from Firebase, meaning that we will also be seeing how to use Firebase in Quasar.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Joel Olawanle)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[How To Build A Real-Time Multi-User Game From Scratch]]></title>
        <id>https://smashingmagazine.com/2021/10/real-time-multi-user-game/</id>
        <link href="https://smashingmagazine.com/2021/10/real-time-multi-user-game/"/>
        <updated>2021-10-22T09:30:00.000Z</updated>
        <summary type="html"><![CDATA[This article highlights the process, technical decisions and lessons learned behind building the real-time game Autowuzzler. Learn how to share game state across multiple clients in real-time with Colyseus, do physics calculations with Matter.js, store data in Supabase.io and build the front-end with SvelteKit.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Martin Grubinger)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Respecting Users‚Äô Motion Preferences]]></title>
        <id>https://smashingmagazine.com/2021/10/respecting-users-motion-preferences/</id>
        <link href="https://smashingmagazine.com/2021/10/respecting-users-motion-preferences/"/>
        <updated>2021-10-21T10:30:00.000Z</updated>
        <summary type="html"><![CDATA[The `prefers-reduced-motion` media query has excellent support in all modern browsers going back a couple of years. In this article, Michelle Barker explains why there‚Äôs no reason not to use it today to make your sites more accessible.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Michelle Barker)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building The SSG I‚Äôve Always Wanted: An 11ty, Vite And JAM Sandwich]]></title>
        <id>https://smashingmagazine.com/2021/10/building-ssg-11ty-vite-jam-sandwich/</id>
        <link href="https://smashingmagazine.com/2021/10/building-ssg-11ty-vite-jam-sandwich/"/>
        <updated>2021-10-20T11:00:00.000Z</updated>
        <summary type="html"><![CDATA[Back in January 2020, Ben Holmes set out to do what just about every web developer does each year: rebuild his personal site. In this article, he shares his story of how he set out to build his own build pipeline from absolute ground zero and created ‚ÄúSlinkity‚Äù.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Ben Holmes)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Building An API With Gatsby Functions]]></title>
        <id>https://smashingmagazine.com/2021/10/building-api-gatsby-functions/</id>
        <link href="https://smashingmagazine.com/2021/10/building-api-gatsby-functions/"/>
        <updated>2021-10-19T14:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this tutorial, Paul Scanlon explains how to build an API by using Gatsby Functions and what you need to keep in mind when deploying it to Gatsby Cloud.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Paul Scanlon)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Smashing Podcast Episode 42 With Jeff Smith: What Is DevOps?]]></title>
        <id>https://smashingmagazine.com/2021/10/smashing-podcast-episode-42/</id>
        <link href="https://smashingmagazine.com/2021/10/smashing-podcast-episode-42/"/>
        <updated>2021-10-19T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this episode, we‚Äôre talking about DevOps. What is it, and is it a string to add to your web development bow? Drew McLellan talks to expert Jeff Smith to find out.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Drew McLellan)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Solving CLS Issues In A Next.js-Powered E-Commerce Website (Case Study)]]></title>
        <id>https://smashingmagazine.com/2021/10/nextjs-ecommerce-cls-case-study/</id>
        <link href="https://smashingmagazine.com/2021/10/nextjs-ecommerce-cls-case-study/"/>
        <updated>2021-10-18T14:00:00.000Z</updated>
        <summary type="html"><![CDATA[Cumulative Layout Shift is one of the hardest core web vital to debug. In this article, we go through different tools to investigate CLS, when to use them(and when not), and solutions to some of the CLS issues we faced in our Next.js-based e-commerce website.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Arijit Mondal)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Simple But Effective Mental Health Routine For Programmers]]></title>
        <id>https://smashingmagazine.com/2021/10/effective-mental-health-routine-programmers/</id>
        <link href="https://smashingmagazine.com/2021/10/effective-mental-health-routine-programmers/"/>
        <updated>2021-10-16T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this article, we‚Äôll look at why taking care of our work-life balance is important, how to develop a simple and effective mental health routine, and the most common and efficient techniques you can use to make your custom routine.]]></summary>
        <author>
            <name>hello@smashingmagazine.com (Dave Oscar)</name>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[v1.11.3]]></title>
        <id>https://github.com/osmoscraft/osmosfeed/releases/tag/v1.11.3</id>
        <link href="https://github.com/osmoscraft/osmosfeed/releases/tag/v1.11.3"/>
        <updated>2021-10-16T00:01:47.000Z</updated>
        <summary type="html"><![CDATA[Fixed: broken links in documentation
Chore: Dependency updates
Thank you: @hirdot]]></summary>
        <author>
            <name>Release notes from osmosfeed</name>
        </author>
    </entry>
</feed>
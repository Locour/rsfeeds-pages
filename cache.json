{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": [
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.10.2",
          "author": null,
          "description": "Added: testing and CI/CD workflows",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.10.2",
          "publishedOn": "2021-06-01T04:39:30.000Z",
          "wordCount": 268,
          "title": "v1.10.2"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.9.0",
          "author": null,
          "description": "Added: experimental support for iTunes podcast feed: Demo | Source. With this new release, you can render an audio control to play the mp3 file and display iTunes episode duration. It is \"experimental\" due to these caveats:\n\nThis feature is currently only available through custom template.\niTunes has no strict format requirement for duration. The unit is most likely seconds but can be \"hh:mm:ss\" or \"mm:ss\" for some sources. A future version may expose a human readable string to the template.\nNo image support yet. Some shows might have disabled CORS or use a relative URL for image, which forces osmosfeed to download the image during build. A future version may support it.\nYou can't republish the podcast in the feed output. Supporting this goes beyond the scope of the project at the moment.\nFixed: the articles in template data were not sorted.\nThank you @Zenigata",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.9.0",
          "publishedOn": "2021-05-26T06:02:55.000Z",
          "wordCount": 413,
          "title": "v1.9.0"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.1",
          "author": null,
          "description": "Fixed: UnhandledPromiseRejectionWarning: Error: At least one option must be a string",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.1",
          "publishedOn": "2021-05-23T05:40:12.000Z",
          "wordCount": 278,
          "title": "v1.8.1"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.0",
          "author": null,
          "description": "Changed: Smart summary truncation. When there is no dedicated summary (only Atom feed has it, and many sites don't use it) from the source, we check if the content/description (Both Atom and RSS) field is long enough to be full text. If so, it will be truncated into a \"pseudo\" summary. If not, we assume the source used the content field as summary, and it will be displayed in full length.\nThank you: @LooperXX.",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.8.0",
          "publishedOn": "2021-05-23T05:12:08.000Z",
          "wordCount": 341,
          "title": "v1.8.0"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2",
          "author": null,
          "description": "⚠ Deprecated: To accommodate the monorepo setup, the node version in all templates/demos/examples has changed from 14 to 16. This is not a breaking change as our compile target is still node 14, and node 16 is backward compatible. We still recommend you start using node-version: \"16\" in your .github/workflows/update-feed.yaml today to get the performance/security improvements from the newer node. See example\nChore: Reorganize to monorepo with npm workspace.",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.2",
          "publishedOn": "2021-05-17T05:32:19.000Z",
          "wordCount": 336,
          "title": "v1.7.2"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.1",
          "author": null,
          "description": "Fixed: static files were unnecessarily copied for custom templates.",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.1",
          "publishedOn": "2021-05-16T02:33:58.000Z",
          "wordCount": 276,
          "title": "v1.7.1"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.0",
          "author": null,
          "description": "Added: templating system. Demo | Source | Docs\nChore: rendering logic refactoring. Adopting functional paradigm.\nThank you @tianheg, @onnyyonn",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.7.0",
          "publishedOn": "2021-05-16T01:42:24.000Z",
          "wordCount": 286,
          "title": "v1.7.0"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.4.0",
          "author": null,
          "description": "Added: Basic theme customization: Demo | Source | Docs.",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.4.0",
          "publishedOn": "2021-05-10T08:55:42.000Z",
          "wordCount": 276,
          "title": "v1.4.0"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.6.0",
          "author": null,
          "description": "Added: Link from the title of a subscription to its website.\nAdded: Store feedUrl and siteUrl for each source in cache.\nAdded: Semantic element (<time>) for timestamp on the UI.\nAdded: Semantic API for theming the default template. Demo | Source | Docs\nChanged: Moved feed metadata from article level to feed level in cache.\nFixed: Any html-like text was stripped from title. Fixed with encoded text.\nRemoved: href for each source in cache. The value was never used so it's not a breaking change.",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.6.0",
          "publishedOn": "2021-05-10T08:15:20.000Z",
          "wordCount": 352,
          "title": "v1.6.0"
        },
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.5.0",
          "author": null,
          "description": "Added: Atom feed generator\nAdded: Customizable site title\nAdded: Copy all files from static directory to the root of the site.\nChanged: Favicon, css, and js assets now existing at site root level.\nChore: Excluded testing files from repo.",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.5.0",
          "publishedOn": "2021-05-08T05:16:47.000Z",
          "wordCount": 306,
          "title": "v1.5.0"
        }
      ]
    },
    {
      "title": "CSS-Tricks",
      "feedUrl": "https://css-tricks.com/feed/",
      "siteUrl": "https://css-tricks.com",
      "articles": [
        {
          "id": "https://css-tricks.com/?p=341720",
          "author": "Chris Coyier",
          "description": "Pedro Duarte made a wishlist for styled code blocks in blog posts and documentation, then hand-rolls a perfect solution for that wishlist. For example, a feature to be able to highlight certain lines or words within the code block. The …\nThe post Code blocks, but better appeared first on CSS-Tricks.\nYou can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://ped.ro/blog/code-blocks-but-better",
          "publishedOn": "2021-06-01T22:08:48.000Z",
          "wordCount": 3202,
          "title": "Code blocks, but better"
        },
        {
          "id": "https://css-tricks.com/?p=341342",
          "author": "Evgeny Klimenchenko",
          "description": "Testing is one of those things that you either get super excited about or kinda close your eyes and walk away. Whichever camp you fall into, I’m here to tell you that front-end testing is for everyone. In fact, …\nThe post Front-End Testing is For Everyone appeared first on CSS-Tricks.\nYou can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/front-end-testing-is-for-everyone/",
          "publishedOn": "2021-06-01T14:17:43.000Z",
          "wordCount": 3850,
          "title": "Front-End Testing is For Everyone"
        },
        {
          "id": "https://css-tricks.com/?p=341296",
          "author": "Geoff Graham",
          "description": "Critical CSS is one of those things I see in my performance reports but always seem to ignore. I know what it means. It means to put only the CSS required to render things immediately visible in a <style>…\nThe post Jetpack Boost Handles Critical CSS For You appeared first on CSS-Tricks.\nYou can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/jetpack-boost-handles-critical-css-for-you/",
          "publishedOn": "2021-06-01T14:16:55.000Z",
          "wordCount": 926,
          "title": "Jetpack Boost Handles Critical CSS For You"
        },
        {
          "id": "https://css-tricks.com/?p=340465",
          "author": "Jason Lengstorf",
          "description": "Modern apps place high demands on front-end developers. Web apps require complex functionality, and the lion’s share of that work is falling to front-end devs:\nbuilding modern, accessible user interfaces\ncreating interactive elements and complex animations\nmanaging complex application state\n…\nThe post Serverless Functions: The Secret to Ultra-Productive Front-End Teams appeared first on CSS-Tricks.\nYou can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/serverless-functions-the-secret-to-ultra-productive-front-end-teams/",
          "publishedOn": "2021-05-31T17:16:22.000Z",
          "wordCount": 1852,
          "title": "Serverless Functions: The Secret to Ultra-Productive Front-End Teams"
        },
        {
          "id": "https://css-tricks.com/?p=341482",
          "author": "Chris Coyier",
          "description": "I’ve been using Local for ages. Four years ago, I wrote about how I got all my WordPress sites running locally on it. I just wanted to give it another high five because it’s still here and still great. In …\nThe post Local: Always Getting Better appeared first on CSS-Tricks.\nYou can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/local-always-getting-better/",
          "publishedOn": "2021-05-31T17:13:02.000Z",
          "wordCount": 1220,
          "title": "Local: Always Getting Better"
        },
        {
          "id": "https://css-tricks.com/?p=341163",
          "author": "Thomas Park",
          "description": "Typically, a single favicon is used across a whole domain. But there are times you wanna step it up with different favicons depending on context. A website might change the favicon to match the content being viewed. Or a site …\nThe post Dynamic Favicons for WordPress appeared first on CSS-Tricks.\nYou can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/dynamic-favicons-for-wordpress/",
          "publishedOn": "2021-05-28T14:36:47.000Z",
          "wordCount": 1838,
          "title": "Dynamic Favicons for WordPress"
        },
        {
          "id": "https://css-tricks.com/?p=341298",
          "author": "Chris Coyier",
          "description": "It’s very popular to put a $ on lines that are intended to be a command in code documentation that involves the terminal (i.e. the command line).\nLike this:\n$ brew install somepackage\nThe point of that is that it …\nThe post To $ or Not to $: Displaying Terminal Code Snippets appeared first on CSS-Tricks.\nYou can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/to-or-not-to-displaying-terminal-code-snippets/",
          "publishedOn": "2021-05-27T18:22:11.000Z",
          "wordCount": 1564,
          "title": "To $ or Not to $: Displaying Terminal Code Snippets"
        },
        {
          "id": "https://css-tricks.com/?p=341020",
          "author": "Robin Rendle",
          "description": "Most images on the web are superfluous. If I might be a jerk for a bit, 99% of them aren’t even that helpful at all (although there are rare exceptions). That’s because images don’t often complement the text they’re …\nThe post How to Show Images on Click appeared first on CSS-Tricks.\nYou can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/how-to-show-images-on-click/",
          "publishedOn": "2021-05-27T14:25:29.000Z",
          "wordCount": 1725,
          "title": "How to Show Images on Click"
        },
        {
          "id": "https://css-tricks.com/?p=340910",
          "author": "Michael Rispoli",
          "description": "Serverless architectures have brought engineering teams a great number of benefits. We get simpler deployments, automatic and infinite scale, better concurrency, and a stateless API surface. It’s hard to imagine going back to the world of managed services, broken local …\nThe post Rethinking Postgres in a Post-Server World appeared first on CSS-Tricks.\nYou can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/rethinking-postgres-in-a-post-server-world/",
          "publishedOn": "2021-05-27T14:23:23.000Z",
          "wordCount": 2479,
          "title": "Rethinking Postgres in a Post-Server World"
        },
        {
          "id": "https://css-tricks.com/?p=339759",
          "author": "Chris Coyier",
          "description": "In his last An Event Apart talk, Dave made a point that it’s really only just about right now that Web Components are becoming a practical choice for production web development. For example, it has only been about a year …\nThe post Awesome Standalone (Web Components) appeared first on CSS-Tricks.\nYou can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/awesome-standalone-web-components/",
          "publishedOn": "2021-05-26T17:56:34.000Z",
          "wordCount": 1329,
          "title": "Awesome Standalone (Web Components)"
        },
        {
          "id": "https://css-tricks.com/?p=340901",
          "author": "Chris Coyier",
          "description": "How we use Web Components at GitHub — Kristján Oddsson talks about how GitHub is using web components. I remember they were very early adopters, and it says here they released a <relative-time> component in 2014! Now they’ve got a \n…\nThe post Links on Web Components appeared first on CSS-Tricks.\nYou can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/links-on-web-components/",
          "publishedOn": "2021-05-26T17:56:12.000Z",
          "wordCount": 856,
          "title": "Links on Web Components"
        },
        {
          "id": "https://css-tricks.com/?p=340705",
          "author": "Andrei Pfeiffer",
          "description": "Wondering what’s even more challenging than choosing a JavaScript framework? You guessed it: choosing a CSS-in-JS solution. Why? Because there are more than 50 libraries out there, each of them offering a unique set of features.\nWe tested 10 different …\nThe post A Thorough Analysis of CSS-in-JS appeared first on CSS-Tricks.\nYou can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/a-thorough-analysis-of-css-in-js/",
          "publishedOn": "2021-05-26T14:08:49.000Z",
          "wordCount": 4042,
          "title": "A Thorough Analysis of CSS-in-JS"
        },
        {
          "id": "https://css-tricks.com/?p=340759",
          "author": "Josh Collinsworth",
          "description": "I fell in love with coding the moment I created my first CSS :hover effect. Years later, that initial bite into interactivity on the web led me to a new goal: making a game.\nTable of contents\nWhat’s the game \n…\nThe post What I Learned Building a Word Game App With Nuxt on Google Play appeared first on CSS-Tricks.\nYou can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/what-i-learned-building-a-word-game-app-with-nuxt-on-google-play/",
          "publishedOn": "2021-05-25T14:25:06.000Z",
          "wordCount": 7769,
          "title": "What I Learned Building a Word Game App With Nuxt on Google Play"
        },
        {
          "id": "https://css-tricks.com/?p=341383",
          "author": "Ahmed Bouchefra",
          "description": "Choosing the right tools to build a website for your organization is essential, but it can be tough to find the right fit. Simple site builders like Wix and Squarespace are easy for marketers to use, but severely limit developers …\nThe post Creating Powerful Websites with Serverless-Driven CMS Development appeared first on CSS-Tricks.\nYou can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/creating-powerful-websites-with-serverless-driven-cms-development/",
          "publishedOn": "2021-05-25T11:00:00.000Z",
          "wordCount": 1425,
          "title": "Creating Powerful Websites with Serverless-Driven CMS Development"
        },
        {
          "id": "https://css-tricks.com/?p=340808",
          "author": "Chris Coyier",
          "description": "Making GitHub’s new homepage fast and performant — Tobias Ahlin describes how the scrolling effects are done more performantly thanks to IntersectionObserver and the fact that it avoids the use of methods that trigger reflows, like getBoundingClientRect. Also, \n…\nThe post Links on Performance appeared first on CSS-Tricks.\nYou can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/links-on-performance/",
          "publishedOn": "2021-05-24T22:03:30.000Z",
          "wordCount": 868,
          "title": "Links on Performance"
        }
      ]
    },
    {
      "title": "Articles on Smashing Magazine — For Web Designers And Developers",
      "feedUrl": "https://www.smashingmagazine.com/feed/",
      "siteUrl": "https://www.smashingmagazine.com/",
      "articles": [
        {
          "id": "https://smashingmagazine.com/2021/06/smashing-podcast-episode-38/",
          "author": "hello@smashingmagazine.com (Drew McLellan)",
          "description": "In this episode, we’re talking about React performance. What factors slow our React apps down, and how can we fix it? Drew McLellan talks to expert Ivan Akulov to find out.",
          "link": "https://smashingmagazine.com/2021/06/smashing-podcast-episode-38/",
          "publishedOn": "2021-06-01T14:00:00.000Z",
          "wordCount": 7115,
          "title": "Smashing Podcast Episode 38 With Ivan Akulov: Why Is My React App Slow?",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6db8029d-7039-4beb-b787-f3a0df852f12/smashing-podcast-episode-38.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/06/currency-convertor-exchangeratesapi/",
          "author": "hello@smashingmagazine.com (Leonardo Losoviz)",
          "description": "Amazon allows visitors to display prices in their own currency. Thanks to *ExchangeRatesApi.io*, we can do the same for our online shops, providing a better experience to our customers. Let’s find out how.",
          "link": "https://smashingmagazine.com/2021/06/currency-convertor-exchangeratesapi/",
          "publishedOn": "2021-06-01T09:00:00.000Z",
          "wordCount": 1362,
          "title": "Setting Up A Currency Convertor With ExchangeRatesApi.io",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3ce4b3b1-3ae6-4371-8aaf-d72da3b69fc5/4-exchange-rate-api-bsa.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/desktop-wallpaper-calendars-june-2021/",
          "author": "hello@smashingmagazine.com (Cosima Mielke)",
          "description": "What could be a better way to welcome June than with some colorful inspiration? Well, we might have something for you: wallpapers created with love by artists and designers from across the globe.",
          "link": "https://smashingmagazine.com/2021/05/desktop-wallpaper-calendars-june-2021/",
          "publishedOn": "2021-05-31T11:30:00.000Z",
          "wordCount": 2496,
          "title": "Happy June Vibes For Your Screen (2021 Desktop Wallpapers Edition)",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/374464b5-093e-4ca2-9397-6f26c83756d4/june-20-summer-coziness-preview-opt.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/commenting-system-wysiwyg-editor/",
          "author": "hello@smashingmagazine.com (Shalabh Vyas)",
          "description": "In this article, we’ll be re-using the foundational WYSIWYG Editor built in the first article to build a commenting system for a WYSIWYG Editor that enables users to select text inside a document and share their comments on it. Let’s dig in!",
          "link": "https://smashingmagazine.com/2021/05/commenting-system-wysiwyg-editor/",
          "publishedOn": "2021-05-28T11:00:00.000Z",
          "wordCount": 10222,
          "title": "Adding A Commenting System To A WYSIWYG Editor",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ec39e154-d3d3-4a12-91fd-f0c068cd5247/commenting-system-wysiwyg-editor.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/useful-vs-code-extensions-web-developers/",
          "author": "hello@smashingmagazine.com (Cosima Mielke)",
          "description": "Meet useful Visual Studio Code extensions for web developers: little helpers to minimize slow-downs and frustrations, and boost developer’s workflow along the way. With auto log messages, auto code formatting, file utils, file labels, code snippets, highlight brackets, tags, indents and workspaces, onboarding and remote SSH.",
          "link": "https://smashingmagazine.com/2021/05/useful-vs-code-extensions-web-developers/",
          "publishedOn": "2021-05-27T13:30:00.000Z",
          "wordCount": 3747,
          "title": "Useful VS Code Extensions For Front-End Developers",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c5dbb73-94e1-486f-9daa-351699faaa2d/peacock-extension.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/build-launch-responsive-websites-editorx/",
          "author": "hello@smashingmagazine.com (Miroslav Bekyarov)",
          "description": "While web builders have been around for a long time, it wasn’t until recently that they became practical for professional use. Closing the gap between design and code has become the north star for many companies and we are seeing a wave of tools that deliver on this promise.",
          "link": "https://smashingmagazine.com/2021/05/build-launch-responsive-websites-editorx/",
          "publishedOn": "2021-05-27T09:30:00.000Z",
          "wordCount": 2676,
          "title": "How To Build And Launch Powerful Responsive Websites With Editor X",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e3eaf20c-08e9-4f1c-829b-f0bbd7309e0d/21-build-launch-responsive-websites-editorx.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/accessible-svg-patterns-comparison/",
          "author": "hello@smashingmagazine.com (Carie Fisher)",
          "description": "Discover which SVG patterns we should avoid and which patterns are the most inclusive when comparing different combinations of OSs, browsers, and screen readers.",
          "link": "https://smashingmagazine.com/2021/05/accessible-svg-patterns-comparison/",
          "publishedOn": "2021-05-26T13:20:00.000Z",
          "wordCount": 1547,
          "title": "Accessible SVGs: Perfect Patterns For Screen Reader Users",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/35bf2e3a-ae5b-49a3-843a-318b4c81f5af/accessible-svg-patterns.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/undoing-mistakes-git-part2/",
          "author": "hello@smashingmagazine.com (Tobias Günther)",
          "description": "Mistakes. These cruel villains do not even stop at the beautiful world of software development. But although we cannot avoid making mistakes, we can learn to undo them! This post will show the right tools for your daily work with Git.",
          "link": "https://smashingmagazine.com/2021/05/undoing-mistakes-git-part2/",
          "publishedOn": "2021-05-25T14:00:00.000Z",
          "wordCount": 2126,
          "title": "A Guide To Undoing Mistakes With Git (Part 2)",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/211042ae-7a72-42ba-804e-9f8132815200/undoing-mistakes-git-part1.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/reduce-font-loading-impact-css-descriptors/",
          "author": "hello@smashingmagazine.com (Barry Pollard)",
          "description": "Web fonts are often terrible for web performance and none of the font loading strategies are particularly effective to address that. Upcoming font options may finally deliver on the promise of making it easier to align fallback fonts to the final fonts.",
          "link": "https://smashingmagazine.com/2021/05/reduce-font-loading-impact-css-descriptors/",
          "publishedOn": "2021-05-25T09:30:00.000Z",
          "wordCount": 2072,
          "title": "A New Way To Reduce Font Loading Impact: CSS Font Descriptors",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f0c69413-365e-4c39-9ee8-ad1d2b44e56b/reduce-font-loading-impact-css-descriptors.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/css-container-queries-use-cases-migration-strategies/",
          "author": "hello@smashingmagazine.com (Adrian Bece)",
          "description": "CSS Container queries bring media queries closer to the target elements themselves and enables them to adapt to virtually any given container or layout. In this article, we’re going to cover CSS container query basics and how to use them today with progressive enhancement or polyfills.",
          "link": "https://smashingmagazine.com/2021/05/css-container-queries-use-cases-migration-strategies/",
          "publishedOn": "2021-05-24T11:30:00.000Z",
          "wordCount": 2707,
          "title": "CSS Container Queries: Use-Cases And Migration Strategies",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4d6d809b-0c1a-4074-9eeb-8509dc4d383f/css-container-queries-use-cases-migration-strategies.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/building-wysiwyg-editor-javascript-slatejs/",
          "author": "hello@smashingmagazine.com (Shalabh Vyas)",
          "description": "Let’s build a rich text, WYSIWYG-editor that supports rich text, images, links and some nuanced features from word processing apps. We will use SlateJS to build the shell of the editor and then add a toolbar and custom configurations.",
          "link": "https://smashingmagazine.com/2021/05/building-wysiwyg-editor-javascript-slatejs/",
          "publishedOn": "2021-05-21T11:30:00.000Z",
          "wordCount": 9394,
          "title": "Building A Rich Text Editor (WYSIWYG)",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bafdd817-038e-4e70-a830-de0f5da659c4/building-wysiwyg-editor-javascript-slatejs.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/new-online-workshops-front-end-ux/",
          "author": "hello@smashingmagazine.com (Iris Lješnjanin)",
          "description": "Front-end and design are remarkably complex these days. That’s why we invite kind, smart folks from the community to run online workshops for all of us to learn together. And we have new ones coming up, and we’d like to kindly welcome you to join in.",
          "link": "https://smashingmagazine.com/2021/05/new-online-workshops-front-end-ux/",
          "publishedOn": "2021-05-20T14:20:00.000Z",
          "wordCount": 831,
          "title": "Boost Your Skills Online: Smashing Workshops On Front-End And Design",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1a95c729-8b29-4b44-90b0-d38183b367c0/online-workshops-2021-opt.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/implement-authentication-nextjs-auth0/",
          "author": "hello@smashingmagazine.com (Facundo Giuliani)",
          "description": "A step-by-step tutorial on adding authentication and authorization to your Next.js apps, with Auth0. We’ll be using a Next.js SDK to connect our application to the Auth0 API and will create the dynamic API route for React.",
          "link": "https://smashingmagazine.com/2021/05/implement-authentication-nextjs-auth0/",
          "publishedOn": "2021-05-20T11:00:00.000Z",
          "wordCount": 1961,
          "title": "How To Implement Authentication In Next.js With Auth0",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3e905cbf-b17b-47da-aec4-15c9701bf4bf/implement-authentication-nextjs-auth0.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/frustrating-design-patterns-mega-dropdown-hover-menus/",
          "author": "hello@smashingmagazine.com (Vitaly Friedman)",
          "description": "Everything to keep in mind when designing and building a mega-dropdown, common pitfalls, hover entry/exit delays, trajectory triangle technique and SVG path exit areas.",
          "link": "https://smashingmagazine.com/2021/05/frustrating-design-patterns-mega-dropdown-hover-menus/",
          "publishedOn": "2021-05-19T11:40:00.000Z",
          "wordCount": 5028,
          "title": "Frustrating Design Patterns: Mega-Dropdown Hover Menus",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7c233470-63c3-4557-93c0-a8cc6709b6dd/13-mega-dropdown-hover-menus.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/create-edit-animate-svg-svgator3/",
          "author": "hello@smashingmagazine.com (Mikołaj Dobrucki)",
          "description": "Today, we are taking a closer look at [SVGator 3.0](https://www.svgator.com/?utm_source=article&utm_medium=smashingmag&utm_campaign=svgator3_smashing), a new major release of the popular SVG application that lets you create, edit and animate SVG files and make the best out of what SVG has to offer — from start to finish.",
          "link": "https://smashingmagazine.com/2021/05/create-edit-animate-svg-svgator3/",
          "publishedOn": "2021-05-18T10:30:00.000Z",
          "wordCount": 1796,
          "title": "How To Create, Edit And Animate SVGs All In One Place With SVGator 3.0",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1e69194b-9e57-4713-bed2-d2f18dd6c914/create-animate-svg-graphics-svgator3-image-7.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/smashing-podcast-episode-37/",
          "author": "hello@smashingmagazine.com (Drew McLellan)",
          "description": "In this episode, we’re talking about VisBug. What is it, and how is it different from the array of options already found in Chrome DevTools? Drew McLellan talks to its creator Adam Argyle to find out.",
          "link": "https://smashingmagazine.com/2021/05/smashing-podcast-episode-37/",
          "publishedOn": "2021-05-18T05:00:00.000Z",
          "wordCount": 9250,
          "title": "Smashing Podcast Episode 37 With Adam Argyle: What Is VisBug?",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e26ce3b7-49e1-45d7-8411-ecc5b2d696cd/smashing-podcast-episode-37.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/core-web-vitals-case-study/",
          "author": "hello@smashingmagazine.com (Beau Hartshorne)",
          "description": "Google’s “Page Experience Update” will start rolling out in June. At first, sites that meet Core Web Vitals thresholds will have a minor ranking advantage in mobile search for all browsers. Search is important to any business, and this is the story of how Beau Hartshorne and his team at Instant Domain Search improved their Core Web Vitals scores.",
          "link": "https://smashingmagazine.com/2021/05/core-web-vitals-case-study/",
          "publishedOn": "2021-05-17T11:30:00.000Z",
          "wordCount": 2943,
          "title": "How We Improved Our Core Web Vitals (Case Study)",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b68aa1ba-94b7-4e70-83e5-5f58b37bf7cd/core-web-vitals-case-study.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/tree-shaking-reference-guide/",
          "author": "hello@smashingmagazine.com (Átila Fassina)",
          "description": "“Tree-shaking” is a must-have performance optimization when bundling JavaScript. In this article, we dive deeper on how exactly it works and how specs and practice intertwine to make bundles leaner and more performant. Plus, you’ll get a tree-shaking checklist to use for your projects.",
          "link": "https://smashingmagazine.com/2021/05/tree-shaking-reference-guide/",
          "publishedOn": "2021-05-14T10:30:00.000Z",
          "wordCount": 2432,
          "title": "Tree-Shaking: A Reference Guide",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0e27a101-d2e0-4661-9e12-b53b68051dbf/tree-shaking-reference-guide.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/frustrating-design-patterns-birthday-picker/",
          "author": "hello@smashingmagazine.com (Vitaly Friedman)",
          "description": "In this new series of articles on UX, we take a closer look at some frustrating design patterns and explore better alternatives, along with plenty of examples to keep in mind when building or designing one. Let’s start with an infamous birthday picker.",
          "link": "https://smashingmagazine.com/2021/05/frustrating-design-patterns-birthday-picker/",
          "publishedOn": "2021-05-12T12:42:00.000Z",
          "wordCount": 3485,
          "title": "Frustrating Design Patterns That Need Fixing: Birthday Picker",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f773d7bb-df56-409f-a3fb-aa1e6e0eea09/4-birthday-picker.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/little-smashing-stories/",
          "author": "hello@smashingmagazine.com (Vitaly Friedman)",
          "description": "Today marks the day we sent out our 300th edition of the Smashing Newsletter. This article is a little celebration in which we share little Smashing stories from people working behind the scenes.",
          "link": "https://smashingmagazine.com/2021/05/little-smashing-stories/",
          "publishedOn": "2021-05-12T08:00:00.000Z",
          "wordCount": 1993,
          "title": "Little Smashing Stories",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b820c735-621c-4e60-8a3f-accb3f66d312/smashing-newsletter-banner.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/complete-guide-css-container-queries/",
          "author": "hello@smashingmagazine.com (Stephanie Eckles)",
          "description": "A prototype of the long-awaited CSS container queries has landed in Chrome Canary and is available for experimentation. Let’s look at what problem is being solved, learn how container queries work, and see how they compare with and complement existing CSS features for layout.",
          "link": "https://smashingmagazine.com/2021/05/complete-guide-css-container-queries/",
          "publishedOn": "2021-05-11T13:30:00.000Z",
          "wordCount": 4874,
          "title": "A Primer On CSS Container Queries",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/a2c88b2c-ef73-44e3-885c-2c5c322fb781/smashing-articles-original.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/smashingconf-conference-platform-hopin/",
          "author": "hello@smashingmagazine.com (Amanda Annandale)",
          "description": "At the beginning of 2020, the SmashingConf team was ready for a new year. We had so many things that excited us. New speakers, new workshops, new cities, new attendees, new experiences. And as we all know, 2020 had other ideas. With so many people working from home, we thought we would bring our [Smashing workshops](https://smashingconf.com/online-workshops/) from our home offices to yours — but how?",
          "link": "https://smashingmagazine.com/2021/05/smashingconf-conference-platform-hopin/",
          "publishedOn": "2021-05-11T10:00:00.000Z",
          "wordCount": 1958,
          "title": "The Conference Platform We Use For Our Online Events: Hopin",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cabbfe1a-8bcd-4ed3-9442-3ce8e51cc53e/hopin.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/get-started-whac-a-mole-react-game/",
          "author": "hello@smashingmagazine.com (Jhey Tompkins)",
          "description": "Want to get started with React but struggling to find a good place to start? This article should have you covered. We’ll focus on some of the main concepts of React and then we’ll be building a game from scratch!",
          "link": "https://smashingmagazine.com/2021/05/get-started-whac-a-mole-react-game/",
          "publishedOn": "2021-05-10T11:00:00.000Z",
          "wordCount": 6352,
          "title": "Get Started With React By Building A Whac-A-Mole Game",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a9db037-1a8d-42ad-b0c3-1c885e456693/get-started-whac-a-mole-react-game.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/product-records-organization-collaboration-best-practices/",
          "author": "hello@smashingmagazine.com (Valeriia Panina)",
          "description": "How do you organize your Google Drive assets? How do you name your Dropbox Paper documents? How do you deal with comments? Let’s get it right.",
          "link": "https://smashingmagazine.com/2021/05/product-records-organization-collaboration-best-practices/",
          "publishedOn": "2021-05-07T10:00:00.000Z",
          "wordCount": 4178,
          "title": "How To Organize Product-Related Assets And Collaborate Better",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2bd6b075-9b54-4fa6-a709-1a8248435c17/product-records-organization-collaboration.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/improving-performance-shopify-themes-case-study/",
          "author": "hello@smashingmagazine.com (Carson Shold)",
          "description": "When dealing with themes for large platforms and CMS, legacy issues often become a bottleneck. In this article, Carson Shold discusses how his team improved the performance and organization of their Shopify themes, and improved maintainability along the way.",
          "link": "https://smashingmagazine.com/2021/05/improving-performance-shopify-themes-case-study/",
          "publishedOn": "2021-05-06T11:00:00.000Z",
          "wordCount": 2654,
          "title": "Improving The Performance Of Shopify Themes (Case Study)",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2286332a-4912-4fb0-9578-530f44f905ed/improving-performance-shopify-themes-case-study.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/reduce-data-sent-client-nextjs/",
          "author": "hello@smashingmagazine.com (Liran Cohen)",
          "description": "This article showcases a case study of Bookaway’s landing page performance. We’ll see how taking care of the props we send to Next.js pages can make loading times and Web Vitals better.",
          "link": "https://smashingmagazine.com/2021/05/reduce-data-sent-client-nextjs/",
          "publishedOn": "2021-05-05T10:30:00.000Z",
          "wordCount": 2333,
          "title": "Reducing HTML Payload With Next.js (Case Study)",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0019f4c3-ebdd-4b09-9f45-47173587307b/reduce-data-sent-client-nextjs.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/undoing-mistakes-git-part1/",
          "author": "hello@smashingmagazine.com (Tobias Günther)",
          "description": "No matter how experienced you are, mistakes are an inevitable part of software development. But we can learn to repair them! And this is what we'll be looking at in this two-part series: how to undo mistakes using Git.",
          "link": "https://smashingmagazine.com/2021/05/undoing-mistakes-git-part1/",
          "publishedOn": "2021-05-04T14:30:00.000Z",
          "wordCount": 1834,
          "title": "A Guide To Undoing Mistakes With Git (Part 1)",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/211042ae-7a72-42ba-804e-9f8132815200/undoing-mistakes-git-part1.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/05/smashing-podcast-episode-36/",
          "author": "hello@smashingmagazine.com (Drew McLellan)",
          "description": "In this episode, we’re starting our new season of the Smashing Podcast with a look at the future of CSS. What new specs will be landing in browsers soon? Drew McLellan talks to expert Miriam Suzanne to find out.",
          "link": "https://smashingmagazine.com/2021/05/smashing-podcast-episode-36/",
          "publishedOn": "2021-05-04T05:00:00.000Z",
          "wordCount": 6993,
          "title": "Smashing Podcast Episode 36 With Miriam Suzanne: What Is The Future Of CSS?",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/07c22e99-6bd0-4012-9227-b494596b6bc7/smashing-podcast-episode-36.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        }
      ]
    },
    {
      "title": "freeCodeCamp.org",
      "feedUrl": "https://www.freecodecamp.org/news/rss/",
      "siteUrl": "https://www.freecodecamp.org/news",
      "articles": [
        {
          "id": "60b5025111ffb70827ef9ebe",
          "author": null,
          "description": "Let's build an AI model that speaks just like your favorite character and deploy that model as a Discord chatbot. All the coding and deployment happen in the cloud (for free!), so you don't even need a local IDE to follow along.",
          "link": "https://www.freecodecamp.org/news/discord-ai-chatbot/",
          "publishedOn": "2021-06-01T23:47:33.000Z",
          "wordCount": 1861,
          "title": "How to Build a Discord AI Chatbot that Talks Like Your Favorite Character"
        },
        {
          "id": "60b1eed311ffb70827ef9504",
          "author": null,
          "description": "A Pandas dataframe is a two dimensional data structure which allows you to store data in rows and columns. It's very useful when you're analyzing data.  When you have a list of data records in a dataframe, you may need to drop a specific list of rows depending on the",
          "link": "https://www.freecodecamp.org/news/drop-list-of-rows-from-pandas-dataframe/",
          "publishedOn": "2021-06-01T20:47:43.000Z",
          "wordCount": 1416,
          "title": "Data Analytics with Pandas – How to Drop a List of Rows from a Pandas Dataframe"
        },
        {
          "id": "60b668c0acb62507dd1d710b",
          "author": null,
          "description": "Next.js makes developing React applications simpler. It provides a common structure that allows you to build frontend React applications, and transparently handles server-side rendering for you. We just released a full course on the freeCodeCamp.org YouTube channel that will teach you the basics of Next.js.  Kapehe developed",
          "link": "https://www.freecodecamp.org/news/learn-next-js/",
          "publishedOn": "2021-06-01T17:43:56.000Z",
          "wordCount": 407,
          "title": "Learn Next.js and Make React Development Simpler"
        },
        {
          "id": "60acf28e11ffb70827ef6dd9",
          "author": null,
          "description": "Hey everyone, my name is Santosh. In this article, I will tell you how I ramped up my career and ended up increasing my salary as a developer.  I'll share what I learned from each job along the way, how you can stand out, tips for negotiating salary, and how",
          "link": "https://www.freecodecamp.org/news/my-developer-journey-how-i-increased-my-salary-and-got-a-remote-job/",
          "publishedOn": "2021-06-01T16:35:00.000Z",
          "wordCount": 2823,
          "title": "My Developer Journey – How I Got a Remote Job and Increased My Salary While Contributing to Open Source"
        },
        {
          "id": "60aff2d711ffb70827ef8829",
          "author": null,
          "description": "This informative tutorial goes deep into how to get a cybersecurity job, with insights from senior leaders and hiring managers in the field.",
          "link": "https://www.freecodecamp.org/news/how-to-get-a-cybersecurity-job/",
          "publishedOn": "2021-06-01T16:34:00.000Z",
          "wordCount": 2137,
          "title": "How to Get a Cybersecurity Job in 2021"
        },
        {
          "id": "607f5fafdd38b9088c2bd0c9",
          "author": null,
          "description": "When you're debating someone, you want to use all the resources at your disposal to convince them you're right. But you should be careful that you don't end up using a logical fallacy to help you make your point. What is a Logical Fallacy?A logical fallacy is an error",
          "link": "https://www.freecodecamp.org/news/logical-fallacies-definition-fallacy-examples/",
          "publishedOn": "2021-06-01T04:19:48.000Z",
          "wordCount": 6197,
          "title": "Logical Fallacies – Definition and Fallacy Examples"
        },
        {
          "id": "60b08d8811ffb70827ef8c7b",
          "author": null,
          "description": "If you've been following the news lately, you may have noticed a worrisome tech trend. The frequency and severity of cybersecurity attacks are exploding.  We've seen news of a sprawling hack involving the SolarWinds management platform. That attack may have compromised the systems of over 18,000 SolarWinds customers.  Then,",
          "link": "https://www.freecodecamp.org/news/how-to-secure-your-android-app/",
          "publishedOn": "2021-05-28T16:01:05.000Z",
          "wordCount": 1568,
          "title": "How to Secure Your Android App – Four Security Best Practices Every Android Dev Should Know"
        },
        {
          "id": "60b0de2211ffb70827ef8d7c",
          "author": null,
          "description": "More and more applications are using computer vision these days. We just published a full course on the freeCodeCamp.org YouTube channel that will help you learn advanced computer vision using Python. You will learn state of the art computer vision techniques by building five projects with libraries such as",
          "link": "https://www.freecodecamp.org/news/advanced-computer-vision-with-python/",
          "publishedOn": "2021-05-28T12:26:38.000Z",
          "wordCount": 368,
          "title": "Advanced Computer Vision with Python"
        },
        {
          "id": "60af931811ffb70827ef85d3",
          "author": null,
          "description": "When you're training a machine learning model, you can have some features in your dataset that represent categorical values. Categorical features are types of data that you can divide into groups. There are three common categorical data types: Ordinal – a set of values in ascending or descending order. Example: rating",
          "link": "https://www.freecodecamp.org/news/improve-machine-learning-model-performance-by-combining-categorical-features/",
          "publishedOn": "2021-05-27T17:55:23.000Z",
          "wordCount": 1828,
          "title": "How to Improve Machine Learning Model Performance by Combining Categorical Features"
        },
        {
          "id": "60a325c6906c5207e3a7da25",
          "author": null,
          "description": "In this article, I'll teach you how to make a basketball using materials and textures in Unity. You can extend this micro-concept to create any kind of ball like a football, tennis ball, or snooker balls.  That said, these techniques aren't just limited to creating round 3D objects like balls.",
          "link": "https://www.freecodecamp.org/news/how-to-make-a-basketball-in-unity-with-materials-and-textures/",
          "publishedOn": "2021-05-27T15:16:34.000Z",
          "wordCount": 1399,
          "title": "How to Make a Bouncing Basketball in Unity with Materials and Textures 🏀"
        }
      ]
    },
    {
      "title": "DEV Community",
      "feedUrl": "https://dev.to/feed/tag/node",
      "siteUrl": "https://dev.to",
      "articles": [
        {
          "id": "https://dev.to/skorotkiewicz/merge-multiple-csv-files-and-remove-dublikats-e-g-keepass-1ic1",
          "author": "Sebastian Korotkiewicz",
          "description": "I would like to present you a simple script which I wrote when I needed to merge the passwords database from LastPass to my current KeepassXC database.\n\nLet's start with my example, you want to migrate from LastPass but you already have existing passwords in Keepass.\nThat's why I wrote this script which will merge multiple databases exported in CSV and remove duplikats automatically.\nProHint: If you are esporting a database from LastPass (or other services), add the exported CSV first to the new Keepass database and set the columns you have on your other Keepass database and export as new CSV file. This will make sure you have the same columns in the current database and the new one.\nMy columns look like this: \nGroup | Title | Username | Password | URL | Notes\nTo install and start the CSV database merge you can easily install from npmjs.com\n$ npm install merge-csv-keepass -g\nor\n$ yarn global add merge-csv-keepass\n\nIt is very easy to use, after installation you have access to a new command merge-csv-keepass where you just need to add few arguments and you are done!\nExample, we have a database db1.csv and db2.csv we want to merge them into a file merged_db.csv to do this we run the command:\nmerge-csv-keepass -source db1.csv db2.csv -output merged_db.csv\n\nDone! Simple, isn't it?\nKeep in mind that the script does not check if the output file exists! If it exists it will overwrite it!\nOf course you can add more databases than just two to merge, or even just one database to only remove duplikats from it.\nThe whole project is open source and available on Github.  \n / \n        merge-csv-keepass\n      \n    \nEnjoy your merging! :)",
          "link": "https://dev.to/skorotkiewicz/merge-multiple-csv-files-and-remove-dublikats-e-g-keepass-1ic1",
          "publishedOn": "2021-06-01T22:30:23.000Z",
          "wordCount": 758,
          "title": "Merge multiple CSV files and remove duplikats (e.g. Keepass)"
        },
        {
          "id": "https://dev.to/juliancwirko/how-i-implemented-search-engine-for-my-static-blog-generator-2dbh",
          "author": "Julian Ćwirko",
          "description": "Lately, I worked on my static site generator, and one of the must-haves was that it should provide a search system. It should be pre-configured and ready to use after every new project initialization. \nTwo fundamental problems here:\nSource data\nSolid and performant indexing solution\nAs for source data, I had two choices, read the blog posts from already generated HTML files or prepare JSON data with all blog posts at the build time. I chose the second one because the first one seems a little bit clunky and problematic. There could be many different edge cases when collecting the data. When building, I generate HTML files from markdown source files, so I had this step anyway. \nAs for the indexing solution, I chose Lunr. They describe themselves as \"A bit like Solr, but much smaller and not …",
          "link": "https://dev.to/juliancwirko/how-i-implemented-search-engine-for-my-static-blog-generator-2dbh",
          "publishedOn": "2021-06-01T21:02:09.000Z",
          "wordCount": 876,
          "title": "How I implemented search engine for my static blog generator"
        },
        {
          "id": "https://dev.to/hughrawlinson/loading-audio-in-node-js-1l7e",
          "author": "Hugh Rawlinson",
          "description": "Working with audio as a developer can unlock many awesome features, and a lot of fun. You can generate music, analyze audio using machine learning, build audio visualizers, music information retrieval systems, and much more. It's an extremely fun field. But working with audio can be tricky - how is sound represented on a computer? How can we manipulate that sound? And how do we serialize sound data to disk?\nThis post won't be a deep dive into audio encoding - it's a practical guide for how to load audio in Node JS, into a state that you can work with it. Generally, digital signal processing (which means \"working with audio data using code\") operates on a kind of audio data called Pulse Code Modulation. There's a lot of fancy theory and maths behind PCM encoding - but until you're ready to …",
          "link": "https://dev.to/hughrawlinson/loading-audio-in-node-js-1l7e",
          "publishedOn": "2021-06-01T18:49:27.000Z",
          "wordCount": 1931,
          "title": "Loading Audio in Node JS"
        },
        {
          "id": "https://dev.to/craigtaub/under-the-hood-of-npm-7ec",
          "author": "Craig Taub",
          "description": "NPM is the official package manager for the NodeJS ecosystem. Since the first release of NodeJS it has come with NPM built-in. The initial release date for NPM was 12 January 2010 and since then has grown into the Worlds largest software registry.\nI would expect most engineers in the JavaScript ecosystem to know all about either NPM or Yarn, as they are critical to most local, CI and CD flows. However in the overview section I am going to cover the core functionality, as this is what we will focus on building later.\nThis is part of my \"under-the-hood of\" series:\nGit\nGraphQL\nWeb bundlers (e.g. Webpack)\nType systems (e.g. TypeScript)\nTest runners (e.g. Mocha)\nSource maps\nReact hooks\nApollo\nAuto formatters (e.g. Prettier)\nThe article today will be broken down into:\nOverview\n\n\nModule vs Packag…",
          "link": "https://dev.to/craigtaub/under-the-hood-of-npm-7ec",
          "publishedOn": "2021-06-01T11:53:53.000Z",
          "wordCount": 2987,
          "title": "Under-the-hood of NPM"
        },
        {
          "id": "https://dev.to/off_tokyo_/how-to-receive-images-with-the-node-js-api-fetch-react-3o2f",
          "author": "off.tokyo",
          "description": "How to receive images with the node.js API | fetch , React - off.tokyo, the web site for high-tech enthusiasts\nThe front side is built with React, and the form data is sent to the api by post using JavaScript fetch.\nThen, the api receives the form data and saves the data to the server.\nTo edit the user's information, imagine that the user has to register his name and driver's license (back and front) with the service, and look at the code.\nIn the following log, the form data created on the front side is received by post to get the data contained in the request.\nAt first, I couldn't get the image in the body of the request, so I looked at the log of various requests, and found that the files contained image data.\nconsole.log(\"use_info\")\nconsole.log(JSON.parse(req.body.use_info))\n\nconsole.lo…",
          "link": "https://dev.to/off_tokyo_/how-to-receive-images-with-the-node-js-api-fetch-react-3o2f",
          "publishedOn": "2021-06-01T08:18:41.000Z",
          "wordCount": 674,
          "title": "How to receive images with the node.js API | fetch , React"
        },
        {
          "id": "https://dev.to/ferfox1981/gui-simples-no-linux-utilizando-node-js-e-zenity-1haf",
          "author": "Fernando Raposo da Camara Silva",
          "description": "(Este post é uma tradução deste original em inglês)\nMeus objetivos serão os seguintes:\nUsar o Node.js para acessar dados financeiros relacionados a preços de títulos do Tesouro Direto;\nCriar um mecanismo para de forma sistemática checar o preço dos títulos (minuto a minuto, ou hora por hora...);\nUsar o Zenity para exibir uma notificação com o preço corrente do título.\nAs informações do Tesouro Direto podem ser achadas aqui. Além disso, se apertarmos o F12 e checarmos a aba Network, veremos o seguinte json sendo recebido pelo browser:\nhttps://www.tesourodireto.com.br/json/br/com/b3/tesourodireto/service/api/treasurybondsinfo.json\nconst axios = require('axios');\nconst { exec } = require(\"child_process\");\nconst https = require('https');\n\n\n\nconst instance = axios.create({\n  httpsAgent: new htt…",
          "link": "https://dev.to/ferfox1981/gui-simples-no-linux-utilizando-node-js-e-zenity-1haf",
          "publishedOn": "2021-06-01T02:12:53.000Z",
          "wordCount": 960,
          "title": "GUI Simples no Linux Utilizando Node.js e Zenity"
        },
        {
          "id": "https://dev.to/adaltas/js-monorepos-in-prod-1-project-initialization-129c",
          "author": "Worms David",
          "description": "Every project journey begins with the step of initialization. When your overall project is composed of multiple projects, it is tempting to create one Git repository per project. In Node.js, a project translates to a package. However, managing too many closely related repositories is confusing and time-consuming.\nPlacing multiple projects inside a single Git repository and using a tool like Lerna to facilitate their management worth the effort. This architecture is called a monorepo. It simplifies the versioning and publishing of the components as well as their manipulation and development.\nAt Adaltas, we have been developing and maintaining several monorepos for a couple of years. This article is the first one from a serie of five in which we share our best practices. It covers the projec…",
          "link": "https://dev.to/adaltas/js-monorepos-in-prod-1-project-initialization-129c",
          "publishedOn": "2021-05-31T21:01:28.000Z",
          "wordCount": 2203,
          "title": "JS monorepos in prod 1: project initialization"
        },
        {
          "id": "https://dev.to/mattdclarke/how-to-rate-limit-a-login-route-in-express-using-node-rate-limiter-flexible-and-redis-1i1k",
          "author": "Matt",
          "description": "Introduction\n\n\nRate limiting is a method used for controlling network traffic. It limits the number of actions a user can make per unit of time 1. In this tutorial, we will rate limit a login route to help protect it from brute force attacks. This limits the number of password guesses that can be made by an attacker. We'll use the npm package node-rate-limiter-flexible to count and limit the number of login attempts by key. Each key will have a points value that will count the number of failed login attempts. The keys will expire after a set amount of time. The key-value pairs will be stored in Redis, which is an open-source in-memory data structure store. It has many different use cases. We will use it as a simple database. Redis is simple to use and very fast. We'll create an online inst…",
          "link": "https://dev.to/mattdclarke/how-to-rate-limit-a-login-route-in-express-using-node-rate-limiter-flexible-and-redis-1i1k",
          "publishedOn": "2021-05-31T20:09:37.000Z",
          "wordCount": 4063,
          "title": "How to rate limit a login route in Express using node-rate-limiter-flexible and Redis"
        },
        {
          "id": "https://dev.to/maximization/send-a-file-with-axios-in-node-js-18g2",
          "author": "Maxim Orlov",
          "description": "This article was originally published a day earlier at https://maximorlov.com/send-a-file-with-axios-in-nodejs/\nProgramatically sending requests in Node.js can be a frustrating experience. First, you have to choose one out of many request libraries in the ecosystem. Second, they each have a slightly different API which is confusing when you're switching.\nYou also have to make sure the request is formatted in a specific way for the 3rd party on the receiving end to accept it.\nJust as you're starting to get the hand of axios, you soon find out there are (subtle) usage differences depending on whether you're in the browser or Node.js.\nWhat a pain.\nOnly if sending files with axios in Node.js would be as easy as taking a walk in the park.\nWell, it can be.\nIn this article, you'll learn how to se…",
          "link": "https://dev.to/maximization/send-a-file-with-axios-in-node-js-18g2",
          "publishedOn": "2021-05-31T16:46:27.000Z",
          "wordCount": 1653,
          "title": "Send a File With Axios in Node.js"
        },
        {
          "id": "https://dev.to/lexycodestudio/error-cannot-find-module-mongodb-nodemodules-bson-2ll7",
          "author": "AKINRO OLAWALE",
          "description": "1 Add \"mongodb\": \"1.4.9\" to package.json and run \"npm i\"\n\n\n\n  \n  \n  2 Add \"mongoose\": \"^4.4.12\" to package.json and run \"npm i\"\n\n\n\n  \n  \n  3 run npm install inside mongodb folder\n\n\nIn your terminal, navigate into mongodb folder like this cd node_modules\\mongodb  and run \"npm i\"\nif all these steps still failed\nReference: [github issues ]https://github.com/Automattic/mongoose/issues/2718\nVolia!!!",
          "link": "https://dev.to/lexycodestudio/error-cannot-find-module-mongodb-nodemodules-bson-2ll7",
          "publishedOn": "2021-05-31T15:21:14.000Z",
          "wordCount": 452,
          "title": "Error: Cannot find module 'mongodb/node_modules/bson'"
        },
        {
          "id": "https://dev.to/debojyotichatterjee9/modules-4hj",
          "author": "Debojyoti Chatterjee",
          "description": "In JavaScript, modules are pieces of encapsulated code that can reused in different parts of your application or program whenever you need it.\nBasically you can write your JavaScript code without modules but breaking down your code into multiple reusable modules helps you to keep your code clean, readable, reusable and mode manageable when you have dependencies.\nThe syntax for modules was officially introduced in ES6. Let's have a look at the various ways we can achieve this:\nThis method is used for the browser environments. Large web applications require many external modules. Now, the traditional way of loading them is using the <script> element. When using <script> the browser loads them in a synchronous(sequential) fashion. Now it would be much better if we can load those external modu…",
          "link": "https://dev.to/debojyotichatterjee9/modules-4hj",
          "publishedOn": "2021-05-31T15:18:13.000Z",
          "wordCount": 1278,
          "title": "JavaScript Modules: A walkthrough."
        },
        {
          "id": "https://dev.to/codesphere/could-aleph-js-be-the-next-big-react-framework-2cgb",
          "author": "Saji Wang",
          "description": "A couple of months ago we covered Deno, a new JavaScript runtime that is attempting to dethrone Node.js as the de facto runtime for executing JavaScript. Ironically, Deno is being developed by Ryan Dahl, the same developer who made Node.js back in 2009. \nHere’s that article if you're looking to learn more about our take on Deno:\nhttps://codesphere.com/articles/say-yes-to-deno-23fa587e3877\nWhile Deno has a lot to offer, such as built-in TypeScript support and a simpler dependency system, the biggest hurdle to its adoption is the plethora of dev tools and frameworks that are dependent on Node.js. As Deno gains traction, however, developers have begun creating new frameworks that rely on Deno instead of Node.js.\nThis is where Aleph.js comes in. The two most popular React frameworks for creati…",
          "link": "https://dev.to/codesphere/could-aleph-js-be-the-next-big-react-framework-2cgb",
          "publishedOn": "2021-05-31T14:03:13.000Z",
          "wordCount": 1294,
          "title": "Could Aleph.js be the next big React Framework?"
        }
      ]
    },
    {
      "title": "DEV Community",
      "feedUrl": "https://dev.to/feed/tag/security",
      "siteUrl": "https://dev.to",
      "articles": [
        {
          "id": "https://dev.to/prince_of_pasta/adding-some-sweetness-to-your-infra-as-code-with-confectionery-27c2",
          "author": "Anthony Barbieri",
          "description": "Recently the Confectionery tool was open-sourced after some internal iterations within Cigna. The project was a combined effort from multiple teams and we're excited to see the wider community be able to leverage it.\nSo what is Confectionery anyways?  It is a rule library for the Conftest tool. By leveraging Conftest, teams can validate various configuration files via static scanning and policies written in the Rego language. The Confectionery ruleset as of the writing of this article is focused on Terraform. We plan to expand to other formats in the near future (Dockerfiles and Kubernetes manifests). I've previously written about how Conftest can be used to scan Terraform files, please see my article from last year on the topic.\nAs noted in our Getting Started Guide Conftest is a pre-requ…",
          "link": "https://dev.to/prince_of_pasta/adding-some-sweetness-to-your-infra-as-code-with-confectionery-27c2",
          "publishedOn": "2021-06-01T22:40:05.000Z",
          "wordCount": 1202,
          "title": "Adding Some Sweetness to your Infra-as-Code with Confectionery"
        },
        {
          "id": "https://dev.to/skorotkiewicz/merge-multiple-csv-files-and-remove-dublikats-e-g-keepass-1ic1",
          "author": "Sebastian Korotkiewicz",
          "description": "I would like to present you a simple script which I wrote when I needed to merge the passwords database from LastPass to my current KeepassXC database.\n\nLet's start with my example, you want to migrate from LastPass but you already have existing passwords in Keepass.\nThat's why I wrote this script which will merge multiple databases exported in CSV and remove duplikats automatically.\nProHint: If you are esporting a database from LastPass (or other services), add the exported CSV first to the new Keepass database and set the columns you have on your other Keepass database and export as new CSV file. This will make sure you have the same columns in the current database and the new one.\nMy columns look like this: \nGroup | Title | Username | Password | URL | Notes\nTo install and start the CSV database merge you can easily install from npmjs.com\n$ npm install merge-csv-keepass -g\nor\n$ yarn global add merge-csv-keepass\n\nIt is very easy to use, after installation you have access to a new command merge-csv-keepass where you just need to add few arguments and you are done!\nExample, we have a database db1.csv and db2.csv we want to merge them into a file merged_db.csv to do this we run the command:\nmerge-csv-keepass -source db1.csv db2.csv -output merged_db.csv\n\nDone! Simple, isn't it?\nKeep in mind that the script does not check if the output file exists! If it exists it will overwrite it!\nOf course you can add more databases than just two to merge, or even just one database to only remove duplikats from it.\nThe whole project is open source and available on Github.  \n / \n        merge-csv-keepass\n      \n    \nEnjoy your merging! :)",
          "link": "https://dev.to/skorotkiewicz/merge-multiple-csv-files-and-remove-dublikats-e-g-keepass-1ic1",
          "publishedOn": "2021-06-01T22:30:23.000Z",
          "wordCount": 758,
          "title": "Merge multiple CSV files and remove duplikats (e.g. Keepass)"
        },
        {
          "id": "https://dev.to/jordanfinners/clarifying-cors-cross-origin-resource-sharing-4dk9",
          "author": "Jordan Finneran",
          "description": "Contents\n\n\n\n Intro\n\n Access-Control Headers\n\n Rate Limiting\n\n Summary\n\n\n\n\n  \n  \n  Intro \n\n\nContinuing on from my previous blog about website security week, we're going to talk about a CORS on the web.\nCORS is Cross-origin Resource Sharing this is often used when your website is hosted separately from your API. e.g. your website is at website.com and calls your API at api.com.\n\n\n\nTo allow CORS requests your API will need to response with certain headers, which allow certain behaviors from your website/frontend.\nThis header can be set with either the origin which will be calling the API, it can only be a single origin.\n* however this doesn't allow credentials to be passed, which we will talk about later.\nIf at all possible prefer setting a specific origin to a *.\nExample Usage:\nAccess-Contro…",
          "link": "https://dev.to/jordanfinners/clarifying-cors-cross-origin-resource-sharing-4dk9",
          "publishedOn": "2021-06-01T17:56:55.000Z",
          "wordCount": 923,
          "title": "Clarifying CORS - Cross-origin Resource Sharing"
        },
        {
          "id": "https://dev.to/cossacklabs/a-beginners-guide-to-infosec-3o22",
          "author": "Cossack Labs",
          "description": "In this first-remote 2021, infosec career rollercoaster thrills and charms like it was never before. However, to move in this direction as a junior specialist, you need to gain some new skills and a brand new line of thought. Cossack Labs’ senior security engineers are sharing advice about this path.\nThese basic principles and rules will help you drive through your infosec career safe and sound right from the start. Ready, steady, go! 🚀\nTable of contents:\nHard skills: 4️⃣ points to consider\nSoft skills: run smarter\nShortcuts for career racers\nHard skills 📚\n\n\nLearning security can be as hard as doing it. “Eat the elephant one bite at a time, play the long game and move steadily and constantly”, they say. This universal principle works in infosec as well. \nYou need a lot of small steps and…",
          "link": "https://dev.to/cossacklabs/a-beginners-guide-to-infosec-3o22",
          "publishedOn": "2021-06-01T14:17:25.000Z",
          "wordCount": 1612,
          "title": "A beginners guide to infosec"
        },
        {
          "id": "https://dev.to/therockstorm/hashing-vs-encryption-33aj",
          "author": "Rocky Warren",
          "description": "Encryption is a two-way function. You can encrypt data, like a file, and then later decrypt it provided you have the proper encryption key. This is useful when you need to retrieve the original data.\nHashing, on the other hand, is a one-way function. It scrambles the input data into a unique output and you cannot reverse this process to reveal the original data.\nHow is a non-reversible operation useful? It's more secure for things like passwords. With encryption, the website server needs to have the encryption key to decrypt it. If the server gets hacked, the attackers could get this key and decrypt every user's password immediately.\nWith hashing, there is no key. Websites don't actually need to know a user's password, they just need to know that what the user enters in the password field matches what is stored in the database. They can do this by taking the password the user enters, hashing it in the same way they hashed it when the user first set it, and making sure both match. If they do, you get to log in.\nIf an attacker gets a list of hashed passwords, they'd have to generate a bunch of guesses, hash each one using the same algorithm, and compare the result to the hashed values one-by-one.",
          "link": "https://dev.to/therockstorm/hashing-vs-encryption-33aj",
          "publishedOn": "2021-06-01T14:11:53.000Z",
          "wordCount": 604,
          "title": "Hashing vs Encryption"
        },
        {
          "id": "https://dev.to/vasilievserg/owasp-vulnerabilities-and-taint-analysis-in-pvs-studio-for-c-stir-but-don-t-shake-16i9",
          "author": "Sergey Vasiliev",
          "description": "We continue to develop PVS-Studio as a SAST solution. Thus, one of our major goals is expanding OWASP coverage. You might ask, what's the use when there's no taint analysis? That's exactly what we thought - and decided to implement taint analysis in the C# analyzer. Curious about what we accomplished? Read on!\n\nNote. This article briefly touches upon the topics of SQL injections and working with SQL in C#. This theory serves as context. For in-depth information on these topics, do additional research.\nTaint analysis helps track data that a program receives from an external source (taint source). Though such data is considered tainted, it does not necessarily cause damage when spreading. However, programs may have key points (taint sinks). When tainted data hits them, this interaction may r…",
          "link": "https://dev.to/vasilievserg/owasp-vulnerabilities-and-taint-analysis-in-pvs-studio-for-c-stir-but-don-t-shake-16i9",
          "publishedOn": "2021-06-01T13:31:47.000Z",
          "wordCount": 3695,
          "title": "OWASP, Vulnerabilities, and Taint Analysis in PVS\\-Studio for C#. Stir, but Don't Shake"
        },
        {
          "id": "https://dev.to/stack-labs/keycloak-on-distroless-into-kubernetes-f5g",
          "author": "Λ\\: Davin Kevin",
          "description": "In the previous article, we've seen how to build and run a Keycloak application based on Distroless base image. However, this article only used Docker to launch containers, and you mostly use an orchestrator to do that. In this article, we will see how to run our previously created image in a Kubernetes cluster. \n\nUsing a Keycloak image based on Distroless requires some adaptation:\nLaunching the application require a specific command\nStopping the application require a specific command\nProbes should be defined \nDatabase connection should be provided via env variables\nConfiguration file should be mounted by the orchestrator\nBefore doing some configuration, we will \"install\" a PostgreSQL instance inside our cluster. This will be done with this manifest:\n# database.yaml\napiVersion: v1\nkind: Se…",
          "link": "https://dev.to/stack-labs/keycloak-on-distroless-into-kubernetes-f5g",
          "publishedOn": "2021-06-01T09:14:27.000Z",
          "wordCount": 2056,
          "title": "Keycloak on Distroless into Kubernetes"
        },
        {
          "id": "https://dev.to/mattdclarke/how-to-rate-limit-a-login-route-in-express-using-node-rate-limiter-flexible-and-redis-1i1k",
          "author": "Matt",
          "description": "Introduction\n\n\nRate limiting is a method used for controlling network traffic. It limits the number of actions a user can make per unit of time 1. In this tutorial, we will rate limit a login route to help protect it from brute force attacks. This limits the number of password guesses that can be made by an attacker. We'll use the npm package node-rate-limiter-flexible to count and limit the number of login attempts by key. Each key will have a points value that will count the number of failed login attempts. The keys will expire after a set amount of time. The key-value pairs will be stored in Redis, which is an open-source in-memory data structure store. It has many different use cases. We will use it as a simple database. Redis is simple to use and very fast. We'll create an online inst…",
          "link": "https://dev.to/mattdclarke/how-to-rate-limit-a-login-route-in-express-using-node-rate-limiter-flexible-and-redis-1i1k",
          "publishedOn": "2021-05-31T20:09:37.000Z",
          "wordCount": 4063,
          "title": "How to rate limit a login route in Express using node-rate-limiter-flexible and Redis"
        },
        {
          "id": "https://dev.to/rezaulkarim014/why-should-we-use-dark-mode-2el",
          "author": "Rezaul karim🇧🇩",
          "description": "Often times it isn’t obvious whether an app or program features a dark mode. And it’s often an unassuming option buried in a menu somewhere.\nBut for those of you who are night owls, you’ll know that it works by reversing the usual color scheme of your windows putting light colored text on a dark background.\nBut it isn’t as simple as just Inverting the colors on a web page and calling it a day and you can see this if you have a browser extension that applies a dark mode as some elements on the page often. Don’t look as nice while other ones such as images won’t invert or dim properly.\nSo coding a good-looking dark mode that is specific to a certain website often requires a fair. A bit of finesse.\nHowever, this often ends up being worth it as dark mode ends up delivering quite a few benefits…",
          "link": "https://dev.to/rezaulkarim014/why-should-we-use-dark-mode-2el",
          "publishedOn": "2021-05-31T14:09:16.000Z",
          "wordCount": 1145,
          "title": "Why should we use Dark Mode?"
        },
        {
          "id": "https://dev.to/typeable/why-do-i-think-haskell-is-a-good-choice-in-regards-to-software-security-3do",
          "author": "Catherine Galkina",
          "description": "Author: Ville Tirronen\n\nThe Typeable Team appreciates security! We love Haskell, but is Haskell a good choice when secure software is the goal? We would love to say yes, but like most empirical questions about software development, there is simply no hard evidence that Haskell, or any general programming language, is more secure than any other. That is not to say that the Typeable's language choice doesn't matter in regards to security, but how it does may need to be elaborated.\nAfter teaching introductory Software Security for half a decade I can attest that Software Security has no universal theory on which to rely.  Security is most often taught by enumerating different security issues, mitigations and security models and hoping that students can build from them to gain general understa…",
          "link": "https://dev.to/typeable/why-do-i-think-haskell-is-a-good-choice-in-regards-to-software-security-3do",
          "publishedOn": "2021-05-31T13:46:38.000Z",
          "wordCount": 2018,
          "title": "Why do I think Haskell is a good choice in regards to Software Security?"
        },
        {
          "id": "https://dev.to/aws-builders/encrypt-your-s3-object-1al",
          "author": "Sujithra",
          "description": "The idea behind Encrypting your S3 object is that you upload objects onto Amazon S3 and these are servers of AWS so you may want to make sure that these objects are not accessible for example, if someone gets into the Amazon servers or you wanna make sure you get adhere to some security standards set up by your company. As such, Amazon gives you four methods to encrypt objects in Amazon S3. \nThe first one is called SSE S3. This is to encrypt S3 objects, using keys handled and managed by AWS. \nThe second one is SSE-KMS. It leverages AWS key management service to manage your encryption keys. \nThe third one is SSE-C. It is used when you manage your own encryption keys.\nFinally Client-side encryption.\nNow we're going to do a deep dive on all of those so don't worry. \n\nThis is an encryption whe…",
          "link": "https://dev.to/aws-builders/encrypt-your-s3-object-1al",
          "publishedOn": "2021-05-31T08:28:00.000Z",
          "wordCount": 1495,
          "title": "Encrypt your S3 Object"
        },
        {
          "id": "https://dev.to/jordanfinners/why-your-website-needs-validation-44jm",
          "author": "Jordan Finneran",
          "description": "Contents\n\n\n\n Intro\n\n Forms\n\n Custom Validation\n\n Summary\n\n\n\n\n  \n  \n  Intro \n\n\nContinuing on from my previous blog about website security week, we're going to talk about a validation.\nIf accept user input, you are going to need to validate the input. Non validated user inputs can lead to security vulnerabilities for example SQL injection attacks, where user input escapes your database and starts modifying it. It can also lead to exceptions from your code if a user inputs text rather than a number for example.\nPlease Please Please ensure you do the same validation server side as you do on the frontend (client) side.\n\n\n\nYou user inputs should be contained in HTML forms which comes with lots of powerful validation tools built in.\nFirst thing to check on your inputs is, are you using the correc…",
          "link": "https://dev.to/jordanfinners/why-your-website-needs-validation-44jm",
          "publishedOn": "2021-05-30T21:19:39.000Z",
          "wordCount": 1123,
          "title": "Why your website needs validation"
        }
      ]
    },
    {
      "title": "DEV Community",
      "feedUrl": "https://dev.to/feed/tag/devops",
      "siteUrl": "https://dev.to",
      "articles": [
        {
          "id": "https://dev.to/guscarpim/how-do-i-deploy-to-netlify-45pc",
          "author": "Gustavo Scarpim",
          "description": "Heeeeey guys, quick tip for those of you who need to deploy your app, there are several ways to deploy your app for free, but what I like the most is Netlify because it's so simple and fast:\n1- Once logged in, click on\nNew site from Git\n\n2- Choose where your code is stored:\n\n3- Choose your repository (GitHub):\n\n4- He will ask to set up your build information inBase directory you must put the path to your main page,, Build command this is where you put the command that will generate your project build, I always put it CI= npm run build\nCI = <b>CI</b> means continuous integration\n\n5- If everything is ok, it will show this page saying that your application was successfully uploaded.\n\n6- Click Add custom domain to place a domain you have purchased or click Edit site name to change only the Netlify domain name:\n\nAnd voila, your application is already online and 100% free.\n\nThanks for reading.",
          "link": "https://dev.to/guscarpim/how-do-i-deploy-to-netlify-45pc",
          "publishedOn": "2021-06-02T02:12:26.000Z",
          "wordCount": 552,
          "title": "How do I deploy to Netlify?"
        },
        {
          "id": "https://dev.to/microtica/6-hidden-aws-charges-and-how-to-monitor-them-3d0n",
          "author": "Marija N.",
          "description": "Cloud adoption has many benefits, the most notable of which being the wide range of options and price models available. Your cloud charge, on the other hand, can get confusing. If you don’t keep track of it and review it on a daily basis, the expenses can easily escalate out of control. Fast scalability, pay-as-you-go pricing, and a vast array of options and updates can make things very complicated. \nEvery company should actively monitor its cloud costs, which can drive up the overall cloud bill. However, if you handle them properly, this can be avoided. Here are some AWS charges you should keep an eye on. \nAWS Free Tier offers a limited number of AWS services to use for free, up to a defined monthly consumption cap. It’s divided into three pricing models: a 12-month Free Tier, an Always F…",
          "link": "https://dev.to/microtica/6-hidden-aws-charges-and-how-to-monitor-them-3d0n",
          "publishedOn": "2021-06-01T20:55:58.000Z",
          "wordCount": 2013,
          "title": "6 Hidden AWS Charges and How to Monitor Them"
        },
        {
          "id": "https://dev.to/princekr700/basic-git-commands-every-developer-should-know-1854",
          "author": "Kumar Prince",
          "description": "Hi everyone,\nMastering git takes time and trust me, I've switched from SVN to git. So, I know the hurdles a beginner would face. I've seen many people who are not comfortable using git or doesn't use git properly.\nThere are so many commands we can use, but some commands are used more frequently(some daily). So in this post, I will share and explain the commands which every developer should know.\nGit clone is a command for downloading existing source code from a remote repository (like GitHub, for example). In other words, Git clone basically makes an identical copy of the latest version of a project in a repository and saves it to our computer.\nThere are a couple of ways to download the source code, but mostly I prefer the clone with https way:\ngit clone <https://name-of-the-repository-lin…",
          "link": "https://dev.to/princekr700/basic-git-commands-every-developer-should-know-1854",
          "publishedOn": "2021-06-01T20:15:07.000Z",
          "wordCount": 1551,
          "title": "Basic git commands every developer should know"
        },
        {
          "id": "https://dev.to/thundersparkf/journey-through-devops-part-1-world-without-devops-3g92",
          "author": "Dev",
          "description": "April 2020. I'd just begun coding regularly in Python. Built a toxic tweet classifier using LSTM models. Model wasn't spectacular by any standard, but during the whole process, I was introduced to something that would change the way I look at software development completely. It was, the Cloud.\nI need to run the model faster so I used Virtual Machine in Google Cloud Platform to run the training on a higher configuration. And that was about it.\nFast forward a few months. August 2020. I was experimenting with random tools of NLP and tested out a chatbot using Rasa. Because of this minor experience, I was connected by a friend to an NGO, Weunlearn which had proposed to build a chatbot for providing Gender, Sex-ed and Mental health content. Needless to say, I signed up to help. Because for me, …",
          "link": "https://dev.to/thundersparkf/journey-through-devops-part-1-world-without-devops-3g92",
          "publishedOn": "2021-06-01T19:20:26.000Z",
          "wordCount": 1444,
          "title": "Journey through DevOps - Part 1: World without DevOps"
        },
        {
          "id": "https://dev.to/rthefounding/writing-a-function-that-splits-an-array-into-groups-the-length-of-size-and-returns-them-as-a-two-dimensional-array-lfp",
          "author": "Randy Rivera",
          "description": "function chunkArrayInGroups(arr, size) {\n  return arr;\n}\n\nchunkArrayInGroups([\"a\", \"b\", \"c\", \"d\"], 2);\n\nAnswer:\n\n\n\n\nfunction chunkArrayInGroups(arr, size) {\n  let newArr = [];\n\n  while (arr.length) {\n    newArr.push(arr.splice(0, size));\n  }\n\n  return newArr;\n}\n\nconsole.log(chunkArrayInGroups([\"a\", \"b\", \"c\", \"d\"], 2)); // will display [[\"a\", \"b\"], [\"c\", \"d\"]]\n\nFirstly, we create a variable. newArr is an empty array which we will push to.\nOur while loop loops until we dont have a length of the array.\nInside our loop, we push to the newArr array using arr.splice(0, size).\nFor each iteration of while loop, size tells the array how many we want to either add or remove .\nFinally, we return the value of newArr.",
          "link": "https://dev.to/rthefounding/writing-a-function-that-splits-an-array-into-groups-the-length-of-size-and-returns-them-as-a-two-dimensional-array-lfp",
          "publishedOn": "2021-06-01T18:37:31.000Z",
          "wordCount": 564,
          "title": "Writing A Function That Splits An Array Into Groups The Length Of Size And Returns Them As A two-Dimensional Array."
        },
        {
          "id": "https://dev.to/rthefounding/return-true-if-the-string-in-the-first-element-of-the-array-contains-all-of-the-letters-of-the-string-in-the-second-element-5cde",
          "author": "Randy Rivera",
          "description": "function mutation(arr) {\n  return arr;\n}\n\nmutation([\"hello\", \"hey\"]);\n\nFor example, [\"hello\", \"Hello\"], should return true because all of the letters in the second string are present in the first, ignoring case.\nThe arguments [\"hello\", \"hey\"] should return false because the string hello does not contain a y.\nIf everything is lowercase it will be easier to compare.\nOur strings might be easier to work with if they were arrays of characters.\nA loop might help. Use indexOf() to check if the letter of the second word is on the first.\n\n\nAnswer:\n\n\n\n\nfunction mutation(arr) {\n   let firstWord = arr[0].toLowerCase();\n   let secondWord = arr[1].toLowerCase();\n\n   for (let i = 0; i < secondWord.length; i++) {\n    let letters = secondWord[i];\n    if (firstWord.indexOf(letters) === -1) return false;\n   }\n      return true;\n }\n\nmutation([\"hello\", \"hey\"]); // will display false",
          "link": "https://dev.to/rthefounding/return-true-if-the-string-in-the-first-element-of-the-array-contains-all-of-the-letters-of-the-string-in-the-second-element-5cde",
          "publishedOn": "2021-06-01T18:28:54.000Z",
          "wordCount": 581,
          "title": "Return True If The String In The First Element Of The Array Contains All Of The Letters Of The String In The Second Element"
        },
        {
          "id": "https://dev.to/hhaandr/xcode-matters-these-are-the-cicd-services-where-you-ll-find-it-first-2fbf",
          "author": "Hendrik Haandrikman 🚀",
          "description": "Xcode versions are the drumbeat that iOS teams all around the world march to. Rapid access to Xcode versions ensure that apps are submitted, and updated on time, while Xcode betas help prepare for new features, functionality, and – dreaded – deprecations.\nWith WWDC 2021 around the corner, enticing teams with the shiny new things the Apple folks thought up for us, this topic is more relevant than ever.\nOver a 12 month period, a sample of Xcode GMs, RCs and betas was generated based on data aggregated by https://xcodereleases.com/ - For this sample of 15 Xcode releases, we pulled in publicly available information on Xcode releases on Bitrise, GitHub Actions, CircleCI, and Travis.\nWhenever a particular Xcode version was skipped by a CI provider, the next version was used instead to determine …",
          "link": "https://dev.to/hhaandr/xcode-matters-these-are-the-cicd-services-where-you-ll-find-it-first-2fbf",
          "publishedOn": "2021-06-01T17:54:12.000Z",
          "wordCount": 1168,
          "title": "Xcode matters - These are the CICD services where you'll find it first"
        },
        {
          "id": "https://dev.to/rthefounding/where-in-the-array-a-number-should-be-inserted-by-order-2p7h",
          "author": "Randy Rivera",
          "description": "function getIndexToIns(arr, num) {\n  return num;\n}\n\ngetIndexToIns([40, 60], 50);\n\nReturn the lowest index at which a value (second argument) should be inserted into an array (first argument) once it has been sorted. The returned value should be a number.\nFor example, getIndexToIns([1,2,3,4], 1.5) should return 1 because it is greater than 1 (index 0), but less than 2 (index 1).\n\n\nAnswer:\n\n\n\n\nfunction getIndexToIns(arr, num) {\n  arr.sort(function(a, b) {\n    return a - b;\n  });\n\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] >= num) return i;\n  }\n\n  return arr.length;\n}\n\ngetIndexToIns([40, 60], 50); // will display [40, 50, 60]\n\nFirst I sort the array using .sort(callbackFunction) to sort it by lowest to highest, from left to right.\nThen I use a for loop to compare the items in the array starting from the smallest one. When an item on the array is greater than the number we are comparing against, then we return the index as an integer.",
          "link": "https://dev.to/rthefounding/where-in-the-array-a-number-should-be-inserted-by-order-2p7h",
          "publishedOn": "2021-06-01T17:42:33.000Z",
          "wordCount": 575,
          "title": "Where In The Array A Number should Be Inserted By Order"
        },
        {
          "id": "https://dev.to/rthefounding/removing-an-array-with-a-falsy-value-2361",
          "author": "Randy Rivera",
          "description": "function bouncer(arr) {\n  return arr;\n}\n\nbouncer([7, \"ate\", \"\", false, 9]);\n\nWe should remove all falsy values from an array.\nFalsy values in JavaScript are false, null, 0, \"\", undefined, and NaN.\n// regular for loop that I use which is \nfor (let i = 0; i < arr.length: i++) { // which reads indexes.\n// This new method while watching videos which is \n for (let elem of arr {\n console.log(elem); \n }\n// basically its a loop that goes through all the elements themselves instead of going through the indexes.\n if (false) {\n console.log(\"hello\") \n; // it wont call out hello because false is a falsey value\n\nAnswer:\n\n\n\n\nfunction bouncer(arr) {\n  let result = [];\n  for (let elem of arr) {\n    if (elem) result.push(elem);\n  }\n  return result;\n}\n\nbouncer([7, \"ate\", \"\", false, 9]); // will display [7, \"ate\", 9]",
          "link": "https://dev.to/rthefounding/removing-an-array-with-a-falsy-value-2361",
          "publishedOn": "2021-06-01T17:26:27.000Z",
          "wordCount": 528,
          "title": "Removing An array With a Falsy Value"
        },
        {
          "id": "https://dev.to/rthefounding/using-slice-and-splice-p98",
          "author": "Randy Rivera",
          "description": "function frankenSplice(arr1, arr2, n) {\n  return arr2;\n}\n\nfrankenSplice([1, 2, 3], [4, 5, 6], 1);\n\nHere You are given two arrays and an index.\nLet's Copy each element of the first array into the second array, in order.\nWe begin inserting elements at index n of the second array.\nThen you should return the resulting array. The input arrays should remain the same after the function runs.\n####Hint:\nThe slice() method returns a shallow copy of a portion of an array into a new array object selected from start to end (end not included) where start and end represent the index of items in that array. The original array will not be modified.\nThe splice() method changes the contents of an array by removing or replacing existing elements and/or adding new elements in place\n\n\nAnswer:\n\n\n\n\nfunction frankenSplice(arr1, arr2, n) {\n  let copiedArr = arr2.slice();\n  copiedArr.splice(n, 0, ...arr1);\n  return copiedArr;\n}\n\nconsole.log(frankenSplice([1, 2, 3], [4, 5, 6], 1)); // will display [4, 1, 2, 3, 5, 6];",
          "link": "https://dev.to/rthefounding/using-slice-and-splice-p98",
          "publishedOn": "2021-06-01T17:18:38.000Z",
          "wordCount": 540,
          "title": "Using slice() and splice()"
        },
        {
          "id": "https://dev.to/msamik/running-gui-applications-inside-docker-container-14ch",
          "author": "Muhammad Sami Khanday",
          "description": "What is DOCKER?\nDocker is a set of platform as a service products that use OS-level virtualization to deliver software in packages called containers. Containers are isolated from one another and bundle their own software, libraries and configuration files; they can communicate with each other through well-defined channels.\nWhat is GUI ?\nThe graphical user interface is a form of user interface that allows users to interact with electronic devices through graphical icons and audio indicator such as primary notation, instead of text-based user interfaces, typed command labels or text navigation.\nLets Directly Jump to Practicles : \nDocker Engine Must be Installed in the Base OS / Host .\nTo confirm whether docker is installed or not we can use :\nDocker Engine must be in running state .\n[root@os]~# systemctl status docker\n\nWe must have a docker image to execute our task .\n[root@os]~# docker pull centos:latest\nWe will now create a Dockerfile in which we will specify our Requirements for our own custom Image\n[root@os]~# vim Dockerfile \nFROM centos:latest\n\n[root@os]~# docker build -t firefox:v1 .\n\ndocker build will help us to make our own customized image with tag firefox:v1\n\n[root@os]~# docker run -it --name task2 -e DISPLAY=$DISPLAY --net=host firefox:v1\n\n$DISPLAY == Enivornment Variable for our Display :0 is the main display.\n[root@os]~# firefox\n\n[root@os]~# jupyter notebook\n\nIn Addition to firefox i used jupyter notebook as a GUI APP.\nThanks for Visiting my Article",
          "link": "https://dev.to/msamik/running-gui-applications-inside-docker-container-14ch",
          "publishedOn": "2021-06-01T16:05:01.000Z",
          "wordCount": 657,
          "title": "Running GUI Applications inside Docker Container"
        },
        {
          "id": "https://dev.to/colmdoyle/the-best-incident-commanders-might-not-be-where-you-think-fac",
          "author": "Colm Doyle",
          "description": "The Incident Commander is a powerful role in the world of Incident Management. Like Flight Directors in NASA missions, they have responsibility for the decisions made and actions taken during an incident. Depending on your company’s process, they may have powers like stopping deployments, commandeering staff or even shutting down the service. Whatever they deem necessary for resolving the incident.\nIn many software organizations, the Incident Commander is an on-call rotation, shared amongst senior members of the engineering team. And this seems logical right? Engineering managers and senior engineers will be close to the technology involved, so are best placed to solve the issues that may arise. But have you ever considered that maybe you should be casting your net a bit wider when it come…",
          "link": "https://dev.to/colmdoyle/the-best-incident-commanders-might-not-be-where-you-think-fac",
          "publishedOn": "2021-06-01T16:00:00.000Z",
          "wordCount": 1429,
          "title": "The best Incident Commanders might not be where you think"
        }
      ]
    },
    {
      "title": "DEV Community",
      "feedUrl": "https://dev.to/feed/tag/linux",
      "siteUrl": "https://dev.to",
      "articles": [
        {
          "id": "https://dev.to/amzy0/luxarg-another-keyboard-frirendly-editor-for-linux-freebsd-538f",
          "author": "Amzy 0 |  محمد امین عظیمی",
          "description": "LINK",
          "link": "https://dev.to/amzy0/luxarg-another-keyboard-frirendly-editor-for-linux-freebsd-538f",
          "publishedOn": "2021-06-02T00:39:38.000Z",
          "wordCount": 406,
          "title": "LUXARG another keyboard frirendly editor in PURE PYTHON"
        },
        {
          "id": "https://dev.to/msamik/running-gui-applications-inside-docker-container-14ch",
          "author": "Muhammad Sami Khanday",
          "description": "What is DOCKER?\nDocker is a set of platform as a service products that use OS-level virtualization to deliver software in packages called containers. Containers are isolated from one another and bundle their own software, libraries and configuration files; they can communicate with each other through well-defined channels.\nWhat is GUI ?\nThe graphical user interface is a form of user interface that allows users to interact with electronic devices through graphical icons and audio indicator such as primary notation, instead of text-based user interfaces, typed command labels or text navigation.\nLets Directly Jump to Practicles : \nDocker Engine Must be Installed in the Base OS / Host .\nTo confirm whether docker is installed or not we can use :\nDocker Engine must be in running state .\n[root@os]~# systemctl status docker\n\nWe must have a docker image to execute our task .\n[root@os]~# docker pull centos:latest\nWe will now create a Dockerfile in which we will specify our Requirements for our own custom Image\n[root@os]~# vim Dockerfile \nFROM centos:latest\n\n[root@os]~# docker build -t firefox:v1 .\n\ndocker build will help us to make our own customized image with tag firefox:v1\n\n[root@os]~# docker run -it --name task2 -e DISPLAY=$DISPLAY --net=host firefox:v1\n\n$DISPLAY == Enivornment Variable for our Display :0 is the main display.\n[root@os]~# firefox\n\n[root@os]~# jupyter notebook\n\nIn Addition to firefox i used jupyter notebook as a GUI APP.\nThanks for Visiting my Article",
          "link": "https://dev.to/msamik/running-gui-applications-inside-docker-container-14ch",
          "publishedOn": "2021-06-01T16:05:01.000Z",
          "wordCount": 657,
          "title": "Running GUI Applications inside Docker Container"
        },
        {
          "id": "https://dev.to/ferfox1981/gui-simples-no-linux-utilizando-node-js-e-zenity-1haf",
          "author": "Fernando Raposo da Camara Silva",
          "description": "(Este post é uma tradução deste original em inglês)\nMeus objetivos serão os seguintes:\nUsar o Node.js para acessar dados financeiros relacionados a preços de títulos do Tesouro Direto;\nCriar um mecanismo para de forma sistemática checar o preço dos títulos (minuto a minuto, ou hora por hora...);\nUsar o Zenity para exibir uma notificação com o preço corrente do título.\nAs informações do Tesouro Direto podem ser achadas aqui. Além disso, se apertarmos o F12 e checarmos a aba Network, veremos o seguinte json sendo recebido pelo browser:\nhttps://www.tesourodireto.com.br/json/br/com/b3/tesourodireto/service/api/treasurybondsinfo.json\nconst axios = require('axios');\nconst { exec } = require(\"child_process\");\nconst https = require('https');\n\n\n\nconst instance = axios.create({\n  httpsAgent: new htt…",
          "link": "https://dev.to/ferfox1981/gui-simples-no-linux-utilizando-node-js-e-zenity-1haf",
          "publishedOn": "2021-06-01T02:12:53.000Z",
          "wordCount": 960,
          "title": "GUI Simples no Linux Utilizando Node.js e Zenity"
        },
        {
          "id": "https://dev.to/shekari_ah/toggle-your-vpn-connection-with-a-shortcut-in-manjaro-10ie",
          "author": "Amir Hossein Shekari",
          "description": "This is a little script that allows you to toggle your VPN connection by running a bash script. \nI mostly use it by assigning it to a shortcut (meta + v).",
          "link": "https://dev.to/shekari_ah/toggle-your-vpn-connection-with-a-shortcut-in-manjaro-10ie",
          "publishedOn": "2021-05-31T15:55:55.000Z",
          "wordCount": 409,
          "title": "Toggle your VPN connection with a shortcut, in Manjaro"
        },
        {
          "id": "https://dev.to/sagar027/using-route-tables-to-implement-multiple-network-interface-scenario-k1d",
          "author": "sagar027",
          "description": "There could scenarios where you would want to isolate traffic on network interfaces for specific layers of applications. Example, one interface attached to an application machine can act as a receiving endpoint for application-bound traffic and another network interface can act as a communication interface with the database / data layer. This scenario can be visualised as :\n\nNow, lets see how this can be implemented. I am going to use Azure for demonstration.\nIn Azure, private networks are referred to as 'Virtual Networks' and sub-networks as 'Subnets’\nOur virtual network's address space is : 10.0.16.0/22.\nHere, as you can see we have our application linux machine (also referred to as Virtual Machine aka VM) in a virtual network. The VM has two network interfaces. One is in first subnet (l…",
          "link": "https://dev.to/sagar027/using-route-tables-to-implement-multiple-network-interface-scenario-k1d",
          "publishedOn": "2021-05-31T13:39:14.000Z",
          "wordCount": 868,
          "title": "Using route tables to implement multiple-network-interface scenario"
        },
        {
          "id": "https://dev.to/semirteskeredzic/install-nginx-on-ubuntu-20-04-server-12ni",
          "author": "Semir Teskeredzic",
          "description": "Welcome to the short guide on how to install Nginx on your server running Ubuntu 20.04.\nSo what is Nginx? As per nginx.com: \nNginx is open source software for web serving, reverse proxying, caching, load balancing, media streaming, and more. It started out as a web server designed for maximum performance and stability. In addition to its HTTP server capabilities, NGINX can also function as a proxy server for email (IMAP, POP3, and SMTP) and a reverse proxy and load balancer for HTTP, TCP, and UDP servers.\nSo in short, Nginx is a web server that has many capabilities in serving the content on server to the users.\nYou have to check that the server you want to install Nginx on is properly configured before proceeding so you can install and configure Nginx without any future issues. You can re…",
          "link": "https://dev.to/semirteskeredzic/install-nginx-on-ubuntu-20-04-server-12ni",
          "publishedOn": "2021-05-31T13:28:12.000Z",
          "wordCount": 1350,
          "title": "Install Nginx on Ubuntu 20.04 Server"
        },
        {
          "id": "https://dev.to/kennyalves/o-paciente-terminal-2-115h",
          "author": "Kenny Alves",
          "description": "Em busca de um mestre Yoda\n\n\nComo ficou decidido que o objetivo era se tornar um dev front-end, agora precisava desvendar o caminho das pedras para conseguir chegar a terra sonhada. \nPra isso, precisava responder algumas perguntas como:\n- Certo, mas por onde eu começo?\n- Tem algum curso bom?\n- Quais são as melhores escolas?\nSaí em busca das respostas, na maravilhosa rede internética mundial de computadores e como nada é simples, muito menos na vida de um newbie, todos os lugares respondiam coisas diferentes.\nMas tinha um consenso. Quer ser Front-End? Aprenda HTML5, CSS e JavaScript. É isso, simples assim, agora voa assombração, se vira.\nMas onde, caral@#%, vou iniciar essa jornada? 🤯\nEntre os óbvios, e pagos, que seriam a Alura e a Udemy, encontrei num fórum que não lembro qual (obrigado …",
          "link": "https://dev.to/kennyalves/o-paciente-terminal-2-115h",
          "publishedOn": "2021-05-31T13:05:55.000Z",
          "wordCount": 879,
          "title": "O Paciente Terminal #2"
        },
        {
          "id": "https://dev.to/limal/basic-http-authentication-in-traefik-15l6",
          "author": "Łukasz Wolnik",
          "description": "In order to secure your website with Basic HTTP authentication in Traefik do the following.\napache2-utils\n\n\n\n\n\nsudo apt install apache2-utils\n\nhtpasswd -nB adam\n\nThe n option will display the hash in stdout and the B option will use more secure encryption.\ndevto password's hash is shown below:\nadam:$2y$05$h9OxLeY20/5uiXjfPgdRxuFlrfqBf2QifYDgrwsR6rAEgX3/dpOGq\n\nadam:$$2y$$05$$h9OxLeY20/5uiXjfPgdRxuFlrfqBf2QifYDgrwsR6rAEgX3/dpOGq\n\n- \"traefik.http.middlewares.yourservice-basicauth.basicauth.users=adam:$$2y$$05$$h9OxLeY20/5uiXjfPgdRxuFlrfqBf2QifYDgrwsR6rAEgX3/dpOGq\"\n\nRemember to use the escaped double $.\nYou may have existing rules for your HTTPS route, e.g. compressing, etc.\nSo create a new chain where you'll combine your existing middlewars and the newly created yoursite-basicauth.\nIn your docker-compose.yml file:\n  labels:\n    - \"traefik.http.middlewares.yourservice-https-chain.chain.middlewares=yourservice-basicauth,yourservice-other-middleware-remove-or-replace-with-yours\"\n    - \"traefik.http.routers.yourservice-https.middlewares=yourservice-https-chain\"\n\n\nRestart your service and your website will now prompt browsers for username and password.",
          "link": "https://dev.to/limal/basic-http-authentication-in-traefik-15l6",
          "publishedOn": "2021-05-31T12:21:38.000Z",
          "wordCount": 542,
          "title": "Basic HTTP authentication in Traefik"
        },
        {
          "id": "https://dev.to/harvey/why-i-switched-to-vi-vim-4hd1",
          "author": "Harvey",
          "description": "When I started writing code, I used Notepad and Notepad++. When I switched to OS X. In my first computer science class in high school we used Visual Studio.\nWhen I finally migrated to Linux, I started using vi/vim after using nano for a while. Unlike nano, vim is a lot more powerful but is harder to learn.\nHow did I go from never using vim to using it all the time? How does one make a complete switch? I'll walk you through how I got here and share some tips along the way.\nIf you are trying to learn Vim, or you are on the fence about it, here are my top 5 reasons why I love this keyboard-centered editor:\nThe more I used it, the faster I became, and the faster I became the more productive I was.\n\n\nIt's everywhere. Linux, OpenBSD, FreeBSD, Mac OS X and every other operating system supports Vi/Vim. \n\n\nI don't like to use my mouse. I never did anything in Sublime Text without the help of my mouse. This is a annoying, easier to keep hands on the keyboard\n\n\nIt can be used over the network using ssh. Login to any box and use it.\n\n\nI use it for almost everything: programming, writing, blogging, etc.\n\n\n\n\nSwitching is up to you, but here are my reasons.\nWhy would somebody use ancient tools like vi/vim when there are so many modern ones out there? \nOne day I had to answer this question for my friend. He asked, “Why don’t you use Sublime Text like me?” I explain to him that sometimes it’s better to use older/simpler tools than more complex ones.\nHere are my reasons:\nLearn how to use the best editor ever made.\nNever get lost in a sea of menus and toolbars that you never use (just like vim does not have any).\nHave an excuse to use powerful, built-in commands that are available in no other editor (and are faster than anything you can do with a GUI).\nWork fast using commands\nTo practice vim, you can use this site",
          "link": "https://dev.to/harvey/why-i-switched-to-vi-vim-4hd1",
          "publishedOn": "2021-05-31T10:58:53.000Z",
          "wordCount": 797,
          "title": "Why I Switched to vi/vim"
        },
        {
          "id": "https://dev.to/jones268/tmux-terminal-multiplexer-484",
          "author": "jones268",
          "description": "tmux is a terminal multiplexer: it enables a number of terminals (or windows), each running a separate program, to be created, accessed, and controlled from a single screen. \ntmux may be detached from a screen and continue running in the background, then later reattached. \nIt allows you to easily manage separate terminal sessions inside a single terminal window. \ntmux can connect to a server, and multiple clients can be connected to the same session, simultaneously exchanging their input and display.\n\nYou can use these commands and shortcuts to work with tmux in Linux. From the command line:\n\n\n\nSession Control\n\n\n\n\n\ntmux\nStart a new session\n\n\ntmux new -s \nStart a new session with the name chosen\n\n\ntmux ls\nList all sessions\n\n\n\n\n\n\nPane Control\n\n\n\n\n\nCtrl b, \"\nSplit pane horizontally\n\n\nCtrl b, %\nSplit pane vertically\n\n\nCtrl b, o\nNext pane\n\n\n\nI've used tmux for years, and it has become an essential part of my work flow. I couldn't imagine editing code without it. If you want to practice Linux commands, you can use these exercises \ntmux is a terminal multiplexer: it enables a number of terminals to be created, accessed, and controlled from a single screen.\nFeatures include:\n• Splitting a terminal window into horizontal or vertical panes.\n\ntmux is very useful for people who commonly work on remote machines via ssh.\nWhy did I pick tmux over screen and a terminal multiplexer? Three reasons.\nFirst, tmux is written is responsive and light.\nSecond, tmux is much more expressive than screen. I can split my terminal into six panes and change the size of each pane with the same ease as resizing a terminal in GNU Screen.\nThird, tmux has integrated support for a status bar. This means I can read from one pane and keep an eye on other panes at the same time.",
          "link": "https://dev.to/jones268/tmux-terminal-multiplexer-484",
          "publishedOn": "2021-05-31T09:31:24.000Z",
          "wordCount": 710,
          "title": "tmux terminal multiplexer"
        },
        {
          "id": "https://dev.to/hostnextra/how-to-install-modx-revolution-on-ubuntu-20-04-20ob",
          "author": "HostnExtra Technologies",
          "description": "In this article, we'll explain how to install MODX Revolution on Ubuntu 20.04 with LAMP.\nMODX offers the best qualities of content management systems, web development frameworks, and cloud hosting with less complexity, limitations, and bloat. It’s the Content Management Framework built to help you deliver any digital experience faster, your way, and with improved SEO, security, and speed.\nPrerequisites\nAn Ubuntu 20.04 installed dedicated server or KVM VPS.\nA root user access or normal user with administrative privileges.\nInstall MODX Revolution on Ubuntu 20.04 with LAMP\n1. Keep the server updated\nUpdate the package repository index, and upgrade the installed packages.\n# apt update && sudo apt -y upgrade\n2. Install Apache webserver\n# apt install apache2 -y\nIn case, you enabled firewall and …",
          "link": "https://dev.to/hostnextra/how-to-install-modx-revolution-on-ubuntu-20-04-20ob",
          "publishedOn": "2021-05-31T04:14:18.000Z",
          "wordCount": 1173,
          "title": "How to Install MODX Revolution on Ubuntu 20.04"
        },
        {
          "id": "https://dev.to/sbalasa/sample-dtrace-in-linux-2pp3",
          "author": "Santhosh Balasa",
          "description": "#!/usr/sbin/dtrace -s\n#pragma D option quiet\n\nBEGIN\n{\n        printf(\"Starting vxdisk resize analysis at %lu\", timestamp);\n        printf(\"\\n\");\n}\n\nEND\n{\n        printf(\"Ending vxdisk resize analysis at %lu\", timestamp);\n        printf(\"\\n\");\n}\n\n\n#!/usr/sbin/dtrace -s\n#pragma D option quiet\n\nfbt:vxio:volsp_strategy:entry\n{\n        printf(\"%Y vm issued IO buf %p\\n\", walltimestamp, arg0);\n        self->buf=arg0;\n}\n\nfbt::ldi_strategy:entry\n/self->buf == arg0/\n{\n        printf(\" %Y ldi_strategy received vm buf %p\\n\", walltimestamp, arg0);\n}\n\nfbt::ldi_strategy:return\n/self->buf == arg1/\n{\n        printf(\" %Y ldi_strategy returned vm buf %p\\n\", walltimestamp, arg1);\n}",
          "link": "https://dev.to/sbalasa/sample-dtrace-in-linux-2pp3",
          "publishedOn": "2021-05-31T03:49:56.000Z",
          "wordCount": 439,
          "title": "Sample Dtrace in Linux"
        }
      ]
    },
    {
      "title": "DEV Community",
      "feedUrl": "https://dev.to/feed/tag/angular",
      "siteUrl": "https://dev.to",
      "articles": [
        {
          "id": "https://dev.to/angular/highlight-text-in-paragraphs-with-a-simple-directive-in-angular-2da",
          "author": "Adithya Sreyaj",
          "description": "How to highlight text in a paragraph with the help of directives in Angular. Especially helpful in highlighting text matching the search term. You could have come across this in your browser or IDE when you search for something, the matching items will be highlighted to point you to the exact place of occurrence.\nHere is what we are going to build in this post. A very simple and straightforward highlight directive in Angular. We see something similar in chrome dev tools.\nThe idea is pretty simple. We just have to match the searched term and somehow wrap the matched text in a span or mark (ref) tag so that we can style them later according to our needs.\nWe are going to use Regex to find matches in our paragraph. Regex makes it very simple to do operations like this on strings. The directive…",
          "link": "https://dev.to/angular/highlight-text-in-paragraphs-with-a-simple-directive-in-angular-2da",
          "publishedOn": "2021-06-01T04:44:44.000Z",
          "wordCount": 1460,
          "title": "Highlight text in paragraphs with a simple directive in Angular"
        },
        {
          "id": "https://dev.to/rajeshkumaryadavdotcom/angular-how-to-automate-angular-deployment-for-aws-s3-angular-website-4g2d",
          "author": "Rajesh Kumar Yadav",
          "description": "If you have hosted your angular app to AWS S3 then you can automate your ng build -prod and drag and drop to S3 bucket by simply following below steps -  \nStep 1 - Add @jefiozie\n/ngx-aws-deploy to your project and for this run below command (your angular CLI should be up-to-date)\nng add @jefiozie/ngx-aws-deploy\n\nStep 2 - Provide necessary details to the terminal while step 1 is in progress.\n\nYou will be prompted for a couple of questions:\n\nYour AWS Region\n\nThe bucket you would like the files to be uploaded.\n\nThe Secret Access Key\n\nThe Access key Id\n\nThe folder where the files should be uploaded (optional)  \nStep 3 - Verify the details you have provided is correct, open angular.json and search for deploy and should be able to see below code -\nangular.json is update with a new builder:\n\n\"dep…",
          "link": "https://dev.to/rajeshkumaryadavdotcom/angular-how-to-automate-angular-deployment-for-aws-s3-angular-website-4g2d",
          "publishedOn": "2021-06-01T03:31:38.000Z",
          "wordCount": 780,
          "title": "Angular : How to automate angular deployment for AWS S3 Angular Website??"
        },
        {
          "id": "https://dev.to/meetupfeedio/angular-meetup-videos-from-april-2021-odl",
          "author": "MeetupFeed",
          "description": "MeetupFeed is back with a summary of all the exciting Angular meetup videos from April, 2021. Below you’ll find great meetup videos about different aspects of Angular, useful tips and some great tricks as well.\nSystemizing Router Animations | Zack DeRose\nNgRx Data and Websockets | Jay Bell\nDebugging an Angular app | David Müllerchen\nToken security and ESLint in Angular | Philippe De Ryck & James Henry\nCan an Angular application store tokens in localStorage?\n– Yes, of course! LocalStorage is persistent storage, so the token is available to all tabs and windows. It even survives a browser restart.\n– No, absolutely not! LocalStorage is insecure, and an attacker will be able to steal the token.\nBelieve it or not, but both answers are correct. As simple as this question is, the answer is far fr…",
          "link": "https://dev.to/meetupfeedio/angular-meetup-videos-from-april-2021-odl",
          "publishedOn": "2021-06-01T00:08:11.000Z",
          "wordCount": 911,
          "title": "Angular meetup videos from April, 2021"
        },
        {
          "id": "https://dev.to/haze/humble-book-bundle-web-development-design-by-o-reilly-3c20",
          "author": "Haze",
          "description": "Humble Book Bundle: Web Development & Design by O’Reilly\nWe spend hours of our lives on countless websites that help us connect with each other, catch up on the latest news, buy stuff, and much more. Isn’t it about time we started making websites of our own? O’Reilly thinks so, which is why they’ve teamed up with Humble Bundle for the newest eBooks bundle!\nEnjoy learning the ins and outs of web development and web design with eBooks like Learning JavaScript, Laws of UX, and Learning PHP, MySQL & JavaScript.\nYour purchase of this bundle helps support Code For America, who use the principles and practices of the digital age to improve how the government serves the American public, and how the public improves government.\nThis bundle launched on May 31 at 11:00 am PST and lasts through June 21, 2021. Pay what you want and support charity!",
          "link": "https://dev.to/haze/humble-book-bundle-web-development-design-by-o-reilly-3c20",
          "publishedOn": "2021-05-31T18:28:08.000Z",
          "wordCount": 538,
          "title": "Humble Book Bundle: Web Development & Design by O'Reilly"
        },
        {
          "id": "https://dev.to/ngconf/angular-state-management-with-behaviorsubject-22b0",
          "author": "ng-conf",
          "description": "Jim Armstrong | ng-conf | Dec 2019\n\nThis article is targeted to beginning-to-intermediate-level Angular developers wishing to obtain insight into methods for state management in front-end applications. A simple, but highly customizable, reactive state-management service is constructed on top of the RxJs BehaviorSubject. This approach can be used for both management of a global store or as model manager for a lazy-loaded route. Both use cases are illustrated through an Angular version 8 application.\nWhile the code in this application may be extended for practical use in your own applications, there is another motivation for studying the internals of state management. Doing so provides a better understanding of the underlying details of such management, which makes you a better consumer of t…",
          "link": "https://dev.to/ngconf/angular-state-management-with-behaviorsubject-22b0",
          "publishedOn": "2021-05-31T17:39:10.000Z",
          "wordCount": 3351,
          "title": "Angular State Management With BehaviorSubject"
        },
        {
          "id": "https://dev.to/mmuscat/angular-composition-api-93m",
          "author": "Michael Muscat",
          "description": "Angular Composition API is a lightweight (3kb), experimental library for writing functional Angular applications.\nfunction State(props: Props) {\n  Subscribe(() => {\n    console.log(\"Hello World!\")\n  })\n}\n\nThis library introduces an execution context that removes a lot of the ceremony needed to wire and orchestrate Angular components. It provides a layer of abstraction on top of existing Angular constructs, such as lifecycle hooks, change detection, queries, host bindings and host listeners. It embraces the power of RxJS with composable subscriptions. Angular Composition API is designed to feel native to the Angular developer.\nThere are two core APIs: View and Service.\nThe View API is a mixin that extends an Angular component or directive. It takes a State factory function and optional Prop…",
          "link": "https://dev.to/mmuscat/angular-composition-api-93m",
          "publishedOn": "2021-05-31T16:10:06.000Z",
          "wordCount": 1015,
          "title": "Angular Composition API"
        },
        {
          "id": "https://dev.to/angular/the-famous-misconceptions-in-angular-3dl1",
          "author": "Vugar",
          "description": "As Front End developer who worked in Forune 500 companies such as Raymond James financial advisory company and SwissRe leading insurance broker, in this blog we gonna discuss some famous misconceptions among non- Angular developers. This blog should be unbiased and focused on facts only.\nMyth #1: Steep Learning Curve in Angular\n\nOne of the famous misleading opinions we observe among people especially on Twitter and youtube gurus is ‘Angular has a steep learning curve’. The short answer is yes, Angular has not a small road to learning and master. But let’s first analyze the definition of this concept. A steep learning curve refers to: ‘The amount of time required to learn is big’. Interesting but what makes it BIG? First, let’s point out Angular is a fully-featured framework. It has built-i…",
          "link": "https://dev.to/angular/the-famous-misconceptions-in-angular-3dl1",
          "publishedOn": "2021-05-31T01:38:27.000Z",
          "wordCount": 2473,
          "title": "The Famous Misconceptions in Angular"
        },
        {
          "id": "https://dev.to/mateuszto/how-to-add-editable-post-angular-44el",
          "author": "Mateusz Tomczyk",
          "description": "Hi, i got my app and now I try to make edit feature but I can't do you got any tutorials or tips?\nhttps://stackblitz.com/edit/angular-ivy-qkhrjx?file=src%2Fapp%2Fnotes%2Fnotes.component.ts",
          "link": "https://dev.to/mateuszto/how-to-add-editable-post-angular-44el",
          "publishedOn": "2021-05-29T15:21:54.000Z",
          "wordCount": 402,
          "title": "How to add editable post angular"
        },
        {
          "id": "https://dev.to/chrisedrego/how-to-setup-ci-cd-pipeline-using-gitlab-ci-to-deploy-to-azure-storage-azure-cdn-15g5",
          "author": "chrisedrego",
          "description": "A Complete Zero-to-Hero guide in setting up a CI/CD Pipeline using Gitlab-CI to deploy with the help of Azure Storage\n\n\n\nFor the purpose of this demo, I have already created a simple Angular 7 application that is hosted on Gitlab, the application is a simple, digital clock that looks something like this.\n\n\nThe above diagram describes the whole process, right from a developer pushing the code, to the point where the CI/CD Pipeline builds & deploys the code to Azure Storage (Blob) which is linked to Azure CDN Endpoint.\nDeveloper goes ahead and performs the development locally of the application after which he goes ahead and commits and pushes the code to the version control system in our case it’s Gitlab.\n\n\nWe would then have Gitlab perform the CI/CD in the form of the steps mentioned in git…",
          "link": "https://dev.to/chrisedrego/how-to-setup-ci-cd-pipeline-using-gitlab-ci-to-deploy-to-azure-storage-azure-cdn-15g5",
          "publishedOn": "2021-05-29T07:56:58.000Z",
          "wordCount": 1998,
          "title": "How to Setup CI/CD Pipeline using Gitlab-CI to Deploy to Azure Storage & Azure CDN."
        },
        {
          "id": "https://dev.to/goku2358/p-multiselect-jaws-issue-2a3f",
          "author": "Gokul Nath",
          "description": "p-multiselect isnt getting read by JAWS screen reader for some reason. Can someone help please?",
          "link": "https://dev.to/goku2358/p-multiselect-jaws-issue-2a3f",
          "publishedOn": "2021-05-28T21:02:17.000Z",
          "wordCount": 369,
          "title": "p-MultiSelect - JAWS - Issue"
        },
        {
          "id": "https://dev.to/manav_jain/the-best-frontend-framework-the-battle-lines-are-drawn-3onm",
          "author": "Manav Jain",
          "description": "Taking into thought the viewpoint of the product development life cycle, the correct decision among top front-end frameworks will be the major advance of your future achievement. \nThe market has a wide variety because of the tremendous arrangement of difficulties that developers address each day. Along these lines the quantity of new front-end frameworks extensively increments. An ever increasing number of various frameworks show up, and in this article, we would examine top front-end frameworks in 2021. \nAt the point when you settle on your decision, remember certain necessities that will help you incredibly. Choosing among top UI frameworks, consider both the clients' and development groups' points of view. Those features cover \"planning, development, testing and upkeep stages**. \nThe be…",
          "link": "https://dev.to/manav_jain/the-best-frontend-framework-the-battle-lines-are-drawn-3onm",
          "publishedOn": "2021-05-28T07:31:07.000Z",
          "wordCount": 1831,
          "title": "The Best Frontend Framework: The Battle Lines are Drawn"
        },
        {
          "id": "https://dev.to/shivamd20/your-angular-code-base-is-deprecated-315e",
          "author": "Shivam",
          "description": "No, upgrading to Angular 12.x.x will not help.\nThe Typescript experimental decorators were based on TC39 proposal-decorators.\nWe use the same Decorators in our Angular codebase to create services, components and other Angular constructs.\nBut the same TC39 proposal has evolved in a different direction which is semantically not compatible with the experimental Typescript decorators.   \nThe new spec for Decorators is easier to use and write.\nYou can find the detailed comparison between old and new decorators here. \nJust finished up the first draft of the new decorators spec, pretty excited about it 😄 https://t.co/ELhZbsiaiR\n— The p is silent (@pzuraq\n) May 27, 2021\n \n\n\n\nDoes this mean that Typescript experimental decorators will not be compatible with Javascript decorators 😨\n— Shivam (@shivamd20\n) May 27, 2021\n \n\n\n\nUnfortunately no, the new proposal has differing semantics from previous proposals in a number of ways. TypeScript experimental decorators were also incompatible with the Define semantics class fields, which caused a decent amount of breakage in the ecosystem.\n— The p is silent (@pzuraq\n) May 27, 2021\n \n\n\n\nWhen the proposal advances, figuring out a step-by-step incremental upgrade path for existing decorators users is definitely going to be a priority though! No user left behind 😄\n— The p is silent (@pzuraq\n) May 27, 2021\n \n\nLet's just hope that this doesn’t result in fragmentation of JavaScript decorators. We have already faced a lot inconvenience due to commonsjs and ES6 imports.",
          "link": "https://dev.to/shivamd20/your-angular-code-base-is-deprecated-315e",
          "publishedOn": "2021-05-27T23:27:40.000Z",
          "wordCount": 676,
          "title": "Your Angular code base is deprecated."
        }
      ]
    },
    {
      "title": "DEV Community",
      "feedUrl": "https://dev.to/feed/tag/typescript",
      "siteUrl": "https://dev.to",
      "articles": [
        {
          "id": "https://dev.to/saj96n/i-built-a-link-shortener-app-with-nextjs-cnh",
          "author": "Jan Krzeptowski",
          "description": "Live demo: l.jkrzeptowski.pl\nNextAuth.js - authentication for Next.js\nPrisma 2 - Next-generation ORM for Node.js and TypeScript\n\n\nReact query - used for fetching data and state management\n\n\n\nReact Hook Form - used for URL input state management and validation\n\n\n\nTailwind CSS - A CSS framework used for styling\n\n\n\n\n\n\nI'd love to hear your feedback about this app. You can also introduce your ideas to this project by contributing to it.\nHere's a link for the GitHub repo:\n / \n        surl\n      \n    \nShortURL is a modern link shortener based on Next.js\nDemo: http://l.jkrzeptowski.pl/\ngit clone https://github.com/saj96n/surl.git\ncd surl\n\nnpm install\n# or\nyarn install\nDATABASE_URL: MySQL database connection URL\n(https://www.prisma.io/docs/concepts/database-connectors/mysql/#connection-details)\nNEXTAUTH_URL: URL of the app\nNEXT_PUBLIC_ORIGIN: URL of the app\nNEXT_PUBLIC_MATOMO_URL: URL of the Matomo instance (optional)\nNEXT_PUBLIC_MATOMO_SITE_ID: Matomo site id (optional)\nhttps://next-auth.js.org/configuration/providers\nnpm run dev\n# or\nnpm run build\nnpm start\nView on GitHub",
          "link": "https://dev.to/saj96n/i-built-a-link-shortener-app-with-nextjs-cnh",
          "publishedOn": "2021-06-01T21:00:13.000Z",
          "wordCount": 606,
          "title": "I built a link shortener app with NextJS"
        },
        {
          "id": "https://dev.to/merri/react-class-components-in-the-world-of-hooks-5982",
          "author": "Vesa Piittinen",
          "description": "Hooks have landed the React world pretty hard. It isn't a full-on victory everywhere, I know places where people have more of a \"they're kids toys\" mentality and stay in 100% class + hookless function components, but in general I guess we can agree hooks have been a success.\nThere are a lot of posts on why hooks are great already, but I want to focus a bit more on nuances that might help you decide when to use classes, and when hooks are the better fit.\nYou can add context to class components, but the syntax can be a bit awkward especially if you're also using TypeScript and want to get the goodies:\nclass YourComponent extends React.PureComponent {\n  static contextType = YourContext;\n  context: React.ContextType<typeof YourContext>;\n\n  render() {\n    const { stuffFromContext } = this.conte…",
          "link": "https://dev.to/merri/react-class-components-in-the-world-of-hooks-5982",
          "publishedOn": "2021-06-01T18:45:30.000Z",
          "wordCount": 1453,
          "title": "React class components in the World of Hooks"
        },
        {
          "id": "https://dev.to/mateocerquetella/understand-polymorphism-once-for-all-4po",
          "author": "Mateo Cerquetella",
          "description": "The main reason for using interfaces is to achieve polymorphism and to provide developers with the ability to implement interface methods in their own way in the future.\nIn this example I will use TypeScript and I will put the repository at the end of the note\nSuppose we have an interface and three classes:\n\nThis is the connector interface.\nNow we are going to implement the Wifi communication.\n\nHere we have developed our concrete class called WifiConnector which has its own implementation of type Connector.\nNow we are creating our System which has a Connector component. This is called dependency injection.\n\n\nConnector is an interface and must have the method doConnect().\nNow, since Connector is an interface, the System class has much more flexibility.\nWe can pass any type that has implemented the Connector interface.\nFor example, now the developer wants to add a Bluetooth  connection module:\n\nWe see that WifiConnector and BluetoothConnector have their own implementation.\nSo we can pass any of them to the System class as a constructor parameter. This is called polymorphism.\nThe System class is now not aware of whether it is Bluetooth or Wifi. We can even add another communication module such as Infrared, Bluetooth5 and whatever, simply by implementing the Connector interface.\nThis is called Duck Typing. The connector type is now dynamic since doConnect() is just a placeholder and the developer implements it as their own.\nHere is the repository in case you need it and thanks for reading!",
          "link": "https://dev.to/mateocerquetella/understand-polymorphism-once-for-all-4po",
          "publishedOn": "2021-06-01T15:44:49.000Z",
          "wordCount": 678,
          "title": "Understand Polymorphism once for all"
        },
        {
          "id": "https://dev.to/tlylt/typescript-generic-function-reported-as-jsx-error-57nf",
          "author": "Liu YongLiang",
          "description": "Motivation\n\n\n\n\n\nconst genericFn = <T>() => {\n    return \"This is a poorly written example generic function\"\n}\n\nAbove is an example of a function with a generic parameter T that could potentially be used within the function body. However, if the above code is saved in a .tsx file (In my context, within a React application, while trying to create a generic custom hook), you will receive with the following error when hover over  <T>:\nJSX element 'T' has no corresponding closing tag.ts(17008)\nCannot find name 'T'.ts(2304)\n\nTo resolve the issue, I started with researching on how to properly define a generic function in TypeScript. Perhaps I made a mistake somewhere in the above syntax. I landed on two articles here and here. Both of  them talked about how to create a custom React hook that uses…",
          "link": "https://dev.to/tlylt/typescript-generic-function-reported-as-jsx-error-57nf",
          "publishedOn": "2021-06-01T11:59:52.000Z",
          "wordCount": 882,
          "title": "TypeScript Generic Function Reported As JSX Error"
        },
        {
          "id": "https://dev.to/ethancarlsson/figuring-out-hello-world-in-java-as-a-javascript-python-developer-h0d",
          "author": "Ethan Carlsson",
          "description": "I’m coming into Java having already learned Python and JavaScript. I’m hoping that this can make it easier for me to understand a lot of Java and help others in a similar situation.\nLike this:\npublic class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Hello World\");\n    }\n}\n\nThis is almost a joke when compared to Python, which does the same thing in less than half the lines and far fewer words.\ndef hello_world():\n    print('Hello World')\n\nHowever, the difference between the two is not as dramatic as it looks at first blush. Really, java is just asking for more things that a language like Python will leave as optional.\nclass HelloWorld:\n    def hello_world(self):\n        print('Hello World')\n\nor in JavaScript:\nclass HelloWorld {\n    main() {\n        c…",
          "link": "https://dev.to/ethancarlsson/figuring-out-hello-world-in-java-as-a-javascript-python-developer-h0d",
          "publishedOn": "2021-06-01T11:26:09.000Z",
          "wordCount": 1409,
          "title": "Figuring out “Hello World” in Java as a Javascript/Python Developer"
        },
        {
          "id": "https://dev.to/tbouffard/mxgraph-usage-in-typescript-projects-4obn",
          "author": "Thomas Bouffard",
          "description": "This article is the first one of a series about mxGraph, the Javascript diagramming library.\nOver the last few months, my team has used it on a day-to-day basis as the rendering foundation of bpmn-visualization, an open source TypeScript  library for visualizing process execution data on BPMN diagrams.\nIn this series, I will share integration challenges and solutions when using mxGraph in TypeScript projects, tooling developed to simplify mxGraph based developments, rendering extensions, usage tips and much more.\nMost aspects described in the articles will also apply to JavaScript projects using mxGraph.\nA few years ago, the mxGraph core development team stated that it would never port mxGraph to TypeScript, nor support it, and this was still applicable in 2020. (See issue #81 and related …",
          "link": "https://dev.to/tbouffard/mxgraph-usage-in-typescript-projects-4obn",
          "publishedOn": "2021-06-01T10:19:05.000Z",
          "wordCount": 1600,
          "title": "mxGraph usage in TypeScript projects"
        },
        {
          "id": "https://dev.to/jjhiggz/nestjs-could-be-amazing-someday-3in7",
          "author": "Jonathan Higger",
          "description": "Introduction\n\n\nNestJS is a nice little framework for using typescript with node. It enforces opinionated design patterns that are supposed to be familiar to Java Programmers who have worked with Spring. It's built off of Node-TS and can be configured a whole shit-ton of ways. I'm personally making a postgres database using TypeORM and I'm not hating the process. \nIn this article we'll get into \nWho nest might be good for\nWhat I like about Nest so far\nWhat I don't like about Nest so far\nWhy I may or may not stick with nest\nThe name's Jon! I've been programming for about 2 years, I started with Rails for the backend, have done a few node build and burns (admittedly not a whole lot) and then found out I had the opportunity to work on and design a big project.  Because I'm a Masochistic idiot,…",
          "link": "https://dev.to/jjhiggz/nestjs-could-be-amazing-someday-3in7",
          "publishedOn": "2021-06-01T05:20:33.000Z",
          "wordCount": 1772,
          "title": "NestJS:  Could be amazing someday"
        },
        {
          "id": "https://dev.to/angular/highlight-text-in-paragraphs-with-a-simple-directive-in-angular-2da",
          "author": "Adithya Sreyaj",
          "description": "How to highlight text in a paragraph with the help of directives in Angular. Especially helpful in highlighting text matching the search term. You could have come across this in your browser or IDE when you search for something, the matching items will be highlighted to point you to the exact place of occurrence.\nHere is what we are going to build in this post. A very simple and straightforward highlight directive in Angular. We see something similar in chrome dev tools.\nThe idea is pretty simple. We just have to match the searched term and somehow wrap the matched text in a span or mark (ref) tag so that we can style them later according to our needs.\nWe are going to use Regex to find matches in our paragraph. Regex makes it very simple to do operations like this on strings. The directive…",
          "link": "https://dev.to/angular/highlight-text-in-paragraphs-with-a-simple-directive-in-angular-2da",
          "publishedOn": "2021-06-01T04:44:44.000Z",
          "wordCount": 1460,
          "title": "Highlight text in paragraphs with a simple directive in Angular"
        },
        {
          "id": "https://dev.to/rajeshkumaryadavdotcom/angular-how-to-automate-angular-deployment-for-aws-s3-angular-website-4g2d",
          "author": "Rajesh Kumar Yadav",
          "description": "If you have hosted your angular app to AWS S3 then you can automate your ng build -prod and drag and drop to S3 bucket by simply following below steps -  \nStep 1 - Add @jefiozie\n/ngx-aws-deploy to your project and for this run below command (your angular CLI should be up-to-date)\nng add @jefiozie/ngx-aws-deploy\n\nStep 2 - Provide necessary details to the terminal while step 1 is in progress.\n\nYou will be prompted for a couple of questions:\n\nYour AWS Region\n\nThe bucket you would like the files to be uploaded.\n\nThe Secret Access Key\n\nThe Access key Id\n\nThe folder where the files should be uploaded (optional)  \nStep 3 - Verify the details you have provided is correct, open angular.json and search for deploy and should be able to see below code -\nangular.json is update with a new builder:\n\n\"dep…",
          "link": "https://dev.to/rajeshkumaryadavdotcom/angular-how-to-automate-angular-deployment-for-aws-s3-angular-website-4g2d",
          "publishedOn": "2021-06-01T03:31:38.000Z",
          "wordCount": 780,
          "title": "Angular : How to automate angular deployment for AWS S3 Angular Website??"
        },
        {
          "id": "https://dev.to/dominiksumer/publishing-a-typescript-library-in-2021-2hpd",
          "author": "Dominik Sumer",
          "description": "This article was originally posted on my personal website.\nThe last time I wanted to publish a npm package was in 2018. It was a React library which provided Components for creating Forms. It wasn’t straight forward to publish such a library back then. There were so many things to handle on your own, especially when it came to TypeScript.\nAssuming you were already familiar with webpack you thought: ha that should be easy, I can leverage my knowledge and just bundle my library with webpack, exactly like my webapps. But then you suddenly heard of that new kid on the block: Rollup, which seems to do a better job at bundling libraries. So a new bundler you had to learn and still soo many things to take care of on your own.\nGreat that we’re now fast forwarded to 2021. There’s a new player in th…",
          "link": "https://dev.to/dominiksumer/publishing-a-typescript-library-in-2021-2hpd",
          "publishedOn": "2021-05-31T22:16:59.000Z",
          "wordCount": 1675,
          "title": "Publishing a TypeScript library in 2021"
        },
        {
          "id": "https://dev.to/costinmanda/learning-from-react-part-3-3dc4",
          "author": "Costin Manda",
          "description": "Original post at: https://siderite.dev/blog/learning-from-react---part-3/\nLearning from React series:\n\nPart 1 - why examining React is useful even if you won't end up using it\nPart 2 - what Facebook wanted to do with React and how to get a grasp on it\nPart 3 (this one) - what is Reactive Programming all about?\nThe name React is already declaring that it is used in reactive programming, but what is that? Wikipedia is defining it as \"a declarative programming paradigm concerned with data streams and the propagation of change\". It expands on that to say that it declares the relationship between elements and updates them when either change. You can easily imagine a graph of elements magically updating as any of them changes. However, the implementation details of that magic matter.\nIn 2011 Mic…",
          "link": "https://dev.to/costinmanda/learning-from-react-part-3-3dc4",
          "publishedOn": "2021-05-31T20:32:49.000Z",
          "wordCount": 1803,
          "title": "Learning from React - part 3"
        },
        {
          "id": "https://dev.to/nordcloud/how-a-calculation-of-previous-month-in-golang-can-break-production-1ppi",
          "author": "pochmurnyGrzech",
          "description": "Illustration from “A Journey With Go”, created by Renee French.\nIn one of the applications that I'm working on, I have to calculate what is a previous month of a given date. It seems easy, isn't it? Golang provides the time package which has a method: AddDate.  \nI'm quite fresh in Go, previously I was working with C#, Python and (for some time) TypeScript. Every one of these languages has also some methods to calculate time. Let's see how they work.\nLet's use System.DateTime.AddMonths:\nusing System;\n\npublic class Program\n{\n    public static void Main()\n    {\n        var endOfMay = new DateTime(2021, 05, 31, 12, 00, 00);\n        var endOfApril = endOfMay.AddMonths(-1);\n        var enfOfJune = endOfMay.AddMonths(1);\n        Console.WriteLine(\"End of May: {0}\", endOfMay);\n        Console.Writ…",
          "link": "https://dev.to/nordcloud/how-a-calculation-of-previous-month-in-golang-can-break-production-1ppi",
          "publishedOn": "2021-05-31T20:21:56.000Z",
          "wordCount": 1135,
          "title": "How a calculation of previous month in golang can break production"
        }
      ]
    }
  ],
  "cliVersion": "1.10.2"
}
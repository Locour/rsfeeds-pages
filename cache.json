{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": [
        {
          "id": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.11.3",
          "author": null,
          "description": "Fixed: broken links in documentation\nChore: Dependency updates\nThank you: @hirdot",
          "link": "https://github.com/osmoscraft/osmosfeed/releases/tag/v1.11.3",
          "publishedOn": "2021-10-16T00:01:47.000Z",
          "wordCount": 292,
          "title": "v1.11.3"
        }
      ]
    },
    {
      "title": "CSS-Tricks",
      "feedUrl": "https://css-tricks.com/feed/",
      "siteUrl": "https://css-tricks.com",
      "articles": [
        {
          "id": "https://css-tricks.com/?p=354619",
          "author": "Chris Coyier",
          "description": "First, check out how incredibly easy it is to write a Cloudflare Worker to proxy another URL:\naddEventListener(\"fetch\", (event) ={\n  event.respondWith(\n     fetch(\"https://css-tricks.com\")\n  );\n});\nIt doesn’t have any error handling or anything, but hey, it works:\nNow imagine how …\nThe post Proxying Third-Party JavaScript as First-Party JavaScript (and the Potential Effect on Analytics) appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/proxying-third-party-javascript-as-first-party-javascript-and-the-potential-effect-on-analytics/",
          "publishedOn": "2021-11-02T22:50:37.000Z",
          "wordCount": 1137,
          "title": "Proxying Third-Party JavaScript as First-Party JavaScript (and the Potential Effect on Analytics)"
        },
        {
          "id": "https://css-tricks.com/?p=355016",
          "author": "Chris Coyier",
          "description": "I keep bookmarking Adam’s GUI Challenges posts/videos and, before I even have a chance to review and link them up, another one is already published! Fortunately, the homepage for them on web.dev is a nice roundup. \nFor example, a recent …\nThe post GUI Challenges appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://web.dev/shows/gui-challenges/",
          "publishedOn": "2021-11-02T21:28:22.000Z",
          "wordCount": 547,
          "title": "GUI Challenges"
        },
        {
          "id": "https://css-tricks.com/?p=354734",
          "author": "Tobias Günther",
          "description": "This article is part of our “Advanced Git” series. Be sure to follow us on Twitter or sign up for our newsletter to hear about the next articles!\nMost developers understand that it’s important to use branches in Git. In …\nThe post Rebase vs. Merge: Integrating Changes in Git appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/rebase-vs-merge-integrating-changes-in-git/",
          "publishedOn": "2021-11-02T14:19:12.000Z",
          "wordCount": 2057,
          "title": "Rebase vs. Merge: Integrating Changes in Git"
        },
        {
          "id": "https://css-tricks.com/?p=355395",
          "author": "Chris Coyier",
          "description": "High five to Jeremy on the big release of Responsible JavaScript on A Book Apart. There is a lot of talk about how the proliferation of JavaScript has had a negative impact on the web, but now we have …\nThe post Responsible JavaScript appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/responsible-javascript-2/",
          "publishedOn": "2021-11-02T14:17:55.000Z",
          "wordCount": 692,
          "title": "Responsible JavaScript"
        },
        {
          "id": "https://css-tricks.com/?p=354978",
          "author": "Chris Coyier",
          "description": "There are thousands of articles out there about buttons and links on the web; the differences and how to use them properly. Hey, I don’t mind. I wrote my own as well¹.\nIt’s such a common mistake on …\nThe post Buttons vs. Links appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/buttons-vs-links/",
          "publishedOn": "2021-11-01T22:58:12.000Z",
          "wordCount": 944,
          "title": "Buttons vs. Links"
        },
        {
          "id": "https://css-tricks.com/?p=355034",
          "author": "Chris Coyier",
          "description": "A big heaping 19-minute bowl of not-too-hot, not-too-cold baby bear porridge website building from Rich Harris. \nI’ve certainly overheard more than my fair share of arguments about Single Page Apps (SPAs) vs Multi-Page Apps (MPAs). Although it’s only recently that …\nThe post Have Single-Page Apps Ruined the Web? (“Transitional Apps”) appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/have-single-page-apps-ruined-the-web-transitional-apps/",
          "publishedOn": "2021-11-01T21:43:10.000Z",
          "wordCount": 610,
          "title": "Have Single-Page Apps Ruined the Web? (“Transitional Apps”)"
        },
        {
          "id": "https://css-tricks.com/?p=354588",
          "author": "Sarah Dayan",
          "description": "We’re all familiar with the concept of autocompletion, right? You type something into a search box and it tries to guess what you’re looking for as you type, displaying suggestions, often below the cursor. While we’re used to autocomplete on …\nThe post So, You Want to Build an @mention Autocomplete Feature? appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/so-you-want-to-build-an-mention-autocomplete-feature/",
          "publishedOn": "2021-11-01T14:27:26.000Z",
          "wordCount": 2114,
          "title": "So, You Want to Build an @mention Autocomplete Feature?"
        },
        {
          "id": "https://css-tricks.com/?p=354804",
          "author": "Ana Tudor",
          "description": "Recently, while looking for some ideas on what to code as I have zero artistic sense so the only thing I can do is find pretty things that other people have come up with and remake them with clean and …\nThe post CSS-ing Candy Ghost Buttons appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/css-ing-candy-ghost-buttons/",
          "publishedOn": "2021-11-01T01:04:53.000Z",
          "wordCount": 6455,
          "title": "CSS-ing Candy Ghost Buttons"
        },
        {
          "id": "https://css-tricks.com/?p=354581",
          "author": "Chris Coyier",
          "description": "A guide to designing accessible, WCAG-compliant focus indicators — Sara Soueidan says you can make more accessible focus outlines by doing your own, rather than leaving it to the browser — as long as you do it right. Deep dive! \n…\nThe post Some Articles About Accessibility I’ve Saved Recently IV appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/some-articles-about-accessibility-ive-saved-recently-iv/",
          "publishedOn": "2021-10-29T18:28:38.000Z",
          "wordCount": 916,
          "title": "Some Articles About Accessibility I’ve Saved Recently IV"
        },
        {
          "id": "https://css-tricks.com/?p=354296",
          "author": "Philippe Bernard",
          "description": "There has been a lot of talk about automated social images lately. GitHub has created its own. A WordPress plugin has been acquired by Jetpack. There is definitely interest! People like Ryan Filler and Zach Leatherman have implemented …\nThe post Create Your Own Automated Social Images With Resoc appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/create-your-own-automated-social-images-with-resoc/",
          "publishedOn": "2021-10-29T14:14:55.000Z",
          "wordCount": 3620,
          "title": "Create Your Own Automated Social Images With Resoc"
        },
        {
          "id": "https://css-tricks.com/?p=354922",
          "author": "Chris Coyier",
          "description": "There is an old Russian fable where Okhsv and Okhsl are on a rowboat and Okhsv says to Okhsl, “What are the known shortcomings of HSL and HSV color pickers in design applications?” I kid, I kid. But really, what …\nThe post Okhsv and Okhsl appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://bottosson.github.io/posts/colorpicker/",
          "publishedOn": "2021-10-28T20:20:07.000Z",
          "wordCount": 5616,
          "title": "Okhsv and Okhsl"
        },
        {
          "id": "https://css-tricks.com/?p=355166",
          "author": "Chris Coyier",
          "description": "Vite, “Next Generation Frontend Tooling” from Evan You, has been capturing a lot of attention. I’ve heard rave reviews from developers, even in private chats (you gotta try this!). Being from Evan, Vite works great with Vue, …\nThe post Vite + _____ appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/vite-plus-blank/",
          "publishedOn": "2021-10-28T18:07:21.000Z",
          "wordCount": 567,
          "title": "Vite + _____"
        },
        {
          "id": "https://css-tricks.com/?p=354389",
          "author": "Tobias Günther",
          "description": "Merge conflicts... Nobody likes them. Some of us even fear them. But they are a fact of life when you're working with Git, especially when you're teaming up with other developers. In most cases, merge conflicts aren't as scary as you might think. In this fourth part of our “Advanced Git” series we'll talk about when they can happen, what they actually are, and how to solve them.\nThe post Merge Conflicts: What They Are and How to Deal with Them​ appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/merge-conflicts-what-they-are-and-how-to-deal-with-them/",
          "publishedOn": "2021-10-28T14:07:12.000Z",
          "wordCount": 2001,
          "title": "Merge Conflicts: What They Are and How to Deal with Them​"
        },
        {
          "id": "https://css-tricks.com/?p=354782",
          "author": "Geoff Graham",
          "description": "(This is a sponsored post.)\nKendo UI makes it possible to go from a basic idea to a full-fledged app, thanks to a massive component library. We’re talking well over 100 components that are ready for you to drop …\nThe post Building an Angular Data Grid With Filtering appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/building-an-angular-data-grid-with-filtering/",
          "publishedOn": "2021-10-28T14:03:11.000Z",
          "wordCount": 1277,
          "title": "Building an Angular Data Grid With Filtering"
        },
        {
          "id": "https://css-tricks.com/?p=354777",
          "author": "Chris Coyier",
          "description": "I ran across this 30 seconds of code website the other day, and they have a CSS section which is really good! The first example snippet I looked at was this “floating section headers” example, reminding me yet again how …\nThe post Sticky Definition Lists appeared first on CSS-Tricks. You can support CSS-Tricks by being an MVP Supporter.",
          "link": "https://css-tricks.com/sticky-definition-lists/",
          "publishedOn": "2021-10-27T23:17:18.000Z",
          "wordCount": 658,
          "title": "Sticky Definition Lists"
        }
      ]
    },
    {
      "title": "Articles on Smashing Magazine — For Web Designers And Developers",
      "feedUrl": "https://www.smashingmagazine.com/feed/",
      "siteUrl": "https://www.smashingmagazine.com/",
      "articles": [
        {
          "id": "https://smashingmagazine.com/2021/11/magento-pwa-customizing-themes-coding/",
          "author": "hello@smashingmagazine.com (Alex Husar)",
          "description": "This article sheds the spotlight on Magento PWAs and explains why business owners are getting them (often instead of native applications). Alex Husar introduces ways of how progressive web applications can be developed on Magento, as well as go over the major pros and cons of each development path.",
          "link": "https://smashingmagazine.com/2021/11/magento-pwa-customizing-themes-coding/",
          "publishedOn": "2021-11-02T12:00:00.000Z",
          "wordCount": 5963,
          "title": "Creating A Magento PWA: Customizing Themes vs. Coding From Scratch",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/77155632-96bd-44a8-af99-50ebad7534e6/magento-pwa-customizing-themes-coding.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/desktop-wallpaper-calendars-november-2021/",
          "author": "hello@smashingmagazine.com (Cosima Mielke)",
          "description": "November is just around the corner, and with it, a new collection of desktop wallpapers to celebrate the beginning of the month. Designed by creatives from all across the globe, they come in versions with and without a calendar. Let’s make November colorful!",
          "link": "https://smashingmagazine.com/2021/10/desktop-wallpaper-calendars-november-2021/",
          "publishedOn": "2021-10-31T08:20:00.000Z",
          "wordCount": 2384,
          "title": "A Splash Of Color For Misty Days (November 2021 Desktop Wallpapers Edition)",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7a2a341f-4f72-4716-91c6-ed6da6add2fd/nov-21-no-shave-november-preview-opt.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/resources-tools-turbocharge-copywriting-skills/",
          "author": "hello@smashingmagazine.com (Freya Giles)",
          "description": "Stop wasting time and effort writing copy that falls flat. Raise your copywriting game and boost your powers of persuasion with these rich and informative online resources.",
          "link": "https://smashingmagazine.com/2021/10/resources-tools-turbocharge-copywriting-skills/",
          "publishedOn": "2021-10-29T10:00:00.000Z",
          "wordCount": 2507,
          "title": "50 Resources And Tools To Turbocharge Your Copywriting Skills",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/376436ee-7e40-4d99-ad14-e934df9f92c9/resources-tools-turbocharge-copywriting-skills.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/building-amazon-product-scraper-nodejs/",
          "author": "hello@smashingmagazine.com (Robert Sfichi)",
          "description": "The wealth of data that Amazon holds can make a huge difference when you’re designing a product or hunting for a bargain. But, how can a developer get that data? Simple, by using a web scraper. Here’s how to build your data extraction bot with Node.js.",
          "link": "https://smashingmagazine.com/2021/10/building-amazon-product-scraper-nodejs/",
          "publishedOn": "2021-10-28T11:00:00.000Z",
          "wordCount": 3161,
          "title": "How To Build An Amazon Product Scraper With Node.js",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/069a1796-0f8d-4936-bfc0-4aa988ef0594/building-amazon-product-scraper-nodejs.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/eye-tracking-mobile-ux-research/",
          "author": "hello@smashingmagazine.com (Mariana Macedo)",
          "description": "Thanks to technology, eye-tracking has become more accessible to UX research as it allows researchers to get insights about users ’visual attention. This article explores the latest trends in the eye-tracking market and how the methodology can be included in the UX researcher’s toolbox.",
          "link": "https://smashingmagazine.com/2021/10/eye-tracking-mobile-ux-research/",
          "publishedOn": "2021-10-27T10:00:00.000Z",
          "wordCount": 3509,
          "title": "Eye-Tracking In Mobile UX Research",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3012986b-e407-4c49-8186-13a99528ef13/eye-tracking-mobile-ux-research.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/optimizing-nextjs-applications-nx/",
          "author": "hello@smashingmagazine.com (Melvin Kosisochukwu)",
          "description": "Nx is a build framework that facilitates optimization, efficient scaling of applications, and other features such as shared libraries and components. In this article, we will be looking at how we can effectively scale Next.js applications by using Nx.",
          "link": "https://smashingmagazine.com/2021/10/optimizing-nextjs-applications-nx/",
          "publishedOn": "2021-10-26T10:00:00.000Z",
          "wordCount": 3037,
          "title": "Optimizing Next.js Applications With Nx",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/32b5517f-415c-43ed-98a6-70215d408f7a/optimizing-nextjs-applications-nx.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/object-fit-background-size-css/",
          "author": "hello@smashingmagazine.com (Ahmad Shadeed)",
          "description": "In this article, we will go through how `object-fit` and `background-size` work, when we can use them, and why, along with some practical use cases and recommendations. Let’s dive in.",
          "link": "https://smashingmagazine.com/2021/10/object-fit-background-size-css/",
          "publishedOn": "2021-10-25T13:00:00.000Z",
          "wordCount": 2032,
          "title": "A Deep Dive Into object-fit And background-size In CSS",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/19e7f717-46d5-4949-96f4-671f4744d0e1/object-fit-background-size-css.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/introduction-quasar-framework-cross-platform-applications/",
          "author": "hello@smashingmagazine.com (Joel Olawanle)",
          "description": "Quasar is an open-source Vue.js-based cross-platform framework that allows you, as a developer, to easily build apps for both desktop and mobile using technologies such as Cordova and Electron and writing your code once. The app we’ll build will store and get its data from Firebase, meaning that we will also be seeing how to use Firebase in Quasar.",
          "link": "https://smashingmagazine.com/2021/10/introduction-quasar-framework-cross-platform-applications/",
          "publishedOn": "2021-10-23T11:00:00.000Z",
          "wordCount": 4924,
          "title": "An Introduction To Quasar Framework: Building Cross-Platform Applications",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e64d5e62-7c13-430a-90c6-f21b1c0325fe/introduction-quasar-framework-cross-platform-applications.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/real-time-multi-user-game/",
          "author": "hello@smashingmagazine.com (Martin Grubinger)",
          "description": "This article highlights the process, technical decisions and lessons learned behind building the real-time game Autowuzzler. Learn how to share game state across multiple clients in real-time with Colyseus, do physics calculations with Matter.js, store data in Supabase.io and build the front-end with SvelteKit.",
          "link": "https://smashingmagazine.com/2021/10/real-time-multi-user-game/",
          "publishedOn": "2021-10-22T09:30:00.000Z",
          "wordCount": 4621,
          "title": "How To Build A Real-Time Multi-User Game From Scratch",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f27da7cf-e0e3-4ed4-a845-6fd61fdb0e70/real-time-multi-user-game.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/respecting-users-motion-preferences/",
          "author": "hello@smashingmagazine.com (Michelle Barker)",
          "description": "The `prefers-reduced-motion` media query has excellent support in all modern browsers going back a couple of years. In this article, Michelle Barker explains why there’s no reason not to use it today to make your sites more accessible.",
          "link": "https://smashingmagazine.com/2021/10/respecting-users-motion-preferences/",
          "publishedOn": "2021-10-21T10:30:00.000Z",
          "wordCount": 2881,
          "title": "Respecting Users’ Motion Preferences",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/df53065e-5b99-4a67-ad0c-2cd67b07dc2a/respecting-users-motion-preferences.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/building-ssg-11ty-vite-jam-sandwich/",
          "author": "hello@smashingmagazine.com (Ben Holmes)",
          "description": "Back in January 2020, Ben Holmes set out to do what just about every web developer does each year: rebuild his personal site. In this article, he shares his story of how he set out to build his own build pipeline from absolute ground zero and created “Slinkity”.",
          "link": "https://smashingmagazine.com/2021/10/building-ssg-11ty-vite-jam-sandwich/",
          "publishedOn": "2021-10-20T11:00:00.000Z",
          "wordCount": 5040,
          "title": "Building The SSG I’ve Always Wanted: An 11ty, Vite And JAM Sandwich",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1ff6275f-bf33-480f-bdd4-690e94f96314/building-ssg-11ty-vite-jam-sandwich.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/building-api-gatsby-functions/",
          "author": "hello@smashingmagazine.com (Paul Scanlon)",
          "description": "In this tutorial, Paul Scanlon explains how to build an API by using Gatsby Functions and what you need to keep in mind when deploying it to Gatsby Cloud.",
          "link": "https://smashingmagazine.com/2021/10/building-api-gatsby-functions/",
          "publishedOn": "2021-10-19T14:00:00.000Z",
          "wordCount": 2522,
          "title": "Building An API With Gatsby Functions",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/110c2aa7-7744-48d6-a234-9e67e903cbe5/building-api-gatsby-functions.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/smashing-podcast-episode-42/",
          "author": "hello@smashingmagazine.com (Drew McLellan)",
          "description": "In this episode, we’re talking about DevOps. What is it, and is it a string to add to your web development bow? Drew McLellan talks to expert Jeff Smith to find out.",
          "link": "https://smashingmagazine.com/2021/10/smashing-podcast-episode-42/",
          "publishedOn": "2021-10-19T10:00:00.000Z",
          "wordCount": 9120,
          "title": "Smashing Podcast Episode 42 With Jeff Smith: What Is DevOps?",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4f30e407-6c98-4abf-80f3-8d312ac20eb2/smashing-podcast-episode-42.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/nextjs-ecommerce-cls-case-study/",
          "author": "hello@smashingmagazine.com (Arijit Mondal)",
          "description": "Cumulative Layout Shift is one of the hardest core web vital to debug. In this article, we go through different tools to investigate CLS, when to use them(and when not), and solutions to some of the CLS issues we faced in our Next.js-based e-commerce website.",
          "link": "https://smashingmagazine.com/2021/10/nextjs-ecommerce-cls-case-study/",
          "publishedOn": "2021-10-18T14:00:00.000Z",
          "wordCount": 2131,
          "title": "Solving CLS Issues In A Next.js-Powered E-Commerce Website (Case Study)",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8e522651-eaf2-45e7-a544-9da7beb7b23e/nextjs-ecommerce-cls-case-study.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/effective-mental-health-routine-programmers/",
          "author": "hello@smashingmagazine.com (Dave Oscar)",
          "description": "In this article, we’ll look at why taking care of our work-life balance is important, how to develop a simple and effective mental health routine, and the most common and efficient techniques you can use to make your custom routine.",
          "link": "https://smashingmagazine.com/2021/10/effective-mental-health-routine-programmers/",
          "publishedOn": "2021-10-16T10:00:00.000Z",
          "wordCount": 2840,
          "title": "A Simple But Effective Mental Health Routine For Programmers",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c36dd2b2-f807-42a7-b8d1-9e6e9a00b3e7/effective-mental-health-routine-for-programmers.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/tips-tricks-evaluating-ux-ui-designers/",
          "author": "hello@smashingmagazine.com (Nataliya Sambir)",
          "description": "Customers may start using your app because you offer a unique product, but user experience is what makes them stay. For that, you need excellent UX designers, and the know-how to spot them when hiring.",
          "link": "https://smashingmagazine.com/2021/10/tips-tricks-evaluating-ux-ui-designers/",
          "publishedOn": "2021-10-15T13:00:00.000Z",
          "wordCount": 4019,
          "title": "Tips And Tricks For Evaluating UX/UI Designers",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/727cbd89-cbf4-4a29-af64-ac51d777ffba/tips-tricks-evaluating-ux-ui-designers.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/modern-css-solutions-for-common-problems/",
          "author": "hello@smashingmagazine.com (Cosima Mielke)",
          "description": "Writing CSS has probably never been more fun and exciting than it is today. In this post we’ll take a look at common problems and use cases we all have to face in our work and how to solve them with modern CSS. If you’re interested, we’ve also just recently covered [CSS auditing tools](https://www.smashingmagazine.com/2021/03/css-auditing-tools/), [CSS generators](https://www.smashingmagazine.com/2021/03/css-generators/), [front-end boilerplates](https://www.smashingmagazine.com/2021/06/useful-frontend-boilerplates-starter-kits/) and [VS code extensions](https://www.smashingmagazine.com/2021/05/useful-vs-code-extensions-web-developers/) — you might find them useful, too.",
          "link": "https://smashingmagazine.com/2021/10/modern-css-solutions-for-common-problems/",
          "publishedOn": "2021-10-14T12:00:00.000Z",
          "wordCount": 3524,
          "title": "Smart CSS Solutions For Common UI Challenges",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e3bf0115-0bc9-41b7-b027-3ea8b6b7e848/transition-css-gradients-opt.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/new-smashing-online-workshops-oct-2021/",
          "author": "hello@smashingmagazine.com (Iris Lješnjanin)",
          "description": "Do you like a good interface design challenge? What about accessibility testing and design systems? Or maybe Next.js and advanced CSS? With our new online workshops on front-end & design, we cover all of it. Ah, and [here's what our workshops are like](https://vimeo.com/616485526).",
          "link": "https://smashingmagazine.com/2021/10/new-smashing-online-workshops-oct-2021/",
          "publishedOn": "2021-10-13T11:00:00.000Z",
          "wordCount": 1000,
          "title": "Upcoming Live Workshops On Front-End & UX (Oct 2021&ndash;Jan 2022)",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/1a95c729-8b29-4b44-90b0-d38183b367c0/online-workshops-2021-opt.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/react-apis-building-flexible-components-typescript/",
          "author": "hello@smashingmagazine.com (Gaurav Khanna)",
          "description": "React with JSX is a fantastic tool for making easy-to-use components. Typescript components make it an absolute pleasure for developers to integrate your components into their apps and explore your APIs. Learn about three lesser-known React APIs that can take your components to the next level, and help you build even better React Components in this article.",
          "link": "https://smashingmagazine.com/2021/10/react-apis-building-flexible-components-typescript/",
          "publishedOn": "2021-10-12T12:00:00.000Z",
          "wordCount": 2337,
          "title": "Useful React APIs For Building Flexible Components With TypeScript",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8fbb65d7-6494-4494-9a78-099e178b83da/react-apis-building-flexible-components-typescript.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/bridging-gap-between-designers-developers/",
          "author": "hello@smashingmagazine.com (Matthew Talebi)",
          "description": "UXPin has recently launched a new feature called “Merge”. This tool aims to break through the chasms of design and development, all while improving the agility and quality our teams expect. This new technology may cause some rethink on how the whole design team and engineering team collaborates.",
          "link": "https://smashingmagazine.com/2021/10/bridging-gap-between-designers-developers/",
          "publishedOn": "2021-10-12T10:30:00.000Z",
          "wordCount": 2174,
          "title": "Bridging The Gap Between Designers And Developers",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f89855fe-fbaf-4d96-80a4-189aa27e8afb/gap-between-designers-developers.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/autofill-dark-pattern/",
          "author": "hello@smashingmagazine.com (Alvaro Montoro)",
          "description": "A “dark pattern” is a deceptive UX pattern that tricks users into doing things they may not really want to do. In this article, Alvaro Montoro does a little experiment to find out how much privacy is taken away from users across three different browsers.",
          "link": "https://smashingmagazine.com/2021/10/autofill-dark-pattern/",
          "publishedOn": "2021-10-11T10:00:00.000Z",
          "wordCount": 3741,
          "title": "The Autofill Dark Pattern",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8722ec01-912f-4013-8b8a-2ba0ab43cc20/autofill-dark-pattern.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/composable-css-animation-vue-animxyz/",
          "author": "hello@smashingmagazine.com (Ejiro Asiuwhu)",
          "description": "Most animation libraries like GSAP and Framer Motion are built purely with JavaScript or TypeScript, unlike AnimXYZ, which is labelled “the first composable CSS animation toolkit”, built mainly with SCSS While a simple library, it can be used to achieve a lot of awesome animation on the web in a short amount of time and little code.",
          "link": "https://smashingmagazine.com/2021/10/composable-css-animation-vue-animxyz/",
          "publishedOn": "2021-10-09T10:00:00.000Z",
          "wordCount": 2812,
          "title": "Composable CSS Animation In Vue With AnimXYZ",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0b5365f4-e57d-4fa8-96ed-1742adb243ec/composable-css-animation-vue-animxyz.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/static-first-madlib-generator-portable-text-netlify-builder-functions/",
          "author": "hello@smashingmagazine.com (Bryan Robinson)",
          "description": "In this article, we’ll be building an interactive fiction experience in which a user can insert words that match parts of speech given by the content creator. Let’s go!",
          "link": "https://smashingmagazine.com/2021/10/static-first-madlib-generator-portable-text-netlify-builder-functions/",
          "publishedOn": "2021-10-08T10:00:00.000Z",
          "wordCount": 7093,
          "title": "Building A Static-First MadLib Generator With Portable Text And Netlify On-Demand Builder Functions",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d9de142e-09f1-4257-99f5-606cc09b8c00/static-first-madlib-generator-portable-text-netlify-builder-functions.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/freebie-coronavirus-icon-set/",
          "author": "hello@smashingmagazine.com (Anton Tyschenko)",
          "description": "Every once in a while, we publish [freebies](https://www.smashingmagazine.com/category/freebies/) related to different occasions and themes. We hope that with this icon set, every designer will be able to find their own use case and contribute to saving lives. Free for personal and commercial use.",
          "link": "https://smashingmagazine.com/2021/10/freebie-coronavirus-icon-set/",
          "publishedOn": "2021-10-07T09:00:00.000Z",
          "wordCount": 1006,
          "title": "Freebie: COVID-19 Icon Set (56 Icons, AI, EPS, SVG, PNG)",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/ef22f452-44d9-49ae-94f9-c7f1c57a8378/coronavirus.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/guide-debugging-css/",
          "author": "hello@smashingmagazine.com (Stephanie Eckles)",
          "description": "Debugging in CSS means figuring out what might be the problem when you have unexpected layout results. We’ll look at a few categories bugs often fit into, see how we can evaluate the situation, and explore techniques that help prevent these bugs.",
          "link": "https://smashingmagazine.com/2021/10/guide-debugging-css/",
          "publishedOn": "2021-10-06T10:00:00.000Z",
          "wordCount": 5476,
          "title": "A Guide To CSS Debugging",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/334beb39-13a4-4159-ab77-86c7dac406d8/guide-debugging-css.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        },
        {
          "id": "https://smashingmagazine.com/2021/10/local-testing-serverless-api-gateway-lambda/",
          "author": "hello@smashingmagazine.com (Tom Hudson)",
          "description": "Have you ever struggled with testing cloud services locally? Specifically, have you ever struggled with locally testing an API that uses API Gateway and Lambda, with the Serverless framework, on AWS? In this article, Tom Hudson shares a quick overview of how easy it is to quickly set up your project to test locally before deploying to AWS.",
          "link": "https://smashingmagazine.com/2021/10/local-testing-serverless-api-gateway-lambda/",
          "publishedOn": "2021-10-05T10:00:00.000Z",
          "wordCount": 1786,
          "title": "Local Testing A Serverless API (API Gateway And Lambda)",
          "enclosure": {
            "url": "http://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d43ff4a2-4767-4595-9f46-f1ca18f64060/local-testing-serverless-api-gateway-lambda.jpg",
            "length": "0",
            "type": "image/jpg"
          }
        }
      ]
    },
    {
      "title": "freeCodeCamp.org",
      "feedUrl": "https://www.freecodecamp.org/news/rss/",
      "siteUrl": "https://www.freecodecamp.org/news",
      "articles": [
        {
          "id": "617fffad8bcfae07ca4df6d2",
          "author": null,
          "description": "Apple devices work well and connect readily with other Apple devices. But they have a hard time communicating with devices running other operating systems like Windows and Linux.  If you have both Apple and Windows devices, you might want to share files between them over a local network. And this",
          "link": "https://www.freecodecamp.org/news/what-is-bonjour-on-my-computer/",
          "publishedOn": "2021-11-02T18:23:02.000Z",
          "wordCount": 1000,
          "title": "What is Bonjour on my Computer? Windows 10 Bonjour Program PC Guide"
        },
        {
          "id": "61810f888bcfae07ca4e007b",
          "author": null,
          "description": "If your work requires a lot of precision, like graphic design and gaming, then you might want to adjust how fast or slow your external mouse or keyboard is.  In this guide, I will show you how you can make your mouse more sensitive or less sensitive by changing its",
          "link": "https://www.freecodecamp.org/news/how-to-change-mouse-dpi-settings-in-windows-10/",
          "publishedOn": "2021-11-02T17:05:06.000Z",
          "wordCount": 553,
          "title": "How to Change Mouse DPI Settings in Windows 10"
        },
        {
          "id": "61653c74804854468fda9148",
          "author": null,
          "description": "As someone who offers a service as a freelancer, you have a major say in how you price a website project. But how do you go about charging for a website project? Sure, you can bill by the hour, but is there a better way? In this article, we are",
          "link": "https://www.freecodecamp.org/news/different-ways-to-charge-for-a-website/",
          "publishedOn": "2021-11-02T16:37:58.000Z",
          "wordCount": 2312,
          "title": "The Different Ways to Charge for a Website Project – Freelance Developer Guide"
        },
        {
          "id": "617ce33033422e07df3678a3",
          "author": null,
          "description": "In this article we will talk about Browser extensions – what they are, how they work, and how you can build your own. We will finish by actually writing our own extension (Super Fun!) which allows us to copy any code snippet to our clipboard with a click of a single",
          "link": "https://www.freecodecamp.org/news/write-your-own-browser-extensions/",
          "publishedOn": "2021-11-02T15:57:40.000Z",
          "wordCount": 1529,
          "title": "How to Write Your Own Browser Extension [Example Project Included]"
        },
        {
          "id": "613f3cba852f4307d372c7e0",
          "author": null,
          "description": "A GIF (Graphics Interchange Format) is a small animated image that you can share with your friends and family. And there are many ways to create them without downloading any software. In this article, I will show you how to use the Make a Gif  site, where you can create",
          "link": "https://www.freecodecamp.org/news/how-to-make-a-gif-create-animated-gifs-without-downloading-software/",
          "publishedOn": "2021-11-01T21:31:16.000Z",
          "wordCount": 534,
          "title": "How to Make a gif – Create Animated gifs Without Downloading Software"
        },
        {
          "id": "617e651033422e07df36827a",
          "author": null,
          "description": "Vectors in C++ are a helpful way to store dynamic data. They also help you avoid having to deal with the not so flexible arrays that are inherited from the C programming language.  This article is a beginner friendly introduction to vectors. It will show you some of their basic",
          "link": "https://www.freecodecamp.org/news/c-vector-std-pattern-vector-in-cpp-with-example-code/",
          "publishedOn": "2021-11-01T21:27:30.000Z",
          "wordCount": 1325,
          "title": "C++ Vector – STD Pattern Vector in CPP with Example Code"
        },
        {
          "id": "61804dde8bcfae07ca4dfbfd",
          "author": null,
          "description": "A lot of API tutorials just teach the absolute minimum. But a production-ready API is much more complicated than what most tutorials teach. We just published a massive 19-hour course on the freeCodeCamp.org YouTube channel that will teach you how to build a full-fledged API using Python and the",
          "link": "https://www.freecodecamp.org/news/creating-apis-with-python-free-19-hour-course/",
          "publishedOn": "2021-11-01T21:00:54.000Z",
          "wordCount": 887,
          "title": "Creating APIs with Python - Free 19-Hour Course"
        },
        {
          "id": "617a7da433422e07df3668f0",
          "author": null,
          "description": "When you're developing applications for the general public, it's important to protect your users' credentials and information. This means you need to know about code structure and how to implement various security measures. In this article, we'll walk through the steps to create a user authentication web app with Flask,",
          "link": "https://www.freecodecamp.org/news/how-to-authenticate-users-in-flask/",
          "publishedOn": "2021-11-01T20:00:24.000Z",
          "wordCount": 2104,
          "title": "How to Authenticate Users in Flask with Flask-Login"
        },
        {
          "id": "6114cfae72231b077cdae432",
          "author": null,
          "description": "When you're looping through a sequence in Python like a list, tuple, string, or dictionary, do you ever feel like your code is messy or you want to remove some variables from it?  Fortunately, Python has some useful inbuilt functions which make your code more concise and more readable. In",
          "link": "https://www.freecodecamp.org/news/python-looping-functions/",
          "publishedOn": "2021-11-01T18:34:42.000Z",
          "wordCount": 1603,
          "title": "How to Use Built-in Looping Functions in Python"
        },
        {
          "id": "6048a6f0a7946308b7685a2c",
          "author": null,
          "description": "CodePen is a popular online code editor used by many developers around the world. It is also one of the recommended editors you can use for the freeCodeCamp curriculum. CodePen is only for frontend projects and supports HTML, CSS, and JavaScript. If you need to build a project with a",
          "link": "https://www.freecodecamp.org/news/how-to-use-codepen/",
          "publishedOn": "2021-11-01T15:47:46.000Z",
          "wordCount": 1378,
          "title": "How to Use CodePen – A Beginner&#x27;s Guide"
        }
      ]
    },
    {
      "title": "DEV Community",
      "feedUrl": "https://dev.to/feed/tag/node",
      "siteUrl": "https://dev.to",
      "articles": [
        {
          "id": "https://dev.to/flashdriveio/create-a-static-version-of-your-blog-using-wordpress-gatsby-and-flashdriveio-29m2",
          "author": "Alexandre Gonzales",
          "description": "complete tutorial and source\n  https://blog.flashdrive.io/create-and-host-a-blog-using-gatsby-and-ghost-headless-cms/ \n\n\n\nAt FlashDrive.io, we use every day and love modern, static frameworks like Gatsby, Hugo, Jekyll, and others.\nGatsby, with its huge community and user base, is the first framework to have a complete build add-on developed on FlashDrive, and we love playing with Gatsby every day.\nIt's also great that Gatsby comes with a large set of plugins to connect with various CMS like WordPress, Ghost, etc.\nIn this post, we'll see why it's popular (and actually a good idea) to mix a dynamic CMS like WordPress with a static website generator like Gatsby.\nThe main advantage to this setup is that you will keep WordPress what it does best: providing a good CMS with a ton of features and integration. Then use Gatsby to deliver a static version of your content without any risk of a hacked plugin and the ability to handle massive traffic even on small configurations like Dev (or ideally Web) FlashDrive instances.\nWe will install WordPress, add the GraphQL plugin, and install and Gatsby on FlashDrive.io to create a static website that rebuilds automatically each time your website is modified, all of that using FlashDrive's unique network and security capabilities and only using FREE dev instances on FlashDrive!\nFlashDrive.io is Free for developers, register today to try Gatsby with WordPress for free.",
          "link": "https://dev.to/flashdriveio/create-a-static-version-of-your-blog-using-wordpress-gatsby-and-flashdriveio-29m2",
          "publishedOn": "2021-11-03T00:41:58.000Z",
          "wordCount": 576,
          "title": "Create a static version of your blog using WordPress, Gatsby and FlashDrive.io"
        },
        {
          "id": "https://dev.to/realgrangus/no-trycatch-a-javascript-library-to-make-your-asynchronous-code-cleaner-56oa",
          "author": "grangus",
          "description": "If you write apps using Node.JS, you've probably ended up in then-catch hell.\nThis code below works, but when you have to do large operations that require you to chain many promises together, it can get super repetitive and hard to read and maintain.\n//then-catch hell\nsomePromise(arg1, arg2, arg3)\n .then((result) => {\n   anotherPromise(arg1, arg2, arg3)\n     .then((anotherResult) => {\n       andAnotherPromise(arg1, arg2, arg3)\n         .then((andAnotherResult) => {})\n         .catch((error) => {\n           console.error(error);\n         });\n     })\n     .catch((error) => {\n       console.error(error);\n     });\n })\n .catch((error) => {\n   console.error(error);\n });\n\n\nThis is where async/await can come in handy, but if you've ever used the await keyword on a promise, you probably needed to c…",
          "link": "https://dev.to/realgrangus/no-trycatch-a-javascript-library-to-make-your-asynchronous-code-cleaner-56oa",
          "publishedOn": "2021-11-02T22:14:07.000Z",
          "wordCount": 1562,
          "title": "No Try/Catch! A JavaScript library to make your asynchronous code cleaner!"
        },
        {
          "id": "https://dev.to/plivo/how-to-build-a-voice-controlled-virtual-assistant-ivr-in-nodejs-using-expressjs-and-plivo-4mdn",
          "author": "Plivo",
          "description": "A virtual assistant can help your business if you have clients who call your phone number. Interactive voice response (IVR) helps you to automate call reception by routing callers to the most appropriate department or the agent most qualified to meet their needs. Among its many advantages, IVR can provide increased operational efficiency, a stronger brand image, and better customer insights.\nA voice-controlled virtual assistant is one step ahead of the legacy Touch-Tone/DTMF controlled one because of the flexibility it allows end users. They can just speak into their phone’s microphone to provide input to control the call.\nBuilding a voice-controlled virtual assistant using Plivo’s automatic speech recognition (ASR) feature in Node.js using Express.js is simple. This guide shows you how to…",
          "link": "https://dev.to/plivo/how-to-build-a-voice-controlled-virtual-assistant-ivr-in-nodejs-using-expressjs-and-plivo-4mdn",
          "publishedOn": "2021-11-02T15:52:35.000Z",
          "wordCount": 1414,
          "title": "How to Build a Voice-controlled Virtual Assistant (IVR) in Node.js Using Express.js and Plivo"
        },
        {
          "id": "https://dev.to/secmohammed/nestjs-caching-globally-neatly-1e17",
          "author": "mohammed osama",
          "description": "First things first, if you don't know about the NestJS Caching module, It's quite easy to understand, It will let you cache whatever you want through the CACHE_MANAGER and take control over it and make decision whether to keep or delete, and keep for how long etc.., Also allowing you to configure your own cache driver which could be Redis, Memcached etc...\nFirst follow the docs for the installation,\nhttps://docs.nestjs.com/techniques/caching#installation\nhere is a snippet to register your cache driver.\nimport {  CacheModule } from '@nestjs/common';\nimport {ConfigModule} from '@nestjs/config';\nimport { config } from './shared/config/index';\n\n@Module({\nimports: [\n ConfigModule.forRoot({\n      cache: true,\n      load: [() => config],\n      isGlobal: true,\n    }),\nCacheModule.registerAsync({\n …",
          "link": "https://dev.to/secmohammed/nestjs-caching-globally-neatly-1e17",
          "publishedOn": "2021-11-02T15:31:12.000Z",
          "wordCount": 2160,
          "title": "NestJS Caching Globally neatly."
        },
        {
          "id": "https://dev.to/therealdakotal/2-ways-to-improve-your-nodejs-application-1830",
          "author": "Dakota Lewallen",
          "description": "Use npm ci --production. Thanks for coming to my ted talk. 🎉\nKinda kidding, but not really.\nFor demonstration purposes, lets define a sample package.json, omitting some of the less important stuff.\n{\n  \"name\": \"test project\",\n  \"version\": 1.0.0,\n  \"description\": \"Our sample project\",\n  \"dependencies\": {\n    \"first-dep\": \"1.0.0\"\n  }\n}\n\nSo let's say you've been hard at work on this \"test project\" all morning working with the \"first-dep\" library. Unfortunately for you, \"first-dep\" released a minor version the night before, going up to \"1.1.0\" and breaking one of the API's you use. You run your test suite locally and everything is as green as grass. You push your code and egads batman a bunch of tests are broken. You run your tests locally over and over again racking your brain for what's hap…",
          "link": "https://dev.to/therealdakotal/2-ways-to-improve-your-nodejs-application-1830",
          "publishedOn": "2021-11-02T15:17:03.000Z",
          "wordCount": 979,
          "title": "2 Ways to Improve your Node.js Application"
        },
        {
          "id": "https://dev.to/nordicbeaver/making-the-most-boring-website-ever-with-typescript-nestjs-react-and-others-part-7-1p4e",
          "author": "NordicBeaver",
          "description": "This series is about making a generic website for a local business with TypeScript, NodeJs, NestJs, Prisma, React and NextJs. I'm trying to make my videos quite short, about 10 minutes each (except for the first one), while putting as much content there as I can. Here is the full playlist.\nToday we will implements validation both on the server and the client. And also add a couple of new fields to the Appointment model.\nEnjoy :)",
          "link": "https://dev.to/nordicbeaver/making-the-most-boring-website-ever-with-typescript-nestjs-react-and-others-part-7-1p4e",
          "publishedOn": "2021-11-02T13:43:01.000Z",
          "wordCount": 558,
          "title": "Making the most boring website ever with TypeScript, NestJs, React and others. Part 7."
        },
        {
          "id": "https://dev.to/sald_ra/how-to-start-twitteroauth-with-express-4m07",
          "author": "saldra",
          "description": "What kind of procedure OAuth process in Twitter?\nGetting oauth_consumer_key,oauth_consumer_secret, and setting oauth_callback in Twitter Developers.\n\n\noauth_consumer_key(=API Key)\noauth_consumer_secret(=API Key Secret)\noauth_callback:without this URL,error in OAuth flow.\nAfter POST to oauth/request_token with oauth_consumer_key and oauth_callback,you'll get this.\noauth_token(=request token)\noauth_token_secret(=request token secret)\noauth_callback_confirmed.\nredirect to your setting callback_url containing the oauth_token and oauth_verifier.\npost to oauth/access_token includes oauth_consumer_key,oauth_token(=request token),and oauth_verifier.\nAfter saved this,use twitter client library.\nfucntion twitterPost(consumerKey,consumerSecret,AccessTokenKey,AccessTokenSecret){\n  const Twitter = requ…",
          "link": "https://dev.to/sald_ra/how-to-start-twitteroauth-with-express-4m07",
          "publishedOn": "2021-11-02T12:57:23.000Z",
          "wordCount": 668,
          "title": "How to start TwitterOAuth with Express.js"
        },
        {
          "id": "https://dev.to/getblock/how-to-build-a-dapp-blockchain-developers-starter-pack-by-getblock-2b01",
          "author": "GetBlock",
          "description": "Here’s the instruments utilized by decentralized applications developers over the globe.\nDecentralized applications or dApps should be referred to as a class of software programs that utilize distributed ledgers for their data processes. As such, basically, every dApp consists of a front-end and smart contracts.\nGetBlock prepares a shortest digest of what is required to build a successful decentralized application in 2021.\nDecentralized applications or dApps are software programs using blockchains for data transfers and payments. dApps can be deployed to the blockchains that support smart contracts e.g. Ethereum (ETH), Binance Smart Chain (BSC), Polygon (previously Matic Network, MATIC), Eos (EOS), Tron (TRX), Near (NEAR), Solana (SOL), and so on.\nIn this case, ‘decentralized’ can be repla…",
          "link": "https://dev.to/getblock/how-to-build-a-dapp-blockchain-developers-starter-pack-by-getblock-2b01",
          "publishedOn": "2021-11-02T10:22:00.000Z",
          "wordCount": 932,
          "title": "How To Build a Dapp: Blockchain Developer’s Starter Pack by GetBlock"
        },
        {
          "id": "https://dev.to/uberdoo2/preparing-you-for-your-successful-on-demand-handyman-business-4j72",
          "author": "Uberdoo",
          "description": "At present, we live in a world that is filled with a plethora of on-demand app solutions where they serve to make things more convenient and accessible. Further, this has been boosted by the pandemic, where online ordering and delivery has become very mandatory. No doubt, the on-demand application domain and the Uber for Handyman business model is gaining greater momentum with time.\nWith the help of this article, one can be prepared with everything related to developing an on-demand service-oriented mobile app.\nSo let's get started.\nWe know that phones evolved into smartphones as an effective mode of communication. And then came Uber, which smartly leveraged the power of smartphones to make taxi bookings. Soon, a lot of businesses enticed by the innovative idea followed suit. Smartphones w…",
          "link": "https://dev.to/uberdoo2/preparing-you-for-your-successful-on-demand-handyman-business-4j72",
          "publishedOn": "2021-11-02T09:52:21.000Z",
          "wordCount": 1089,
          "title": "Preparing you for your successful on-demand Handyman business"
        },
        {
          "id": "https://dev.to/samippoudel/google-oauth-using-typescript-expressjs-passportjs-mongodb-5el8",
          "author": "Samip Poudel",
          "description": "OAuth (stands for Open Authorization) is a standard protocol that allows an app to get delegated access to resources of a 3rd party service like Google, Facebook, Github, etc. OAuth is one of the most popular ways to authorize users in modern web apps because of its:\nSecurity: OAuth doesn't share passwords, instead, it uses authorization tokens to identify users. So the consumer's password is safe from breaches.\nBetter UX: It's more convenient for users to sign in with a few clicks than to fill out a giant form.\nBetter DX: OAuth is simple to implement and developers don't have to worry about the complexity of authenticating users.\nIn this article, we will build a Node.js app that uses Google OAuth to sign in users and we will use passport.js which will make the whole process simpler. You c…",
          "link": "https://dev.to/samippoudel/google-oauth-using-typescript-expressjs-passportjs-mongodb-5el8",
          "publishedOn": "2021-11-02T04:20:29.000Z",
          "wordCount": 3950,
          "title": "Google OAuth using TypeScript, Express.js, Passport.js & MongoDB"
        },
        {
          "id": "https://dev.to/michaelwarren1106/lit-web-components-tailwindcss-styles-at-build-time-44ab",
          "author": "Michael Warren",
          "description": "Today I saw this article from James Garbutt penned around a year ago about how to use Tailwind CSS for styles authoring in a lit-element (now Lit) web component and I thought I'd expand on it a little more with a few ideas drawing from experience with an implementation approach I've used in two design system implementations.\nThis approach I'm going to outline probably won't be worth it for all use cases, so I'll focus on a solution for component libraries and design system monorepos that have many components that all share the same source code structure and therefore need the same core styles to use at dev/build time.\nTherefore, picture a dev environment with the following:\nMonorepo\nTypescript\nLit web components\nDistributed as es6 components\nNo bundlers\nYour particular environment might sl…",
          "link": "https://dev.to/michaelwarren1106/lit-web-components-tailwindcss-styles-at-build-time-44ab",
          "publishedOn": "2021-11-02T03:24:25.000Z",
          "wordCount": 2978,
          "title": "Lit web components: Tailwindcss styles at build time"
        },
        {
          "id": "https://dev.to/sandrarodgers/basic-express-server-using-replitcom-2ba9",
          "author": "SandraRodgers",
          "description": "In this post, I will introduce how to set up the most basic Express server in Node.JS, and how to see that your server is ready to accept requests. We will also use CodePen to write a fetch GET request to your server so you can see a basic request and response from a frontend (built with CodePen) to a backend (built with Replit).\nReplit.com and Codepen.io are tools I use all the time when I want to test some code or play around with something. If you want to practice writing HTTP requests, this is a great way to get you set up to do that.\nGo to Replit. Click on the Create Repl button. Search templates for Node.js. Replit will assign a random name to your repl but you can change it to whatever makes sense to you.\nNow we will set up the Express server.\nYou can use Node.JS by itself to create…",
          "link": "https://dev.to/sandrarodgers/basic-express-server-using-replitcom-2ba9",
          "publishedOn": "2021-11-01T20:17:14.000Z",
          "wordCount": 1324,
          "title": "Basic Express Server Using Replit.com"
        }
      ]
    },
    {
      "title": "DEV Community",
      "feedUrl": "https://dev.to/feed/tag/security",
      "siteUrl": "https://dev.to",
      "articles": [
        {
          "id": "https://dev.to/medpaf/hawk-4hd4",
          "author": "Paulo Medeiros",
          "description": "A post by Paulo Medeiros",
          "link": "https://dev.to/medpaf/hawk-4hd4",
          "publishedOn": "2021-11-02T21:14:19.000Z",
          "wordCount": 305,
          "title": "Hawk"
        },
        {
          "id": "https://dev.to/tsuarez/history-of-cryptography-1ipl",
          "author": "t-suarez",
          "description": "Cryptography is the practice of concealing the meaning of something so that only those who can interpret the nature of the implemented cryptographic method can receive the original hidden message. \nCryptography has its origins in the ancient world. Some say it was born in Egypt through the hieroglyphs used to hide messages for only the aristocratic literate scribes could read them. It was also found in Greece through scytales, which were used in battle to pass messages. A sender would tightly wind a leather strip around a stick and write a message that would span across the wound strips, unravel the leather and send it off. The recipient would use a similar stick to rewrap the strip and receive the message. From Rome, \"Caeser's Cipher\" was a method which involved substituting each letter o…",
          "link": "https://dev.to/tsuarez/history-of-cryptography-1ipl",
          "publishedOn": "2021-11-02T19:55:00.000Z",
          "wordCount": 867,
          "title": "History of Cryptography"
        },
        {
          "id": "https://dev.to/propelauth/easy-breached-password-detection-453",
          "author": "propelauthblog",
          "description": "Breached password detection protects your users by making sure they aren't using passwords that have been seen in previous breaches. An easy way to provide it to your users is:\nconst {pwnedPassword} = require('hibp');\n\nasync function hasPasswordBeenUsedBefore(password) {\n    // HIBP asks that you identify yourself through the user agent\n    const numTimesUsedBefore = await pwnedPassword(password, {userAgent: \"whoami\"});\n    return numTimesUsedBefore > 0;\n}\n\nHIBP (or have i been pwned?) is a service that provides APIs on top of past breaches. In the code snippet, I used the library hibp, but there are existing libraries for pretty much every language. The API is easy to use if you prefer to not rely on a library here. Let's test our function:\nasync function testPasswords() {\n    const passw…",
          "link": "https://dev.to/propelauth/easy-breached-password-detection-453",
          "publishedOn": "2021-11-02T19:51:24.000Z",
          "wordCount": 659,
          "title": "Easy breached password detection"
        },
        {
          "id": "https://dev.to/sedkis/setting-up-aws-appsync-for-unauthenticated-users-1879",
          "author": "Sedky Abou-Shamalah",
          "description": "This took me days to get the handle of, so here's to hoping I can save anybody else the trouble.\nso you want to expose some of your queries (but not all!) to public users, so that users can use/interact with your app before having to sign up.  Makes sense!!\nWell, it's a royal PITA.\nSet your Appsync API to be protected by IAM\n\n\n\nCreate a Cognito identity pool, and create a role for unauthenticated users:\n\n\n\nFor the unauthenticated role, specifically assign the fields/types you want.\n\n\n\nIf you'd like to be confused by AWS' documentation of how to do this, start here, or here.\nAlternatively, you can copy this template where I give access to two subscriptions only:\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"VisualEditor0\",\n            \"Effect\": \"Allow\",\n            \"Action\": \"appsync:GraphQL\",\n            \"Resource\": [\n                \"arn:aws:appsync:*:*:apis/*/types/*/fields/onCreateOrders\",\n                \"arn:aws:appsync:*:*:apis/*/types/*/fields/onUpdateOrders\"\n            ]\n        }\n    ]\n}\n\nFinally, in our JS code, I use the Amplify SDK, so here's how I configure that:\nconst config = awsRealtimeConfig: {\n        aws_appsync_graphqlEndpoint: \"https://<graphql-id>.appsync-api.<aws-region>.amazonaws.com/graphql\",\n        aws_appsync_region: \"<region>\",\n        aws_appsync_authenticationType: 'AWS_IAM',\n        Auth: {\n            identityPoolId: 'us-east-2:pool-id-here',\n            region: 'us-east-2',\n        }\n    },\n\nAmplify.configure(config)",
          "link": "https://dev.to/sedkis/setting-up-aws-appsync-for-unauthenticated-users-1879",
          "publishedOn": "2021-11-02T19:06:05.000Z",
          "wordCount": 505,
          "title": "Setting up AWS Appsync for unauthenticated users"
        },
        {
          "id": "https://dev.to/afeiszli/how-to-create-four-types-of-vpns-quickly-with-wireguardr-and-netmaker-1ibe",
          "author": "Alex",
          "description": "A VPN can be a lot of things. You might think you know what a VPN is…but do you really? A virtual private network just sends private traffic over a public network. But where is that traffic going, and for what purpose? After all, networks come in all shapes and sizes.\nIn this two-part tutorial, we will discuss four “types” of VPN’s, which could just be considered use cases, and set them up with WireGuard® and Netmaker, a free networking platform, in under 10 minutes:\nPersonal (Private Browsing)\n\n\nRemote Access\n\n\nSite-to-Site\n\n\nMesh (virtual LAN/WAN)\n\n\n\nWireGuard® is a new and very fast VPN technology. Usually, VPN’s make your internet slower. With WireGuard®, the difference is negligible. Netmaker uses WireGuard® under the hood, and can simplify setting up environments from homelab to ente…",
          "link": "https://dev.to/afeiszli/how-to-create-four-types-of-vpns-quickly-with-wireguardr-and-netmaker-1ibe",
          "publishedOn": "2021-11-02T16:26:14.000Z",
          "wordCount": 2582,
          "title": "How to Create Four Types of VPN’s Quickly with Wireguard® and Netmaker"
        },
        {
          "id": "https://dev.to/mizutani/zlog-secure-logger-in-go-to-prevent-output-of-sensitivesecret-values-394d",
          "author": "Masayoshi Mizutani",
          "description": "TL; DR\nzlog that prevent outputting secret values to the log.\nhttps://github.com/m-mizutani/zlog\nIt is common for many server-side services, including web services, to output and record logs about the behavior of the service. By continuously outputting logs, they can be used for troubleshooting, debugging, responding to security incidents, auditing, and clues for performance improvement. The more information contained in the log, the more clues to solve problems, so it is useful to post as much information as possible (although there is a limit), or to be able to increase the amount of information through configuration.\nOn the other hand, however, there is some information that is undesirable to output on the server side.\nCredential: Passwords, API tokens, session tokens, and other informa…",
          "link": "https://dev.to/mizutani/zlog-secure-logger-in-go-to-prevent-output-of-sensitivesecret-values-394d",
          "publishedOn": "2021-11-01T23:27:45.000Z",
          "wordCount": 2241,
          "title": "zlog: Secure logger in Go to prevent output of sensitive/secret values"
        },
        {
          "id": "https://dev.to/fcpauldiaz/nextjs-full-example-of-next-iron-session-1019",
          "author": "Pablo Díaz",
          "description": "Full Example\n\n\nI couldn't find a complete example of Next.js authentication with next-iron-session so I used all the little pieces I found online and created one to share.\nBefore talking about authentication we need to setup the model of the User. To do this we will be using mongoose for flexibility and ease of usage. You can ignore the usage of httpStatus and APIError. Here is the user.model.js inside a models folder at root level.\nimport mongoose from 'mongoose';\nimport httpStatus from 'http-status';\nimport APIError from '@/lib/APIError';\n\n/**\n * User Schema\n */\nconst UserSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    required: true,\n    unique: false,\n    lowercase: false,\n    trim: true,\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    trim: t…",
          "link": "https://dev.to/fcpauldiaz/nextjs-full-example-of-next-iron-session-1019",
          "publishedOn": "2021-11-01T19:41:18.000Z",
          "wordCount": 1759,
          "title": "Next.js Full Example of Next-Iron-Session with Mongoose"
        },
        {
          "id": "https://dev.to/ntmerk/easy-crack-9o8",
          "author": "NtMerk",
          "description": "Welcome\n\n\nHere's a quick introduction/presentation so you know what this is and why you're reading it. I'm Merk, a Software Engineering student that really likes reverse engineering (among other things).\nIn this series we will attempt to reverse engineer and complete challenges from the Reversing.kr website. In this particular case, we will be reversing the password of the challenge Easy Crack.\nWe're given a Windows executable and must crack it. Using DIE we can see it is a 32-bit executable and is not packed.\n\n\n\nWe could straight up patch the program so that the flow of execution skips the error message and goes to the right place\nThis would be the cracker's way; not the reverser's, and would also not give us points since we don't reverse engineer the password ;)\nWe could look for string references\nGiven that the executable doesn't seem to have any protections, and knowing the string \"Incorrect Password\", this method can prove to be useful \nWe could set a breakpoint on the Win32 API GetDlgItemText/A/W\nBecause of how the program window looks, it is very likely that the Dialog reads its content using this function\nWe'll test our luck looking for string references. Let's fire up x64dbg, attach the executable and look for strings in the main module.\n\n\"Congratulation !!\" - the good boy\n\"Incorrect Password\" - the bad boy\n\n\n\n\nreturns 1, and makes the flow end up executing the bad boy. Taking a look inside, we can see it compares [EBP+C] which contains \"5y\" with our string starting from the third letter, which is stored in ESI. This is done via \"repe cmpsb\", which essentially compares several characters.\n\n\n\nreturn 0, and the flow of execution gets further into the program.\n\n\"R3versing\" is stored in ESI before some comparisons.",
          "link": "https://dev.to/ntmerk/easy-crack-9o8",
          "publishedOn": "2021-11-01T18:06:47.000Z",
          "wordCount": 933,
          "title": "Easy Crack"
        },
        {
          "id": "https://dev.to/alexey_dev/wordpress-how-to-disable-xmlrpc-4ei4",
          "author": "Alexey",
          "description": "You should open the .htaccess file in the main directory of WordPress and put a couple of strings of code like in example below.\n<Files xmlrpc.php>\norder deny,allow\ndeny from all\n</Files>\n\nOr you can open it for an IP address\n<Files xmlrpc.php>\norder deny,allow\ndeny from all\nallow from 192.168.0.1\n</Files>",
          "link": "https://dev.to/alexey_dev/wordpress-how-to-disable-xmlrpc-4ei4",
          "publishedOn": "2021-11-01T17:05:21.000Z",
          "wordCount": 362,
          "title": "WordPress: How to disable XMLRPC"
        },
        {
          "id": "https://dev.to/medpaf/hawk-open-source-project-ao",
          "author": "Paulo Medeiros",
          "description": "Hawk is a network and pentest utility that I developed so that I could perform different kinds of task using the same suite, instead of jumping from one tool to another.\nifconfig, \nping, \ntraceroute, \nport scans (including SYN, TCP, UDP, ACK, comprehensive scan), \nhost discovery (scan for up devices on a local network), \nMAC address detection (get MAC address of a host IP on a local network), \nbanner grabbing, \nDNS checks (with geolocation information), \nWHOIS, \nsubdomain enumeration, \nvulnerability reconnaissance, - \npacket sniffing, \nMAC spoofing, \nIP spoofing, \nSYN flooding, \ndeauth attack, \nbrute-force attack (beta).\nOther features are still being implemented. Future implementations may include WAF detection, DNS enumeration, traffic analysis, XSS vulnerability scanner, ARP cache poisoning, DNS cache poisoning, MAC flooding, ping of death, network disassociation attack (not deauth attack), OSINT, exploits, some automated tasks and others.\nLink to the repository: \nhttps://github.com/medpaf/hawk",
          "link": "https://dev.to/medpaf/hawk-open-source-project-ao",
          "publishedOn": "2021-11-01T17:04:50.000Z",
          "wordCount": 482,
          "title": "Hawk Open Source Project"
        },
        {
          "id": "https://dev.to/therealbrenu/intigriti-1021-xss-challenge-writeup-253m",
          "author": "Breno Vitório",
          "description": "Halloween came with an awesome XSS Challenge by Intigriti, and I'm here to present the solution I found for this. Hope you like it 🦇\nReading the content of the page, at the first glance, it tells us that there is a query parameter called html, which is capable of define partially what's displayed to the user. When we define, for example, a <h1> tag to this parameter, we are going to get returned a page with this tag being reflected, which is already an HTML injection. From now on, we will be working to make it become an XSS.\n\nIf we simply try to inject something like <script>alert(document.domain);</script>, this script tag will be reflected, but the code itself will not be executed. Why? Well, if we look at the head of the page, we are going to find something interesting:\n<meta http-equi…",
          "link": "https://dev.to/therealbrenu/intigriti-1021-xss-challenge-writeup-253m",
          "publishedOn": "2021-11-01T12:35:16.000Z",
          "wordCount": 1136,
          "title": "Intigriti 1021 - XSS Challenge Writeup"
        },
        {
          "id": "https://dev.to/camillavk/the-admin-panel-i-wanted-4hhd",
          "author": "Camilla van Klinken",
          "description": "While working at an insurtech, I had to roll out a new microservice every month or so.\nEach time we did this it came with a new admin panel, sets of credentials and another backend tool to keep maintained.\nFrom working at a few different startups it seems to me that everyone starts from scratch and usually build something that's:\n{resources} Built with a fraction of the resources really needed and gets limited improvements\n{permissions} Has no or very limited permissions/user management\n{compliance} Is in no way GDPR or any other data legislation compliant\n{ui} Has an interface that looks terrible and is probably hard to navigate\n{audit} Has no way to audit what users are doing or have done\nAt the insurtech at least we had a template for the admin panels. And yes we could/should have gotte…",
          "link": "https://dev.to/camillavk/the-admin-panel-i-wanted-4hhd",
          "publishedOn": "2021-11-01T08:48:42.000Z",
          "wordCount": 756,
          "title": "The admin panel I wanted"
        }
      ]
    },
    {
      "title": "DEV Community",
      "feedUrl": "https://dev.to/feed/tag/devops",
      "siteUrl": "https://dev.to",
      "articles": [
        {
          "id": "https://dev.to/painhardcore/some-interesting-topic-test-3dd0",
          "author": "Andrey Yurchenkov",
          "description": "Well this is how it goes bla bla bla \n\nText again again and again BUUUUU\nhttps://imgur.com/gallery/5fWVTsC\n%[https://www.pinterest.ru/pin/11610911530831614]\nLet's ditch this place (sound on)\n\nOfficial binary distributions are available at https://golang.org/dl/.\nAfter downloading a binary release, visit https://golang.org/doc/install\nIf a binary distribution is not available for your combination of\nhttps://golang.org/doc/install/source\n\n// Copyright 2020 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n//go:build !s390x\n\npackage ecdsa\n\nimport (\n    \"crypto/cipher\"\n    \"crypto/elliptic\"\n    \"math/big\"\n)\n\nfunc sign(priv *PrivateKey, csprng *cipher.StreamReader, c elliptic.Curve, hash []byte) (r, s *big.Int, err error) {\n    return signGeneric(priv, csprng, c, hash)\n}\n\nfunc verify(pub *PublicKey, c elliptic.Curve, hash []byte, r, s *big.Int) bool {\n    return verifyGeneric(pub, c, hash, r, s)",
          "link": "https://dev.to/painhardcore/some-interesting-topic-test-3dd0",
          "publishedOn": "2021-11-03T00:17:46.000Z",
          "wordCount": 483,
          "title": "Some interesting topic test"
        },
        {
          "id": "https://dev.to/yellowgem/containers-and-virtual-machines-1ih0",
          "author": "Nisha Srivastava",
          "description": "Brief insight on containers and VMs\nOperating Systems keep track of memory, RAM, Disk and devices, and if you run multiple programs simultaneously, all these resources of OS will be shared among the programs as per their requirements.\nNow let's take an example where  1 of your programs is using port 80 and another program too needs to run on the same port, and if it tries to use the port, it will crash because port 80 is already in use.\nIt is one such example where containers and VMs come in use.\nIf you move your programs into containers or VMs each of them will have its own version of shared resources, files and network ports.\nContainers provide the mobility, you can move and run your application easily.\nLet's take a scenario where you are working on an application on your machine. Now that application will have certain configurations, binaries and other files and if you ship the same application and try to run it on another machine, it won't run if the machine does not fulfills the configuration requirements as per the application's demand of it. But if you have containerized it and then ship, no such issue will arise.\nThere are some similarities and so many differences between containers and VMs\nLet's see that in the next post.\nEnough of containers and stuff, let me make one revelation about you, You look best when you smile xD.",
          "link": "https://dev.to/yellowgem/containers-and-virtual-machines-1ih0",
          "publishedOn": "2021-11-02T19:27:15.000Z",
          "wordCount": 535,
          "title": "Containers and Virtual Machines."
        },
        {
          "id": "https://dev.to/this-is-learning/docker-from-zero-to-survive-40ho",
          "author": "Dany Paredes",
          "description": "Be ready to deploy your apps with Docker is a one of higher-demand knowledge today, and this article will guide you (and me ) from zero to survive with Docker.\nThe guide key features are: \nInstall and run docker\nCreate and build images\nMount volumes\nCreate networks\nPublish in dockerhub\nUse Docker-compose.\nAfter reading the docker official documentation, we understood that Docker gives us the freedom to run our applications everywhere, language and framework-agnostic, and unlock the following points.\nEasy way to deliver an application. \nMake easy setup sandbox for development.\nNo version conflicts and environment consistency. \nEasy to know the dependencies and requirements of our apps.\nThe Docker provides an installer for Windows and Mac; for Linux, you need to write some commands. All step…",
          "link": "https://dev.to/this-is-learning/docker-from-zero-to-survive-40ho",
          "publishedOn": "2021-11-02T17:16:47.000Z",
          "wordCount": 2231,
          "title": "Docker from zero to survive"
        },
        {
          "id": "https://dev.to/therealdakotal/2-ways-to-improve-your-nodejs-application-1830",
          "author": "Dakota Lewallen",
          "description": "Use npm ci --production. Thanks for coming to my ted talk. 🎉\nKinda kidding, but not really.\nFor demonstration purposes, lets define a sample package.json, omitting some of the less important stuff.\n{\n  \"name\": \"test project\",\n  \"version\": 1.0.0,\n  \"description\": \"Our sample project\",\n  \"dependencies\": {\n    \"first-dep\": \"1.0.0\"\n  }\n}\n\nSo let's say you've been hard at work on this \"test project\" all morning working with the \"first-dep\" library. Unfortunately for you, \"first-dep\" released a minor version the night before, going up to \"1.1.0\" and breaking one of the API's you use. You run your test suite locally and everything is as green as grass. You push your code and egads batman a bunch of tests are broken. You run your tests locally over and over again racking your brain for what's hap…",
          "link": "https://dev.to/therealdakotal/2-ways-to-improve-your-nodejs-application-1830",
          "publishedOn": "2021-11-02T15:17:03.000Z",
          "wordCount": 979,
          "title": "2 Ways to Improve your Node.js Application"
        },
        {
          "id": "https://dev.to/abhirajb/devops-for-dummies-159i",
          "author": "Abhiraj Bhowmick",
          "description": "You'll hear the word \"DevOps\" everywhere these days. DevOps may appear to be a rather simple concept at first glance. Isn't the term \"DevOps\" merely a mix of \"Dev\" and \"Ops\"?\nHowever, since its inception roughly a decade ago, DevOps has become a catchall term for any and all trends in software development and IT operations. It's understandable, given that DevOps is still expanding, covers a wide range of topics, and is changed and accepted based on a company's individual business objectives, priorities, and current knowledge base. We'll attempt to present our own principle-based description of what DevOps is at the end of this article, but before we do, it's helpful to explore what DevOps is NOT, debunking some of the prevalent misconceptions about DevOps.\nThe ultimate goal of DevOps is to…",
          "link": "https://dev.to/abhirajb/devops-for-dummies-159i",
          "publishedOn": "2021-11-02T14:16:42.000Z",
          "wordCount": 934,
          "title": "DevOps for dummies"
        },
        {
          "id": "https://dev.to/adaendra/terraform-tips-for-newcomers-4cpb",
          "author": "Maxime Guilbert",
          "description": "Terraform is quite large. You have a lot of possibilities do to with, and here are some tips to help you with your scripts.\ncondition ? true_val : false_val\n\nIf quite simple, it looks like ternary condition in Java for example.\ntrue_val will be used, otherwise it will be the false_val.\nexample\nvar.a != \"\" ? var.a : \"default-a\"\n\nTerraform documentation : https://www.terraform.io/docs/language/expressions/conditionals.html\nresource \"xxx\" \"yyyy\" {\n  ....\n  count            = \"${var.a == \"a\" ? 1 : 0}\"\n}\n\nTo create some elements depending conditions, or to create multiple instances of a resource, we can use count.\nMixed with a conditional expression we can defined how much elements the script needs to create. So if you're defining a case were the script must create 0 instances, so you have a conditionnal resource.\nDocumentation : https://dev.to/tbetous/how-to-make-conditionnal-resources-in-terraform-440n\nlocals {\n  service_name = \"forum\"\n  owner        = \"Community Team\"\n\n  name = \"${var.env}-xxxx\"\n}\n\nlocals is an object with static values (which can't be overrided by variables) or can help to create some values from the variables inputs.\nIt can be really useful to avoid redefining a value in multiple resources.\nTerraform documentation : https://www.terraform.io/docs/language/values/locals.html\nI hope it will help you! 🍺",
          "link": "https://dev.to/adaendra/terraform-tips-for-newcomers-4cpb",
          "publishedOn": "2021-11-02T13:47:20.000Z",
          "wordCount": 760,
          "title": "Terraform tips for newcomers"
        },
        {
          "id": "https://dev.to/soniabelokur/full-stack-monitoring-in-one-solution-or-is-it-better-to-split-out-the-functions-between-several-applications-13h2",
          "author": "Sonia Belokur",
          "description": "Firstly, this question had my attention, now it has my curiosity :) Since I dig into the full-stack monitoring niche, I would appreciate your opinion about the question above.\nOn the one hand, it's always convenient to have a single monitoring solution for several purposes, e.g. IT infrastructure monitoring, log management, synthetic monitoring, etc. It doesn't matter if your company is a startup or enterprise, the benefits of an all-in-one solution are obvious:\nOne place for monitoring, logging, user experience, etc., consequently, one console instead of multiple.\n\n\nObservability. Explore why an application or system behaves in a certain manner.\n\n\nReal-time metrics. Correlate application metrics, transaction metrics, and infrastructure metrics to see what’s going on in your apps.\n\n\n\nLogically, such an option helps to save company's budget and manager's & DevOps mental health :)\nBut, on the other hand, the vast majority of people I know are sure that the existing B2B solutions are not always capable to face all the processes and produce expected results. I don't know why. Of course, we talk about solutions such as InsightCat, Elastic.co, Splunk, etc. The main argument is that \"there is no decent “full stack” option\".\nPerhaps, it depends on the company budget and tech people's preferences. But, from my personal perspective, a single full-stack solution is a good option to think about, especially, if you have multiple clouds, SaaS, and a few hundred apps.\nMy company uses InsigthCat https://insightcat.com/ and we like it. So, I'm curious to know which side is preferable in your company and why.\nDo you stick to all-in-one or splitting?\nThank you.",
          "link": "https://dev.to/soniabelokur/full-stack-monitoring-in-one-solution-or-is-it-better-to-split-out-the-functions-between-several-applications-13h2",
          "publishedOn": "2021-11-02T12:25:09.000Z",
          "wordCount": 615,
          "title": "Full-stack monitoring in one solution or is it better to split out the functions between several applications?"
        },
        {
          "id": "https://dev.to/endorama/coordination-does-not-scale-394e",
          "author": "Edoardo Tenani",
          "description": "It's monday. You wake out and reach the office (which may very well be your sofa given the current times), turn on your laptop and open your email software.\nA chill goes down your spine. \"Make it be not Jira\" is the first thought as you open the email.\nFeels familiar? I guess everyone had a similar moment in their professional career.\nI've had the pleasure to follow the rollout and administrate an Atlassian Jira Cloud instance for a couple of years for a small company, and I don't think I have fully recovered yet. The complexity hidden behind that subscription is massive.\nAfter self-reflection, my question is: was it Jira's fault? Is the tool to blame for the complexity of the resulting process and the effort it required just to use it for day to day work? Would another tool change the out…",
          "link": "https://dev.to/endorama/coordination-does-not-scale-394e",
          "publishedOn": "2021-11-02T11:38:29.000Z",
          "wordCount": 1477,
          "title": "Coordination does not scale"
        },
        {
          "id": "https://dev.to/greatbrittain/need-help-with-what-you-guys-feel-would-be-the-best-path-1lpe",
          "author": "Great Brittain",
          "description": "Question: Need help with what you guys feel would be the best path to take with my web dev/design a.a.s degree requirements. I tried talking to my academic advisor but he didn't seem to know in the slightest honestly.\nI will try to find the director of chair for the department and shoot him a message, but I wanted your guys opinions as well\nhttps://imgur.com/a/FZ5fICV\nI am finishing up (cpt 103) microcomputers applications and (cpt 165) programming logic this semester. Next semester the academic advisor has me for (cpt 105) ethics in technology and (cpm 120) intro to multimedia (adobe creative cloud) but I wasn't sure if I should be knocking them out in order or not. The academic advisor said my course does not need to be followed exactly how this list is, and as long as there are no pre class requirements like some of the classes in the 200s, it should be fine.\nI wasn't sure if just by looking at the titles of the classes if you guys think I should be taking other classes before the intro to multimedia, or if I am ok to take that class before basics of data communications and pc operating systems\nThanks so much!",
          "link": "https://dev.to/greatbrittain/need-help-with-what-you-guys-feel-would-be-the-best-path-1lpe",
          "publishedOn": "2021-11-02T11:00:32.000Z",
          "wordCount": 522,
          "title": "Need help with what you guys feel would be the best path..."
        },
        {
          "id": "https://dev.to/alubhorta/why-is-networking-important-in-docker-networking-in-docker-1-3mef",
          "author": "Farhim Ferdous",
          "description": "Introduce the need for learning about Docker Networking and an overview of this series\nDocker enables massive innovation in today's fast-paced IT industry.\nAnd a lot of this is made possible by connecting multiple containers together. 🔌\nIf you, as an Engineer or Developer, ignore the networking part of Docker, you will miss out on arguably one of its most powerful capabilities.\nBut, before we understand \"WHY\" it's important, let's first answer...\nA network is formed when a group of devices is connected over a medium to share data.\nThe devices (or computer systems) would be connected to the network by some form of physical or virtual interface. \nThe medium could be wired or wireless, be it cables, telephone lines or radio waves, etc. \nBut the main purpose remains to connect multiple system…",
          "link": "https://dev.to/alubhorta/why-is-networking-important-in-docker-networking-in-docker-1-3mef",
          "publishedOn": "2021-11-02T10:46:23.000Z",
          "wordCount": 1006,
          "title": "Why is Networking important in Docker? | Networking in Docker #1"
        },
        {
          "id": "https://dev.to/youngshatner/from-ad-hoc-scripting-to-workflow-as-code-the-evolution-of-runbooks-58a",
          "author": "Scott Lasica",
          "description": "Unfortunately the word workflow has been used for many years to represent some very specific things in the business world (the most common being BPMN — Business Process Modeling Notation). However, at a general level it’s simply describing a set of steps done in a specific order to achieve the desired end result.\nWorkflow as code simply means that we’re using code to orchestrate and execute a workflow, very likely in a distributed environment. In the site reliability engineering (SRE) or cloud engineering space, these workflows tend to deal with things like cost savings and incident resolution.\nIn the early days of SRE (when it was still called DevOps), the ability to chain together specified actions with code was a much more daunting task. Let’s take what seems like a simple example: a da…",
          "link": "https://dev.to/youngshatner/from-ad-hoc-scripting-to-workflow-as-code-the-evolution-of-runbooks-58a",
          "publishedOn": "2021-11-01T23:00:11.000Z",
          "wordCount": 786,
          "title": "From Ad-hoc Scripting to Workflow as Code: The Evolution of Runbooks"
        },
        {
          "id": "https://dev.to/youngshatner/a-comparison-of-sre-workflow-tools-3ceo",
          "author": "Scott Lasica",
          "description": "When considering tools to help optimize parts or all of your cloud incident remediation workflows and runbooks, there are several factors to take into consideration. This article will break down several capabilities to successfully achieve good optimization, and will do a direct comparison between the companies leading the charge into this new and expanding area.\nDisclosure: I work at Fylamynt, one of the offerings, but will keep the comparison to facts that can be known based on company web sites and information from customers.\nThis article will compare several offerings in the market: Fylamynt, FireHydrant, Blameless, Rundeck and Transposit.\nOne of the first and most important factors to consider is how many third party integrations the platform has, and how easy they are to use. SREs ha…",
          "link": "https://dev.to/youngshatner/a-comparison-of-sre-workflow-tools-3ceo",
          "publishedOn": "2021-11-01T22:48:34.000Z",
          "wordCount": 1401,
          "title": "A Comparison of SRE Workflow Tools"
        }
      ]
    },
    {
      "title": "DEV Community",
      "feedUrl": "https://dev.to/feed/tag/linux",
      "siteUrl": "https://dev.to",
      "articles": [
        {
          "id": "https://dev.to/afeiszli/how-to-create-four-types-of-vpns-quickly-with-wireguardr-and-netmaker-1ibe",
          "author": "Alex",
          "description": "A VPN can be a lot of things. You might think you know what a VPN is…but do you really? A virtual private network just sends private traffic over a public network. But where is that traffic going, and for what purpose? After all, networks come in all shapes and sizes.\nIn this two-part tutorial, we will discuss four “types” of VPN’s, which could just be considered use cases, and set them up with WireGuard® and Netmaker, a free networking platform, in under 10 minutes:\nPersonal (Private Browsing)\n\n\nRemote Access\n\n\nSite-to-Site\n\n\nMesh (virtual LAN/WAN)\n\n\n\nWireGuard® is a new and very fast VPN technology. Usually, VPN’s make your internet slower. With WireGuard®, the difference is negligible. Netmaker uses WireGuard® under the hood, and can simplify setting up environments from homelab to ente…",
          "link": "https://dev.to/afeiszli/how-to-create-four-types-of-vpns-quickly-with-wireguardr-and-netmaker-1ibe",
          "publishedOn": "2021-11-02T16:26:14.000Z",
          "wordCount": 2582,
          "title": "How to Create Four Types of VPN’s Quickly with Wireguard® and Netmaker"
        },
        {
          "id": "https://dev.to/walternascimentobarroso/firefox-developer-on-linux-31bo",
          "author": "Walter Nascimento",
          "description": "[Clique aqui para ler em português]\nFirefox is one of the best open source browsers. Developed and maintained by Mozilla, it offers a simple interface and support for various plugins and extensions.\nFirefox Developer Edition is the extremely fast browser that offers cutting-edge development tools and latest features\nPara fazer o download do browser, acesse o link abaixo\nhttps://www.mozilla.org/en-US/firefox/developer/\nWhen downloading comes a compressed file, by default a shortcut will not be created as it is just an extraction.\nFor the shortcut to be created follow the steps below.\nFirst extract the file into an easily accessible folder, in my case I like to put third-party programs in the /opt folder\n\n\n\n\nsudo tar -jxvf firefox-94.0b9.tar.bz2 -C /opt/\n\nCreate a shortcut to make the progra…",
          "link": "https://dev.to/walternascimentobarroso/firefox-developer-on-linux-31bo",
          "publishedOn": "2021-11-02T15:25:26.000Z",
          "wordCount": 616,
          "title": "Firefox Developer on Linux"
        },
        {
          "id": "https://dev.to/abhijithganesh/how-to-configure-your-wsl-resources-594m",
          "author": "Abhijith Ganesh",
          "description": "In this simple tutorial, I will be explaining how to configure your windows subsystem for Linux efficiently and optimize your WSL performance when you're running applications through them.\n Everyone has widespread access to windows but they may or maynot be savvy enough to run their favorite flavour of linux due to various constraints\nWSL2 really makes life easy for those devs who can't access linux through a cloud provider or locally run it on their devices.\nWSL has support for various distros like Debian, Arch and Ubuntu.\nNow coming to the interesting part, windows has all access to the CPU and memory resources in your device and it is built in a way which will optimize the resource utilization but how do you limit your linux subsystem, let  us say you'd like to manipulate the configuration to suit your needs the best, then you should follow these steps.\nShut your current running instance of WSL using this command\nwsl --shutdown\n\nRun this command through powershell as administrator\nCreate a configuration file for WSL on your user profile directory\nnotepad \"$env:USERPROFILE\\.wslconfig\"\n\n This is the most important step in this project, so please follow carefully \nThe following parameters define their corresponding resources:\nCPU  = > cores dedicated to WSL\nMemory  = > RAM allocated to WSL\nAutoMount  = > Mount your default NTFS drive to your subsystem\nBoot => defines your booting options for services\nKernel  = > Custom kernel for linux\nLocalhostForwarding  = > for port-forwarding your applications running on localhost\nMy configuration for CPU and memory:\n[wsl2]\nmemory=9GB  \nprocessors=4\n\nThis is how you can configure your resources for WSL 😀. Feel free to leave some comments down below⬇️.\nYou can read this document for the reference",
          "link": "https://dev.to/abhijithganesh/how-to-configure-your-wsl-resources-594m",
          "publishedOn": "2021-11-02T14:59:54.000Z",
          "wordCount": 697,
          "title": "How to configure your WSL resources?"
        },
        {
          "id": "https://dev.to/dere7/how-shell-executes-ls-l-c-2da9",
          "author": "Dereje Desta",
          "description": "In this post we'll talk about how shell executes command ls -l *.c. Moreover, we'll also discus how it is implemented under the hood.\nWe strongly advise you to have at least fundamental knowlege of C programming language and Linux system programming before you continue.\nNote that we skipped many error check and memory management for brevity which are must be included in working version of the code. Refer here for implemention.\nWhen we open a shell(users perspective) it prompts us to enter a line of command and when we enter the command it executes our command and it prompts us to enter another command.\nBut there is more to this story. The following are simplfied version of steps the shell takes. The shell:\nprints the prompt and waits for input. Let us assume we entered ls -l *.c. This is p…",
          "link": "https://dev.to/dere7/how-shell-executes-ls-l-c-2da9",
          "publishedOn": "2021-11-02T10:28:33.000Z",
          "wordCount": 776,
          "title": "How Shell Executes `ls -l *.c`"
        },
        {
          "id": "https://dev.to/leon0824/cockpit-gao-da-shang-de-linux-web-guan-li-jie-mian-2l5d",
          "author": "Leon",
          "description": "簡介\n\n\nCockpit 是一個由 Red Hat 所資助的開源軟體，做為一個 Linux 的 web 管理介面，讓我們可以用瀏覽器就能管理系統事務而無須動用男子漢的文字指令。\n條列式 Cockpit 的功能與特色：\n有美美的圖表即時顯示系統負載\n顯示一些基本的軟硬體資訊\n關機、重開機\n顯示系統日誌\n管理儲存空間\n管理網路介面\n管理帳戶\n管理服務，不用碰 systemctl\n\n內建終端機，Cockpit web 做不到的事可以在終端機做\n模組化設計，可以安裝或自行開發擴充模組\n以 Elementary OS / Ubuntu 來說，在出廠的 APT 庫已經內建了 Cockpit，所以只要一行即可裝起來：\nsudo apt install cockpit\n\n其它的 Linux 可以參閱 Cockpit 的安裝文件。\n安裝之後 Cockpit 會以服務的形式在背景運作，服務的名稱就叫做 Cockpit Web Service。因為是服務，當然也會常態的佔據一部分的記憶體，有必要的話可以改成平時關閉，要用時再用 systemctl 把 Cockpit Web Service 叫起來。（不過我就是不想用 systemctl 來管服務才裝 Cockpit 的啊…）\n另外在 Elementary OS / Ubuntu 的 APT 庫內還有一些模組可以安裝，包括 Docker 的管理等等的，可以自行選用。\nCockpit 會在本機的 9090 埠提供服務，所以只要 Cockpit Web Service 有啟動的狀態下，用瀏覽器開 http://localhost:9090/ 就會進到 Cockpit 的登入頁。\n\n登入之後的各模組使用應該是一望即知，就不多做介紹了。\n因為 Cockpit 是 web，所以就需要多考慮存取的控制，要禁止本機以外的機器存取到 Cockpit 的話，請在防火牆設定那邊確定沒有開放 9090 埠。\n以 Elementary OS 為例，在 系統設定值 安全與隱私 防火牆 那邊可以做設定。\n\n對 9090 埠做限制，禁止外部訪問，或只允許信任的 IP 訪問。",
          "link": "https://dev.to/leon0824/cockpit-gao-da-shang-de-linux-web-guan-li-jie-mian-2l5d",
          "publishedOn": "2021-11-02T07:12:03.000Z",
          "wordCount": 401,
          "title": "Cockpit 高大上的 Linux Web 管理介面"
        },
        {
          "id": "https://dev.to/dilutewater/thinking-about-switching-from-windows-to-linux-read-this-16nm",
          "author": "Rachit Khurana",
          "description": "Why I switched?\n\n\nSo around 3 months ago I switched to Linux from Windows 10. I have a very low end PC so Windows 10 was lagging a lot so I thought to switch to Linux. \nI definitely ran a lot better than windows. But after some time, It's UI also seemed a bit boring to me. So the I installed the KDE PLasma desktop environment on top of it. And I just loved it.\nKDE has a lot of features and is very customizable\nVery user friendly\n\n\nCustomisation\nNoctis Round Theme\n\n\n\n\nKeyboard Shortcuts\n\n\nAddons \n\n\n\n\n\n\n\nSystem Wide Search\nKDE has KRunner, which is a system wide search & its much faster than  Window's search. \n\nThere are many other features in KDE that I like. \nConclusion:\n\n\nI just love KDE Plasma & its a great alternative for Windows. \nI am not switching back to Windows anytime soon. \nSo if you want to switch from Windows, try KDE plasma.",
          "link": "https://dev.to/dilutewater/thinking-about-switching-from-windows-to-linux-read-this-16nm",
          "publishedOn": "2021-11-02T06:43:13.000Z",
          "wordCount": 700,
          "title": "Thinking about switching from windows to Linux? Read This"
        },
        {
          "id": "https://dev.to/openlab/creating-opensslconf-for-windows-104g",
          "author": "oz9un<h1>",
          "description": "In this chapter, I will explain how to create openssl.conf file with the way that Windows can process it.\nFor creating a default openssl.conf, Jamie's amazing article would be a good start point.\nThere are many differences between original Windows certificates and those created with using OpenSSL on Linux:\n \n\n\n  \n  \n  Difference 1 → Issuer:\n\n\nIssuer is one of the most important field in the certificates. This must be interpreted correctly in order to make Windows accept our handcrafted certificate. \nDifference between certificate created with default openssl.conf and original Windows certificate:\n\n \n\n\n  \n  \n  Solution for Difference 1:\n\n\nIn this part, we define the section for the req command. \nWe can edit default_bits, default_md parts. But most importantly, we can change how to form the …",
          "link": "https://dev.to/openlab/creating-opensslconf-for-windows-104g",
          "publishedOn": "2021-11-02T05:14:07.000Z",
          "wordCount": 836,
          "title": "Creating openssl.conf for Windows"
        },
        {
          "id": "https://dev.to/tttecnology/algumas-consideracoes-sobre-o-linux-gp6",
          "author": "EronAlves1996",
          "description": "Esse fim de semana estava bem decidido a começar outro projeto no qual eu ia começar a ver como o front-end interage com o back-end, o que é uma matéria bem interessante (e digamos que tem que comer um feijãozinho com arroz, assim como tudo em programação). Em poucas palavras, em comunicação web, é usado o protocolo HTTP (e também o que eu considero a sua variação para conexões \"seguras\", o HTTPS), no qual os clientes e servidores trocam dados em vários pequenos pacotes em que cada uma das pontas juntam esses pacotes para formar o documento completo. No protocolo HTTP, os dados são seguidos de um cabeçalho que contém metadados sobre a mensagem que foi encaminhada. Mas esta é apenas uma definição bem simplista e não é o foco desse post.\n\nComo estava dizendo, ia começar esse projeto bem simp…",
          "link": "https://dev.to/tttecnology/algumas-consideracoes-sobre-o-linux-gp6",
          "publishedOn": "2021-11-02T03:27:07.000Z",
          "wordCount": 2030,
          "title": "Algumas considerações sobre o Linux"
        },
        {
          "id": "https://dev.to/huyhoang8398/learning-sed-is-beneficial-for-linux-users-149l",
          "author": "Do Hoang",
          "description": "One of the most important command line utility in Linux is sed which is a stream editor.\nEssentially what it can do is it allows you to search for String of text or specific pattern and then replace it pattern with whatever you tell sed to replace with, so it is really kind of search and replace function.\nsed 's/find/replace/' <oldfile >newfile\n\nSo we are telling sed that go search for the word find then replace it with the word replace and what it does is it searches every lines for its first instance of the word find. So it not gonna replace every instances of find, only the first time it appears on each line from oldfile and then writes it to newfile.\nSometimes you want to replace every find in oldfile you just need to add global substitution g for every instances find.\nsed 's/find/repl…",
          "link": "https://dev.to/huyhoang8398/learning-sed-is-beneficial-for-linux-users-149l",
          "publishedOn": "2021-11-01T15:59:14.000Z",
          "wordCount": 975,
          "title": "Learning Sed Is Beneficial For Linux Users"
        },
        {
          "id": "https://dev.to/deepu105/my-sleek-and-modern-linux-development-machine-in-2021-2d8f",
          "author": "Deepu K Sasidharan",
          "description": "Originally published at deepu.tech.\nOne of my most popular posts of all time was when I wrote about my beautiful Linux development machine in 2019. Since I got a new machine and a new setup, it naturally calls for a follow-up.\nBy now, I'm a die-hard Linux user. It's been five years since I'm using Linux as my primary OS. I would take a Linux machine any day over macOS or Windows. I own a Windows gaming PC and a Macbook pro from work. Still, they are nowhere near the Linux experience, personally for me. My primary driver is my Linux laptop, and I can't be any happier with it (well, I can, I'll come to that at the end of the post).\nSo a Dell Precision from 2016 was my primary device until last month, and it is still going good. Fedora runs smoothly on it for most parts. There is some minor g…",
          "link": "https://dev.to/deepu105/my-sleek-and-modern-linux-development-machine-in-2021-2d8f",
          "publishedOn": "2021-11-01T10:59:53.000Z",
          "wordCount": 2367,
          "title": "My sleek and modern Linux development machine in 2021"
        },
        {
          "id": "https://dev.to/ashwathmittal/command-line-based-web-portfolio-11n6",
          "author": "Ashwath Mittal",
          "description": "👋Hi there fellow developers! 🎊\nIn the past, I was powerfully impressed by a portfolio that was inspired by 🪟 Windows 11 made by VovaCodes (https://www.vovacodes.ca/).\nRecently, I had some free time and I finally decided to turn this plan into reality. So, I started working on Command Line \nhttps://ashwathmittal.github.io/AshwathMittal/#/terminal\nSource Code On GitHub: https://github.com/AshwathMittal/AshwathMittal/\nThis is an Angular app. It is written in TypeScript, so if you're learning it, you could explore the GitHub repo 💥\nCheers! 🤙\nKeep in mind, this is a work in progress! More features to come (and bugs tackled 😄)",
          "link": "https://dev.to/ashwathmittal/command-line-based-web-portfolio-11n6",
          "publishedOn": "2021-11-01T10:06:39.000Z",
          "wordCount": 558,
          "title": "Command Line Based Web Portfolio!"
        },
        {
          "id": "https://dev.to/realvorl/dyslexic-dev-no-problem-1nfc",
          "author": "Viorel PETCU",
          "description": "Given\n\n\nthat I am dyslexic and also suffer from aphantasia, which is a fascinating quirk of the brain, one  can imagine I have sort of a love / hate relationship with reading. \nOn the one hand, I must keep up with the news and trends of the software engineering industry but the serious and useful information I require, is in written form and that always drains my reading battery because of the above average amount of concentration I have to put forward.\ndaylight saving Weekend rolled around, I decided to do something useful with the \"additional\" hour, so I set out to improve this situation for people like me. \nI decided to build something that allows us to take the text from any article in any language (English, German, Romanian in my case) and convert it to an mp3 file so that we can \"lis…",
          "link": "https://dev.to/realvorl/dyslexic-dev-no-problem-1nfc",
          "publishedOn": "2021-10-31T22:06:33.000Z",
          "wordCount": 1178,
          "title": "Dyslexic DEV? No problem!"
        }
      ]
    },
    {
      "title": "DEV Community",
      "feedUrl": "https://dev.to/feed/tag/angular",
      "siteUrl": "https://dev.to",
      "articles": [
        {
          "id": "https://dev.to/jscrambler/building-an-app-with-angular-firebase-1lg4",
          "author": "Jay",
          "description": "Firebase is a service provided by Google where the back end is provided as a service for use in applications. Its database (Firebase Realtime Database) is a NoSQL database where data is stored in JSON like documents. In this tutorial, you'll learn how to build an Angular application using Firebase as backend. So, let's get started.\nLet's start by setting up Firebase by signing into the Firebase console. \n\nClick on the Add project to create a new project. \nYou'll be prompted to enter a name for your project. We'll be naming our project js-scrambler-demo. Next, it'll ask you whether to enable Google Analytics for this project or not. We’ll disable it since it's not required for this tutorial and click on Create project.\n\nClick on the continue button and you will be able to view the following…",
          "link": "https://dev.to/jscrambler/building-an-app-with-angular-firebase-1lg4",
          "publishedOn": "2021-11-02T18:07:39.000Z",
          "wordCount": 2249,
          "title": "Building an app with Angular & Firebase"
        },
        {
          "id": "https://dev.to/tarungurang/building-an-angular-app-with-azure-web-apps-service-47pn",
          "author": "Tarun Gurang",
          "description": "There are a few ways to create and deploy angular apps like angular with NodeJS, angular with java, etc. Azure static web apps are one of them and it is released by Microsoft Azure.\nAzure web services are cloud platform services that provide to develop applications across web, APIs, and function. Azure web services accelerate your web development with a frontend development and backend service powered by serverless APIs. It is considered as a Platform as a service [PaaS] and Infrastructure as a service [IaaS].\nCreating and Deploying an angular application on the Azure web service with the following steps:\nStep 1: Create an Azure Web Service\nStep 2: Create an Angular Project\nStep 3: Build the Angular Application\nStep 4: Configure the web service and deploy it\nStep 1: Create a web App\nThe fi…",
          "link": "https://dev.to/tarungurang/building-an-angular-app-with-azure-web-apps-service-47pn",
          "publishedOn": "2021-11-02T12:01:48.000Z",
          "wordCount": 1335,
          "title": "Building an Angular App with Azure Web Apps Service"
        },
        {
          "id": "https://dev.to/ricardochl/omitir-un-interceptor-de-angular-usando-context-para-http-interceptors-cf0",
          "author": "Ricardo Chavarria",
          "description": "Los interceptors en Angular llegaron desde la versión 4.3 y básicamente nos brindan un mecanismo para interceptar y/o mutar las solicitudes y respuestas http. Más detalles aquí.\nLos interceptors en Angular interceptan todas las peticiones http por defecto, pero hay ocasiones en donde deseamos omitir un interceptor para algunas solicitudes.\nAntes de la versión 12 de Angular era muy común hacer esto de alguna de las siguientes formas:\nAgregar encabezados http en la solicitud http y luego evaluar ese encabezado en el interceptor.\nCrear un nuevo httpClient para esa solicitud.\nAdministrar sus inyecciones de HttpClient con tokens.\nUtilizar httpBackend y saltarse todos los interceptors.\nDesde la versión 12 de Angular tenemos una mejor forma de hacer esto, la cual consiste en pasar metadatos a los…",
          "link": "https://dev.to/ricardochl/omitir-un-interceptor-de-angular-usando-context-para-http-interceptors-cf0",
          "publishedOn": "2021-11-01T16:21:18.000Z",
          "wordCount": 744,
          "title": "Omitir un Interceptor de Angular usando Context para Http Interceptors"
        },
        {
          "id": "https://dev.to/dimakuba/the-new-routeroutlet-events-in-angular-13-3bai",
          "author": "Dmitrij Kuba",
          "description": "It's common practice in angular space to cache reused components with the help of RouteReuseStrategy:\nimport { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  DetachedRouteHandle,\n  Route,\n  RouteReuseStrategy,\n} from '@angular/router';\n\n@Injectable()\nexport class CustomReuseStrategy extends RouteReuseStrategy {\n  private pool = new WeakMap<Route, DetachedRouteHandle>();\n\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return !!this.pool.get(route.routeConfig);\n  }\n\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return this.pool.get(route.routeConfig);\n  }\n\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return (\n      route.routeConfig.data?.shouldReuse && !this.pool.get(route.routeConfig)\n…",
          "link": "https://dev.to/dimakuba/the-new-routeroutlet-events-in-angular-13-3bai",
          "publishedOn": "2021-11-01T15:05:16.000Z",
          "wordCount": 802,
          "title": "The new RouterOutlet events in Angular 13"
        },
        {
          "id": "https://dev.to/rfornal/angular-is-trackby-necessary-with-ngfor-594e",
          "author": "bob.ts",
          "description": "In a recent presentation, I had an individual very focused on the need for trackBy on my ngFor ... to the exclusion of everything else in the talk. He even went as far as to push a pull-request on my talk repository to add the change.\nI was perplexed.\nI know there used to be a need for trackBy.\nExperience has shown me little need for it's use recently.\nSome quick research said that it is only needed if there are issues with performance with modern Angular.\nSo, I decided to test this out myself.\nIn my first iteration of testing, I tested loading data to see if there was a difference in load times when displaying them with and without the trackBy. Here are the first set of tests I ran that showed some hopeful results.\nBasically, the data was 100,000 records with:\nAn integer, 0-based index.\nA…",
          "link": "https://dev.to/rfornal/angular-is-trackby-necessary-with-ngfor-594e",
          "publishedOn": "2021-11-01T14:32:02.000Z",
          "wordCount": 1386,
          "title": "Angular: Is trackBy necessary with ngFor?"
        },
        {
          "id": "https://dev.to/ashwathmittal/command-line-based-web-portfolio-11n6",
          "author": "Ashwath Mittal",
          "description": "👋Hi there fellow developers! 🎊\nIn the past, I was powerfully impressed by a portfolio that was inspired by 🪟 Windows 11 made by VovaCodes (https://www.vovacodes.ca/).\nRecently, I had some free time and I finally decided to turn this plan into reality. So, I started working on Command Line \nhttps://ashwathmittal.github.io/AshwathMittal/#/terminal\nSource Code On GitHub: https://github.com/AshwathMittal/AshwathMittal/\nThis is an Angular app. It is written in TypeScript, so if you're learning it, you could explore the GitHub repo 💥\nCheers! 🤙\nKeep in mind, this is a work in progress! More features to come (and bugs tackled 😄)",
          "link": "https://dev.to/ashwathmittal/command-line-based-web-portfolio-11n6",
          "publishedOn": "2021-11-01T10:06:39.000Z",
          "wordCount": 558,
          "title": "Command Line Based Web Portfolio!"
        },
        {
          "id": "https://dev.to/felipemsfg/angular-environment-mbp",
          "author": "Felipe Marques",
          "description": "As variáveis de ambiente permitem que nós possamos incluir no nosso código condições, parâmetros e valores diferentes de acordo com nosso ambiente. \nImagine que você utilize uma API Rest de um serviço qualquer, seja ele criado internamente na empresa que você trabalha, seja ele de terceiros e que esse serviço ofereça um endpoint para homologação e outro para produção.\nUma abordagem inicial seria trocar os valores dessa api todas as vezes que quisermos publicar nossa aplicação em produção.\nUma abordagem muito mais elegante é configurar as variáveis de ambiente para que você não tenha que lembrar de trocar o conteúdo de nenhuma variável.\nAqui mostro como fazer isso utilizando o recurso de configuração de ambiente do Angular.\nProjetos criados com Angular CLI possuem por padrão um arquivo de configuração chamado environment.ts disponível na pasta environments da sua aplicação.\n\nenvironment.ts:\nexport const environment = {\n  production: false\n};\n\nenvironment.prod.ts\nexport const environment = {\n  production: true\n};\n\nVeja um exemplo de como usar o environment.\nimport { environment } from '../environments/environment';\n\nenvironment = environment;\n\n<div class=\"row justify-content-center\" *ngIf=\"!environment.production\">    \n    <div class=\"auth-box text-center\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <button type=\"button\" (click)=\"LimparTudo()\" class=\"btn btn-danger btn-md btn-block waves-effect text-center m-b-20\">Limpar Memória</button>\n            </div>\n        </div>\n    </div>\n</div>",
          "link": "https://dev.to/felipemsfg/angular-environment-mbp",
          "publishedOn": "2021-11-01T00:40:20.000Z",
          "wordCount": 533,
          "title": "Angular: Environment"
        },
        {
          "id": "https://dev.to/stackblogger/benefits-of-using-pipe-over-function-in-angular-2mgj",
          "author": "Jameer Khan",
          "description": "The article is originally published at my blog here: Benefits Of Using Pipe Over Function In Angular\nDo you use functions / methods to implement various conditions and DOM manipulations in Angular ? If yes, trust me it will worsen your website performance. In this tutorial I will explain how pipes increase your angular website performance and what are the various benefits of using Pipe over Functions based on a case study.\nBefore diving straight into tutorial, let’s start with some basic questions.\nThe first question comes in mind- What is Pipe? A simple definition of pipe- it is a decorative function in Angular used to manipulate DOM. It takes an untransformed value as input and returns a transformed value as output.\nVarious built-in pipes are provided by Angular- AsyncPipe, CurrencyPipe,…",
          "link": "https://dev.to/stackblogger/benefits-of-using-pipe-over-function-in-angular-2mgj",
          "publishedOn": "2021-10-31T09:24:13.000Z",
          "wordCount": 1351,
          "title": "Benefits Of Using Pipe Over Function In Angular"
        },
        {
          "id": "https://dev.to/rawas_aditya/diving-deep-into-javascript-functions-276f",
          "author": "Aditya Rawas",
          "description": "@codewithaditya",
          "link": "https://dev.to/rawas_aditya/diving-deep-into-javascript-functions-276f",
          "publishedOn": "2021-10-31T08:19:11.000Z",
          "wordCount": 401,
          "title": "Diving deep into JavaScript functions"
        },
        {
          "id": "https://dev.to/zackderose/the-derxjsviewmodel-pattern-the-emc2-of-state-management-part-2-2i73",
          "author": "Zack DeRose",
          "description": "👋 hi all - this article is a continuation of a previous article that explains the goals of the DeRxJS pattern:\nentirely de-couple state management code from presentational code (to the point where your state management code could be re-used across frameworks)\nmaximize the benefits of RxJS, while minimizing the negatives\nnext-level testing [and potential to hand over all our state-management code to AI at some point]\nIn that article, we did most of the heavy lifting - developing our state-management code and fully testing out every edge case with \"timeline testing\" (allowing us to assert not only \"what\" state looks like, but \"when\" it should look that way as well).\nIn this article, we'll bring that state management code and show how we can use this across 3 front-end \"frameworks\": React, A…",
          "link": "https://dev.to/zackderose/the-derxjsviewmodel-pattern-the-emc2-of-state-management-part-2-2i73",
          "publishedOn": "2021-10-31T07:58:17.000Z",
          "wordCount": 1670,
          "title": "The \"DeRxJSViewModel Pattern\": The E=mc^2 of State Management [Part 2]"
        },
        {
          "id": "https://dev.to/this-is-angular/simplifying-angular-testbed-setup-by-converting-to-synchronous-test-hooks-19cl",
          "author": "Lars Gyrup Brink Nielsen",
          "description": "When we use Angular's schematics to generate components, unnecessary asynchronous code is added to the test setup hook for its test suite.\nThe following test setup is generated by Angular's component generation schematic:\nbeforeEach(async () => {\n  await TestBed.configureTestingModule({\n    declarations: [MyComponent],\n  }).compileComponents();\n});\n\ncomponent schematic.\n\n\n\n\n\nAlternatively, we might be using Angular's waitForAsync test function wrapper (formerly named async) as seen in the following code snippet:\nbeforeEach(waitForAsync(() => {\n  TestBed.configureTestingModule({\n    declarations: [MyComponent],\n  }).compileComponents();\n}));\n\nwaitForAsync.\n\n\n\n\n\nHere's the deal: It's only necessary to call the static TestBed.compileComponents method if we're not using the Angular CLI to run our tests (who would do such a thing, Google? 👈😏).\nThe Angular CLI compiles our application and tests before the tests are run so no asynchronous action is needed for setting up the declarables.\nLet's simplify the common test setup by leaving out async-await, waitForAsync, and even the TestBed.compileComponents invocation as seen in this code snippet:\nbeforeEach(() => {\n  TestBed.configureTestingModule({\n    declarations: [MyComponent],\n  });\n});\n\nThe following points are true for common Angular testbed setup for tests covering all types of Angular declarables:\nNo need to use async-await\nNo need to use waitForAsync (formerly named async)\nNo need to call TestBed.compileComponents\n\n\n\nOf course, there might be other reasons for introducing asynchronicity to our test setup but compiling and linking declarables is not one of them.\nEnjoy a little less boilerplate in your Angular tests 🌞",
          "link": "https://dev.to/this-is-angular/simplifying-angular-testbed-setup-by-converting-to-synchronous-test-hooks-19cl",
          "publishedOn": "2021-10-30T22:10:01.000Z",
          "wordCount": 678,
          "title": "Simplifying Angular testbed setup by converting to synchronous test hooks"
        },
        {
          "id": "https://dev.to/saulodias/angular-the-power-of-async-pipe-observables-97m",
          "author": "Saulo Dias",
          "description": "One of the most powerful features when creating Angular components is the Async Pipe. The greatest thing about it is that it allows you to take advantage of asynchronous rendering in your template without having to worry about subscribing and unsubscribing from Observables.\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { of, Subject } from 'rxjs';\nimport { delay, startWith, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'my-app',\n  template: `\n    <h1>Async example</h1> \n    <h2>Items</h2> \n    <ul>\n      <li *ngFor=\"let item of items | async\">{{item}}</li>\n    </ul>\n    <h2>Other Items</h2> \n    <ul>\n      <li *ngFor=\"let other of otherItems\">{{other}}</li>\n    </ul>\n  `,\n  styleUrls: [ './app.component.css' ]\n})\nexport class AppComponent implements OnInit, OnDestroy  {\n\n  items = of([1, 2, 3])\n    .pipe(\n      delay(2000), \n      startWith(['...'])\n    );\n\n  // vs \n\n  otherItems: any[];\n  private destroy$ = new Subject();\n  ngOnInit() {\n    of([1, 2, 3])\n      .pipe(\n        delay(2000),\n        startWith(['...']),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(other  => this.otherItems = other)\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n\n\nCheck it out on Stackblitz.\nAs you can see, in the first example, we are rendering a list (items) using the async pipe in the HTML template. There is no need for the additional handling after the component is destroyed, which you can see is not the case for the other list otherItems.   That is simply because the async pipe is going to take care of that for you.",
          "link": "https://dev.to/saulodias/angular-the-power-of-async-pipe-observables-97m",
          "publishedOn": "2021-10-29T18:42:39.000Z",
          "wordCount": 534,
          "title": "Angular: The power of Async Pipe + Observables."
        }
      ]
    },
    {
      "title": "DEV Community",
      "feedUrl": "https://dev.to/feed/tag/typescript",
      "siteUrl": "https://dev.to",
      "articles": [
        {
          "id": "https://dev.to/adrinlol/nextjs-portfolio-template-gde",
          "author": "Lasha Kakabadze",
          "description": "Introduction\n\n\nIf you're a developer, it's important for you to have a personal portfolio website – especially when you're applying for jobs.\nAfter a few months of development, I have finally put together a multi-themed website that will greatly increase your chances of getting attention from recruiters.\nHere is a link to my portfolio - https://www.adrinlol.com/\nYou can download the source code by going here - https://adrinlol.gumroad.com/l/cHsGL\nYou will find a detailed documentation inside the README fille on how to setup, make changes and run this website.\nThis template has several API calls, that is handled by the SWR (stale-while-revalidate), the list includes: \nMedium's API to display my personal articles in this project.\n\n\nSpotify's API to show the current track as well as display my top 20 songs of the week. \n\n\nGitHub's API to highlight most popular of my open-source projects.\n\n\n\n\n  \n  \n  Technology stack\n\n\nAs for the technologies, here is a full list of libraries I'm using for this project:\nNext.js\n\n\nstyled-components\n\n\nswr\n\n\nreact-transition-group\n\n\n\n\n  \n  \n  Lighthouse results\n\n\nIt should come with no surprise that Next.js coupled with SWR is blazing fast, and the results are no surprise.",
          "link": "https://dev.to/adrinlol/nextjs-portfolio-template-gde",
          "publishedOn": "2021-11-02T23:29:59.000Z",
          "wordCount": 513,
          "title": "Next.js Portfolio Template"
        },
        {
          "id": "https://dev.to/realgrangus/no-trycatch-a-javascript-library-to-make-your-asynchronous-code-cleaner-56oa",
          "author": "grangus",
          "description": "If you write apps using Node.JS, you've probably ended up in then-catch hell.\nThis code below works, but when you have to do large operations that require you to chain many promises together, it can get super repetitive and hard to read and maintain.\n//then-catch hell\nsomePromise(arg1, arg2, arg3)\n .then((result) => {\n   anotherPromise(arg1, arg2, arg3)\n     .then((anotherResult) => {\n       andAnotherPromise(arg1, arg2, arg3)\n         .then((andAnotherResult) => {})\n         .catch((error) => {\n           console.error(error);\n         });\n     })\n     .catch((error) => {\n       console.error(error);\n     });\n })\n .catch((error) => {\n   console.error(error);\n });\n\n\nThis is where async/await can come in handy, but if you've ever used the await keyword on a promise, you probably needed to c…",
          "link": "https://dev.to/realgrangus/no-trycatch-a-javascript-library-to-make-your-asynchronous-code-cleaner-56oa",
          "publishedOn": "2021-11-02T22:14:07.000Z",
          "wordCount": 1562,
          "title": "No Try/Catch! A JavaScript library to make your asynchronous code cleaner!"
        },
        {
          "id": "https://dev.to/julioacontreras/empezar-tu-propio-proyecto-53b9",
          "author": "Julio Contreras",
          "description": "Muchas veces tenemos buenas ideas y no la empezamos porque es muy ambicioso, o porque no tenemos dinero, contactos y principalmente por el miedo de fallar. \nPues a hora pienso diferente, estoy en un momento de mi vida que veo el fallar como parte del proceso. Claro siempre intentando prever los problemas, pero sabiendo que por más que uno se prepare la tempestad vendrá mas tarde o temprano.\nActualmente tengo tres ideas de proyecto, entonces pensé en crear una arquitectura que se pueda pivotar sin afectar otras cosas ya desarrolladas.\nPreguntas que me venían:\nComo puedo construir un proyecto que se pueda reutilizar por diferentes proyectos?\nComo puedo construir un micro servicio separando la reglas de negocio con la tecnología?\nComo puedo comunicar mis microservicio de forma rápida?\nY para informaciones que no tengo tanga urgencia, como gerencias grandes cuantidad de mensajes de forma distribuida?\nComo puedo multiplicar micro servicios si aumenta mi demanda?\nDespués de pensar mucho, llegue a esta arquitectura, onde cada microservice esta contenido en un Docker, y todo gestionado por el Kubernetes.\n\nVoy a dejar el Kubernetes por ultimo, por a hora me voy a focar en crear los microservicios conversando por una camada intermediaria llamada Protocol Action. \nUn micro servicio ya esta disponible, dale estrellita y fork, eso me ayuda mucho. :)\nhttps://github.com/julioacontreras/authenticator-storage\nPor a hora es esto, voy a intentar a medida que ir desarrollando poner código y más posts, si te interesasteis clica en subscribirte y corazón para saber que quieren más contenido como este.\nPueden entrar en contacto por linkedin para cualquier duda o sugestión.\nHasta luego y no dejen sus proyectos para después! 😀",
          "link": "https://dev.to/julioacontreras/empezar-tu-propio-proyecto-53b9",
          "publishedOn": "2021-11-02T21:25:57.000Z",
          "wordCount": 591,
          "title": "Empezando mi propio proyecto"
        },
        {
          "id": "https://dev.to/juandj/combining-the-power-of-react-query-and-graphql-for-data-fetching-and-state-management-34h1",
          "author": "Juan Pablo Djeredjian",
          "description": "On the first part of this series, we took a look at how, at my present company, we had the chance of starting a greenfield project, and could choose the libraries that we considered best for the jobs. We chose React Query to handle state management in our React app, and, because our backend team was delayed providing the API that was needed for the projects, we used a fake API to get the library working, and demo its functionality.\nAll was going according to plan until we had a meeting with the backend team, and Connor, one of the engineers, set us up for a surprise: \"We have been thinking and discussing this for a while, and we consider that the best solution we can offer you is to build a GraphQL server you can use to query and mutate the data\".\nGraphQL? That was a first. Our company has…",
          "link": "https://dev.to/juandj/combining-the-power-of-react-query-and-graphql-for-data-fetching-and-state-management-34h1",
          "publishedOn": "2021-11-02T19:53:32.000Z",
          "wordCount": 3268,
          "title": "Combining the power of React Query and GraphQL for data fetching and state management"
        },
        {
          "id": "https://dev.to/coderreviewio/state-management-reactquery-with-reactnative-dmc",
          "author": "Mustafa Alroomi",
          "description": "Hi,\nI Have just dropped YouTube video for reactQuery with ReactNative App.\nThis will be Part 1 of react Query Series.\nPlease find below details. don't forget to subscribe and share.\nYouTube: https://youtu.be/xb9uQ1GAcEA\nhttps://bit.ly/3q16KBA\nhttps://bit.ly/3CGGzDs\nSource Code 😉: https://bit.ly/3bxzN71",
          "link": "https://dev.to/coderreviewio/state-management-reactquery-with-reactnative-dmc",
          "publishedOn": "2021-11-02T18:53:58.000Z",
          "wordCount": 372,
          "title": "State Management | ReactQuery with ReactNative"
        },
        {
          "id": "https://dev.to/harbolaez/compiling-a-apollo-federated-graph-with-esbuild-24b2",
          "author": "Henry Arbolaez",
          "description": "Introduction\n\n\nAt Course Hero, we are starting to build our Apollo Federated Graph Services. For our local environment, we use Kubernetes to deploy our code. Keeping the advantages/disadvantages on the side, when it comes to building our local code it's going to take time due that we need to bundle the binary and sync it to K8 to be able to see it.\nOur goal is to bundle and ship that local code as soon as possible to reduce the waiting time. Saving seconds here are goals here.\nBelow we're going go into details about how we were able to save around ~21 seconds when it comes to building the app binary, with esbuild 🚀\nEsBuild build: Done in around 313ms\nWebpack build: Done in around 21.07sec\nTo give a background on the current setup of the project; \nMonorepo setup using Lerna\n\nUsing Typescri…",
          "link": "https://dev.to/harbolaez/compiling-a-apollo-federated-graph-with-esbuild-24b2",
          "publishedOn": "2021-11-02T18:49:58.000Z",
          "wordCount": 1162,
          "title": "Compiling a Apollo Federated Graph with esBuild 🚀"
        },
        {
          "id": "https://dev.to/viniciussouza/creating-kubernetes-guestbook-app-with-pulumi-lna",
          "author": "Vinicius Souza",
          "description": "Pulumi is an open-source Infrastructure as code (IaC) SDK.\nThis article shows how to use Pulumi to create a Kubernetes infrastructure.\n\nWe'll use NodeJs and npm, so install both:\nInstall NodeJS (10.x or later)\nInstall npm\n\n\n\nYou've to install Pulumi CLI:\nhttps://www.pulumi.com/docs/get-started/install/\ninstall Pulumi on Windows:\n$ choco install pulumi\n\nor on Linux:\n$ curl -fsSL https://get.pulumi.com | sh\n\nor on MacOS:\n$ brew install pulumi\n\nLet's start creating a folder and Pulumi project:\n$ mkdir quickstart && cd quickstart\n$ pulumi new kubernetes-typescript\n\nAfter, finish project setup on prompt:\nSet the project name\nSet the project description\nCreate a stack (in this case, we will use dev)\n\nChange index.ts file with the below code:\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as …",
          "link": "https://dev.to/viniciussouza/creating-kubernetes-guestbook-app-with-pulumi-lna",
          "publishedOn": "2021-11-02T18:41:25.000Z",
          "wordCount": 1230,
          "title": "Creating Kubernetes Guestbook App With Pulumi"
        },
        {
          "id": "https://dev.to/secmohammed/nestjs-caching-globally-neatly-1e17",
          "author": "mohammed osama",
          "description": "First things first, if you don't know about the NestJS Caching module, It's quite easy to understand, It will let you cache whatever you want through the CACHE_MANAGER and take control over it and make decision whether to keep or delete, and keep for how long etc.., Also allowing you to configure your own cache driver which could be Redis, Memcached etc...\nFirst follow the docs for the installation,\nhttps://docs.nestjs.com/techniques/caching#installation\nhere is a snippet to register your cache driver.\nimport {  CacheModule } from '@nestjs/common';\nimport {ConfigModule} from '@nestjs/config';\nimport { config } from './shared/config/index';\n\n@Module({\nimports: [\n ConfigModule.forRoot({\n      cache: true,\n      load: [() => config],\n      isGlobal: true,\n    }),\nCacheModule.registerAsync({\n …",
          "link": "https://dev.to/secmohammed/nestjs-caching-globally-neatly-1e17",
          "publishedOn": "2021-11-02T15:31:12.000Z",
          "wordCount": 2160,
          "title": "NestJS Caching Globally neatly."
        },
        {
          "id": "https://dev.to/brielov/how-small-can-it-be-pubsub-implementation-4oho",
          "author": "Gabriel Vaquer",
          "description": "I have this pubsub implementation and I was just curious about how would you reduce it any further.\nI'm talking about the implementation, not the TypeScript part.\ntype Observer<T> = (payload: T) => void;\n\nexport interface Publer<T> {\n  subscribe<K extends keyof T>(\n    channel: K,\n    observer: Observer<T[K]>,\n  ): () => void;\n  unsubscribe<K extends keyof T>(channel?: K): void;\n  publish<K extends keyof T>(\n    channel: K,\n    ...a: T[K] extends undefined ? [] : [T[K]]\n  ): void;\n}\n\nexport const publer = <T>(): Publer<T> => {\n  const eventMap = new Map<keyof T, Set<Observer<any>>>();\n\n  return {\n    subscribe: (channel, observer) =>\n      (eventMap.get(channel)?.add(observer) ||\n        eventMap.set(channel, new Set([observer]))) &&\n      (() => eventMap.get(channel)?.delete(observer)),\n    unsubscribe: (channel) =>\n      channel ? eventMap.get(channel)?.clear() : eventMap.clear(),\n    publish: (channel, ...[payload]) =>\n      eventMap.get(channel)?.forEach((observer) => observer(payload)),\n  } as const;\n};\n\nThis is the smallest way I could come up with.\ninterface Events {\n  login: { token: string }\n}\n\nconst pubsub = publer<Events>();\n\nconst unsubscribe = pubsub.subscribe('login', ({ token }) => {\n  // Payload is inferred based on the event name\n})\n\n// Payload is required based on event name\npubsub.emit('login', { token: \"ABC\" });\n\nI would love to see what other ways to make it even smaller you guys think of. Cheers!",
          "link": "https://dev.to/brielov/how-small-can-it-be-pubsub-implementation-4oho",
          "publishedOn": "2021-11-02T14:47:01.000Z",
          "wordCount": 508,
          "title": "Can you make it even smaller?"
        },
        {
          "id": "https://dev.to/nordicbeaver/making-the-most-boring-website-ever-with-typescript-nestjs-react-and-others-part-7-1p4e",
          "author": "NordicBeaver",
          "description": "This series is about making a generic website for a local business with TypeScript, NodeJs, NestJs, Prisma, React and NextJs. I'm trying to make my videos quite short, about 10 minutes each (except for the first one), while putting as much content there as I can. Here is the full playlist.\nToday we will implements validation both on the server and the client. And also add a couple of new fields to the Appointment model.\nEnjoy :)",
          "link": "https://dev.to/nordicbeaver/making-the-most-boring-website-ever-with-typescript-nestjs-react-and-others-part-7-1p4e",
          "publishedOn": "2021-11-02T13:43:01.000Z",
          "wordCount": 558,
          "title": "Making the most boring website ever with TypeScript, NestJs, React and others. Part 7."
        },
        {
          "id": "https://dev.to/kirkcodes/a-most-magic-tictactoe-solution-with-react-and-ts-4pje",
          "author": "Kirk Shillingford",
          "description": "Synopsis\n\n\nMy name is Kirk. I like making small games with code. And today's game is Tic-Tac-Toe. Specifically, this is a post about an alternative algorithm for finding winning combos in Tic-Tac-Toe using a concept called Magic Squares, but also about burnout, productivity, and finding joy in code. The code is all done in React and Typescript, and as always, full links and examples will be provided. If you just want to see the final solution, visit the sandbox here.\nNow, normally we'd start a post like this at the beginning; we'd talk about the domain of the physical game, and what elements we'd need in our digital solution. But today we're gonna start at the end; we're gonna take an existing solution and look at what if we just changed a small bit in an interesting way. Like Marvel's Wha…",
          "link": "https://dev.to/kirkcodes/a-most-magic-tictactoe-solution-with-react-and-ts-4pje",
          "publishedOn": "2021-11-02T12:13:44.000Z",
          "wordCount": 3318,
          "title": "A Most Magic TicTacToe solution with React and TS"
        },
        {
          "id": "https://dev.to/samippoudel/google-oauth-using-typescript-expressjs-passportjs-mongodb-5el8",
          "author": "Samip Poudel",
          "description": "OAuth (stands for Open Authorization) is a standard protocol that allows an app to get delegated access to resources of a 3rd party service like Google, Facebook, Github, etc. OAuth is one of the most popular ways to authorize users in modern web apps because of its:\nSecurity: OAuth doesn't share passwords, instead, it uses authorization tokens to identify users. So the consumer's password is safe from breaches.\nBetter UX: It's more convenient for users to sign in with a few clicks than to fill out a giant form.\nBetter DX: OAuth is simple to implement and developers don't have to worry about the complexity of authenticating users.\nIn this article, we will build a Node.js app that uses Google OAuth to sign in users and we will use passport.js which will make the whole process simpler. You c…",
          "link": "https://dev.to/samippoudel/google-oauth-using-typescript-expressjs-passportjs-mongodb-5el8",
          "publishedOn": "2021-11-02T04:20:29.000Z",
          "wordCount": 3950,
          "title": "Google OAuth using TypeScript, Express.js, Passport.js & MongoDB"
        }
      ]
    }
  ],
  "cliVersion": "1.11.3"
}